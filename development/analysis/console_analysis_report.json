{
  "summary": {
    "total_files_with_console": 380,
    "total_console_statements": 4135,
    "categories": {
      "development_debugging": {
        "file_count": 87,
        "console_count": 1729,
        "strategy": "eslint-disable"
      },
      "core_application": {
        "file_count": 180,
        "console_count": 939,
        "strategy": "proper_logging"
      },
      "build_scripts": {
        "file_count": 57,
        "console_count": 1214,
        "strategy": "eslint-disable"
      },
      "removable": {
        "file_count": 2,
        "console_count": 7,
        "strategy": "remove"
      }
    }
  },
  "categories": {
    "development_debugging": {
      "patterns": [
        "test",
        "debug",
        "spec",
        "mock",
        "__tests__",
        "development/",
        "validation",
        "bundle-validator",
        "phase.*validation",
        "demo"
      ],
      "files": [
        {
          "path": "test-theme-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/test-theme-validation.js",
          "console_count": 40,
          "console_lines": [
            {
              "line_number": 25,
              "content": "console.log('\ud83d\ude80 Starting comprehensive dark theme validation...\\n');",
              "type": "log"
            },
            {
              "line_number": 28,
              "content": "console.log('1. Validating file structure...');",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`   \u2705 ${file} - EXISTS`);",
              "type": "log"
            },
            {
              "line_number": 44,
              "content": "console.log(`   \u274c ${file} - MISSING`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log(`   ${allFilesExist ? '\u2705' : '\u274c'} File structure validation: ${allFilesExist ? 'PASSED' : 'FAILED'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 54,
              "content": "console.log(`   \u274c File structure validation: FAILED - ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log('2. Validating CSS theme variables...');",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log(`   \u2705 ${variable} - FOUND`);",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log(`   \u274c ${variable} - MISSING`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.log(`   ${allVariablesPresent ? '\u2705' : '\u274c'} CSS variables validation: ${allVariablesPresent ? 'PASSED' : 'FAILED'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log('   \u274c CSS variables validation: FAILED - File not found\\n');",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log(`   \u274c CSS variables validation: FAILED - ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log('3. Validating ThemeToggle component...');",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log(`   \u2705 ${feature} - FOUND`);",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log(`   \u274c ${feature} - MISSING`);",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.log(`   ${allFeaturesPresent ? '\u2705' : '\u274c'} ThemeToggle component validation: ${allFeaturesPresent ? 'PASSED' : 'FAILED'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log('   \u274c ThemeToggle component validation: FAILED - File not found\\n');",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log(`   \u274c ThemeToggle component validation: FAILED - ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log('4. Validating Zustand store integration...');",
              "type": "log"
            },
            {
              "line_number": 152,
              "content": "console.log(`   \u2705 ${feature} - FOUND`);",
              "type": "log"
            },
            {
              "line_number": 154,
              "content": "console.log(`   \u274c ${feature} - MISSING`);",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log(`   ${allStoreFeaturesPresent ? '\u2705' : '\u274c'} Store integration validation: ${allStoreFeaturesPresent ? 'PASSED' : 'FAILED'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log('   \u274c Store integration validation: FAILED - File not found\\n');",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log(`   \u274c Store integration validation: FAILED - ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.log('\ud83d\udcca VALIDATION SUMMARY:');",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('=' .repeat(50));",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log(`Overall Status: ${overallSuccess ? '\u2705 PASSED' : '\u274c FAILED'}`);",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log(`File Structure: ${validationResults.fileStructure ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log(`CSS Variables: ${validationResults.cssVariables ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log(`Theme Toggle: ${validationResults.themeToggleComponent ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log(`Store Integration: ${validationResults.storeIntegration ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 187,
              "content": "console.log('\\n\ud83d\udea8 ERRORS FOUND:');",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log(`${index + 1}. ${error}`);",
              "type": "log"
            },
            {
              "line_number": 194,
              "content": "console.log('\\n\u26a0\ufe0f WARNINGS:');",
              "type": "log"
            },
            {
              "line_number": 196,
              "content": "console.log(`${index + 1}. ${warning}`);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('\\n\ud83d\udd0d NEXT STEPS:');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log('\u2705 All validations passed! Theme implementation is ready for browser testing.');",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log('\u274c Some validations failed. Please fix the issues above before proceeding.');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('\\n\ud83d\ude80 Dark theme validation completed.');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log(`\ud83d\udcc4 Detailed results saved to: ${resultsPath}`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "utils-architecture-demo.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/utils-architecture-demo.js",
          "console_count": 60,
          "console_lines": [
            {
              "line_number": 13,
              "content": "console.log('\ud83d\ude80 Utils Progressive Architecture Activation Demo');",
              "type": "log"
            },
            {
              "line_number": 14,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 15,
              "content": "console.log('Target: 26.71kB \u2192 3-12kB (58-88% reduction)');",
              "type": "log"
            },
            {
              "line_number": 16,
              "content": "console.log('Based on proven VixComposedChart and VixBarChart success patterns\\n');",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log('\ud83d\udce6 PHASE 1: Progressive Architecture Activation');",
              "type": "log"
            },
            {
              "line_number": 21,
              "content": "console.log('   \u2022 Initializing enhanced bundle configurations...');",
              "type": "log"
            },
            {
              "line_number": 22,
              "content": "console.log('   \u2022 Activating micro-chunking strategies...');",
              "type": "log"
            },
            {
              "line_number": 23,
              "content": "console.log('   \u2022 Coordinating cross-bundle dependencies...');",
              "type": "log"
            },
            {
              "line_number": 24,
              "content": "console.log('   \u2022 Deploying shared resource optimization...\\n');",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.log('\u2705 ACTIVATION RESULTS:');",
              "type": "log"
            },
            {
              "line_number": 41,
              "content": "console.log(`   \u2022 Success: ${activationResults.success}`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`   \u2022 Bundles Activated: ${activationResults.bundlesActivated.length}/4`);",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log(`   \u2022 Reduction Achieved: ${activationResults.reductionAchieved}`);",
              "type": "log"
            },
            {
              "line_number": 44,
              "content": "console.log(`   \u2022 Network Savings: ${activationResults.networkSavings}`);",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log(`   \u2022 Performance Score: ${activationResults.performanceScore}/100\\n`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log('\ud83c\udfaf PHASE 2: Intelligent Variant Optimization');",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log(`   \ud83d\udcca ${variant.name} Variant:`);",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log(`      \u2022 Size: ${variant.size} (${variant.reduction} reduction)`);",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log(`      \u2022 Use Case: ${variant.useCase}`);",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`      \u2022 Features: ${variant.features.join(', ')}\\n`);",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log('\ud83d\udd0d PHASE 3: Performance Validation');",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log('   \ud83d\udcc8 Bundle Size Metrics:');",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.log(`      \u2022 Original: ${performanceMetrics.bundleSize.original}`);",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log(`      \u2022 Current: ${performanceMetrics.bundleSize.current}`);",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log(`      \u2022 Reduction: ${performanceMetrics.bundleSize.reduction}`);",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`      \u2022 Savings: ${performanceMetrics.bundleSize.networkSavings}\\n`);",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log('   \u26a1 Performance Metrics:');",
              "type": "log"
            },
            {
              "line_number": 118,
              "content": "console.log(`      \u2022 Load Time: ${performanceMetrics.loadingPerformance.loadTime}`);",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "console.log(`      \u2022 Parse Time: ${performanceMetrics.loadingPerformance.parseTime}`);",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "console.log(`      \u2022 Memory Usage: ${performanceMetrics.loadingPerformance.memoryUsage}`);",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log(`      \u2022 Improvement: ${performanceMetrics.loadingPerformance.improvementVsOriginal}\\n`);",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.log('   \u2705 Validation Results:');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log(`      \u2022 Meets Minimum (58%): ${performanceMetrics.validation.meetsMinimumTarget ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.log(`      \u2022 Meets Optimal (75%): ${performanceMetrics.validation.meetsOptimalTarget ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log(`      \u2022 Performance Grade: ${performanceMetrics.validation.performanceGrade}`);",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log(`      \u2022 Overall Score: ${performanceMetrics.validation.overallScore}\\n`);",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log('\ud83d\udd17 PHASE 4: Cross-Bundle Optimization');",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log('   \ud83c\udfd7\ufe0f Shared Resource Optimization:');",
              "type": "log"
            },
            {
              "line_number": 149,
              "content": "console.log(`      \u2022 ${resource.name}: Used by ${resource.sharedBy} bundles, saves ${resource.savings}`);",
              "type": "log"
            },
            {
              "line_number": 152,
              "content": "console.log(`      \u2022 Total Shared Savings: ${totalSharedSavings.toFixed(1)}kB\\n`);",
              "type": "log"
            },
            {
              "line_number": 158,
              "content": "console.log('\ud83c\udf89 PROGRESSIVE ARCHITECTURE ACTIVATION SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log('\ud83c\udfaf TARGET ACHIEVEMENT:');",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log('   \u2022 Original Bundle: 26.71kB');",
              "type": "log"
            },
            {
              "line_number": 163,
              "content": "console.log('   \u2022 Target Range: 3-12kB (58-88% reduction)');",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log(`   \u2022 Achieved: ${performanceMetrics.bundleSize.current} (${performanceMetrics.bundleSize.reduction} reduction)`);",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log(`   \u2022 Status: ${performanceMetrics.validation.meetsMinimumTarget ? '\u2705 TARGET EXCEEDED' : '\u274c TARGET MISSED'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 167,
              "content": "console.log('\ud83d\udcca OPTIMIZATION RESULTS:');",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log(`   \u2022 Network Savings: ${performanceMetrics.bundleSize.networkSavings}`);",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "console.log(`   \u2022 Shared Resource Savings: ${crossBundleResults.totalSharedSavings.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log(`   \u2022 Performance Improvement: ${performanceMetrics.loadingPerformance.improvementVsOriginal}`);",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.log(`   \u2022 Overall Grade: ${performanceMetrics.validation.performanceGrade}\\n`);",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('\ud83d\ude80 PROGRESSIVE VARIANTS:');",
              "type": "log"
            },
            {
              "line_number": 176,
              "content": "console.log(`   \u2022 ${variant.name}: ${variant.size} (${variant.reduction}) ${meetsTarget ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log('\\n\ud83c\udf8a ARCHITECTURE ACTIVATION: SUCCESSFUL');",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log('\u2728 Progressive loading system ACTIVE and delivering projected reductions!');",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.error('\u274c Demonstration failed:', error);",
              "type": "error"
            },
            {
              "line_number": 212,
              "content": "console.log('\\n\ud83c\udfaf DEMONSTRATION COMPLETE: Architecture activation validated');",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.error('\\n\ud83d\udca5 DEMONSTRATION FAILED:', result.error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "vite.config.phase7-validation.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-validation.ts",
          "console_count": 10,
          "console_lines": [
            {
              "line_number": 42,
              "content": "console.warn(`\u26a0\ufe0f Phase 7 Warning: ${bundleName} (${(size/1024).toFixed(1)}kB) exceeds target ${config.target}`);",
              "type": "warn"
            },
            {
              "line_number": 44,
              "content": "console.log(`\u2705 Phase 7 Success: ${bundleName} (${(size/1024).toFixed(1)}kB) within target ${config.target}`);",
              "type": "log"
            },
            {
              "line_number": 66,
              "content": "console.log(`\ud83d\ude80 Phase 7 BREAKTHROUGH: Total Phase 7 bundles ${(totalPhase7Size/1024).toFixed(1)}kB \u2264 ${phase7Target/1024}kB target`);",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log(`\ud83c\udfc6 Phase 7 Achievement Rate: ${achievementRate.toFixed(1)}% targets achieved`);",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.warn(`\ud83c\udfaf Phase 7 Progress: Total bundles ${(totalPhase7Size/1024).toFixed(1)}kB, target \u2264 ${phase7Target/1024}kB`);",
              "type": "warn"
            },
            {
              "line_number": 70,
              "content": "console.warn(`\ud83d\udcca Phase 7 Achievement: ${achievementRate.toFixed(1)}% targets achieved (need \u226580%)`);",
              "type": "warn"
            },
            {
              "line_number": 75,
              "content": "console.log(`\ud83c\udf1f Phase 7 EXCELLENCE: ${achievementRate.toFixed(1)}% achievement rate - BREAKTHROUGH SUCCESS`);",
              "type": "log"
            },
            {
              "line_number": 77,
              "content": "console.log(`\ud83c\udfaf Phase 7 SUCCESS: ${achievementRate.toFixed(1)}% achievement rate - TARGET ACHIEVED`);",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log(`\ud83d\udcc8 Phase 7 PROGRESS: ${achievementRate.toFixed(1)}% achievement rate - GOOD PROGRESS`);",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.warn(`\u26a0\ufe0f Phase 7 NEEDS ATTENTION: ${achievementRate.toFixed(1)}% achievement rate - OPTIMIZATION REQUIRED`);",
              "type": "warn"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "test-dynamic-import.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/test-dynamic-import.js",
          "console_count": 14,
          "console_lines": [
            {
              "line_number": 6,
              "content": "console.log('Testing dynamic import of OpenBBChart...');",
              "type": "log"
            },
            {
              "line_number": 10,
              "content": "console.log('Starting dynamic import test...');",
              "type": "log"
            },
            {
              "line_number": 17,
              "content": "console.log('\u2705 Dynamic import successful!');",
              "type": "log"
            },
            {
              "line_number": 18,
              "content": "console.log(`\u23f1\ufe0f  Load time: ${loadTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 19,
              "content": "console.log('\ud83d\udce6 Module exports:', Object.keys(module));",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log('\ud83c\udfaf Default export:', !!module.default);",
              "type": "log"
            },
            {
              "line_number": 24,
              "content": "console.log('\u274c Dynamic import failed!');",
              "type": "log"
            },
            {
              "line_number": 25,
              "content": "console.error('Error details:', error);",
              "type": "error"
            },
            {
              "line_number": 39,
              "content": "console.log('\\nTesting alternative import paths...');",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log(`Testing path: ${path}`);",
              "type": "log"
            },
            {
              "line_number": 47,
              "content": "console.log(`\u2705 Path ${path} works! Load time: ${loadTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 49,
              "content": "console.log(`\u274c Path ${path} failed: ${error.message}`);",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log('Test result:', result);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.error('Test suite failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "phase5-bundle-validator.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/phase5-bundle-validator.js",
          "console_count": 42,
          "console_lines": [
            {
              "line_number": 38,
              "content": "console.error('\u274c Failed to load Phase 5 baseline:', error.message);",
              "type": "error"
            },
            {
              "line_number": 63,
              "content": "console.error('\u274c Failed to analyze build output:', error.message);",
              "type": "error"
            },
            {
              "line_number": 85,
              "content": "console.log('\\n\ud83d\udd0d Phase 5 Bundle Size Validation');",
              "type": "log"
            },
            {
              "line_number": 86,
              "content": "console.log('=' .repeat(50));",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`\\n\ud83d\udce6 ${bundleName.toUpperCase()} Bundle:`);",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log(`   Current: ${result.currentSize} kB`);",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log(`   Target: ${result.targetSize} kB`);",
              "type": "log"
            },
            {
              "line_number": 118,
              "content": "console.log(`   Max Allowed: ${result.maxAllowed} kB`);",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "console.log(`   Reduction: ${result.reduction} kB (${result.percentageReduction}%)`);",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "console.log(`   Status: ${result.status}`);",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log(`\\n\ud83d\udce6 ${bundleName.toUpperCase()} Bundle: ${result.status}`);",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log('\\n\ud83d\udd04 Progressive Loading Validation');",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log('=' .repeat(50));",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log(`\\n\ud83d\udd04 ${result.test}:`);",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log(`   Status: ${result.status}`);",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.log(`   Details: ${result.details}`);",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log('\\n\u26a1 Build Performance Validation');",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log('=' .repeat(50));",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.log(`\\n\u26a1 ${result.test}:`);",
              "type": "log"
            },
            {
              "line_number": 255,
              "content": "console.log(`   Status: ${result.status}`);",
              "type": "log"
            },
            {
              "line_number": 256,
              "content": "console.log(`   Details: ${result.details}`);",
              "type": "log"
            },
            {
              "line_number": 268,
              "content": "console.log('\\n\ud83d\udcca PHASE 5 VALIDATION REPORT SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 269,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 283,
              "content": "console.log(`\\n\ud83c\udfaf Overall Phase 5 Validation Status: ${",
              "type": "log"
            },
            {
              "line_number": 289,
              "content": "console.log(`\\n\ud83d\udccb Validation Summary:`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log(`   Bundle Size Validation: ${this.validationResults.bundleSizes.status}`);",
              "type": "log"
            },
            {
              "line_number": 291,
              "content": "console.log(`   Progressive Loading: ${this.validationResults.progressiveLoading.status}`);",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log(`   Build Performance: ${this.validationResults.buildPerformance.status}`);",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log(`\\n\ud83d\udce6 Bundle Optimization Summary:`);",
              "type": "log"
            },
            {
              "line_number": 298,
              "content": "console.log(`   Total Bundles Analyzed: ${summary.totalBundles}`);",
              "type": "log"
            },
            {
              "line_number": 299,
              "content": "console.log(`   Meeting Targets: ${summary.meetingTargets}`);",
              "type": "log"
            },
            {
              "line_number": 300,
              "content": "console.log(`   Within Range: ${summary.withinRange}`);",
              "type": "log"
            },
            {
              "line_number": 301,
              "content": "console.log(`   Needing Optimization: ${summary.needingOptimization}`);",
              "type": "log"
            },
            {
              "line_number": 307,
              "content": "console.log(`\\n\ud83d\udcc1 Detailed report saved to: ${reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 313,
              "content": "console.log('\\n\ud83d\ude80 PHASE 5 COMPREHENSIVE BUNDLE VALIDATION');",
              "type": "log"
            },
            {
              "line_number": 314,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 315,
              "content": "console.log('Validator: Phase 5 Performance Validation Specialist #7');",
              "type": "log"
            },
            {
              "line_number": 316,
              "content": "console.log('Mission: Validate 116kB \u2192 40-60kB optimization targets');",
              "type": "log"
            },
            {
              "line_number": 317,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 328,
              "content": "console.log('\\n\u2705 Phase 5 validation framework execution completed successfully');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.error('\\n\u274c Phase 5 validation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 333,
              "content": "console.error(error.stack);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "chart-import-test.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/chart-import-test.js",
          "console_count": 23,
          "console_lines": [
            {
              "line_number": 6,
              "content": "console.log('\ud83e\uddea Testing Chart Imports - AdvancedChartLoadError Fix Validation');",
              "type": "log"
            },
            {
              "line_number": 9,
              "content": "console.log(`\\n\ud83d\udce6 Testing ${componentName}...`);",
              "type": "log"
            },
            {
              "line_number": 16,
              "content": "console.log(`\u2705 ${componentName} loaded successfully in ${loadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 17,
              "content": "console.log(`   - Default export: ${!!module.default}`);",
              "type": "log"
            },
            {
              "line_number": 18,
              "content": "console.log(`   - Named export: ${!!module[componentName]}`);",
              "type": "log"
            },
            {
              "line_number": 19,
              "content": "console.log(`   - All exports: ${Object.keys(module).join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 24,
              "content": "console.error(`\u274c ${componentName} failed to load after ${loadTime.toFixed(2)}ms`);",
              "type": "error"
            },
            {
              "line_number": 25,
              "content": "console.error(`   - Error: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 26,
              "content": "console.error(`   - Error type: ${error.name}`);",
              "type": "error"
            },
            {
              "line_number": 42,
              "content": "console.log(`\\n\ud83d\ude80 Running ${tests.length} import tests...`);",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log('\\n\ud83d\udcca TEST SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log('='.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log(`Total tests: ${results.length}`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`Successful: ${successful.length}`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log(`Failed: ${failed.length}`);",
              "type": "log"
            },
            {
              "line_number": 61,
              "content": "console.log(`Success rate: ${(successful.length / results.length * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log(`Total load time: ${totalTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log(`Average load time: ${(totalTime / results.length).toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 66,
              "content": "console.log('\\n\u274c FAILED TESTS:');",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log(`   - ${f.name}: ${f.error}`);",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log('\\n\ud83c\udf89 ALL TESTS PASSED! AdvancedChartLoadError should be fixed.');",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log('\\n\u26a0\ufe0f Some tests failed. AdvancedChartLoadError may still occur.');",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "runAllTests().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "development/scripts/validate-phase7c-optimization.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/scripts/validate-phase7c-optimization.js",
          "console_count": 31,
          "console_lines": [
            {
              "line_number": 48,
              "content": "console.log('\ud83d\udd0d Analyzing Phase 7C Analytics bundle sizes...\\n');",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.error('\u274c Validation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 119,
              "content": "console.log(`${status} ${bundleType}: ${sizeKB.toFixed(2)}kB / ${target}kB ${reductionText}`);",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log(`\ud83d\udcca ${bundleType}: ${sizeKB.toFixed(2)}kB (no target set)`);",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('\\n\ud83d\udcca PHASE 7C ANALYTICS OPTIMIZATION VALIDATION REPORT');",
              "type": "log"
            },
            {
              "line_number": 208,
              "content": "console.log('\u2550'.repeat(65));",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log(`\\n\u26a1 ESSENTIAL TIER PERFORMANCE:`);",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log(`   Bundles: ${performance.essential.count}`);",
              "type": "log"
            },
            {
              "line_number": 213,
              "content": "console.log(`   Total Size: ${performance.essential.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 214,
              "content": "console.log(`   Average Size: ${performance.essential.averageSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log(`   Target: <10kB total \u2705 ${performance.essential.totalSize <= 10 ? 'ACHIEVED' : 'MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log(`\\n\ud83d\ude80 PROGRESSIVE TIER PERFORMANCE:`);",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log(`   Bundles: ${performance.progressive.count}`);",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log(`   Total Size: ${performance.progressive.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log(`   Average Size: ${performance.progressive.averageSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.log(`   Target: <200kB total \u2705 ${performance.progressive.totalSize <= 200 ? 'ACHIEVED' : 'MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log(`\\n\ud83c\udfaf ADVANCED TIER PERFORMANCE:`);",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.log(`   Bundles: ${performance.advanced.count}`);",
              "type": "log"
            },
            {
              "line_number": 227,
              "content": "console.log(`   Total Size: ${performance.advanced.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 228,
              "content": "console.log(`   Average Size: ${performance.advanced.averageSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 231,
              "content": "console.log(`\\n\ud83c\udfc6 OVERALL ACHIEVEMENT:`);",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.log(`   Total Analytics Bundles: ${performance.overall.totalBundles}`);",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log(`   Total Analytics Size: ${performance.overall.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 234,
              "content": "console.log(`   Target Achievement: ${performance.overall.targetAchievement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 240,
              "content": "console.log(`\\n${success ? '\u2705' : '\u274c'} PHASE 7C OPTIMIZATION: ${success ? 'SUCCESS' : 'NEEDS IMPROVEMENT'}`);",
              "type": "log"
            },
            {
              "line_number": 243,
              "content": "console.log('\\n\ud83d\ude80 Revolutionary 80-90% bundle reduction ACHIEVED!');",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('\ud83d\udcf1 Essential analytics loads in <50ms on 3G networks');",
              "type": "log"
            },
            {
              "line_number": 245,
              "content": "console.log('\u26a1 Progressive enhancement provides optimal user experience');",
              "type": "log"
            },
            {
              "line_number": 247,
              "content": "console.log('\\n\u26a0\ufe0f  Some targets not met. Review bundle sizes and optimization.');",
              "type": "log"
            },
            {
              "line_number": 250,
              "content": "console.log('\\n' + '\u2550'.repeat(65));",
              "type": "log"
            },
            {
              "line_number": 256,
              "content": "validation.analyzeBundleSizes().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "development/reports/phase7c-bundle-analysis-validation-report.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-bundle-analysis-validation-report.js",
          "console_count": 84,
          "console_lines": [
            {
              "line_number": 97,
              "content": "console.log('\ud83d\ude80 Phase 7C Analytics Dashboard Bundle Analysis & Validation');",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log('\u2550'.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 99,
              "content": "console.log(`\ud83d\udccd Project Root: ${this.projectRoot}`);",
              "type": "log"
            },
            {
              "line_number": 100,
              "content": "console.log(`\ud83d\udcc1 Distribution: ${this.distPath}`);",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 106,
              "content": "console.log('\ud83d\udcca Loading bundle baseline for comparison...');",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.log(`\u2705 Loaded Phase 5 baseline: ${this.bundleBaseline.phase5Summary.totalCurrentSize}kB total`);",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log('\u26a0\ufe0f  No baseline found, creating new baseline comparison');",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log(`\u26a0\ufe0f  Error loading baseline: ${error.message}`);",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('\ud83d\udd0d Analyzing Phase 7C bundle structure and sizes...');",
              "type": "log"
            },
            {
              "line_number": 137,
              "content": "console.log(`\u2705 Analyzed ${this.results.bundles.length} bundle files`);",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log(`${status} ${bundle.type}: ${sizeKB.toFixed(2)}kB${targetText}`);",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.log('\ud83d\udcc2 Categorizing bundles by Progressive Enhancement Tiers...');",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log(`${status} ${tierName.toUpperCase()} tier: ${tier.totalSize.toFixed(2)}kB / ${tier.targetSize}kB (${tier.bundles.length} bundles)`);",
              "type": "log"
            },
            {
              "line_number": 239,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('\ud83c\udf10 Simulating cross-network performance...');",
              "type": "log"
            },
            {
              "line_number": 267,
              "content": "console.log(`${essentialStatus} ${networkType} Essential: ${Math.round(essentialLoadTime)}ms (target: ${config.ttl_target}ms)`);",
              "type": "log"
            },
            {
              "line_number": 268,
              "content": "console.log(`${standardStatus} ${networkType} Standard: ${Math.round(standardLoadTime)}ms (target: ${config.ttl_target * 2}ms)`);",
              "type": "log"
            },
            {
              "line_number": 270,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.log('\ud83d\udd04 Validating Progressive Enhancement System...');",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.log(`${enhancementStatus} Essential\u2192Standard Enhancement: +${standard.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 306,
              "content": "console.log(`${advancedStatus} Standard\u2192Advanced Enhancement: +${advanced.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 307,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 312,
              "content": "console.log('\ud83c\udf33 Analyzing Tree-Shaking and Dead Code Elimination...');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.log(`${status} Tree-shaking effectiveness: ${effectiveness.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 333,
              "content": "console.log(`\ud83d\udcca Empty bundles (tree-shaken): ${emptyBundles.length}`);",
              "type": "log"
            },
            {
              "line_number": 334,
              "content": "console.log(`\ud83d\udce6 Small bundles (<2kB): ${smallBundles.length}`);",
              "type": "log"
            },
            {
              "line_number": 335,
              "content": "console.log(`\ud83d\udcc8 Average bundle size: ${treeShakingMetrics.averageBundleSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 336,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 341,
              "content": "console.log('\ud83d\udcca Calculating Overall Validation Results...');",
              "type": "log"
            },
            {
              "line_number": 377,
              "content": "console.log(`\ud83d\udcc8 Target Achievement: ${criteriaResults.targetAchievement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 378,
              "content": "console.log(`\ud83d\udcc9 Bundle Reduction: ${criteriaResults.bundleReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 379,
              "content": "console.log(`\u26a1 Essential Tier: ${criteriaResults.essentialUnder5KB ? '\u2705' : '\u274c'} <5kB`);",
              "type": "log"
            },
            {
              "line_number": 380,
              "content": "console.log(`\ud83d\ude80 Standard Tier: ${criteriaResults.standardUnder25KB ? '\u2705' : '\u274c'} <25kB`);",
              "type": "log"
            },
            {
              "line_number": 381,
              "content": "console.log(`\ud83c\udfaf Advanced Tier: ${criteriaResults.advancedUnder35KB ? '\u2705' : '\u274c'} <35kB`);",
              "type": "log"
            },
            {
              "line_number": 382,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 430,
              "content": "console.log('\\n\ud83c\udfc6 PHASE 7C ANALYTICS BUNDLE OPTIMIZATION VALIDATION REPORT');",
              "type": "log"
            },
            {
              "line_number": 431,
              "content": "console.log('\u2550'.repeat(90));",
              "type": "log"
            },
            {
              "line_number": 435,
              "content": "console.log(`\\n\ud83d\udccb EXECUTIVE SUMMARY: ${overallStatus}`);",
              "type": "log"
            },
            {
              "line_number": 436,
              "content": "console.log(`\ud83d\udcc5 Analysis Date: ${this.results.timestamp}`);",
              "type": "log"
            },
            {
              "line_number": 437,
              "content": "console.log(`\ud83d\udcca Total Analytics Bundles: ${this.results.bundles.length}`);",
              "type": "log"
            },
            {
              "line_number": 438,
              "content": "console.log(`\ud83c\udfaf Target Achievement: ${this.results.validation.targetAchievement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 439,
              "content": "console.log(`\ud83d\udcc9 Bundle Size Reduction: ${this.results.validation.bundleReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 442,
              "content": "console.log('\\n\ud83c\udfd7\ufe0f  PROGRESSIVE ENHANCEMENT TIER ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 443,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 450,
              "content": "console.log(`${status} ${tierName.toUpperCase()} TIER:`);",
              "type": "log"
            },
            {
              "line_number": 451,
              "content": "console.log(`   Bundles: ${tier.bundles.length}`);",
              "type": "log"
            },
            {
              "line_number": 452,
              "content": "console.log(`   Total Size: ${tier.totalSize.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 453,
              "content": "console.log(`   Target: ${tier.targetSize}kB`);",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.log(`   Achievement: ${percentage}%`);",
              "type": "log"
            },
            {
              "line_number": 455,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 460,
              "content": "console.log('\ud83c\udf10 NETWORK PERFORMANCE VALIDATION');",
              "type": "log"
            },
            {
              "line_number": 461,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 467,
              "content": "console.log(`${networkType.toUpperCase()} NETWORK:`);",
              "type": "log"
            },
            {
              "line_number": 468,
              "content": "console.log(`   ${essentialStatus} Essential TTI: ${Math.round(perf.essentialTTL)}ms (target: ${perf.targetTTL}ms)`);",
              "type": "log"
            },
            {
              "line_number": 469,
              "content": "console.log(`   ${standardStatus} Standard TTI: ${Math.round(perf.standardTTL)}ms (target: ${perf.targetTTL * 2}ms)`);",
              "type": "log"
            },
            {
              "line_number": 470,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 474,
              "content": "console.log('\ud83d\udce6 DETAILED BUNDLE ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 475,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 485,
              "content": "console.log(`${tier.toUpperCase()} TIER BUNDLES:`);",
              "type": "log"
            },
            {
              "line_number": 489,
              "content": "console.log(`   ${status} ${bundle.name}: ${bundle.size.toFixed(2)}kB${targetText}`);",
              "type": "log"
            },
            {
              "line_number": 491,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 496,
              "content": "console.log('\ud83c\udfaf OPTIMIZATION RECOMMENDATIONS');",
              "type": "log"
            },
            {
              "line_number": 497,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 501,
              "content": "console.log(`${priority} ${rec.priority} - ${rec.category}:`);",
              "type": "log"
            },
            {
              "line_number": 502,
              "content": "console.log(`   Issue: ${rec.issue}`);",
              "type": "log"
            },
            {
              "line_number": 503,
              "content": "console.log(`   Action: ${rec.action}`);",
              "type": "log"
            },
            {
              "line_number": 504,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 509,
              "content": "console.log('\ud83c\udf8a PHASE 7C OPTIMIZATION ACHIEVEMENT');",
              "type": "log"
            },
            {
              "line_number": 510,
              "content": "console.log('\u2550'.repeat(90));",
              "type": "log"
            },
            {
              "line_number": 513,
              "content": "console.log('\ud83d\ude80 REVOLUTIONARY 80-90% BUNDLE REDUCTION ACHIEVED!');",
              "type": "log"
            },
            {
              "line_number": 514,
              "content": "console.log('\ud83d\udcf1 Essential analytics loads in <50ms on 3G networks');",
              "type": "log"
            },
            {
              "line_number": 515,
              "content": "console.log('\u26a1 Progressive enhancement provides optimal user experience');",
              "type": "log"
            },
            {
              "line_number": 516,
              "content": "console.log('\ud83c\udf1f Phase 7C Analytics Dashboard optimization: COMPLETE SUCCESS');",
              "type": "log"
            },
            {
              "line_number": 518,
              "content": "console.log('\u26a0\ufe0f  Phase 7C optimization targets partially achieved');",
              "type": "log"
            },
            {
              "line_number": 519,
              "content": "console.log('\ud83d\udd27 Review recommendations above for optimization opportunities');",
              "type": "log"
            },
            {
              "line_number": 520,
              "content": "console.log('\ud83d\udcc8 Continue optimization efforts to achieve 80-90% reduction target');",
              "type": "log"
            },
            {
              "line_number": 523,
              "content": "console.log('\\n' + '\u2550'.repeat(90));",
              "type": "log"
            },
            {
              "line_number": 534,
              "content": "console.log(`\ud83d\udcbe Detailed analysis saved to: ${reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 536,
              "content": "console.error(`\u274c Failed to save analysis: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 556,
              "content": "console.error(`\\n\u274c VALIDATION FAILED: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 564,
              "content": "validator.runValidation().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "development/reports/phase7c-comprehensive-bundle-optimization-comparison-report.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-comprehensive-bundle-optimization-comparison-report.js",
          "console_count": 92,
          "console_lines": [
            {
              "line_number": 39,
              "content": "console.log('\ud83c\udfc6 PHASE 7C COMPREHENSIVE BUNDLE OPTIMIZATION COMPARISON REPORT');",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.log('\u2550'.repeat(85));",
              "type": "log"
            },
            {
              "line_number": 41,
              "content": "console.log(`\ud83d\udccd Analysis Root: ${this.projectRoot}`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`\ud83d\udd50 Execution Time: ${this.reportData.executionTime}`);",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 48,
              "content": "console.log('\ud83d\udcca Loading Bundle Baseline Data...');",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`\u2705 Loaded Phase 5 baseline: ${(this.reportData.baseline.phase5Summary.totalCurrentSize / 1024).toFixed(1)}kB total`);",
              "type": "log"
            },
            {
              "line_number": 55,
              "content": "console.log('\u26a0\ufe0f  Phase 5 baseline not found - using fallback estimates');",
              "type": "log"
            },
            {
              "line_number": 65,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log('\ud83d\udcc8 Loading Phase 7C Implementation Data...');",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`\u2705 Loaded Phase 7C results: ${totalCurrent.toFixed(1)}kB total analytics bundles`);",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.log('\u274c Phase 7C validation results not found');",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log('\u2705 Loaded Phase 7C performance measurements');",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('\u26a0\ufe0f  Phase 7C performance measurements not found - using theoretical calculations');",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log('\ud83d\udd0d Generating Comprehensive Comparison Analysis...');",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.log(`\ud83d\udcca Bundle Size Reduction: ${reduction.toFixed(1)}kB (${reductionPercentage.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "console.log(`\ud83c\udfaf Target Achievement: ${this.reportData.comparison.targetAchievement.achieved ? '\u2705' : '\u26a0\ufe0f'} ${reductionPercentage.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 153,
              "content": "console.log('\u26a1 Analyzing Performance Improvements...');",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log('\ud83d\udcc8 Performance improvement analysis completed');",
              "type": "log"
            },
            {
              "line_number": 178,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.log('\ud83c\udfc6 Evaluating Phase 7C Achievement Status...');",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.log(`\ud83c\udfaf Achievement Rate: ${achievedCount}/${totalCount} (${this.reportData.achievements.achievementRate.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log(`\ud83d\udcca Overall Success: ${this.reportData.achievements.overallSuccess ? '\u2705' : '\u26a0\ufe0f'}`);",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 242,
              "content": "console.log('\ud83c\udfaf Generating Optimization Recommendations...');",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log(`\ud83d\udcdd Generated ${this.reportData.recommendations.length} optimization recommendations`);",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 310,
              "content": "console.log('\ud83d\udccb Generating Final Conclusion...');",
              "type": "log"
            },
            {
              "line_number": 335,
              "content": "console.log(`\ud83c\udfaf Phase 7C Status: ${this.reportData.conclusion.phase7cStatus}`);",
              "type": "log"
            },
            {
              "line_number": 336,
              "content": "console.log(`\ud83d\udcca Final Grade: ${this.reportData.conclusion.finalGrade}`);",
              "type": "log"
            },
            {
              "line_number": 337,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 364,
              "content": "console.log('\\n\ud83c\udfc6 PHASE 7C COMPREHENSIVE OPTIMIZATION COMPARISON REPORT');",
              "type": "log"
            },
            {
              "line_number": 365,
              "content": "console.log('\u2550'.repeat(90));",
              "type": "log"
            },
            {
              "line_number": 372,
              "content": "console.log(`\\n\ud83d\udccb EXECUTIVE SUMMARY`);",
              "type": "log"
            },
            {
              "line_number": 373,
              "content": "console.log(`\ud83d\udd50 Report Date: ${this.reportData.executionTime}`);",
              "type": "log"
            },
            {
              "line_number": 374,
              "content": "console.log(`\ud83c\udfaf Phase 7C Status: ${conclusion.phase7cStatus}`);",
              "type": "log"
            },
            {
              "line_number": 375,
              "content": "console.log(`\ud83d\udcca Final Grade: ${conclusion.finalGrade}`);",
              "type": "log"
            },
            {
              "line_number": 376,
              "content": "console.log(`\u26a1 Revolutionary Achievement: ${conclusion.revolutionaryStatus ? '\u2705 YES' : '\u26a0\ufe0f  NOT YET'}`);",
              "type": "log"
            },
            {
              "line_number": 379,
              "content": "console.log(`\\n\ud83d\udce6 BUNDLE SIZE COMPARISON`);",
              "type": "log"
            },
            {
              "line_number": 380,
              "content": "console.log('\u2500'.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 381,
              "content": "console.log(`\ud83d\udcca Baseline (Phase 5): ${comp.bundleSizes.baseline.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 382,
              "content": "console.log(`\ud83d\udcc8 Current (Phase 7C): ${comp.bundleSizes.current.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 383,
              "content": "console.log(`\ud83d\udcc9 Reduction: ${comp.bundleSizes.reduction.toFixed(1)}kB (${comp.bundleSizes.reductionPercentage.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 386,
              "content": "console.log(`\ud83c\udfaf Target Achievement: ${reductionStatus} ${comp.bundleSizes.reductionPercentage.toFixed(1)}% (target: 80%)`);",
              "type": "log"
            },
            {
              "line_number": 389,
              "content": "console.log(`\\n\ud83c\udfd7\ufe0f  PROGRESSIVE ENHANCEMENT TIER VALIDATION`);",
              "type": "log"
            },
            {
              "line_number": 390,
              "content": "console.log('\u2500'.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 394,
              "content": "console.log(`${status} ${tierName.toUpperCase()} TIER: ${tier.current.toFixed(1)}kB / ${tier.target}kB`);",
              "type": "log"
            },
            {
              "line_number": 395,
              "content": "console.log(`   ${tier.description}`);",
              "type": "log"
            },
            {
              "line_number": 399,
              "content": "console.log(`\\n\ud83c\udfaf PRIMARY OBJECTIVE ACHIEVEMENT ANALYSIS`);",
              "type": "log"
            },
            {
              "line_number": 400,
              "content": "console.log('\u2500'.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 404,
              "content": "console.log(`${status} ${objective.objective}:`);",
              "type": "log"
            },
            {
              "line_number": 405,
              "content": "console.log(`   Target: ${objective.target}`);",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log(`   Actual: ${objective.actual}`);",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.log(`   Status: ${objective.status}`);",
              "type": "log"
            },
            {
              "line_number": 408,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 413,
              "content": "console.log(`\ud83c\udfc6 KEY ACHIEVEMENTS`);",
              "type": "log"
            },
            {
              "line_number": 414,
              "content": "console.log('\u2500'.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 416,
              "content": "console.log(`\u2705 ${achievement}`);",
              "type": "log"
            },
            {
              "line_number": 418,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 423,
              "content": "console.log(`\ud83c\udfaf OPTIMIZATION RECOMMENDATIONS`);",
              "type": "log"
            },
            {
              "line_number": 424,
              "content": "console.log('\u2500'.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 428,
              "content": "console.log(`${priority} ${rec.priority} - ${rec.category}:`);",
              "type": "log"
            },
            {
              "line_number": 429,
              "content": "console.log(`   Issue: ${rec.issue}`);",
              "type": "log"
            },
            {
              "line_number": 430,
              "content": "console.log(`   Action: ${rec.action}`);",
              "type": "log"
            },
            {
              "line_number": 431,
              "content": "console.log(`   Impact: ${rec.impact}`);",
              "type": "log"
            },
            {
              "line_number": 432,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 437,
              "content": "console.log(`\ud83d\ude80 NEXT STEPS FOR CONTINUED OPTIMIZATION`);",
              "type": "log"
            },
            {
              "line_number": 438,
              "content": "console.log('\u2500'.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 440,
              "content": "console.log(`${i + 1}. ${conclusion.nextSteps[i]}`);",
              "type": "log"
            },
            {
              "line_number": 444,
              "content": "console.log(`\\n\ud83c\udf8a PHASE 7C BUNDLE OPTIMIZATION FINAL ASSESSMENT`);",
              "type": "log"
            },
            {
              "line_number": 445,
              "content": "console.log('\u2550'.repeat(90));",
              "type": "log"
            },
            {
              "line_number": 448,
              "content": "console.log('\ud83d\ude80 REVOLUTIONARY 80-90% BUNDLE REDUCTION ACHIEVED!');",
              "type": "log"
            },
            {
              "line_number": 449,
              "content": "console.log('\ud83c\udf1f Phase 7C Analytics Dashboard optimization represents a breakthrough');",
              "type": "log"
            },
            {
              "line_number": 450,
              "content": "console.log('\ud83d\udcf1 Mobile performance targets exceeded across all network conditions');",
              "type": "log"
            },
            {
              "line_number": 451,
              "content": "console.log('\u26a1 Progressive enhancement system provides optimal user experience');",
              "type": "log"
            },
            {
              "line_number": 453,
              "content": "console.log('\u2705 Phase 7C optimization successful with room for improvement');",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.log('\ud83d\udcc8 Significant bundle size reductions achieved');",
              "type": "log"
            },
            {
              "line_number": 455,
              "content": "console.log('\ud83d\udd27 Continue optimization efforts to reach revolutionary targets');",
              "type": "log"
            },
            {
              "line_number": 456,
              "content": "console.log('\ud83c\udfaf Focus on remaining critical recommendations');",
              "type": "log"
            },
            {
              "line_number": 458,
              "content": "console.log('\u26a0\ufe0f  Phase 7C optimization partially successful');",
              "type": "log"
            },
            {
              "line_number": 459,
              "content": "console.log('\ud83d\udd27 Critical optimizations needed to meet targets');",
              "type": "log"
            },
            {
              "line_number": 460,
              "content": "console.log('\ud83d\udcca Review and implement high-priority recommendations');",
              "type": "log"
            },
            {
              "line_number": 461,
              "content": "console.log('\ud83d\ude80 Continue development toward revolutionary reduction goals');",
              "type": "log"
            },
            {
              "line_number": 464,
              "content": "console.log(`\\n\ud83d\udcca Overall Achievement: ${achievements.achievementRate.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 465,
              "content": "console.log(`\ud83c\udfc6 Final Grade: ${conclusion.finalGrade}`);",
              "type": "log"
            },
            {
              "line_number": 466,
              "content": "console.log('\u2550'.repeat(90));",
              "type": "log"
            },
            {
              "line_number": 475,
              "content": "console.log(`\\n\ud83d\udcbe Comprehensive comparison report saved to: ${reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 477,
              "content": "console.error(`\u274c Failed to save report: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 498,
              "content": "console.error(`\\n\u274c REPORT GENERATION FAILED: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 506,
              "content": "report.generateReport().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "development/reports/phase7c-gridcolumns-validation-test.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-gridcolumns-validation-test.js",
          "console_count": 38,
          "console_lines": [
            {
              "line_number": 17,
              "content": "console.log('\ud83e\uddea Test 1: GridProgressive Export Validation');",
              "type": "log"
            },
            {
              "line_number": 27,
              "content": "console.log(`   \u2705 GridProgressive properly exported: ${hasProgressiveExport}`);",
              "type": "log"
            },
            {
              "line_number": 28,
              "content": "console.log(`   \u2705 Temporary bypass removed: ${hasNoBypass}`);",
              "type": "log"
            },
            {
              "line_number": 31,
              "content": "console.log('   \ud83c\udf89 Test 1 PASSED: GridProgressive activation successful\\n');",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "console.log('   \u274c Test 1 FAILED: GridProgressive not properly activated\\n');",
              "type": "log"
            },
            {
              "line_number": 36,
              "content": "console.log(`   \u274c Test 1 ERROR: ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.log('\ud83e\uddea Test 2: Bundle Splitting Configuration');",
              "type": "log"
            },
            {
              "line_number": 50,
              "content": "console.log(`   \u2705 Grid optimization section added: ${hasGridOptimization}`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log(`   \u2705 Essential bundle splitting: ${hasEssentialSplit}`);",
              "type": "log"
            },
            {
              "line_number": 52,
              "content": "console.log(`   \u2705 Progressive bundle splitting: ${hasProgressiveSplit}`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`   \u2705 Enhanced bundle splitting: ${hasEnhancedSplit}`);",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log('   \ud83c\udf89 Test 2 PASSED: Bundle splitting properly configured\\n');",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log('   \u274c Test 2 FAILED: Bundle splitting configuration incomplete\\n');",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log(`   \u274c Test 2 ERROR: ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 66,
              "content": "console.log('\ud83e\uddea Test 3: Tree Shaking Import Optimization');",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log(`   \u2705 Optimized tree shaking imports: ${hasOptimizedImports}`);",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log(`   \u2705 Old inefficient imports removed: ${!hasOldImports}`);",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log('   \ud83c\udf89 Test 3 PASSED: Tree shaking optimization successful\\n');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log('   \u274c Test 3 FAILED: Tree shaking imports not properly optimized\\n');",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.log(`   \u274c Test 3 ERROR: ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 87,
              "content": "console.log('\ud83e\uddea Test 4: Bundle Size Validation');",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log(`   \ud83d\udce6 Found grid bundles: ${gridBundles.length}`);",
              "type": "log"
            },
            {
              "line_number": 105,
              "content": "console.log(`      - ${bundle}: ${sizeKB} kB`);",
              "type": "log"
            },
            {
              "line_number": 107,
              "content": "console.log(`      - ${bundle}: Could not read size`);",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log(`   \ud83d\udcca Total GridColumns bundle size: ${totalSize.toFixed(2)} kB`);",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log('   \ud83c\udf89 Test 4 PASSED: EXCEPTIONAL bundle reduction achieved!\\n');",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "console.log('   \ud83c\udf89 Test 4 PASSED: Target bundle size achieved\\n');",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log('   \u274c Test 4 FAILED: Bundle size still too large\\n');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log(`   \u274c Test 4 ERROR: ${error.message}\\n`);",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log('\ud83d\udccb VALIDATION SUMMARY:');",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log('='.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log('GridColumns Bundle Optimization Phase 1 validation completed.');",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log('Check individual test results above for detailed status.');",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log('\\n\ud83d\ude80 Expected Results:');",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log('   \u2022 GridProgressive properly activated (bypass removed)');",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log('   \u2022 Bundle splitting configuration active');",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log('   \u2022 Tree shaking imports optimized');",
              "type": "log"
            },
            {
              "line_number": 135,
              "content": "console.log('   \u2022 Total bundle size reduced to <10kB (90%+ reduction)');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "development/reports/phase7c-performance-measurement-framework.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-performance-measurement-framework.js",
          "console_count": 59,
          "console_lines": [
            {
              "line_number": 113,
              "content": "console.log('\ud83d\ude80 Phase 7C Performance Measurement Framework');",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log('\u2550'.repeat(75));",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`\ud83d\udccd Project Root: ${this.projectRoot}`);",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log(`\ud83c\udf10 Testing ${Object.keys(NETWORK_PROFILES).length} Network Profiles`);",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log(`\ud83d\udcca Running ${TEST_SCENARIOS.length} Test Scenarios`);",
              "type": "log"
            },
            {
              "line_number": 118,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.log('\ud83c\udf10 Starting development server for performance testing...');",
              "type": "log"
            },
            {
              "line_number": 137,
              "content": "console.log('\u2705 Development server ready on http://localhost:4005');",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log(`\ud83d\udcca Testing: ${scenario.name} on ${networkProfile}`);",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log(`   ${status} TTI: ${performance.tti}ms (target: ${targetTTI}ms) - ${totalBundleSize.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 255,
              "content": "console.log('\ud83d\udcc8 Running Comprehensive Performance Analysis...');",
              "type": "log"
            },
            {
              "line_number": 258,
              "content": "console.log(`\\n\ud83c\udf10 Testing ${networkType} Network (${NETWORK_PROFILES[networkType].description})`);",
              "type": "log"
            },
            {
              "line_number": 270,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.log('\ud83d\udd04 Analyzing Progressive Enhancement Performance...');",
              "type": "log"
            },
            {
              "line_number": 327,
              "content": "console.log('\ud83d\udcca Progressive Enhancement Analysis:');",
              "type": "log"
            },
            {
              "line_number": 328,
              "content": "console.log(`   Essential\u2192Standard: +${essentialToStandardSize.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 329,
              "content": "console.log(`   Standard\u2192Advanced: +${standardToAdvancedSize.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 330,
              "content": "console.log(`   3G Transition Times: ${Math.round(progressiveAnalysis.tierTransitions.essentialToStandard.loadTime3G)}ms / ${Math.round(progressiveAnalysis.tierTransitions.standardToAdvanced.loadTime3G)}ms`);",
              "type": "log"
            },
            {
              "line_number": 331,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 336,
              "content": "console.log('\ud83d\udcca Generating Performance Summary & Recommendations...');",
              "type": "log"
            },
            {
              "line_number": 392,
              "content": "console.log('\u2705 Performance analysis complete');",
              "type": "log"
            },
            {
              "line_number": 393,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 398,
              "content": "console.log('\\n\ud83c\udfc6 PHASE 7C PERFORMANCE MEASUREMENT RESULTS');",
              "type": "log"
            },
            {
              "line_number": 399,
              "content": "console.log('\u2550'.repeat(75));",
              "type": "log"
            },
            {
              "line_number": 404,
              "content": "console.log(`\\n\ud83d\udccb EXECUTIVE SUMMARY: ${overallStatus}`);",
              "type": "log"
            },
            {
              "line_number": 405,
              "content": "console.log(`\ud83d\udd50 Test Execution: ${this.results.testRun.startTime}`);",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log(`\ud83d\udcbb Environment: ${this.results.testRun.environment.platform} ${this.results.testRun.environment.arch}`);",
              "type": "log"
            },
            {
              "line_number": 409,
              "content": "console.log('\\n\ud83c\udf10 NETWORK PERFORMANCE ACHIEVEMENTS');",
              "type": "log"
            },
            {
              "line_number": 410,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 414,
              "content": "console.log(`${status} ${network}: ${achievement.achievementRate.toFixed(1)}% (${achievement.achieved}/${achievement.total} scenarios)`);",
              "type": "log"
            },
            {
              "line_number": 415,
              "content": "console.log(`   Average TTI: ${Math.round(achievement.avgTTI)}ms`);",
              "type": "log"
            },
            {
              "line_number": 419,
              "content": "console.log('\\n\ud83d\udcca DETAILED SCENARIO PERFORMANCE');",
              "type": "log"
            },
            {
              "line_number": 420,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 423,
              "content": "console.log(`\\n${scenario.name}:`);",
              "type": "log"
            },
            {
              "line_number": 429,
              "content": "console.log(`   ${status} ${networkType}: ${result.performance.tti}ms (target: ${result.target}ms) ${deviation}`);",
              "type": "log"
            },
            {
              "line_number": 430,
              "content": "console.log(`      Bundle Size: ${result.totalSize.toFixed(1)}kB (gzip ~${result.gzipEstimate.toFixed(1)}kB)`);",
              "type": "log"
            },
            {
              "line_number": 436,
              "content": "console.log('\\n\ud83d\udd04 PROGRESSIVE ENHANCEMENT PERFORMANCE');",
              "type": "log"
            },
            {
              "line_number": 437,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 440,
              "content": "console.log(`Essential\u2192Standard Enhancement:`);",
              "type": "log"
            },
            {
              "line_number": 441,
              "content": "console.log(`   Additional Size: ${prog.tierTransitions.essentialToStandard.additionalSize.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 442,
              "content": "console.log(`   3G Load Time: ${Math.round(prog.tierTransitions.essentialToStandard.loadTime3G)}ms`);",
              "type": "log"
            },
            {
              "line_number": 443,
              "content": "console.log(`   4G Load Time: ${Math.round(prog.tierTransitions.essentialToStandard.loadTime4G)}ms`);",
              "type": "log"
            },
            {
              "line_number": 445,
              "content": "console.log(`Standard\u2192Advanced Enhancement:`);",
              "type": "log"
            },
            {
              "line_number": 446,
              "content": "console.log(`   Additional Size: ${prog.tierTransitions.standardToAdvanced.additionalSize.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 447,
              "content": "console.log(`   3G Load Time: ${Math.round(prog.tierTransitions.standardToAdvanced.loadTime3G)}ms`);",
              "type": "log"
            },
            {
              "line_number": 448,
              "content": "console.log(`   4G Load Time: ${Math.round(prog.tierTransitions.standardToAdvanced.loadTime4G)}ms`);",
              "type": "log"
            },
            {
              "line_number": 453,
              "content": "console.log('\\n\ud83c\udfaf OPTIMIZATION RECOMMENDATIONS');",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.log('\u2500'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 457,
              "content": "console.log(`\ud83d\udd34 CRITICAL: ${issue}`);",
              "type": "log"
            },
            {
              "line_number": 462,
              "content": "console.log(`${priority} ${rec.priority} - ${rec.category}:`);",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.log(`   Issue: ${rec.issue}`);",
              "type": "log"
            },
            {
              "line_number": 464,
              "content": "console.log(`   Action: ${rec.action}`);",
              "type": "log"
            },
            {
              "line_number": 465,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 469,
              "content": "console.log('\\n\ud83c\udf8a PERFORMANCE MEASUREMENT COMPLETE');",
              "type": "log"
            },
            {
              "line_number": 470,
              "content": "console.log('\u2550'.repeat(75));",
              "type": "log"
            },
            {
              "line_number": 479,
              "content": "console.log(`\ud83d\udcbe Detailed performance results saved to: ${reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 481,
              "content": "console.error(`\u274c Failed to save performance results: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 498,
              "content": "console.error(`\\n\u274c PERFORMANCE MEASUREMENT FAILED: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 506,
              "content": "framework.runMeasurement().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "dist-baseline-test/assets/js/Dashboard-B25U7JYC.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/Dashboard-B25U7JYC.js",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 1,
              "content": "import{j as e}from\"./data-Bv-1wmlB.js\";import{R as a,r as s}from\"./react-vendor-CFewNFzH.js\";import{u as r,C as i,N as t}from\"./ConnectionStatus-DKbt5BS6.js\";import{PriceChart as n}from\"./PriceChart-BxJK_mKW.js\";import{E as c,A as d,C as l}from\"./ErrorBoundary-CbgT__3Q.js\";import{B as o}from\"./Button-CManshQT.js\";import{C as h,a as m,b as p}from\"./Card-CobffA9g.js\";import{w as x,P as _}from\"./PerformanceWidget-dDnp_LwI.js\";import{a as g,b as u,u as j,c as b,g as v}from\"./useFinancialData-BgMtsrnL.js\";import{a as N}from\"./index-BXV1uie2.js\";import{validateDashboardData as y}from\"./financialValidators-D9z1DjLZ.js\";import{R as f,i as S,o as P,D as w,T as C,B as k,A as D,a as M}from\"./ui-DMFgMOOC.js\";import\"./authStore-OnCmqkYQ.js\";import\"./auth-DaqElu4y.js\";import\"./http-client-BjWGBSjJ.js\";import\"./logger-BhHoEjgh.js\";import\"./api-DKM9LNLr.js\";import\"./messages-BCwGaSuP.js\";import\"./genericValidators-irPhnqvQ.js\";const A=e=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(e),T=({symbol:s,showChange:i=!0,className:t=\"\"})=>{const{lastMessage:n,connectionState:c,error:d}=r({symbols:[s],autoConnect:!0}),l=a.useMemo(()=>{var e;if(n&&n.symbol===s&&\"price_update\"===n.message_type&&(null==(e=n.data)?void 0:e.price_data)){const e=n.data.price_data,a=e.price??150+50*Math.random(),s=e.change??10*(Math.random()-.5);return{price:a,change:s,changePercent:e.change_percent??s/a*100,isPositive:s>=0,lastUpdate:new Date(n.timestamp).toISOString()}}const a=150+50*Math.random(),r=10*(Math.random()-.5);return{price:a,change:r,changePercent:r/a*100,isPositive:r>=0,lastUpdate:(new Date).toISOString()}},[n,s]),o=\"connected\"===c,h=l.price>0;return e.jsxs(\"div\",{className:`live-price-display ${t} ${o?\"\":\"disconnected\"}`,\"data-testid\":\"live-price-element\",children:[e.jsxs(\"div\",{className:\"price-main\",children:[e.jsx(\"span\",{className:\"live-price-value \"+(h?\"loaded\":\"loading\"),\"data-testid\":\"formatted-price\",children:h?A(l.price):\"--\"}),!o&&e.jsx(\"span\",{className:\"connection-indicator offline\",title:\"Disconnected\",children:\"\u26a1\"})]}),i&&h&&e.jsxs(\"div\",{className:\"price-change-section\",children:[e.jsxs(\"span\",{className:\"live-price-change \"+(l.isPositive?\"positive\":\"negative\"),\"data-testid\":\"price-change-indicator\",children:[e.jsxs(\"span\",{className:\"change-amount\",children:[l.change>=0?\"+\":\"\",A(l.change)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",(m=l.changePercent,`${m>=0?\"+\":\"\"}${m.toFixed(2)}%`),\")\"]})]}),e.jsx(\"div\",{className:\"price-trend-arrow\",children:l.isPositive?\"\u2197\":\"\u2198\"})]}),d&&e.jsx(\"div\",{className:\"price-error\",title:d.message,children:\"\u26a0\ufe0f Error loading price\"}),e.jsx(\"div\",{className:\"last-update\",title:`Last updated: ${l.lastUpdate}`,children:e.jsx(\"span\",{className:\"update-indicator \"+(o?\"live\":\"stale\"),children:o?\"\ud83d\udd34 LIVE\":\"\u23f8\ufe0f PAUSED\"})})]});var m},I={positions:[{symbol:\"AAPL\",shares:50,costBasis:150,currentPrice:175.5,marketValue:8775,unrealizedGain:1275,unrealizedGainPercent:17,dayChange:125.5,dayChangePercent:1.45},{symbol:\"MSFT\",shares:30,costBasis:280,currentPrice:295.75,marketValue:8872.5,unrealizedGain:472.5,unrealizedGainPercent:5.63,dayChange:89.25,dayChangePercent:1.02},{symbol:\"GOOGL\",shares:25,costBasis:2100,currentPrice:2250,marketValue:56250,unrealizedGain:3750,unrealizedGainPercent:7.14,dayChange:675,dayChangePercent:1.21}]},L=e=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(e),R=e=>`${e>=0?\"+\":\"\"}${e.toFixed(2)}%`,z=({className:a=\"\"})=>{const s=I.positions.map(e=>e.symbol),{lastMessage:i,connectionState:t,error:n}=r({symbols:s,autoConnect:!0}),c=(()=>{const e=I.positions.map(e=>{var a;let s=e.currentPrice;i&&i.symbol===e.symbol&&\"price_update\"===i.message_type&&(null==(a=i.data)?void 0:a.price_data)&&(s=i.data.price_data.price??e.currentPrice);const r=e.shares*s,t=r-e.shares*e.costBasis,n=t/(e.shares*e.costBasis)*100,c=(s-e.currentPrice)*e.shares,d=(s-e.currentPrice)/e.currentPrice*100;return{...e,currentPrice:s,marketValue:r,unrealizedGain:t,unrealizedGainPercent:n,dayChange:c,dayChangePercent:d}}),a=e.reduce((e,a)=>e+a.marketValue,0),s=e.reduce((e,a)=>e+a.shares*a.costBasis,0),r=a-s,t=r/s*100,n=e.reduce((e,a)=>e+a.dayChange,0);return{totalValue:a,totalCost:s,totalGain:r,totalGainPercent:t,dayChange:n,dayChangePercent:n/(a-n)*100,positions:e}})(),d=\"connected\"===t;return e.jsxs(\"div\",{className:`live-portfolio-summary ${a} ${d?\"\":\"disconnected\"}`,\"data-testid\":\"portfolio-elements\",children:[e.jsxs(\"div\",{className:\"portfolio-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(\"div\",{className:`connection-status ${t}`,children:e.jsx(\"span\",{className:\"status-indicator\",children:d?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})})]}),e.jsxs(\"div\",{className:\"portfolio-totals\",\"data-testid\":\"live-data-elements\",children:[e.jsxs(\"div\",{className:\"total-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"value\",\"data-testid\":\"portfolio-total-value\",children:L(c.totalValue)})]}),e.jsxs(\"div\",{className:\"total-gain\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Gain/Loss\"}),e.jsxs(\"div\",{className:\"gain-section \"+(c.totalGain>=0?\"positive\":\"negative\"),children:[e.jsx(\"span\",{className:\"gain-amount\",\"data-testid\":\"portfolio-total-gain\",children:L(c.totalGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",R(c.totalGainPercent),\")\"]})]})]}),e.jsxs(\"div\",{className:\"day-change\",children:[e.jsx(\"span\",{className:\"label\",children:\"Today's Change\"}),e.jsxs(\"div\",{className:\"change-section \"+(c.dayChange>=0?\"positive\":\"negative\"),children:[e.jsxs(\"span\",{className:\"change-amount\",\"data-testid\":\"portfolio-day-change\",children:[c.dayChange>=0?\"+\":\"\",L(c.dayChange)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",R(c.dayChangePercent),\")\"]})]})]})]}),e.jsxs(\"div\",{className:\"portfolio-positions\",children:[e.jsx(\"h3\",{children:\"Holdings\"}),e.jsx(\"div\",{className:\"positions-grid\",\"data-testid\":\"portfolio-positions\",children:c.positions.map(a=>e.jsxs(\"div\",{className:\"position-card\",\"data-testid\":`position-${a.symbol}`,children:[e.jsxs(\"div\",{className:\"position-header\",children:[e.jsx(\"span\",{className:\"symbol\",children:a.symbol}),e.jsxs(\"span\",{className:\"shares\",children:[a.shares,\" shares\"]})]}),e.jsx(\"div\",{className:\"position-price\",children:e.jsx(T,{symbol:a.symbol,showChange:!0,className:\"compact\"})}),e.jsxs(\"div\",{className:\"position-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Market Value\"}),e.jsx(\"span\",{className:\"value\",children:L(a.marketValue)})]}),e.jsxs(\"div\",{className:\"position-gain \"+(a.unrealizedGain>=0?\"positive\":\"negative\"),children:[e.jsx(\"span\",{className:\"gain-amount\",children:L(a.unrealizedGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",R(a.unrealizedGainPercent),\")\"]})]})]},a.symbol))})]}),n&&e.jsxs(\"div\",{className:\"portfolio-error\",\"data-testid\":\"portfolio-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading live data: \",n.message]})]}),e.jsxs(\"div\",{className:\"portfolio-footer\",children:[e.jsxs(\"div\",{className:\"last-update\",children:[\"Last updated: \",(new Date).toLocaleTimeString()]}),e.jsx(\"div\",{className:\"data-status\",children:d?\"Real-time data\":\"Delayed data\"})]})]})},G=({symbol:i,height:t=300,width:n=500,timeframe:c=\"1m\",showVolume:d=!1,className:l=\"\"})=>{const o=s.useRef(null),[h,m]=s.useState(null),[p,x]=s.useState(!1),[_,g]=s.useState(null),{lastMessage:u,connectionState:j,error:b}=r({symbols:[i],autoConnect:!0}),v=a.useMemo(()=>{var e;return u&&u.symbol===i&&\"price_update\"===u.message_type&&(null==(e=u.data)?void 0:e.price_data)?u.data.price_data.price??150+50*Math.random():150+50*Math.random()},[u,i]),N=\"connected\"===j;s.useEffect(()=>{var e;if(v>0){const a=((e,a)=>{const s=[],r=Date.now(),i=a||100;for(let t=49;t>=0;t--){const e=r-6e4*t,a=.02,n=i*(1+(Math.random()-.5)*a*(t/50)),c=Math.floor(1e6*Math.random())+1e5;s.push({timestamp:e,price:Math.max(n,.01),volume:c})}return s})(0,v),s=a.map(e=>e.price),r=Math.min(...s),i=Math.max(...s),t=i-r,n=(null==(e=a[0])?void 0:e.price)??v,c=v-n;m({points:a,minPrice:r,maxPrice:i,priceRange:t,currentPrice:v,change:c,changePercent:0!==n?c/n*100:0})}},[i,v]),s.useEffect(()=>{if(h&&v>0&&N){const e={timestamp:Date.now(),price:v,volume:Math.floor(1e6*Math.random())+1e5};m(a=>{var s;if(!a)return null;const r=[...a.points.slice(1),e],i=r.map(e=>e.price),t=Math.min(...i),n=Math.max(...i),c=n-t,d=(null==(s=r[0])?void 0:s.price)??v,l=v-d;return{points:r,minPrice:t,maxPrice:n,priceRange:c,currentPrice:v,change:l,changePercent:0!==d?l/d*100:0}})}},[v,N,h]),s.useEffect(()=>{const e=o.current;if(!e||!h)return;const a=e.getContext(\"2d\");if(!a)return;e.width=n,e.height=t,a.clearRect(0,0,n,t);const{points:s,maxPrice:r,priceRange:i}=h;if(0===s.length||0===i)return;const c=40,d=n-80,l=t-80;a.strokeStyle=\"#e1e5e9\",a.lineWidth=1,a.setLineDash([2,2]);for(let t=0;t<=4;t++){const e=c+l*t/4;a.beginPath(),a.moveTo(c,e),a.lineTo(n-c,e),a.stroke()}for(let n=0;n<=4;n++){const e=c+d*n/4;a.beginPath(),a.moveTo(e,c),a.lineTo(e,t-c),a.stroke()}if(a.setLineDash([]),a.strokeStyle=h.change>=0?\"#28a745\":\"#dc3545\",a.lineWidth=2,a.beginPath(),s.forEach((e,t)=>{const n=c+t/(s.length-1)*d,o=c+(r-e.price)/i*l;0===t?a.moveTo(n,o):a.lineTo(n,o)}),a.stroke(),a.fillStyle=h.change>=0?\"rgba(40, 167, 69, 0.1)\":\"rgba(220, 53, 69, 0.1)\",a.beginPath(),s.forEach((e,t)=>{const n=c+t/(s.length-1)*d,o=c+(r-e.price)/i*l;0===t?a.moveTo(n,o):a.lineTo(n,o)}),a.lineTo(n-c,t-c),a.lineTo(c,t-c),a.closePath(),a.fill(),s.length>0){const e=s.at(-1);if(e){const s=n-c,t=c+(r-e.price)/i*l;a.fillStyle=h.change>=0?\"#28a745\":\"#dc3545\",a.beginPath(),a.arc(s,t,4,0,2*Math.PI),a.fill(),N&&(a.strokeStyle=h.change>=0?\"#28a745\":\"#dc3545\",a.lineWidth=2,a.beginPath(),a.arc(s,t,8,0,2*Math.PI),a.stroke())}}a.fillStyle=\"#6c757d\",a.font=\"12px Monaco, Menlo, monospace\",a.textAlign=\"right\";for(let t=0;t<=4;t++){const e=r-i*t/4,s=c+l*t/4;a.fillText(`$${e.toFixed(2)}`,30,s+4)}},[h,n,t,N]);const y=e=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(e);return e.jsxs(\"div\",{className:`live-price-chart ${l} ${N?\"\":\"disconnected\"}`,\"data-testid\":\"live-charts\",children:[e.jsxs(\"div\",{className:\"chart-header\",children:[e.jsxs(\"div\",{className:\"chart-title\",children:[e.jsxs(\"h3\",{children:[i,\" Live Chart\"]}),e.jsx(\"span\",{className:`connection-indicator ${j}`,children:N?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})]}),h&&e.jsxs(\"div\",{className:\"price-summary \"+(h.change>=0?\"positive\":\"negative\"),children:[e.jsx(\"span\",{className:\"current-price\",\"data-testid\":\"chart-current-price\",children:y(h.currentPrice)}),e.jsxs(\"span\",{className:\"price-change\",children:[h.change>=0?\"+\":\"\",y(h.change),\"(\",h.change>=0?\"+\":\"\",h.changePercent.toFixed(2),\"%)\"]})]})]}),e.jsxs(\"div\",{className:\"chart-container\",children:[e.jsx(\"canvas\",{ref:o,width:n,height:t,onMouseMove:e=>{if(!h||!o.current)return;const a=o.current.getBoundingClientRect(),s=e.clientX-a.left,r=n-80;if(s>=40&&s<=n-40){const e=Math.round((s-40)/r*(h.points.length-1)),a=h.points[e];a&&(g(a),x(!0))}else x(!1),g(null)},onMouseLeave:()=>{x(!1),g(null)},style:{cursor:\"crosshair\"}}),p&&_&&e.jsxs(\"div\",{className:\"chart-tooltip\",\"data-testid\":\"chart-tooltip\",children:[e.jsx(\"div\",{className:\"tooltip-price\",children:y(_.price)}),e.jsx(\"div\",{className:\"tooltip-time\",children:(f=_.timestamp,new Date(f).toLocaleTimeString())}),_.volume&&e.jsxs(\"div\",{className:\"tooltip-volume\",children:[\"Volume: \",_.volume.toLocaleString()]})]})]}),b&&e.jsxs(\"div\",{className:\"chart-error\",\"data-testid\":\"chart-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading chart data: \",b.message]})]}),e.jsx(\"div\",{className:\"chart-controls\",children:e.jsx(\"div\",{className:\"timeframe-selector\",children:[\"1m\",\"5m\",\"15m\",\"1h\",\"1d\"].map(a=>e.jsx(\"button\",{className:\"timeframe-btn \"+(c===a?\"active\":\"\"),onClick:()=>{},\"data-testid\":`timeframe-${a}`,children:a},a))})})]});var f},$=x(({className:a=\"\",initialSelectedSymbol:r=\"AAPL\",showDebugInfo:x=!1})=>{const[A,I]=s.useState(r),[L,R]=s.useState(new Date),{loadForContext:$}=N();s.useEffect(()=>{$(\"dashboard\").catch(console.error)},[$]);const{performance:F,isLoading:E,error:V}=g(),{marketSummary:O,isLoading:B,error:U}=u(),{gainers:W,losers:Q,isLoading:H,error:X}=j(),{insights:Y,isLoading:q,error:J}=b(),{watchlist:K,isLoading:Z,error:ee}=v(),ae=s.useMemo(()=>{const e=E||B||H||q||Z,a=[V,U,X,J,ee];return a.forEach((e,a)=>{}),y({performance:F,marketSummary:O,gainers:W,losers:Q,insights:Y,watchlist:K,isLoading:e,errors:a})},[F,O,W,Q,Y,K,E,B,H,q,Z,V,U,X,J,ee]),{performance:se,marketSummary:re,gainers:ie,losers:te,insights:ne,watchlist:ce}=ae,de=[{symbol:\"AAPL\",name:\"Apple Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",sector:\"Consumer Discretionary\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()}];return e.jsxs(\"div\",{className:`dashboard ${a}`.trim(),\"data-testid\":\"dashboard-container\",children:[e.jsxs(\"div\",{className:\"dashboard__header\",children:[e.jsxs(\"div\",{className:\"dashboard__title-section\",children:[e.jsx(\"h1\",{className:\"dashboard__title\",children:\"Dashboard\"}),e.jsx(\"p\",{className:\"dashboard__subtitle\",children:\"Welcome to your Finance AI Research Platform\"})]}),e.jsxs(\"div\",{className:\"dashboard__header-actions\",children:[e.jsx(\"div\",{className:\"live-indicators\",\"data-testid\":\"realtime-indicators\",children:e.jsx(i,{showDetails:!1,className:\"dashboard__connection-status\",\"data-testid\":\"connection-status-elements\"})}),e.jsx(\"div\",{className:\"dashboard__last-updated\",children:e.jsxs(\"span\",{className:\"dashboard__update-time\",children:[\"Last updated: \",L.toLocaleTimeString()]})}),e.jsx(o,{variant:\"ghost\",size:\"sm\",onClick:()=>{R(new Date),window.location.reload()},className:\"dashboard__refresh-button\",\"data-testid\":\"dashboard__refresh-button\",children:e.jsx(f,{className:\"dashboard__refresh-icon\"})}),e.jsx(\"div\",{className:\"dashboard__notification-wrapper\",\"data-testid\":\"notification-system\",children:e.jsx(t,{})}),e.jsx(o,{variant:\"ghost\",size:\"sm\",className:\"dashboard__analytics-button\",title:\"Open Analytics Dashboard\",children:e.jsx(S,{className:\"dashboard__analytics-icon\"})}),e.jsx(o,{variant:\"ghost\",size:\"sm\",className:\"dashboard__settings-button\",children:e.jsx(P,{className:\"dashboard__settings-icon\"})})]})]}),e.jsx(c,{level:\"section\",enableRecovery:!0,onError:(e,a)=>{},children:e.jsxs(\"div\",{className:\"dashboard__metrics-grid\",\"data-testid\":\"dashboard__metrics-grid\",children:[e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Portfolio Value\"}),e.jsx(w,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"live-price-element\",children:se.totalValue}),e.jsx(\"span\",{className:\"dashboard__metric-change \"+(se.isPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"),\"data-testid\":\"formatted-price\",children:se.totalGainLossPercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total portfolio value\"})]})]}),e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Daily Change\"}),e.jsx(C,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:se.dayChange}),e.jsx(\"span\",{className:\"dashboard__metric-change \"+(se.isDayPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"),\"data-testid\":\"dashboard__metric-change--positive\",children:se.dayChangePercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Since yesterday\"})]})]}),e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Market Cap\"}),e.jsx(k,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsxs(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:[\"$\",(re.totalMarketCap/1e12).toFixed(1),\"T\"]})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total market cap\"})]})]}),e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(D,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:ne.length})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"New recommendations\"})]})]})]})}),e.jsxs(\"div\",{className:\"dashboard__main-grid\",\"data-testid\":\"dashboard__main-grid\",children:[e.jsxs(\"div\",{className:\"dashboard__left-column\",\"data-testid\":\"dashboard__left-column\",children:[e.jsx(\"div\",{className:\"live-data-grid\",\"data-testid\":\"live-data-elements\",children:e.jsx(d,{children:e.jsx(z,{className:\"dashboard__portfolio-summary\",\"data-testid\":\"portfolio-elements\"})})}),e.jsx(c,{level:\"component\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsxs(h,{className:\"dashboard__performance-widget\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Performance Widget\"})}),e.jsx(p,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(D,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"Performance data temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Please try refreshing the page\"})]})})]}),children:e.jsx(_,{portfolioMode:!0,className:\"dashboard__performance-widget\",timeRange:\"1Y\",showBenchmark:!0})}),e.jsx(d,{children:e.jsxs(h,{className:\"dashboard__watchlist-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Watchlist\"}),e.jsx(M,{className:\"dashboard__card-icon\"})]})}),e.jsx(p,{children:e.jsxs(\"div\",{className:\"dashboard__watchlist\",children:[ce.slice(0,5).map((a,s)=>{var r;const i=(null==(r=null==a?void 0:a.security)?void 0:r.symbol)??\"N/A\",t=(null==a?void 0:a.formattedPrice)??\"$0.00\",n=(null==a?void 0:a.formattedChangePercent)??\"0.00%\",c=Boolean(null==a?void 0:a.isPositive);return e.jsxs(\"div\",{className:\"dashboard__watchlist-item\",children:[e.jsxs(\"div\",{className:\"dashboard__watchlist-info\",children:[e.jsx(\"span\",{className:\"dashboard__watchlist-symbol\",children:i}),e.jsx(\"span\",{className:\"dashboard__watchlist-price\",children:t})]}),e.jsxs(\"div\",{className:\"dashboard__watchlist-change \"+(c?\"dashboard__watchlist-change--positive\":\"dashboard__watchlist-change--negative\"),children:[c?\"+\":\"\",n]})]},(null==a?void 0:a.id)??s)}),0===ce.length&&e.jsx(\"div\",{className:\"dashboard__watchlist-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No watchlist items\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__center-column\",\"data-testid\":\"dashboard__center-column\",children:[e.jsx(l,{children:e.jsx(G,{symbol:A,height:300,width:500,timeframe:\"1m\",showVolume:!0,className:\"dashboard__live-chart\",\"data-testid\":\"live-charts\"})}),e.jsx(l,{children:e.jsxs(h,{className:\"dashboard__chart-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__chart-header\",children:[e.jsx(\"h3\",{className:\"dashboard__chart-title\",children:\"Market Analysis\"}),e.jsx(\"div\",{className:\"dashboard__chart-controls\",children:e.jsx(\"select\",{value:A,onChange:e=>I(e.target.value),className:\"dashboard__symbol-selector\",children:de.map(a=>e.jsxs(\"option\",{value:a.symbol,children:[a.symbol,\" - \",a.name]},a.symbol))})})]})}),e.jsx(p,{children:e.jsx(n,{symbol:A,height:350,showTimeRange:!0,showVolume:!0,initialRange:\"1M\"})})]})}),e.jsx(c,{level:\"component\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsxs(h,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(D,{className:\"dashboard__card-icon\"})]})}),e.jsx(p,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(D,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"AI insights temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Analysis engine will be back shortly\"})]})})]}),children:e.jsxs(h,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(D,{className:\"dashboard__card-icon\"})]})}),e.jsx(p,{children:e.jsxs(\"div\",{className:\"dashboard__insights\",children:[ne.slice(0,3).map(a=>{const s=(null==a?void 0:a.id)??`insight-${Math.random()}`,r=(null==a?void 0:a.type)??\"unknown\",i=(null==a?void 0:a.title)??\"No title\",t=(null==a?void 0:a.message)??\"No message available\",n=\"number\"==typeof(null==a?void 0:a.confidence)?a.confidence:0;return e.jsxs(\"div\",{className:\"dashboard__insight-item\",children:[e.jsxs(\"div\",{className:\"dashboard__insight-header\",children:[e.jsx(\"span\",{className:`dashboard__insight-type dashboard__insight-type--${r}`,children:r}),e.jsxs(\"span\",{className:\"dashboard__insight-confidence\",children:[Math.round(100*n),\"% confidence\"]})]}),e.jsx(\"h4\",{className:\"dashboard__insight-title\",children:i}),e.jsx(\"p\",{className:\"dashboard__insight-message\",children:t})]},s)}),0===ne.length&&e.jsx(\"div\",{className:\"dashboard__insights-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No AI insights available\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__right-column\",\"data-testid\":\"dashboard__right-column\",children:[e.jsx(d,{children:e.jsxs(h,{className:\"dashboard__movers-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Top Movers\"})}),e.jsx(p,{children:e.jsxs(\"div\",{className:\"dashboard__movers\",children:[e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--gainers\",children:\"Top Gainers\"}),ie.slice(0,3).map((a,s)=>{const r=(null==a?void 0:a.symbol)??\"N/A\",i=\"number\"==typeof(null==a?void 0:a.price)?a.price:0,t=\"number\"==typeof(null==a?void 0:a.changePercent)?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:r}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",i.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--positive\",children:[\"+\",t.toFixed(2),\"%\"]})]},(null==a?void 0:a.symbol)??s)}),0===ie.length&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No gainers data\"})})]}),e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--losers\",children:\"Top Losers\"}),te.slice(0,3).map((a,s)=>{const r=(null==a?void 0:a.symbol)??\"N/A\",i=\"number\"==typeof(null==a?void 0:a.price)?a.price:0,t=\"number\"==typeof(null==a?void 0:a.changePercent)?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:r}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",i.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--negative\",children:[t.toFixed(2),\"%\"]})]},(null==a?void 0:a.symbol)??s)}),0===te.length&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No losers data\"})})]})]})})]})}),e.jsx(\"div\",{className:\"dashboard__featured-stocks\",children:de.slice(0,2).map(a=>e.jsx(c,{level:\"component\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsx(h,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(p,{children:e.jsxs(\"div\",{style:{padding:\"16px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"6px\"},children:[e.jsx(C,{style:{width:\"24px\",height:\"24px\",margin:\"0 auto 8px\",opacity:.5}}),e.jsx(\"p\",{style:{fontSize:\"14px\",margin:0},children:a.symbol}),e.jsx(\"p\",{style:{fontSize:\"12px\",margin:\"4px 0 0\",opacity:.7},children:\"Data unavailable\"})]})})}),children:e.jsx(h,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(p,{children:e.jsxs(\"div\",{className:\"featured-stock-content\",children:[e.jsxs(\"div\",{className:\"stock-info\",children:[e.jsx(\"h4\",{children:a.symbol}),e.jsx(\"p\",{children:a.name})]}),e.jsx(T,{symbol:a.symbol,showChange:!0,className:\"featured-stock-price\"})]})})})},a.symbol))})]})]})]})},{level:\"page\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsx(\"div\",{className:\"dashboard\",children:e.jsxs(\"div\",{className:\"dashboard__error-page\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"60vh\",padding:\"40px\",textAlign:\"center\",backgroundColor:\"#fef2f2\",border:\"1px solid #fecaca\",borderRadius:\"12px\",margin:\"20px\"},children:[e.jsx(\"div\",{style:{fontSize:\"64px\",marginBottom:\"24px\",opacity:.6},children:\"\ud83d\udcca\"}),e.jsx(\"h1\",{style:{fontSize:\"24px\",fontWeight:\"bold\",color:\"#dc2626\",marginBottom:\"16px\"},children:\"Dashboard Temporarily Unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"16px\",color:\"#7f1d1d\",marginBottom:\"24px\",maxWidth:\"500px\",lineHeight:\"1.5\"},children:\"We're experiencing technical difficulties with the dashboard. Our team has been notified and is working to resolve the issue.\"}),e.jsxs(\"div\",{style:{display:\"flex\",gap:\"12px\"},children:[e.jsx(\"button\",{style:{backgroundColor:\"#dc2626\",color:\"white\",border:\"none\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.location.reload(),children:\"Reload Dashboard\"}),e.jsx(\"button\",{style:{backgroundColor:\"white\",color:\"#dc2626\",border:\"1px solid #dc2626\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.history.back(),children:\"Go Back\"})]}),e.jsx(\"p\",{style:{fontSize:\"12px\",color:\"#9ca3af\",marginTop:\"24px\"},children:\"If the problem persists, please contact support.\"})]})})});export{$ as default};",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "dist-baseline-test/assets/js/ForecastingDashboard-CvRLHh7L.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/ForecastingDashboard-CvRLHh7L.js",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 1,
              "content": "import{j as e}from\"./data-Bv-1wmlB.js\";import{r as a}from\"./react-vendor-CFewNFzH.js\";import{ForecastingService as s}from\"./forecasting-C8PZEyZr.js\";import{ModelValidationService as r}from\"./predictionModels-sI-I-VH6.js\";import{BarChart as i}from\"./BarChart-ySIA6bod.js\";import{LineChart as t}from\"./LineChart-DlOILlo7.js\";import{ScatterPlot as n}from\"./ScatterPlot-k_L5UUdK.js\";import{B as c}from\"./Button-CManshQT.js\";import{C as l}from\"./Card-CobffA9g.js\";import{a as o}from\"./index-BXV1uie2.js\";import\"./BaseChart-poULCdg4.js\";import\"./chartHelpers-DkhC0aaT.js\";import\"./utils-DvmUb7mG.js\";import\"./ParentSize-FAAUvIBf.js\";import\"./_baseGetTag-76xZNbvL.js\";import\"./VixBarChart-DxDe98kd.js\";import\"./ordinal-DWMvV58e.js\";import\"./AxisBottom-Do3PUUOn.js\";import\"./GridColumns-g-vDgu7M.js\";import\"./Bar-BeL4cnsA.js\";import\"./LinearGradient-bYVEPoik.js\";import\"./ui-DMFgMOOC.js\";import\"./VixTooltip-BaqBoJlZ.js\";import\"./time-DOP1oq_V.js\";import\"./LinePath-C4mQz8iC.js\";import\"./monotone-Q2mjRMuk.js\";import\"./AxisProgressive-COP0doiw.js\";import\"./localPoint-AOW7UCX8.js\";import\"./VixScatterPlot-CgY_lTZZ.js\";import\"./GridProgressive-D7CjWd7b.js\";import\"./GridOptimizationProvider-Dk_3Nzi2.js\";function d({symbol:d,priceData:m,earningsHistory:h,financialStatements:p,className:x=\"\",onExport:j}){var f;const{utilities:u,loadForContext:g}=o();a.useEffect(()=>{g(\"analytics\").catch(console.error)},[g]);const b=a.useCallback(e=>{var a;return(null==(a=u.formatCurrency)?void 0:a.call(u,e))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(e)},[u]),v=a.useCallback(e=>{var a;return(null==(a=u.formatPercentage)?void 0:a.call(u,e))||`${e.toFixed(2)}%`},[u]),y=a.useCallback((e,a)=>{var s;return(null==(s=u.formatTimestamp)?void 0:s.call(u,e,a))||new Date(e).toLocaleDateString()},[u]),[N,F]=a.useState({loading:!1,error:null}),[C,k]=a.useState({horizon:30,confidenceLevel:.95,includeSeasonality:!0,ensembleMethods:[\"ARIMA\",\"TREND_ANALYSIS\",\"LINEAR_REGRESSION\"],backtestPeriods:20}),[P,M]=a.useState(\"price\"),S=a.useMemo(()=>new s,[]),A=a.useMemo(()=>new r,[]),E=a.useCallback(async()=>{F(e=>({...e,loading:!0,error:null}));try{const e=await S.generatePriceForecast(m,C),a=await S.generateEarningsForecast(h,p,C),s=await S.generateVolatilityForecast(m,C),r=await Promise.all(C.ensembleMethods.map(async e=>{const a=m.at(-1),s=(null==a?void 0:a.close)??100,r=Array.from({length:20},()=>s*(1+.1*(Math.random()-.5))),i=m.slice(-20).map(e=>e.close);return A.validateModel(e,r,i)})),i=m.at(-1),t=(null==i?void 0:i.close)??100,n=C.ensembleMethods.map((e,a)=>({modelType:e,predictions:Array.from({length:20},()=>t*(1+.1*(Math.random()-.5))),actual:m.slice(-20).map(e=>e.close)})),c=await A.compareModels(n),l=await A.designEnsemble(r.map(e=>e.data));F({priceForecast:e,earningsForecast:a,volatilityForecast:s,modelValidation:r,modelComparison:c,ensembleConfig:l,loading:!1,error:null})}catch(e){F(a=>({...a,loading:!1,error:e instanceof Error?e.message:\"Unknown error occurred\"}))}},[m,h,p,C,S,A]);a.useEffect(()=>{m.length>0&&E()},[m,C,E]);const _=a.useMemo(()=>{if(!N.priceForecast)return{type:\"line\",data:[],dimensions:{height:400}};return{type:\"line\",data:[...m.slice(-60).map(e=>({timestamp:e.timestamp,value:e.close,name:\"Historical Price\"})),...N.priceForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:e.predicted,name:\"Predicted Price\"})),...N.priceForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:e.confidenceInterval.upper,name:\"Upper Confidence\"})),...N.priceForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:e.confidenceInterval.lower,name:\"Lower Confidence\"}))],dimensions:{height:400},title:`${d} Price Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:e=>y(Number(e),\"1M\")},yAxis:{enabled:!0,label:\"Price ($)\",tickFormatter:e=>b(Number(e))},colors:{primary:\"#3b82f6\",secondary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"},tooltip:{enabled:!0,formatter:(e,a)=>[b(Number(e)),a]},legend:{enabled:!0}}},[N.priceForecast,m,d]),w=a.useMemo(()=>{if(!N.earningsForecast)return{type:\"bar\",data:[],dimensions:{height:300}};return{type:\"bar\",data:N.earningsForecast.data.predictions.map(e=>({timestamp:Date.now(),value:e.predictedEPS,name:e.quarter,category:e.quarter})),dimensions:{height:300},title:`${d} Earnings Forecast`,xAxis:{enabled:!0,label:\"Quarter\",type:\"category\"},yAxis:{enabled:!0,label:\"EPS ($)\",tickFormatter:e=>b(Number(e))},colors:{primary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}},[N.earningsForecast,d]),R=a.useMemo(()=>{if(!N.volatilityForecast)return{type:\"line\",data:[],dimensions:{height:300}};return{type:\"line\",data:N.volatilityForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:100*e.predictedVolatility,name:\"Predicted Volatility\"})),dimensions:{height:300},title:`${d} Volatility Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:e=>y(Number(e),\"1M\")},yAxis:{enabled:!0,label:\"Volatility (%)\",tickFormatter:e=>v(Number(e)/100)},colors:{primary:\"#f59e0b\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}},[N.volatilityForecast,d]),V=a.useMemo(()=>{if(!N.modelComparison)return{type:\"scatter\",data:[],dimensions:{height:350}};return{type:\"scatter\",data:N.modelComparison.data.rankings.map(e=>({timestamp:e.rank,value:100*e.score,name:e.modelType,category:e.modelType})),dimensions:{height:350},title:\"Model Performance Comparison\",xAxis:{enabled:!0,label:\"Rank\",type:\"number\"},yAxis:{enabled:!0,label:\"Score (%)\",tickFormatter:e=>v(Number(e)/100)},colors:{primary:\"#8b5cf6\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}},[N.modelComparison]);return N.loading?e.jsx(l,{className:`forecasting-dashboard ${x}`,children:e.jsxs(\"div\",{className:\"forecasting-dashboard__loading\",children:[e.jsx(\"div\",{className:\"loading-spinner\"}),e.jsx(\"p\",{children:\"Generating forecasts...\"})]})}):N.error?e.jsx(l,{className:`forecasting-dashboard ${x}`,children:e.jsxs(\"div\",{className:\"forecasting-dashboard__error\",children:[e.jsx(\"h3\",{children:\"Error generating forecasts\"}),e.jsx(\"p\",{children:N.error}),e.jsx(c,{onClick:E,children:\"Retry\"})]})}):e.jsxs(\"div\",{className:`forecasting-dashboard ${x}`,children:[e.jsxs(l,{className:\"forecasting-dashboard__header\",children:[e.jsxs(\"div\",{className:\"forecasting-dashboard__title\",children:[e.jsxs(\"h2\",{children:[\"Forecasting Dashboard - \",d]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__actions\",children:[e.jsx(c,{onClick:E,disabled:N.loading,children:\"Refresh Forecasts\"}),j&&e.jsx(c,{onClick:()=>{var e,a,s,r,i;if(j){const t={...(null==(e=N.priceForecast)?void 0:e.data)&&{priceForecast:N.priceForecast.data},...(null==(a=N.earningsForecast)?void 0:a.data)&&{earningsForecast:N.earningsForecast.data},...(null==(s=N.volatilityForecast)?void 0:s.data)&&{volatilityForecast:N.volatilityForecast.data},...N.modelValidation&&{modelValidation:N.modelValidation.map(e=>e.data)},...(null==(r=N.modelComparison)?void 0:r.data)&&{modelComparison:N.modelComparison.data},...(null==(i=N.ensembleConfig)?void 0:i.data)&&{ensembleConfig:N.ensembleConfig.data}};j(t)}},variant:\"secondary\",children:\"Export Data\"})]})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__options\",children:[e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"forecast-horizon\",children:\"Forecast Horizon (days)\"}),e.jsx(\"input\",{id:\"forecast-horizon\",type:\"number\",value:C.horizon,onChange:e=>k(a=>({...a,horizon:Number.parseInt(e.target.value)})),min:\"1\",max:\"365\"})]}),e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"confidence-level\",children:\"Confidence Level\"}),e.jsxs(\"select\",{id:\"confidence-level\",value:C.confidenceLevel,onChange:e=>k(a=>({...a,confidenceLevel:Number.parseFloat(e.target.value)})),children:[e.jsx(\"option\",{value:.9,children:\"90%\"}),e.jsx(\"option\",{value:.95,children:\"95%\"}),e.jsx(\"option\",{value:.99,children:\"99%\"})]})]}),e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"include-seasonality\",children:\"Include Seasonality\"}),e.jsx(\"input\",{id:\"include-seasonality\",type:\"checkbox\",checked:C.includeSeasonality,onChange:e=>k(a=>({...a,includeSeasonality:e.target.checked}))})]})]})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__tabs\",children:[e.jsx(\"button\",{className:\"tab \"+(\"price\"===P?\"active\":\"\"),onClick:()=>M(\"price\"),children:\"Price Forecast\"}),e.jsx(\"button\",{className:\"tab \"+(\"earnings\"===P?\"active\":\"\"),onClick:()=>M(\"earnings\"),children:\"Earnings Forecast\"}),e.jsx(\"button\",{className:\"tab \"+(\"volatility\"===P?\"active\":\"\"),onClick:()=>M(\"volatility\"),children:\"Volatility Forecast\"}),e.jsx(\"button\",{className:\"tab \"+(\"validation\"===P?\"active\":\"\"),onClick:()=>M(\"validation\"),children:\"Model Validation\"})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__content\",children:[\"price\"===P&&N.priceForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(t,{config:_})}),e.jsxs(\"div\",{className:\"forecast-metrics\",children:[e.jsxs(l,{className:\"metric-card\",children:[e.jsx(\"h4\",{children:\"Model Performance\"}),e.jsxs(\"div\",{className:\"metrics\",children:[e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Accuracy:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.accuracy)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"R\u00b2:\"}),e.jsx(\"span\",{children:N.priceForecast.data.accuracy_metrics.rmse.toFixed(3)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"MAPE:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.accuracy_metrics.mape)})]})]})]}),e.jsxs(l,{className:\"backtest-results\",children:[e.jsx(\"h4\",{children:\"Backtest Results\"}),e.jsxs(\"div\",{className:\"metrics\",children:[e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Period:\"}),e.jsx(\"span\",{children:N.priceForecast.data.backtestResults.period})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Accuracy:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.backtestResults.accuracy)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Profitability:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.backtestResults.profitability)})]})]})]})]})]}),\"earnings\"===P&&N.earningsForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(i,{config:w})}),e.jsxs(l,{className:\"earnings-table\",children:[e.jsx(\"h4\",{children:\"Earnings Predictions\"}),e.jsxs(\"table\",{children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Quarter\"}),e.jsx(\"th\",{children:\"Predicted EPS\"}),e.jsx(\"th\",{children:\"Confidence Interval\"}),e.jsx(\"th\",{children:\"Growth Rate\"})]})}),e.jsx(\"tbody\",{children:N.earningsForecast.data.predictions.map((a,s)=>e.jsxs(\"tr\",{children:[e.jsx(\"td\",{children:a.quarter}),e.jsx(\"td\",{children:b(a.predictedEPS)}),e.jsxs(\"td\",{children:[b(a.confidenceInterval.lower),\" -\",\" \",b(a.confidenceInterval.upper)]}),e.jsx(\"td\",{children:v(a.growthRate)})]},a.quarter||`pred-${s}`))})]})]})]}),\"volatility\"===P&&N.volatilityForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(t,{config:R})}),e.jsxs(l,{className:\"garch-params\",children:[e.jsx(\"h4\",{children:\"GARCH Model Parameters\"}),e.jsx(\"div\",{className:\"params\",children:N.volatilityForecast.data.predictions[0]&&e.jsxs(e.Fragment,{children:[e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Alpha (\u03b1):\"}),e.jsx(\"span\",{children:N.volatilityForecast.data.predictions[0].garchParams.alpha.toFixed(4)})]}),e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Beta (\u03b2):\"}),e.jsx(\"span\",{children:N.volatilityForecast.data.predictions[0].garchParams.beta.toFixed(4)})]}),e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Omega (\u03c9):\"}),e.jsx(\"span\",{children:N.volatilityForecast.data.predictions[0].garchParams.omega.toFixed(6)})]})]})})]})]}),\"validation\"===P&&N.modelComparison&&e.jsxs(\"div\",{className:\"validation-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(n,{config:V})}),e.jsxs(\"div\",{className:\"validation-results\",children:[e.jsxs(l,{className:\"model-rankings\",children:[e.jsx(\"h4\",{children:\"Model Rankings\"}),e.jsxs(\"table\",{children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Rank\"}),e.jsx(\"th\",{children:\"Model\"}),e.jsx(\"th\",{children:\"Score\"})]})}),e.jsx(\"tbody\",{children:N.modelComparison.data.rankings.map((a,s)=>e.jsxs(\"tr\",{children:[e.jsx(\"td\",{children:a.rank}),e.jsx(\"td\",{children:a.modelType}),e.jsx(\"td\",{children:v(a.score)})]},a.modelType||`ranking-${s}`))})]})]}),e.jsxs(l,{className:\"recommendations\",children:[e.jsx(\"h4\",{children:\"Recommendations\"}),e.jsx(\"ul\",{children:N.modelComparison.data.recommendations.map((a,s)=>e.jsx(\"li\",{children:a},a))})]}),N.ensembleConfig&&e.jsxs(l,{className:\"ensemble-config\",children:[e.jsx(\"h4\",{children:\"Ensemble Configuration\"}),e.jsxs(\"div\",{className:\"ensemble-details\",children:[e.jsxs(\"div\",{className:\"ensemble-method\",children:[e.jsx(\"span\",{children:\"Method:\"}),e.jsx(\"span\",{children:N.ensembleConfig.data.method})]}),e.jsxs(\"div\",{className:\"performance-gain\",children:[e.jsx(\"span\",{children:\"Expected Performance Gain:\"}),e.jsx(\"span\",{children:v(N.ensembleConfig.data.performanceGain)})]}),e.jsxs(\"div\",{className:\"model-weights\",children:[e.jsx(\"h5\",{children:\"Model Weights:\"}),null==(f=N.ensembleConfig)?void 0:f.data.baseModels.map((a,s)=>{var r;return e.jsxs(\"div\",{className:\"weight-item\",children:[e.jsxs(\"span\",{children:[a,\":\"]}),e.jsx(\"span\",{children:v((null==(r=N.ensembleConfig)?void 0:r.data.weights[s])??0)})]},a)})]})]})]})]})]})]})]})}export{d as ForecastingDashboard,d as default};",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "dist-baseline-test/assets/js/Portfolio-DaCePi_W.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/Portfolio-DaCePi_W.js",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 1,
              "content": "import{j as e}from\"./data-Bv-1wmlB.js\";import{r as a}from\"./react-vendor-CFewNFzH.js\";import{B as t}from\"./Button-CManshQT.js\";import{C as o,a as s,b as i}from\"./Card-CobffA9g.js\";import{I as l}from\"./Input-D6JwjyJt.js\";import{a as r}from\"./index-BXV1uie2.js\";import{R as n,j as c,P as d,k as m,T as p,b as h,B as _,n as u,o as j,E as x,r as f}from\"./ui-DMFgMOOC.js\";const v=1500,N=500,b=[{symbol:\"AAPL\",name:\"Apple Inc.\",shares:150,averagePrice:145.32,currentPrice:175.84,marketValue:26376,unrealizedGain:4578,unrealizedGainPercent:21,allocation:42.1,lastUpdated:(new Date).toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",shares:75,averagePrice:320.15,currentPrice:378.85,marketValue:28413.75,unrealizedGain:4402.5,unrealizedGainPercent:18.3,allocation:45.3,lastUpdated:(new Date).toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",shares:50,averagePrice:125.8,currentPrice:142.56,marketValue:7128,unrealizedGain:838,unrealizedGainPercent:13.3,allocation:11.4,lastUpdated:(new Date).toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",shares:25,averagePrice:280.45,currentPrice:254.22,marketValue:6355.5,unrealizedGain:-656.25,unrealizedGainPercent:-9.3,allocation:10.1,lastUpdated:(new Date).toISOString()}],g=()=>{const[g]=a.useState(b),[y,P]=a.useState(!1),[C,S]=a.useState(\"\"),[k,w]=a.useState(\"\"),[A,z]=a.useState(\"\"),[R,G]=a.useState(!1),[T,U]=a.useState(new Date),{utilities:I,loadForContext:L}=r();a.useEffect(()=>{L(\"portfolio\").catch(console.error)},[L]);const D=a.useMemo(()=>{const e=g.reduce((e,a)=>e+a.marketValue,0),a=g.reduce((e,a)=>e+a.shares*a.averagePrice,0),t=e-a;return{totalValue:e,todayChange:3847.21,todayChangePercent:3.2,totalReturn:t,totalReturnPercent:a>0?t/a*100:0,totalCost:a,availableCash:15420.75}},[g]),O=e=>{var a;return(null==(a=I.formatCurrency)?void 0:a.call(I,e))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(e)},V=e=>{var a;return(null==(a=I.formatPercentage)?void 0:a.call(I,e))||`${e>=0?\"+\":\"\"}${e.toFixed(2)}%`};return e.jsxs(\"div\",{className:\"portfolio\",\"data-testid\":\"portfolio-page\",children:[e.jsxs(\"div\",{className:\"portfolio__header\",children:[e.jsx(\"h1\",{className:\"portfolio__title\",\"data-testid\":\"portfolio-heading\",children:\"Portfolio Management\"}),e.jsx(\"p\",{className:\"portfolio__subtitle\",children:\"Track and manage your investment portfolio with real-time performance metrics\"}),e.jsxs(\"div\",{className:\"portfolio__controls\",children:[e.jsxs(t,{variant:\"outline\",onClick:async()=>{G(!0),await new Promise(e=>setTimeout(e,v)),U(new Date),G(!1)},disabled:R,\"data-testid\":\"refresh-portfolio-button\",children:[e.jsx(n,{className:\"portfolio__control-icon \"+(R?\"spinning\":\"\")}),\"Refresh Data\"]}),e.jsxs(t,{variant:\"outline\",onClick:()=>{const e={summary:D,positions:g,exportDate:(new Date).toISOString()},a=new Blob([JSON.stringify(e,null,2)],{type:\"application/json\"}),t=URL.createObjectURL(a),o=document.createElement(\"a\");o.href=t,o.download=`portfolio-export-${(new Date).toISOString().split(\"T\")[0]}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(t)},\"data-testid\":\"export-portfolio-button\",children:[e.jsx(c,{className:\"portfolio__control-icon\"}),\"Export\"]}),e.jsxs(t,{onClick:()=>P(!0),\"data-testid\":\"add-position-button\",children:[e.jsx(d,{className:\"portfolio__control-icon\"}),\"Add Position\"]})]})]}),e.jsx(\"div\",{className:\"portfolio__summary\",children:e.jsxs(o,{className:\"portfolio__summary-card\",children:[e.jsx(s,{children:e.jsxs(\"div\",{className:\"portfolio__summary-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(m,{className:\"portfolio__summary-icon\"})]})}),e.jsx(i,{children:e.jsxs(\"div\",{className:\"portfolio__metrics\",\"data-testid\":\"portfolio-metrics\",children:[e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"total-value\",children:O(D.totalValue)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Cost\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"total-cost\",children:O(D.totalCost)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Today's Change\"}),e.jsxs(\"span\",{className:\"portfolio__metric-value \"+(D.todayChange>=0?\"portfolio__metric-value--positive\":\"portfolio__metric-value--negative\"),\"data-testid\":\"today-change\",children:[D.todayChange>=0?e.jsx(p,{className:\"portfolio__trend-icon\"}):e.jsx(h,{className:\"portfolio__trend-icon\"}),O(D.todayChange),\" (\",V(D.todayChangePercent),\")\"]})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Return\"}),e.jsxs(\"span\",{className:\"portfolio__metric-value \"+(D.totalReturn>=0?\"portfolio__metric-value--positive\":\"portfolio__metric-value--negative\"),\"data-testid\":\"total-return\",children:[D.totalReturn>=0?e.jsx(p,{className:\"portfolio__trend-icon\"}):e.jsx(h,{className:\"portfolio__trend-icon\"}),O(D.totalReturn),\" (\",V(D.totalReturnPercent),\")\"]})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Available Cash\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"available-cash\",children:O(D.availableCash)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Last Updated\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"last-updated\",children:T.toLocaleTimeString()})]})]})})]})}),e.jsx(\"div\",{className:\"portfolio__actions\",children:e.jsx(o,{className:\"portfolio__actions-card\",children:e.jsx(i,{children:e.jsxs(\"div\",{className:\"portfolio__action-buttons\",children:[e.jsxs(t,{variant:\"outline\",onClick:()=>{},\"data-testid\":\"rebalance-button\",children:[e.jsx(_,{className:\"portfolio__action-icon\"}),\"Rebalance Portfolio\"]}),e.jsxs(t,{variant:\"outline\",\"data-testid\":\"performance-analysis-button\",children:[e.jsx(p,{className:\"portfolio__action-icon\"}),\"Performance Analysis\"]}),e.jsxs(t,{variant:\"outline\",\"data-testid\":\"risk-analysis-button\",children:[e.jsx(u,{className:\"portfolio__action-icon\"}),\"Risk Analysis\"]}),e.jsxs(t,{variant:\"outline\",\"data-testid\":\"settings-button\",children:[e.jsx(j,{className:\"portfolio__action-icon\"}),\"Settings\"]})]})})})}),e.jsxs(o,{className:\"portfolio__positions-card\",children:[e.jsx(s,{children:e.jsxs(\"div\",{className:\"portfolio__positions-header\",children:[e.jsxs(\"h2\",{children:[\"Holdings (\",g.length,\" positions)\"]}),e.jsx(p,{className:\"portfolio__positions-icon\"})]})}),e.jsx(i,{children:e.jsx(\"div\",{className:\"portfolio__positions-table\",\"data-testid\":\"portfolio-positions\",children:g.length>0?e.jsxs(\"table\",{className:\"portfolio__table\",children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Symbol\"}),e.jsx(\"th\",{children:\"Name\"}),e.jsx(\"th\",{children:\"Shares\"}),e.jsx(\"th\",{children:\"Avg Price\"}),e.jsx(\"th\",{children:\"Current Price\"}),e.jsx(\"th\",{children:\"Market Value\"}),e.jsx(\"th\",{children:\"Unrealized Gain/Loss\"}),e.jsx(\"th\",{children:\"Allocation\"}),e.jsx(\"th\",{children:\"Actions\"})]})}),e.jsx(\"tbody\",{children:g.map(a=>e.jsxs(\"tr\",{\"data-testid\":\"position-row\",children:[e.jsx(\"td\",{className:\"portfolio__symbol\",children:a.symbol}),e.jsx(\"td\",{className:\"portfolio__name\",children:a.name}),e.jsx(\"td\",{className:\"portfolio__shares\",children:a.shares.toLocaleString()}),e.jsx(\"td\",{className:\"portfolio__avg-price\",children:O(a.averagePrice)}),e.jsx(\"td\",{className:\"portfolio__current-price\",children:O(a.currentPrice)}),e.jsx(\"td\",{className:\"portfolio__market-value\",children:O(a.marketValue)}),e.jsxs(\"td\",{className:\"portfolio__unrealized-gain \"+(a.unrealizedGain>=0?\"positive\":\"negative\"),children:[a.unrealizedGain>=0?e.jsx(p,{className:\"portfolio__gain-icon\"}):e.jsx(h,{className:\"portfolio__gain-icon\"}),O(a.unrealizedGain),\" (\",V(a.unrealizedGainPercent),\")\"]}),e.jsxs(\"td\",{className:\"portfolio__allocation\",children:[a.allocation.toFixed(1),\"%\"]}),e.jsxs(\"td\",{className:\"portfolio__actions\",children:[e.jsxs(t,{size:\"sm\",variant:\"outline\",\"data-testid\":\"view-position-button\",children:[e.jsx(x,{className:\"portfolio__action-icon\"}),\"View\"]}),e.jsxs(t,{size:\"sm\",variant:\"outline\",onClick:()=>(async()=>{G(!0),await new Promise(e=>setTimeout(e,N)),G(!1)})(),disabled:R,\"data-testid\":\"remove-position-button\",children:[e.jsx(f,{className:\"portfolio__action-icon\"}),\"Remove\"]})]})]},a.symbol))})]}):e.jsxs(\"div\",{className:\"portfolio__empty-state\",\"data-testid\":\"empty-portfolio\",children:[e.jsx(m,{className:\"portfolio__empty-icon\"}),e.jsx(\"h3\",{children:\"No Holdings Yet\"}),e.jsx(\"p\",{children:\"Start building your portfolio by adding your first position.\"}),e.jsxs(t,{onClick:()=>P(!0),children:[e.jsx(d,{className:\"portfolio__control-icon\"}),\"Add Your First Position\"]})]})})})]}),y&&e.jsx(\"div\",{className:\"portfolio__modal-overlay\",\"data-testid\":\"add-position-modal\",children:e.jsxs(\"div\",{className:\"portfolio__modal\",children:[e.jsxs(\"div\",{className:\"portfolio__modal-header\",children:[e.jsx(\"h3\",{children:\"Add New Position\"}),e.jsx(t,{variant:\"outline\",size:\"sm\",onClick:()=>P(!1),\"data-testid\":\"close-modal-button\",children:\"\u00d7\"})]}),e.jsxs(\"div\",{className:\"portfolio__modal-body\",children:[e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"symbol\",children:\"Stock Symbol\"}),e.jsx(l,{id:\"symbol\",type:\"text\",placeholder:\"e.g., AAPL\",value:C,onChange:e=>S(e.target.value.toUpperCase()),\"data-testid\":\"symbol-input\"})]}),e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"shares\",children:\"Number of Shares\"}),e.jsx(l,{id:\"shares\",type:\"number\",placeholder:\"e.g., 100\",value:k,onChange:e=>w(e.target.value),\"data-testid\":\"shares-input\"})]}),e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"price\",children:\"Average Price\"}),e.jsx(l,{id:\"price\",type:\"number\",step:\"0.01\",placeholder:\"e.g., 150.00\",value:A,onChange:e=>z(e.target.value),\"data-testid\":\"price-input\"})]})]}),e.jsxs(\"div\",{className:\"portfolio__modal-footer\",children:[e.jsx(t,{variant:\"outline\",onClick:()=>P(!1),disabled:R,\"data-testid\":\"cancel-add-button\",children:\"Cancel\"}),e.jsx(t,{onClick:async()=>{C&&k&&A&&(G(!0),await new Promise(e=>setTimeout(e,1e3)),S(\"\"),w(\"\"),z(\"\"),P(!1),G(!1))},disabled:R||!C||!k||!A,\"data-testid\":\"confirm-add-button\",children:R?\"Adding...\":\"Add Position\"})]})]})})]})};export{g as default};",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "dist-baseline-test/assets/js/Securities-CRSZsdwj.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/Securities-CRSZsdwj.js",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 2,
              "content": "import{a as e,_ as s}from\"./index-BXV1uie2.js\";import{j as i}from\"./data-Bv-1wmlB.js\";import{r as a,R as r}from\"./react-vendor-CFewNFzH.js\";import{VixBarChart as t}from\"./VixBarChart-DxDe98kd.js\";import{B as c}from\"./Button-CManshQT.js\";import{C as l,a as n,b as d}from\"./Card-CobffA9g.js\";import{G as o}from\"./GridOptimizationProvider-Dk_3Nzi2.js\";import{S as m,B as h,A as u,T as _,b as x,r as p}from\"./ui-DMFgMOOC.js\";import{P as j}from\"./ParentSize-FAAUvIBf.js\";import\"./ordinal-DWMvV58e.js\";import\"./AxisBottom-Do3PUUOn.js\";import\"./_baseGetTag-76xZNbvL.js\";import\"./GridColumns-g-vDgu7M.js\";import\"./Bar-BeL4cnsA.js\";import\"./LinearGradient-bYVEPoik.js\";const v=r.lazy(()=>s(()=>import(\"./VixLineChart-m6DmgT1w.js\"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]))),g=r.lazy(()=>s(()=>import(\"./VixAreaChart-DCUSHR8K.js\").then(e=>e.a),__vite__mapDeps([17,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16]))),N=r.lazy(()=>s(()=>import(\"./VixCandlestickChart-Ctq9cnW3.js\"),__vite__mapDeps([18,1,2,3,4,5,6,8,9,10,11,12,13,16]))),b=[{symbol:\"AAPL\",name:\"Apple Inc.\",price:175.84,change:2.31,changePercent:1.33,volume:45632e3,marketCap:\"2.75T\",peRatio:28.45,dividendYield:.52,sector:\"Technology\",exchange:\"NASDAQ\",high52Week:198.23,low52Week:164.08,beta:1.29,eps:6.18,revenue:\"394.33B\",operatingMargin:30.74,priceToBook:39.57,debtToEquity:195.33},{symbol:\"MSFT\",name:\"Microsoft Corporation\",price:378.85,change:-1.45,changePercent:-.38,volume:23154e3,marketCap:\"2.81T\",peRatio:34.72,dividendYield:.73,sector:\"Technology\",exchange:\"NASDAQ\",high52Week:384.3,low52Week:309.45,beta:.89,eps:10.92,revenue:\"211.92B\",operatingMargin:42.05,priceToBook:13.73,debtToEquity:47.05},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",price:142.56,change:0,changePercent:0,volume:28745e3,marketCap:\"1.78T\",peRatio:25.83,dividendYield:null,sector:\"Technology\",exchange:\"NASDAQ\",high52Week:153.78,low52Week:121.46,beta:1.05,eps:5.52,revenue:\"307.39B\",operatingMargin:25.89,priceToBook:5.18,debtToEquity:14.71},{symbol:\"TSLA\",name:\"Tesla, Inc.\",price:254.22,change:8.76,changePercent:3.57,volume:67891e3,marketCap:\"810B\",peRatio:65.23,dividendYield:null,sector:\"Consumer Discretionary\",exchange:\"NASDAQ\",high52Week:299.29,low52Week:152.37,beta:2.32,eps:3.9,revenue:\"96.77B\",operatingMargin:8.16,priceToBook:9.34,debtToEquity:17.19}],y=e=>{if(e.length<20)return{sma20:null,sma50:null,rsi:null,macd:null,bollingerUpper:null,bollingerLower:null};const s=e.map(e=>e.close),i=s.length-1,a=s.slice(i-19,i+1).reduce((e,s)=>e+s,0)/20,r=s.length>=50?s.slice(i-49,i+1).reduce((e,s)=>e+s,0)/50:null,t=a,c=s.slice(i-19,i+1).reduce((e,s)=>e+Math.pow(s-t,2),0)/20,l=Math.sqrt(c);return{sma20:a,sma50:r,rsi:50+40*(Math.random()-.5),macd:2*(Math.random()-.5),bollingerUpper:t+2*l,bollingerLower:t-2*l}},f=()=>{const[s,r]=a.useState(\"\"),[f,k]=a.useState([]),[S,w]=a.useState(!1),[T,A]=a.useState(!1),[C,M]=a.useState(\"\"),[D,P]=a.useState(\"1M\"),[L,R]=a.useState(!1),[B,F]=a.useState(\"line\"),{utilities:E,loadForContext:I}=e();a.useEffect(()=>{I(\"charts\").catch(console.error)},[I]);const V=e=>{var s;return(null==(s=E.formatNumber)?void 0:s.call(E,e))||new Intl.NumberFormat(\"en-US\").format(e)},W=e=>{var s;return(null==(s=E.formatCurrency)?void 0:s.call(E,e))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(e)},Y=e=>{var s;return null===e?\"N/A\":(null==(s=E.formatPercentage)?void 0:s.call(E,e))||`${e.toFixed(2)}%`},z=(e,s=2)=>{var i,a;return null===e?\"N/A\":(null==(a=null==(i=E.roundToDecimalPlaces)?void 0:i.call(E,e,s))?void 0:a.toString())||e.toFixed(s)},O=a.useCallback(e=>{const s={\"1D\":1,\"5D\":5,\"1M\":30,\"3M\":90,\"6M\":180,\"1Y\":365,\"5Y\":1825}[D];return((e,s,i=30)=>{const a=[];let r=.9*s;for(let t=i;t>=0;t--){const e=new Date;e.setDate(e.getDate()-t);const s=r,i=r*(1+2*(Math.random()-.5)*.02),c=Math.max(s,i)*(1+.01*Math.random()),l=Math.min(s,i)*(1-.01*Math.random()),n=Math.floor(5e7*Math.random())+1e7;a.push({date:e.toISOString().split(\"T\")[0],open:s,high:c,low:l,close:i,volume:n,timestamp:e.getTime()}),r=i}return a})(e.symbol,e.price,s)},[D]),U=e=>new Date(e).toLocaleDateString(),$=a.useCallback(e=>{const s=O(e),i=y(s);return s.map(e=>({...e,timestamp:new Date(e.date).getTime(),sma20:i.sma20,sma50:i.sma50,bollingerUpper:i.bollingerUpper,bollingerLower:i.bollingerLower}))},[O]),G=({height:e=400,title:s=\"Loading chart...\"})=>i.jsx(\"div\",{className:\"chart-skeleton animate-pulse bg-gray-100 rounded-lg flex items-center justify-center\",style:{height:e},\"data-testid\":\"chart-skeleton\",children:i.jsxs(\"div\",{className:\"text-gray-500 text-center\",children:[i.jsx(\"div\",{className:\"loading-spinner w-8 h-8 border-2 border-gray-300 border-t-blue-500 rounded-full animate-spin mx-auto mb-2\"}),i.jsx(\"p\",{children:s})]})}),q=e=>{const s=$(e),a=y(O(e)),r=e.price,t=e.change>=0;return i.jsx(j,{children:({width:e,height:c=400})=>i.jsxs(Suspense,{fallback:i.jsx(G,{height:c,title:`Loading ${B} chart...`}),children:[\"line\"===B&&i.jsx(v,{data:s,width:e,height:c,isPositive:t,currentPrice:r,showTechnicalIndicators:L,indicators:a}),\"area\"===B&&i.jsx(g,{data:s,width:e,height:c,isPositive:t,currentPrice:r}),\"candlestick\"===B&&i.jsx(N,{data:s,width:e,height:c,currentPrice:r})]})})},Q=e=>{const s={data:O(e).map(e=>({timestamp:new Date(e.date).getTime(),value:e.volume,volume:e.volume,originalData:e})),colors:{primary:\"#9ca3af\",grid:\"#e0e4e7\",axis:\"#666\",text:\"#666\"},xAxis:{enabled:!0,tickFormatter:e=>new Date(e).toLocaleDateString(\"en-US\",{month:\"short\",day:\"numeric\"}),label:\"Date\"},yAxis:{enabled:!0,tickFormatter:e=>(e/1e6).toFixed(1)+\"M\",label:\"Volume\"},tooltip:{enabled:!0,formatter:e=>[V(e),\"Volume\"],labelFormatter:U,contentStyle:{backgroundColor:\"#fff\",border:\"1px solid #e0e4e7\",borderRadius:\"4px\",fontSize:\"12px\"}},grid:{enabled:!0},margins:{top:10,right:30,bottom:30,left:60}};return i.jsx(j,{children:({width:e,height:a=200})=>i.jsx(t,{config:s,width:e,height:a})})};return i.jsx(o,{userBehavior:\"high\",deviceCapability:\"medium\",enableAnalytics:!1,children:i.jsxs(\"div\",{className:\"securities\",\"data-testid\":\"securities-page\",children:[i.jsxs(\"div\",{className:\"securities__header\",children:[i.jsx(\"h1\",{className:\"securities__title\",\"data-testid\":\"securities-heading\",children:\"Securities Research\"}),i.jsx(\"p\",{className:\"securities__subtitle\",children:\"Search and analyze financial securities with real-time data\"})]}),i.jsxs(l,{className:\"securities__search-card\",children:[i.jsx(n,{children:i.jsx(\"h2\",{children:\"Security Search\"})}),i.jsx(d,{children:i.jsx(\"form\",{onSubmit:async e=>{if(e.preventDefault(),s.trim())if(s.length<1)M(\"Search term must be at least 1 character\");else{M(\"\"),w(!0),A(!0);try{const e=500;await new Promise(s=>setTimeout(s,e));const i=b.filter(e=>e.symbol.toLowerCase().includes(s.toLowerCase())||e.name.toLowerCase().includes(s.toLowerCase()));k(i)}catch(i){M(\"Search failed. Please try again.\")}finally{w(!1)}}else M(\"Please enter a search term\")},className:\"securities__search-form\",children:i.jsxs(\"div\",{className:\"securities__search\",children:[i.jsxs(\"div\",{className:\"securities__search-input\",children:[i.jsx(m,{className:\"securities__search-icon\"}),i.jsx(\"input\",{type:\"text\",value:s,onChange:e=>{const s=e.target.value;if(r(s),C&&M(\"\"),s.length>=1){const e=b.filter(e=>e.symbol.toLowerCase().includes(s.toLowerCase())||e.name.toLowerCase().includes(s.toLowerCase()));k(e),A(!0)}else k([]),A(!1)},placeholder:\"Search for stocks, ETFs, or other securities...\",className:\"securities__input \"+(C?\"securities__input--error\":\"\"),\"data-testid\":\"securities-search-input\",disabled:S}),i.jsx(c,{type:\"submit\",disabled:S||!s.trim(),loading:S,\"data-testid\":\"securities-search-button\",className:\"securities__search-button\",\"aria-label\":S?\"Searching securities...\":\"Search for securities\",children:S?\"Searching...\":\"Search\"})]}),C&&i.jsx(\"span\",{className:\"securities__error\",\"data-testid\":\"search-error\",children:C}),i.jsx(\"p\",{className:\"securities__search-help\",children:\"Try searching for symbols like AAPL, MSFT, or company names like Apple, Microsoft\"})]})})})]}),i.jsxs(l,{className:\"securities__results-card\",children:[i.jsx(n,{children:i.jsx(\"h2\",{children:\"Search Results\"})}),i.jsx(d,{children:i.jsxs(\"div\",{className:\"securities__results\",\"data-testid\":\"securities-results\",children:[S&&i.jsx(\"div\",{className:\"securities__loading\",\"data-testid\":\"securities-loading\",children:i.jsx(\"p\",{children:\"Searching securities...\"})}),!S&&T&&0===f.length&&i.jsx(\"div\",{className:\"securities__no-results\",\"data-testid\":\"securities-no-results\",children:i.jsxs(\"p\",{children:['No securities found for \"',s,'\". Please try a different search term.']})}),!S&&f.length>0&&i.jsx(\"div\",{className:\"securities__results-list\",\"data-testid\":\"securities-results-list\",children:f.map(e=>{return i.jsxs(\"div\",{className:\"securities__result-item\",\"data-testid\":\"security-item\",children:[i.jsxs(\"div\",{className:\"securities__result-header\",children:[i.jsxs(\"div\",{className:\"securities__result-symbol\",children:[i.jsx(\"h3\",{children:e.symbol}),i.jsx(\"p\",{children:e.name}),i.jsxs(\"div\",{className:\"securities__result-meta\",children:[i.jsx(\"span\",{className:\"securities__sector\",children:e.sector}),i.jsx(\"span\",{className:\"securities__exchange\",children:e.exchange})]})]}),i.jsxs(\"div\",{className:\"securities__result-price\",children:[i.jsx(\"span\",{className:\"securities__price\",children:W(e.price)}),i.jsxs(\"div\",{className:\"securities__change \"+(e.change>=0?\"securities__change--positive\":\"securities__change--negative\"),children:[(r=e.change,r>0?i.jsx(_,{className:\"securities__trend-icon securities__trend-icon--up\"}):r<0?i.jsx(x,{className:\"securities__trend-icon securities__trend-icon--down\"}):i.jsx(p,{className:\"securities__trend-icon securities__trend-icon--neutral\"})),i.jsxs(\"span\",{children:[e.change>=0?\"+\":\"\",W(e.change),\" (\",e.changePercent>=0?\"+\":\"\",e.changePercent.toFixed(2),\"%)\"]})]})]})]}),i.jsxs(\"div\",{className:\"securities__financial-metrics\",children:[i.jsxs(\"div\",{className:\"securities__metrics-row\",children:[i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Valuation Metrics\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"P/E Ratio:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.peRatio)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"P/B Ratio:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.priceToBook)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"EPS:\"}),i.jsxs(\"span\",{className:\"securities__metric-value\",children:[\"$\",z(e.eps)]})]})]})]}),i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Financial Health\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Revenue:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:e.revenue})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Op. Margin:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:Y(e.operatingMargin)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"D/E Ratio:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.debtToEquity)})]})]})]})]}),i.jsxs(\"div\",{className:\"securities__metrics-row\",children:[i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Market Data\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Market Cap:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:e.marketCap})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Volume:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:V(e.volume)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Beta:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.beta)})]})]})]}),i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Performance & Yield\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"52W Range:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:(s=e.low52Week,a=e.high52Week,`${W(s)} - ${W(a)}`)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Dividend:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:Y(e.dividendYield)})]})]})]})]})]}),i.jsxs(\"div\",{className:\"securities__charts-container\",\"data-testid\":\"price-charts-container\",children:[i.jsxs(\"div\",{className:\"securities__chart-header\",children:[i.jsxs(\"div\",{className:\"securities__chart-title\",children:[i.jsx(h,{className:\"securities__chart-icon\"}),i.jsx(\"h4\",{children:\"Price Chart & Technical Analysis\"})]}),i.jsxs(\"div\",{className:\"securities__chart-controls\",children:[i.jsxs(\"div\",{className:\"securities__timeframe-selector\",children:[i.jsx(\"span\",{className:\"securities__control-label\",children:\"Timeframe:\"}),[\"1D\",\"5D\",\"1M\",\"3M\",\"6M\",\"1Y\",\"5Y\"].map(e=>i.jsx(\"button\",{className:\"securities__timeframe-button \"+(D===e?\"securities__timeframe-button--active\":\"\"),onClick:()=>P(e),\"data-testid\":`timeframe-${e}`,children:e},e))]}),i.jsxs(\"div\",{className:\"securities__chart-type-selector\",children:[i.jsx(\"span\",{className:\"securities__control-label\",children:\"Chart:\"}),[{key:\"line\",label:\"Line\"},{key:\"area\",label:\"Area\"},{key:\"candlestick\",label:\"OHLC\"}].map(e=>i.jsx(\"button\",{className:\"securities__chart-type-button \"+(B===e.key?\"securities__chart-type-button--active\":\"\"),onClick:()=>F(e.key),\"data-testid\":`chart-type-${e.key}`,children:e.label},e.key))]}),i.jsx(\"div\",{className:\"securities__technical-indicators\",children:i.jsxs(\"label\",{className:\"securities__indicator-toggle\",children:[i.jsx(\"input\",{type:\"checkbox\",checked:L,onChange:e=>R(e.target.checked),\"data-testid\":\"technical-indicators-toggle\"}),i.jsx(\"span\",{children:\"Technical Indicators\"})]})})]})]}),i.jsxs(\"div\",{className:\"securities__chart-content\",children:[i.jsx(\"div\",{className:\"securities__price-chart\",\"data-testid\":\"price-chart\",children:q(e)}),i.jsxs(\"div\",{className:\"securities__volume-chart\",\"data-testid\":\"volume-chart\",children:[i.jsxs(\"div\",{className:\"securities__chart-subtitle\",children:[i.jsx(u,{className:\"securities__chart-icon\"}),i.jsx(\"h5\",{children:\"Volume\"})]}),Q(e)]})]}),L&&i.jsxs(\"div\",{className:\"securities__technical-summary\",\"data-testid\":\"technical-summary\",children:[i.jsx(\"h5\",{children:\"Technical Indicators\"}),i.jsx(\"div\",{className:\"securities__technical-grid\",children:(()=>{const s=O(e),a=y(s);return i.jsxs(i.Fragment,{children:[i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"RSI (14):\"}),i.jsx(\"span\",{className:\"securities__technical-value \"+(a.rsi&&a.rsi>70?\"securities__technical-value--overbought\":a.rsi&&a.rsi<30?\"securities__technical-value--oversold\":\"\"),children:a.rsi?a.rsi.toFixed(1):\"N/A\"})]}),i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"MACD:\"}),i.jsx(\"span\",{className:\"securities__technical-value \"+(a.macd&&a.macd>0?\"securities__technical-value--bullish\":\"securities__technical-value--bearish\"),children:a.macd?a.macd.toFixed(3):\"N/A\"})]}),i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"SMA 20:\"}),i.jsx(\"span\",{className:\"securities__technical-value\",children:a.sma20?W(a.sma20):\"N/A\"})]}),i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"SMA 50:\"}),i.jsx(\"span\",{className:\"securities__technical-value\",children:a.sma50?W(a.sma50):\"N/A\"})]})]})})()})]})]}),i.jsxs(\"div\",{className:\"securities__result-actions\",children:[i.jsx(c,{size:\"sm\",variant:\"outline\",\"data-testid\":\"view-details-button\",children:\"View Details\"}),i.jsx(c,{size:\"sm\",\"data-testid\":\"add-to-portfolio-button\",children:\"Add to Portfolio\"})]})]},e.symbol);var s,a,r})}),!T&&i.jsxs(\"div\",{className:\"securities__placeholder\",\"data-testid\":\"securities-placeholder\",children:[i.jsx(\"p\",{children:\"Search results will appear here. This will include:\"}),i.jsxs(\"ul\",{children:[i.jsx(\"li\",{children:\"Security details and current prices\"}),i.jsx(\"li\",{children:\"Historical performance charts\"}),i.jsx(\"li\",{children:\"AI-powered analysis and recommendations\"}),i.jsx(\"li\",{children:\"Related securities and market insights\"})]})]})]})})]})]})})};export{f as default};",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/phase7-validation-system.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-validation-system.js",
          "console_count": 111,
          "console_lines": [
            {
              "line_number": 133,
              "content": "console.log('\ud83d\ude80 Phase 7 Validation System - 10 Concurrent Subagent Framework Initialized');",
              "type": "log"
            },
            {
              "line_number": 156,
              "content": "console.log(`\ud83d\udcc1 Created Phase 7 validation directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log('\ud83e\udd16 SUBAGENT 1: Baseline Generation and Target Mapping');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log(`\u2705 SUBAGENT 1 COMPLETE: Baselines saved to ${baselineFile}`);",
              "type": "log"
            },
            {
              "line_number": 227,
              "content": "console.log('\ud83e\udd16 SUBAGENT 2: Bundle Size Validation and Achievement Measurement');",
              "type": "log"
            },
            {
              "line_number": 287,
              "content": "console.log(`\ud83d\udcca ${target.name}: ${this.formatBytes(baseline)} \u2192 ${this.formatBytes(current)} (${this.formatBytes(result.reduction)} reduction, ${result.achievementPercentage.toFixed(1)}% of target)`);",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log(`\u2705 SUBAGENT 2 COMPLETE: Bundle validation saved to ${validationFile}`);",
              "type": "log"
            },
            {
              "line_number": 318,
              "content": "console.log('\ud83e\udd16 SUBAGENT 3: Performance Regression Testing and Monitoring');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.log('\ud83d\udcca Measuring build performance...');",
              "type": "log"
            },
            {
              "line_number": 336,
              "content": "console.log('\u26a1 Assessing runtime performance...');",
              "type": "log"
            },
            {
              "line_number": 340,
              "content": "console.log('\ud83e\udde0 Measuring memory usage...');",
              "type": "log"
            },
            {
              "line_number": 344,
              "content": "console.log('\ud83c\udf10 Testing core web vitals...');",
              "type": "log"
            },
            {
              "line_number": 348,
              "content": "console.log('\ud83d\udd0d Detecting performance regressions...');",
              "type": "log"
            },
            {
              "line_number": 352,
              "content": "console.log('\ud83d\udcc8 Analyzing load time improvements...');",
              "type": "log"
            },
            {
              "line_number": 362,
              "content": "console.log(`\u2705 SUBAGENT 3 COMPLETE: Performance validation saved to ${performanceFile}`);",
              "type": "log"
            },
            {
              "line_number": 376,
              "content": "console.log('\ud83e\udd16 SUBAGENT 4: Functionality Integrity and Regression Testing');",
              "type": "log"
            },
            {
              "line_number": 394,
              "content": "console.log('\ud83e\uddea Running unit tests...');",
              "type": "log"
            },
            {
              "line_number": 397,
              "content": "console.log('\ud83d\udd17 Running integration tests...');",
              "type": "log"
            },
            {
              "line_number": 400,
              "content": "console.log('\ud83c\udf10 Running E2E tests...');",
              "type": "log"
            },
            {
              "line_number": 403,
              "content": "console.log('\ud83e\udde9 Running component-specific tests...');",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log('\ud83d\udce6 Running bundle integrity tests...');",
              "type": "log"
            },
            {
              "line_number": 410,
              "content": "console.log('\ud83d\udcca Analyzing test coverage...');",
              "type": "log"
            },
            {
              "line_number": 414,
              "content": "console.log('\ud83d\udd0d Performing regression analysis...');",
              "type": "log"
            },
            {
              "line_number": 427,
              "content": "console.log(`\u2705 SUBAGENT 4 COMPLETE: Functionality validation saved to ${functionalityFile}`);",
              "type": "log"
            },
            {
              "line_number": 441,
              "content": "console.log('\ud83e\udd16 SUBAGENT 5: Real-time Monitoring and Alerting System');",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.log('\ud83d\udcca Setting up monitoring infrastructure...');",
              "type": "log"
            },
            {
              "line_number": 458,
              "content": "console.log('\ud83d\udcc8 Configuring performance metrics...');",
              "type": "log"
            },
            {
              "line_number": 462,
              "content": "console.log('\ud83d\udea8 Setting up alerting system...');",
              "type": "log"
            },
            {
              "line_number": 466,
              "content": "console.log('\ud83d\udcf1 Creating monitoring dashboard...');",
              "type": "log"
            },
            {
              "line_number": 470,
              "content": "console.log('\ud83d\udd04 Enabling continuous validation...');",
              "type": "log"
            },
            {
              "line_number": 480,
              "content": "console.log(`\u2705 SUBAGENT 5 COMPLETE: Monitoring system saved to ${monitoringFile}`);",
              "type": "log"
            },
            {
              "line_number": 494,
              "content": "console.log('\ud83e\udd16 SUBAGENT 6: Comprehensive Benchmarking and Performance Analysis');",
              "type": "log"
            },
            {
              "line_number": 513,
              "content": "console.log('\ud83d\udce6 Running bundle size benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 517,
              "content": "console.log('\u26a1 Running load time benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 521,
              "content": "console.log('\ud83d\ude80 Running runtime benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 525,
              "content": "console.log('\ud83e\udde0 Running memory benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 529,
              "content": "console.log('\ud83d\udcbe Running caching benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 533,
              "content": "console.log('\ud83c\udf10 Running network benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 537,
              "content": "console.log('\ud83d\udcca Performing comparative analysis...');",
              "type": "log"
            },
            {
              "line_number": 541,
              "content": "console.log('\ud83d\udcc8 Generating performance profiles...');",
              "type": "log"
            },
            {
              "line_number": 545,
              "content": "console.log('\ud83d\udd0d Analyzing performance bottlenecks...');",
              "type": "log"
            },
            {
              "line_number": 555,
              "content": "console.log(`\u2705 SUBAGENT 6 COMPLETE: Benchmarking suite saved to ${benchmarkFile}`);",
              "type": "log"
            },
            {
              "line_number": 569,
              "content": "console.log('\ud83e\udd16 SUBAGENT 7: Evidence Collection and Achievement Documentation');",
              "type": "log"
            },
            {
              "line_number": 592,
              "content": "console.log('\ud83d\udce6 Collecting bundle reduction evidence...');",
              "type": "log"
            },
            {
              "line_number": 596,
              "content": "console.log('\u26a1 Collecting performance evidence...');",
              "type": "log"
            },
            {
              "line_number": 600,
              "content": "console.log('\ud83e\uddea Collecting functionality evidence...');",
              "type": "log"
            },
            {
              "line_number": 604,
              "content": "console.log('\ud83d\udd12 Collecting regression prevention evidence...');",
              "type": "log"
            },
            {
              "line_number": 608,
              "content": "console.log('\ud83d\udcca Generating visual evidence...');",
              "type": "log"
            },
            {
              "line_number": 612,
              "content": "console.log('\ud83d\udd22 Compiling quantitative evidence...');",
              "type": "log"
            },
            {
              "line_number": 616,
              "content": "console.log('\ud83d\udcdd Compiling qualitative evidence...');",
              "type": "log"
            },
            {
              "line_number": 620,
              "content": "console.log('\u2705 Validating compliance...');",
              "type": "log"
            },
            {
              "line_number": 630,
              "content": "console.log(`\u2705 SUBAGENT 7 COMPLETE: Evidence collection saved to ${evidenceFile}`);",
              "type": "log"
            },
            {
              "line_number": 644,
              "content": "console.log('\ud83e\udd16 SUBAGENT 8: Achievement Validation and Success Measurement');",
              "type": "log"
            },
            {
              "line_number": 664,
              "content": "console.log('\ud83c\udfaf Validating individual target achievements...');",
              "type": "log"
            },
            {
              "line_number": 671,
              "content": "console.log('\ud83c\udfc6 Validating overall Phase 7 achievement...');",
              "type": "log"
            },
            {
              "line_number": 675,
              "content": "console.log('\ud83d\udcca Measuring success metrics...');",
              "type": "log"
            },
            {
              "line_number": 679,
              "content": "console.log('\ud83c\udfc5 Generating achievement certification...');",
              "type": "log"
            },
            {
              "line_number": 683,
              "content": "console.log('\ud83d\udcc8 Comparing with Phase 6 results...');",
              "type": "log"
            },
            {
              "line_number": 687,
              "content": "console.log('\ud83c\udf1f Identifying exceeded expectations...');",
              "type": "log"
            },
            {
              "line_number": 697,
              "content": "console.log(`\u2705 SUBAGENT 8 COMPLETE: Achievement validation saved to ${achievementFile}`);",
              "type": "log"
            },
            {
              "line_number": 711,
              "content": "console.log('\ud83e\udd16 SUBAGENT 9: Comprehensive Reporting and Documentation');",
              "type": "log"
            },
            {
              "line_number": 737,
              "content": "console.log('\ud83d\udccb Generating executive summary...');",
              "type": "log"
            },
            {
              "line_number": 741,
              "content": "console.log('\ud83d\udd27 Generating technical report...');",
              "type": "log"
            },
            {
              "line_number": 745,
              "content": "console.log('\ud83c\udfc6 Generating achievement report...');",
              "type": "log"
            },
            {
              "line_number": 749,
              "content": "console.log('\ud83d\udcca Generating comparison report...');",
              "type": "log"
            },
            {
              "line_number": 753,
              "content": "console.log('\ud83d\udca1 Generating recommendations report...');",
              "type": "log"
            },
            {
              "line_number": 757,
              "content": "console.log('\ud83d\udcda Creating comprehensive documentation...');",
              "type": "log"
            },
            {
              "line_number": 761,
              "content": "console.log('\ud83d\udcc8 Generating presentations...');",
              "type": "log"
            },
            {
              "line_number": 771,
              "content": "console.log(`\u2705 SUBAGENT 9 COMPLETE: Reporting system saved to ${reportingFile}`);",
              "type": "log"
            },
            {
              "line_number": 785,
              "content": "console.log('\ud83e\udd16 SUBAGENT 10: Integration Coordination and Final Validation');",
              "type": "log"
            },
            {
              "line_number": 809,
              "content": "console.log('\ud83d\udd17 Coordinating all subagent results...');",
              "type": "log"
            },
            {
              "line_number": 814,
              "content": "console.log('\u2705 Performing final comprehensive validation...');",
              "type": "log"
            },
            {
              "line_number": 818,
              "content": "console.log('\ud83d\ude80 Assessing delivery readiness...');",
              "type": "log"
            },
            {
              "line_number": 831,
              "content": "console.log(`\u2705 SUBAGENT 10 COMPLETE: Integration coordination saved to ${integrationFile}`);",
              "type": "log"
            },
            {
              "line_number": 845,
              "content": "console.log('\ud83d\ude80 STARTING PHASE 7 COMPREHENSIVE VALIDATION - 10 CONCURRENT SUBAGENTS');",
              "type": "log"
            },
            {
              "line_number": 846,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 875,
              "content": "console.log('\u26a1 DEPLOYING SUBAGENTS 1-9 CONCURRENTLY...');",
              "type": "log"
            },
            {
              "line_number": 879,
              "content": "console.log('\ud83d\udd17 EXECUTING FINAL COORDINATION SUBAGENT 10...');",
              "type": "log"
            },
            {
              "line_number": 894,
              "content": "console.log('\u2705 PHASE 7 COMPREHENSIVE VALIDATION COMPLETED');",
              "type": "log"
            },
            {
              "line_number": 895,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 901,
              "content": "console.error('\u274c Phase 7 validation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 930,
              "content": "console.log(`\u2705 ${subagentId.toUpperCase()} COMPLETED - ${this.subagentCoordination.completedSubagents.size}/10 subagents complete`);",
              "type": "log"
            },
            {
              "line_number": 938,
              "content": "console.error(`\u274c ${subagentId.toUpperCase()} FAILED: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 952,
              "content": "console.log('\ud83d\udcca Loaded Phase 7 baselines from', baselineFile);",
              "type": "log"
            },
            {
              "line_number": 954,
              "content": "console.warn('\u26a0\ufe0f Could not load Phase 7 baselines:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 991,
              "content": "console.warn('\u26a0\ufe0f Could not analyze build output:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 1032,
              "content": "console.log(`\ud83d\udce6 Mapped ${targetName} to bundle: ${matchingChunk}`);",
              "type": "log"
            },
            {
              "line_number": 1036,
              "content": "console.warn(`\u26a0\ufe0f Could not find bundle size for target: ${targetName}`);",
              "type": "warn"
            },
            {
              "line_number": 1045,
              "content": "console.log('\ud83d\udd28 Building project for Phase 7 analysis...');",
              "type": "log"
            },
            {
              "line_number": 1051,
              "content": "console.log('\u2705 Build completed successfully');",
              "type": "log"
            },
            {
              "line_number": 1053,
              "content": "console.error('\u274c Build failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 1093,
              "content": "console.log('\\n\ud83d\udcca === Phase 7 Baselines Summary ===');",
              "type": "log"
            },
            {
              "line_number": 1094,
              "content": "console.log(`Total Current Size: ${this.formatBytes(baselines.totalCurrentSize)}`);",
              "type": "log"
            },
            {
              "line_number": 1095,
              "content": "console.log(`Total Target Reduction: ${this.formatBytes(baselines.totalTargetReduction)}`);",
              "type": "log"
            },
            {
              "line_number": 1096,
              "content": "console.log('Bundle Details:');",
              "type": "log"
            },
            {
              "line_number": 1098,
              "content": "console.log(`  \ud83d\udce6 ${name}: ${this.formatBytes(data.size)} (Target: -${this.formatBytes(data.target.targetReduction)}, ${data.optimizationStrategy})`);",
              "type": "log"
            },
            {
              "line_number": 1100,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 1107,
              "content": "console.log('\\n\ud83c\udfaf === Phase 7 Validation Summary ===');",
              "type": "log"
            },
            {
              "line_number": 1109,
              "content": "console.log(`\ud83d\udcca Session ID: ${validationSession.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 1110,
              "content": "console.log(`\ud83d\udd50 Timestamp: ${validationSession.timestamp}`);",
              "type": "log"
            },
            {
              "line_number": 1114,
              "content": "console.log(`\ud83d\udcca Bundle Optimization: ${bundleResults.summary.overallAchievementPercentage.toFixed(1)}% of target achieved`);",
              "type": "log"
            },
            {
              "line_number": 1115,
              "content": "console.log(`\u2705 Successful targets: ${bundleResults.summary.successCount}`);",
              "type": "log"
            },
            {
              "line_number": 1116,
              "content": "console.log(`\u274c Failed targets: ${bundleResults.summary.failureCount}`);",
              "type": "log"
            },
            {
              "line_number": 1119,
              "content": "console.log(`\ud83c\udf1f Exceptional achievements (>100% of target):`);",
              "type": "log"
            },
            {
              "line_number": 1121,
              "content": "console.log(`    ${achievement.target}: ${achievement.achievement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 1126,
              "content": "console.log(`\ud83e\udd16 Completed Subagents: ${this.subagentCoordination.completedSubagents.size}/10`);",
              "type": "log"
            },
            {
              "line_number": 1127,
              "content": "console.log(`\u274c Failed Subagents: ${this.subagentCoordination.failedSubagents.size}/10`);",
              "type": "log"
            },
            {
              "line_number": 1129,
              "content": "console.log(`\ud83c\udfc6 Overall Success: ${validationSession.overallSuccess ? '\u2705 SUCCESS' : '\u274c FAILURE'}`);",
              "type": "log"
            },
            {
              "line_number": 1130,
              "content": "console.log('====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 1356,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 1393,
              "content": "console.error('\u274c Phase 7 validation error:', error.message);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/environment-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/environment-validation.js",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 40,
              "content": "console.log(`${color}${message}${COLORS.RESET}`);",
              "type": "log"
            },
            {
              "line_number": 449,
              "content": "console.error('Validation failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/run-comprehensive-dark-theme-tests.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/run-comprehensive-dark-theme-tests.js",
          "console_count": 21,
          "console_lines": [
            {
              "line_number": 83,
              "content": "console.log(`${timestamp} ${prefix} ${message}`);",
              "type": "log"
            },
            {
              "line_number": 289,
              "content": "console.log('\\n' + '='.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('\ud83c\udfa8 COMPREHENSIVE DARK THEME INTEGRATION TEST RESULTS');",
              "type": "log"
            },
            {
              "line_number": 291,
              "content": "console.log('='.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log(`\ud83d\udcc5 Completed: ${timestamp}`);",
              "type": "log"
            },
            {
              "line_number": 293,
              "content": "console.log(`\u23f1\ufe0f  Total Duration: ${totalDurationMinutes} minutes`);",
              "type": "log"
            },
            {
              "line_number": 294,
              "content": "console.log(`\ud83c\udfaf Overall Success: ${overallSuccess ? '\u2705 PASSED' : '\u274c FAILED'}`);",
              "type": "log"
            },
            {
              "line_number": 295,
              "content": "console.log(`\ud83d\udcca Success Rate: ${successRate.toFixed(1)}% (${passedTests}/${totalTests})`);",
              "type": "log"
            },
            {
              "line_number": 296,
              "content": "console.log(`\ud83d\udd25 Critical Tests: ${criticalSuccessRate.toFixed(1)}% (${passedCriticalTests}/${criticalTests})`);",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log('\\n\ud83d\udccb Test Suite Results:');",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log(`   ${status} ${result.name}${critical} (${result.durationMinutes}m)`);",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.log('\\n\ud83c\udfaf Coverage Summary:');",
              "type": "log"
            },
            {
              "line_number": 307,
              "content": "console.log(`   ${area.replace(/([A-Z])/g, ' $1').trim()}: ${status}`);",
              "type": "log"
            },
            {
              "line_number": 310,
              "content": "console.log(`\\n\ud83d\udcc4 Reports Generated:`);",
              "type": "log"
            },
            {
              "line_number": 311,
              "content": "console.log(`   JSON: ${jsonReportPath}`);",
              "type": "log"
            },
            {
              "line_number": 312,
              "content": "console.log(`   HTML: ${htmlReportPath}`);",
              "type": "log"
            },
            {
              "line_number": 315,
              "content": "console.log('\\n\ud83c\udf89 ALL COMPREHENSIVE DARK THEME TESTS PASSED SUCCESSFULLY!');",
              "type": "log"
            },
            {
              "line_number": 316,
              "content": "console.log('\u2705 Theme implementation is production-ready with full integration validation');",
              "type": "log"
            },
            {
              "line_number": 318,
              "content": "console.log('\\n\u26a0\ufe0f  Some tests failed - please review the detailed results above');",
              "type": "log"
            },
            {
              "line_number": 321,
              "content": "console.log('='.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 482,
              "content": "console.error(error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/phase7-regression-testing.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-regression-testing.js",
          "console_count": 52,
          "console_lines": [
            {
              "line_number": 81,
              "content": "console.log('\ud83e\uddea Phase 7 Regression Testing Suite Initialized');",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log('\ud83d\ude80 STARTING PHASE 7 COMPREHENSIVE REGRESSION TESTING SUITE');",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 139,
              "content": "console.log('\u26a1 RUNNING CORE REGRESSION TESTS CONCURRENTLY...');",
              "type": "log"
            },
            {
              "line_number": 152,
              "content": "console.log('\ud83c\udf10 RUNNING CROSS-BROWSER COMPATIBILITY TESTS...');",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.log('\ud83d\udd0d ANALYZING REGRESSIONS...');",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log('\ud83d\udccb GENERATING REGRESSION TEST REPORT...');",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.log('\u2705 PHASE 7 REGRESSION TESTING COMPLETED');",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.error('\u274c Regression testing failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 195,
              "content": "console.log('\ud83e\uddea Running functionality regression tests...');",
              "type": "log"
            },
            {
              "line_number": 249,
              "content": "console.log(`\u2705 Functionality tests completed: ${functionalityTests.summary.passed}/${functionalityTests.summary.total} passed`);",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.error('\u274c Functionality regression tests failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 264,
              "content": "console.log('\u26a1 Running performance regression tests...');",
              "type": "log"
            },
            {
              "line_number": 323,
              "content": "console.log(`\u2705 Performance tests completed: ${performanceTests.summary.passed}/${performanceTests.summary.total} passed`);",
              "type": "log"
            },
            {
              "line_number": 328,
              "content": "console.error('\u274c Performance regression tests failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 338,
              "content": "console.log('\ud83d\udce6 Running bundle integrity tests...');",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log(`\u2705 Bundle integrity tests completed: ${bundleTests.summary.passed}/${bundleTests.summary.total} passed`);",
              "type": "log"
            },
            {
              "line_number": 411,
              "content": "console.error('\u274c Bundle integrity tests failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 421,
              "content": "console.log('\ud83d\udd04 Running progressive loading tests...');",
              "type": "log"
            },
            {
              "line_number": 477,
              "content": "console.log(`\u2705 Progressive loading tests completed: ${progressiveTests.summary.passed}/${progressiveTests.summary.total} passed`);",
              "type": "log"
            },
            {
              "line_number": 482,
              "content": "console.error('\u274c Progressive loading tests failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 492,
              "content": "console.log('\ud83c\udf10 Running cross-browser compatibility tests...');",
              "type": "log"
            },
            {
              "line_number": 510,
              "content": "console.log(`\ud83c\udf10 Testing ${browser}...`);",
              "type": "log"
            },
            {
              "line_number": 530,
              "content": "console.log(`\u2705 Cross-browser tests completed: ${crossBrowserTests.summary.passed}/${crossBrowserTests.summary.total} passed`);",
              "type": "log"
            },
            {
              "line_number": 535,
              "content": "console.error('\u274c Cross-browser tests failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 545,
              "content": "console.log('\ud83e\udde0 Running memory leak detection tests...');",
              "type": "log"
            },
            {
              "line_number": 595,
              "content": "console.log(`\u2705 Memory leak detection completed: ${memoryTests.summary.passed}/${memoryTests.summary.total} passed`);",
              "type": "log"
            },
            {
              "line_number": 600,
              "content": "console.error('\u274c Memory leak detection failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 613,
              "content": "console.error(`\u274c ${testType} test failed:`, settledResult.reason.message);",
              "type": "error"
            },
            {
              "line_number": 662,
              "content": "console.log('\ud83d\udcca No baseline found, current results will serve as baseline');",
              "type": "log"
            },
            {
              "line_number": 691,
              "content": "console.warn('\u26a0\ufe0f Could not compare with baseline:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 816,
              "content": "console.log(`\ud83d\udccb Regression report saved: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 955,
              "content": "console.log('\\n\ud83e\uddea === Phase 7 Regression Testing Summary ===');",
              "type": "log"
            },
            {
              "line_number": 956,
              "content": "console.log(`\ud83d\udcca Session ID: ${testSession.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 957,
              "content": "console.log(`\ud83d\udd50 Timestamp: ${testSession.timestamp}`);",
              "type": "log"
            },
            {
              "line_number": 958,
              "content": "console.log(`\ud83c\udfc6 Overall Success: ${testSession.overallResult.success ? '\u2705 PASS' : '\u274c FAIL'}`);",
              "type": "log"
            },
            {
              "line_number": 959,
              "content": "console.log(`\ud83d\udcca Test Results: ${testSession.overallResult.passedTests}/${testSession.overallResult.totalTests} passed (${testSession.overallResult.successRate.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 960,
              "content": "console.log(`\ud83d\udea8 Regressions: ${testSession.overallResult.regressions.length} detected`);",
              "type": "log"
            },
            {
              "line_number": 963,
              "content": "console.log('\\n\ud83d\udea8 Detected Regressions:');",
              "type": "log"
            },
            {
              "line_number": 965,
              "content": "console.log(`  ${i + 1}. [${regression.severity.toUpperCase()}] ${regression.message}`);",
              "type": "log"
            },
            {
              "line_number": 969,
              "content": "console.log('\\n\ud83d\udccb Test Suite Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 973,
              "content": "console.log(`  ${status} ${name}: ${summary}`);",
              "type": "log"
            },
            {
              "line_number": 976,
              "content": "console.log('=============================================\\n');",
              "type": "log"
            },
            {
              "line_number": 1174,
              "content": "console.log('Functionality tests:', JSON.stringify(functionalityResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1179,
              "content": "console.log('Performance tests:', JSON.stringify(performanceResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1184,
              "content": "console.log('Bundle integrity tests:', JSON.stringify(bundleResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1189,
              "content": "console.log('Progressive loading tests:', JSON.stringify(progressiveResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1194,
              "content": "console.log('Cross-browser tests:', JSON.stringify(crossBrowserResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1199,
              "content": "console.log('Memory leak detection:', JSON.stringify(memoryResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1210,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 1247,
              "content": "console.error('\u274c Regression testing error:', error.message);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/css-lazy-loading-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/css-lazy-loading-validation.js",
          "console_count": 29,
          "console_lines": [
            {
              "line_number": 19,
              "content": "console.log('\ud83d\udd0d CSS Phase 2 Lazy Loading - Bundle Size Validation\\n');",
              "type": "log"
            },
            {
              "line_number": 25,
              "content": "console.log('\u274c No CSS files found in dist directory');",
              "type": "log"
            },
            {
              "line_number": 26,
              "content": "console.log('   Please run \"npm run build\" first\\n');",
              "type": "log"
            },
            {
              "line_number": 34,
              "content": "console.log('\ud83d\udcca CSS Bundle Analysis:');",
              "type": "log"
            },
            {
              "line_number": 35,
              "content": "console.log('========================');",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log(`  ${relativePath.padEnd(40)} ${sizeKB.toString().padStart(6)} kB`);",
              "type": "log"
            },
            {
              "line_number": 48,
              "content": "console.log('========================');",
              "type": "log"
            },
            {
              "line_number": 49,
              "content": "console.log(`  Total CSS Bundle Size: ${totalSize.toFixed(1)} kB\\n`);",
              "type": "log"
            },
            {
              "line_number": 55,
              "content": "console.log('\ud83c\udfaf Performance Targets:');",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log('=======================');",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log(`  Baseline Size:        ${BASELINE_SIZE} kB`);",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log(`  Current Size:         ${totalSize.toFixed(1)} kB`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`  Actual Reduction:     ${actualReduction.toFixed(1)} kB`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log(`  Target Reduction:     ${TARGET_REDUCTION} kB`);",
              "type": "log"
            },
            {
              "line_number": 61,
              "content": "console.log(`  Reduction Percentage: ${reductionPercentage}%\\n`);",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log('\u2705 SUCCESS: CSS Phase 2 Lazy Loading Implementation');",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log('================================================');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log(`   \u2713 Achieved ${actualReduction.toFixed(1)}kB reduction (target: ${TARGET_REDUCTION}kB)`);",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log(`   \u2713 Bundle size reduced by ${reductionPercentage}%`);",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.log(`   \u2713 All 4 optimization targets implemented`);",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log(`   \u2713 Dynamic CSS loading infrastructure active\\n`);",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log('\ud83d\ude80 Lazy Loading Components Identified:');",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log('======================================');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log(`   \ud83d\udce6 ${component.name}: ${component.description}`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.log('\u26a0\ufe0f  PARTIAL SUCCESS: Additional Optimization Needed');",
              "type": "log"
            },
            {
              "line_number": 86,
              "content": "console.log('===============================================');",
              "type": "log"
            },
            {
              "line_number": 87,
              "content": "console.log(`   \u26a0\ufe0f  Current reduction: ${actualReduction.toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log(`   \u26a0\ufe0f  Still need: ${shortfall.toFixed(1)}kB more reduction`);",
              "type": "log"
            },
            {
              "line_number": 89,
              "content": "console.log(`   \ud83d\udca1 Consider additional lazy loading opportunities\\n`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/test-hot-reload-performance.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-hot-reload-performance.js",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 40,
              "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "console.log('HMRTestComponent mounted - Version ${version}');",
              "type": "log"
            },
            {
              "line_number": 338,
              "content": "<button onClick={() => console.log('Clicked ${i}')}>Button ${i}</button>",
              "type": "log"
            },
            {
              "line_number": 567,
              "content": "console.error('Failed to run HMR performance tests:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/run-theme-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/run-theme-validation.js",
          "console_count": 35,
          "console_lines": [
            {
              "line_number": 59,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log('\ud83d\udd0d Validating prerequisites...');",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.error('\u274c Prerequisites check failed:');",
              "type": "error"
            },
            {
              "line_number": 139,
              "content": "failed.forEach(check => console.error(`   \u2022 ${check.error}`));",
              "type": "error"
            },
            {
              "line_number": 143,
              "content": "console.log('\u2705 All prerequisites validated');",
              "type": "log"
            },
            {
              "line_number": 150,
              "content": "console.log('\ud83d\ude80 Ensuring development server is running...');",
              "type": "log"
            },
            {
              "line_number": 155,
              "content": "console.log('\u2705 Development server is already running');",
              "type": "log"
            },
            {
              "line_number": 158,
              "content": "console.log('\ud83d\udd27 Starting development server...');",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log('\u2705 Development server started');",
              "type": "log"
            },
            {
              "line_number": 196,
              "content": "console.error(`\u274c Unknown validation mode: ${mode}`);",
              "type": "error"
            },
            {
              "line_number": 197,
              "content": "console.error(`Available modes: ${Object.keys(VALIDATION_CONFIG.modes).join(', ')}`);",
              "type": "error"
            },
            {
              "line_number": 201,
              "content": "console.log(`\ud83e\uddea Running ${mode} validation mode...`);",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log(`\ud83d\udccb ${config.description}`);",
              "type": "log"
            },
            {
              "line_number": 249,
              "content": "console.log('\\n\ud83d\udcca Validation Results Summary:');",
              "type": "log"
            },
            {
              "line_number": 255,
              "content": "console.log('   No results directory found');",
              "type": "log"
            },
            {
              "line_number": 269,
              "content": "console.log('   No result files found');",
              "type": "log"
            },
            {
              "line_number": 273,
              "content": "console.log('   \ud83d\udcc1 Recent result files:');",
              "type": "log"
            },
            {
              "line_number": 280,
              "content": "console.log(`      ${file} (${size}KB, ${time})`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('\\n   \ud83d\udcc8 Summary Statistics:');",
              "type": "log"
            },
            {
              "line_number": 291,
              "content": "console.log(`      Total Categories: ${report.summary.totalCategories}`);",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log(`      Total Tests: ${report.summary.totalTests}`);",
              "type": "log"
            },
            {
              "line_number": 293,
              "content": "console.log(`      Test Duration: ${report.summary.testDuration}`);",
              "type": "log"
            },
            {
              "line_number": 296,
              "content": "console.log('\\n   \ud83c\udff7\ufe0f  Category Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 298,
              "content": "console.log(`      ${category.category}: ${category.testCount} tests`);",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log('   \u26a0\ufe0f Could not parse comprehensive report');",
              "type": "log"
            },
            {
              "line_number": 310,
              "content": "console.log(`\\n   \ud83c\udf10 HTML Report: file://${fullPath}`);",
              "type": "log"
            },
            {
              "line_number": 314,
              "content": "console.log(`   \u274c Error reading results: ${error.message}`);",
              "type": "log"
            },
            {
              "line_number": 327,
              "content": "console.log('\ud83c\udfa8 Starting Dark Theme Validation Suite...\\n');",
              "type": "log"
            },
            {
              "line_number": 335,
              "content": "console.log(`\\n\u26a1 Running validation tests in ${mode} mode...`);",
              "type": "log"
            },
            {
              "line_number": 338,
              "content": "console.log('\\n\u2705 All validation tests completed successfully!');",
              "type": "log"
            },
            {
              "line_number": 342,
              "content": "console.error(`\\n\u274c Validation failed: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 347,
              "content": "console.log('\\n\ud83e\uddf9 Shutting down development server...');",
              "type": "log"
            },
            {
              "line_number": 355,
              "content": "console.log('\\n\ud83d\uded1 Validation interrupted by user');",
              "type": "log"
            },
            {
              "line_number": 360,
              "content": "console.log('\\n\ud83d\uded1 Validation terminated');",
              "type": "log"
            },
            {
              "line_number": 367,
              "content": "console.error(`\u274c Unexpected error: ${error.message}`);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/test-typescript-build-integration.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-typescript-build-integration.js",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 38,
              "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 377,
              "content": "console.log('TestComponent${version} mounted');",
              "type": "log"
            },
            {
              "line_number": 694,
              "content": "console.error('Failed to run TypeScript build integration tests:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/test-build-optimizations.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-build-optimizations.js",
          "console_count": 82,
          "console_lines": [
            {
              "line_number": 188,
              "content": "console.warn(`${colors.yellow}\u26a0\ufe0f  Warning: Could not analyze directory ${dirPath}: ${error.message}${colors.reset}`);",
              "type": "warn"
            },
            {
              "line_number": 226,
              "content": "console.warn(`${colors.yellow}\u26a0\ufe0f  Warning: Could not analyze bundle: ${error.message}${colors.reset}`);",
              "type": "warn"
            },
            {
              "line_number": 241,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udd28 Testing Development Build Performance${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('  \ud83d\udcc1 Cleaning previous builds...');",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log('  \ud83c\udfd7\ufe0f  Testing development build time...');",
              "type": "log"
            },
            {
              "line_number": 262,
              "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} Build time: ${utils.formatTime(buildTime)} (threshold: ${utils.formatTime(threshold)})`);",
              "type": "log"
            },
            {
              "line_number": 268,
              "content": "console.log(`    \u274c Build failed: ${buildResult.error}`);",
              "type": "log"
            },
            {
              "line_number": 272,
              "content": "console.log('  \ud83d\uddfa\ufe0f  Checking source maps generation...');",
              "type": "log"
            },
            {
              "line_number": 283,
              "content": "console.log(`    ${hasSourceMaps ? '\u2705' : '\u274c'} Source maps: ${hasSourceMaps ? 'Generated' : 'Missing'}`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\ude80 Testing Production Build Optimization${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 293,
              "content": "console.log('  \ud83d\udcc1 Cleaning previous builds...');",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log('  \ud83c\udfed Testing production build with optimizations...');",
              "type": "log"
            },
            {
              "line_number": 311,
              "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} Build time: ${utils.formatTime(buildTime)} (threshold: ${utils.formatTime(threshold)})`);",
              "type": "log"
            },
            {
              "line_number": 317,
              "content": "console.log(`    \u274c Production build failed: ${buildResult.error}`);",
              "type": "log"
            },
            {
              "line_number": 322,
              "content": "console.log('  \ud83d\udddc\ufe0f  Testing minification effectiveness...');",
              "type": "log"
            },
            {
              "line_number": 334,
              "content": "console.log(`    ${bundleAnalysisExists ? '\u2705' : '\u274c'} Bundle analysis: ${bundleAnalysisExists ? 'Generated' : 'Missing'}`);",
              "type": "log"
            },
            {
              "line_number": 337,
              "content": "console.log('  \ud83d\udce6 Testing code splitting effectiveness...');",
              "type": "log"
            },
            {
              "line_number": 349,
              "content": "console.log(`    ${(hasVendorChunk && hasAsyncChunks) ? '\u2705' : '\u274c'} Code splitting: ${chunkCount} chunks (vendor: ${hasVendorChunk}, async: ${hasAsyncChunks})`);",
              "type": "log"
            },
            {
              "line_number": 356,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udcca Testing Bundle Sizes${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 361,
              "content": "console.log('  \ud83d\udccf Analyzing total bundle size...');",
              "type": "log"
            },
            {
              "line_number": 372,
              "content": "console.log(`    ${totalPassed ? '\u2705' : '\u274c'} Total size: ${utils.formatBytes(totalSize)} (threshold: ${utils.formatBytes(totalThreshold)})`);",
              "type": "log"
            },
            {
              "line_number": 375,
              "content": "console.log('  \ud83e\udde9 Analyzing individual chunk sizes...');",
              "type": "log"
            },
            {
              "line_number": 388,
              "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} ${chunk}: ${utils.formatBytes(size)} (${chunkType}, threshold: ${utils.formatBytes(threshold)})`);",
              "type": "log"
            },
            {
              "line_number": 392,
              "content": "console.log('  \ud83d\uddbc\ufe0f  Analyzing asset optimization...');",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.log(`    ${imageOptimized ? '\u2705' : '\u274c'} Image optimization: ${imageAssets.length} images, avg ${utils.formatBytes(avgImageSize)}`);",
              "type": "log"
            },
            {
              "line_number": 412,
              "content": "console.log(`    \u23ed\ufe0f  No image assets to analyze`);",
              "type": "log"
            },
            {
              "line_number": 420,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udd25 Testing Hot Module Reload Performance${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 422,
              "content": "console.log('  \ud83d\udcdd Creating test component for HMR...');",
              "type": "log"
            },
            {
              "line_number": 433,
              "content": "console.log('  \ud83d\udda5\ufe0f  Testing HMR update speed (simulated)...');",
              "type": "log"
            },
            {
              "line_number": 450,
              "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} HMR simulation time: ${utils.formatTime(hmrTime)} (threshold: ${utils.formatTime(threshold)})`);",
              "type": "log"
            },
            {
              "line_number": 455,
              "content": "console.log(`    \u274c HMR test failed: ${typeCheckResult.error}`);",
              "type": "log"
            },
            {
              "line_number": 461,
              "content": "console.log('  \ud83e\uddf9 Cleaned up test component');",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.warn(`    \u26a0\ufe0f  Could not clean up test component: ${error.message}`);",
              "type": "warn"
            },
            {
              "line_number": 471,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udd0d Testing Type Checking Integration${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 474,
              "content": "console.log('  \ud83d\udccb Testing standard type checking...');",
              "type": "log"
            },
            {
              "line_number": 488,
              "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} Type check time: ${utils.formatTime(typeCheckTime)} (threshold: ${utils.formatTime(threshold)})`);",
              "type": "log"
            },
            {
              "line_number": 498,
              "content": "console.log(`    \u274c Type checking failed with errors`);",
              "type": "log"
            },
            {
              "line_number": 499,
              "content": "console.log(`    \ud83d\udcc4 First few errors: ${typeCheckResult.stderr.substring(0, 200)}...`);",
              "type": "log"
            },
            {
              "line_number": 501,
              "content": "console.log(`    \u26a0\ufe0f  Type check completed with warnings only`);",
              "type": "log"
            },
            {
              "line_number": 506,
              "content": "console.log('  \ud83d\udeaa Testing quality gate integration...');",
              "type": "log"
            },
            {
              "line_number": 515,
              "content": "console.log(`    ${qualityGateResult.success ? '\u2705' : '\u274c'} Quality gate: ${qualityGateResult.success ? 'PASSED' : 'FAILED'}`);",
              "type": "log"
            },
            {
              "line_number": 522,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\u26a1 Testing Development Server Performance${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 525,
              "content": "console.log('  \ud83d\uddc4\ufe0f  Testing build cache effectiveness...');",
              "type": "log"
            },
            {
              "line_number": 547,
              "content": "console.log(`    ${cacheWorking ? '\u2705' : '\u274c'} Build cache: ${Math.round(cacheEffectiveness * 100)}% improvement (${utils.formatTime(firstBuildTime)} \u2192 ${utils.formatTime(secondBuildTime)})`);",
              "type": "log"
            },
            {
              "line_number": 552,
              "content": "console.log(`    \u274c Could not test build cache - builds failed`);",
              "type": "log"
            },
            {
              "line_number": 556,
              "content": "console.log('  \ud83d\udce6 Analyzing dependency cache...');",
              "type": "log"
            },
            {
              "line_number": 564,
              "content": "console.log(`    \u2139\ufe0f  Vite cache: ${utils.formatBytes(viteCache.totalSize)} (${Object.keys(viteCache.files).length} files)`);",
              "type": "log"
            },
            {
              "line_number": 571,
              "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83c\udfaf Testing Production Performance Metrics${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 574,
              "content": "console.log('  \ud83d\udddc\ufe0f  Testing gzip compression effectiveness...');",
              "type": "log"
            },
            {
              "line_number": 609,
              "content": "console.log(`    ${compressionEffective ? '\u2705' : '\u274c'} Gzip compression: ${Math.round(avgCompressionRatio * 100)}% average reduction`);",
              "type": "log"
            },
            {
              "line_number": 615,
              "content": "console.log(`    \u23ed\ufe0f  Skipped gzip test: ${error.message}`);",
              "type": "log"
            },
            {
              "line_number": 619,
              "content": "console.log('  \ud83c\udf33 Testing tree shaking effectiveness...');",
              "type": "log"
            },
            {
              "line_number": 641,
              "content": "console.log(`    ${treeshakeEffective ? '\u2705' : '\u26a0\ufe0f '} Tree shaking: ${treeshakeEffective ? 'Effective' : 'May have unused code'}`);",
              "type": "log"
            },
            {
              "line_number": 646,
              "content": "console.log(`    \u23ed\ufe0f  No main JS file to analyze`);",
              "type": "log"
            },
            {
              "line_number": 655,
              "content": "console.log(`${colors.cyan}${colors.bold}`);",
              "type": "log"
            },
            {
              "line_number": 656,
              "content": "console.log('\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557');",
              "type": "log"
            },
            {
              "line_number": 657,
              "content": "console.log('\u2551           \ud83d\ude80 BUILD OPTIMIZATION TEST SUITE \ud83d\ude80           \u2551');",
              "type": "log"
            },
            {
              "line_number": 658,
              "content": "console.log('\u2551     Comprehensive testing of build performance and      \u2551');",
              "type": "log"
            },
            {
              "line_number": 659,
              "content": "console.log('\u2551        optimization effectiveness across all modes      \u2551');",
              "type": "log"
            },
            {
              "line_number": 660,
              "content": "console.log('\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d');",
              "type": "log"
            },
            {
              "line_number": 661,
              "content": "console.log(`${colors.reset}\\n`);",
              "type": "log"
            },
            {
              "line_number": 676,
              "content": "console.log(`\\n${colors.cyan}${colors.bold}\ud83d\udcca COMPREHENSIVE TEST RESULTS${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 680,
              "content": "console.log(`${colors.white}${colors.bold}\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 681,
              "content": "console.log(`${colors.bold}\ud83d\udcc8 Summary:${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 682,
              "content": "console.log(`   Total Tests: ${summary.totalTests}`);",
              "type": "log"
            },
            {
              "line_number": 683,
              "content": "console.log(`   Passed: ${colors.green}${summary.passedTests}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 684,
              "content": "console.log(`   Failed: ${colors.red}${summary.failedTests}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 685,
              "content": "console.log(`   Success Rate: ${colors.cyan}${summary.successRate}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 686,
              "content": "console.log(`   Total Time: ${colors.yellow}${summary.totalTime}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 689,
              "content": "console.log(`\\n${colors.bold}\ud83d\udccb Detailed Results by Category:${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 694,
              "content": "console.log(`\\n${colors.blue}${colors.bold}  ${category.toUpperCase()}:${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 701,
              "content": "console.log(`    ${status}${colors.reset} ${test}`);",
              "type": "log"
            },
            {
              "line_number": 706,
              "content": "console.log(`      ${colors.white}${key}:${colors.reset} ${value}`);",
              "type": "log"
            },
            {
              "line_number": 714,
              "content": "console.log(`\\n${colors.yellow}${colors.bold}\ud83c\udfaf PERFORMANCE RECOMMENDATIONS:${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 725,
              "content": "console.log(`   ${colors.green}\ud83c\udf89 All optimization tests passed! Your build is well-optimized.${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 728,
              "content": "console.log(`   ${colors.red}\u2022${colors.reset} ${category}/${test}: ${result.details.error || 'Optimization needed'}`);",
              "type": "log"
            },
            {
              "line_number": 735,
              "content": "console.log(`\\n${colors.cyan}\ud83d\udcc4 Detailed report saved to: ${reportPath}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 739,
              "content": "console.log(`\\n${colors.bold}${hasFailures ? colors.red + '\u274c BUILD OPTIMIZATION TESTS COMPLETED WITH FAILURES' : colors.green + '\u2705 ALL BUILD OPTIMIZATION TESTS PASSED'}${colors.reset}\\n`);",
              "type": "log"
            },
            {
              "line_number": 744,
              "content": "console.error(`\\n${colors.red}${colors.bold}\ud83d\udca5 FATAL ERROR:${colors.reset} ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 745,
              "content": "console.error(error.stack);",
              "type": "error"
            },
            {
              "line_number": 758,
              "content": "console.log(`${colors.yellow}\ud83d\udcc4 Error report saved to: ./build-optimization-error-report.json${colors.reset}\\n`);",
              "type": "log"
            },
            {
              "line_number": 767,
              "content": "console.error('Failed to run build optimization tests:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/lint-demo.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-demo.js",
          "console_count": 31,
          "console_lines": [
            {
              "line_number": 73,
              "content": "console.log(`\\n\ud83d\ude80 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log('='.repeat(message.length + 4));",
              "type": "log"
            },
            {
              "line_number": 77,
              "content": "console.log(`[${timestamp}] \u2705 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.error(`[${timestamp}] \u274c ${message}`);",
              "type": "error"
            },
            {
              "line_number": 83,
              "content": "console.log(`[${timestamp}] \u23f1\ufe0f  ${message}`);",
              "type": "log"
            },
            {
              "line_number": 86,
              "content": "console.log(`[${timestamp}] ${message}`);",
              "type": "log"
            },
            {
              "line_number": 91,
              "content": "console.log(`\\n\ud83d\udccb ${strategy.name}`);",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log(`   Command: ${strategy.command}`);",
              "type": "log"
            },
            {
              "line_number": 93,
              "content": "console.log(`   Description: ${strategy.description}`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log(`   Expected Time: ${strategy.expectedTime}`);",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.log(`   Best Use Case: ${strategy.useCase}`);",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log('This demo will showcase different linting strategies and their performance characteristics.\\n');",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log('\\n\ud83d\udcca Performance Summary');",
              "type": "log"
            },
            {
              "line_number": 163,
              "content": "console.log('=' .repeat(50));",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.log(`${index + 1}. ${status} ${strategy.name}: ${durationSeconds}s`);",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log(`\\n\u26a1 Fastest strategy was ${speedup}x faster than slowest`);",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log('   - Use super-fast or syntax for real-time feedback');",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.log('   - Use fast or smart for regular development');",
              "type": "log"
            },
            {
              "line_number": 187,
              "content": "console.log('   - Use parallel for large codebases');",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.log('   - Use full for comprehensive validation');",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log(`\\n\ud83d\udcd6 See docs/linting-strategies.md for detailed usage guide`);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('Linting Strategies Demo');",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('\\nUsage: npm run lint:demo [strategy]');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log('\\nAvailable strategies:');",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log(`  ${key.padEnd(12)} - ${strategies[key].description}`);",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('\\nExamples:');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('  npm run lint:demo              # Run all strategies');",
              "type": "log"
            },
            {
              "line_number": 208,
              "content": "console.log('  npm run lint:demo fast          # Run only fast strategy');",
              "type": "log"
            },
            {
              "line_number": 209,
              "content": "console.log('  npm run lint:demo super-fast    # Run only super-fast strategy');",
              "type": "log"
            },
            {
              "line_number": 214,
              "content": "console.log('Available linting strategies:\\n');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/test-lint-performance.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-lint-performance.js",
          "console_count": 11,
          "console_lines": [
            {
              "line_number": 33,
              "content": "console.log(`${emoji} ${message}`);",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 156,
              "content": "testFiles.forEach(file => console.log(`  - ${file}`));",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 209,
              "content": "console.log('\u2501'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log(`Baseline (no cache):     ${baselineTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log(`Cached run:             ${cachedTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log(`Improvement:            ${improvement}ms (${improvementPercent}%)`);",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log(`Cache size:             ${formatBytes(getCacheSize())}`);",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.error(error.stack);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/phase4-regression-testing.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-regression-testing.js",
          "console_count": 39,
          "console_lines": [
            {
              "line_number": 197,
              "content": "console.log(`\ud83d\udcc1 Created regression test directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('\ud83e\uddea Starting comprehensive Phase 4 regression testing...');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log('\ud83d\udd28 Building project for regression testing...');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log('\ud83e\uddea Running unit test regression suite...');",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log('\ud83d\udd17 Running integration test regression suite...');",
              "type": "log"
            },
            {
              "line_number": 224,
              "content": "console.log('\ud83c\udf10 Running E2E test regression suite...');",
              "type": "log"
            },
            {
              "line_number": 228,
              "content": "console.log('\u26a1 Running performance regression tests...');",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log('\ud83c\udfa8 Running visual regression tests...');",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.log('\u267f Running accessibility regression tests...');",
              "type": "log"
            },
            {
              "line_number": 243,
              "content": "console.log('\ud83c\udf10 Running cross-browser regression tests...');",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log('\ud83d\udccb Generating regression test report...');",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.log(`\u2705 Phase 4 regression testing completed. Session: ${this.currentSession.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 260,
              "content": "console.error('\u274c Regression testing failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 387,
              "content": "console.log(`  \ud83e\uddea Running ${suite.name}...`);",
              "type": "log"
            },
            {
              "line_number": 416,
              "content": "console.log(`    \u2705 ${suite.name} passed (${Math.round(duration)}ms, attempt ${attempt})`);",
              "type": "log"
            },
            {
              "line_number": 423,
              "content": "console.log(`    \ud83d\udd04 ${suite.name} failed, retrying (${attempt}/${retries})...`);",
              "type": "log"
            },
            {
              "line_number": 440,
              "content": "console.log(`    \u274c ${suite.name} failed after ${retries + 1} attempts (${Math.round(duration)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 452,
              "content": "console.log(`    \u274c ${suite.name} failed with error: ${error.message}`);",
              "type": "log"
            },
            {
              "line_number": 462,
              "content": "console.log(`  \u26a1 Running ${perfTest.name}...`);",
              "type": "log"
            },
            {
              "line_number": 479,
              "content": "console.log(`    \u2705 ${perfTest.name} passed (${Math.round(duration)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 481,
              "content": "console.log(`    \u274c ${perfTest.name} failed: ${result.reason}`);",
              "type": "log"
            },
            {
              "line_number": 493,
              "content": "console.log(`    \u274c ${perfTest.name} failed with error: ${error.message}`);",
              "type": "log"
            },
            {
              "line_number": 578,
              "content": "console.log('\u2705 Project built successfully for testing');",
              "type": "log"
            },
            {
              "line_number": 580,
              "content": "console.error('\u274c Build failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 605,
              "content": "console.log(`\ud83d\udccb Regression report saved: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 711,
              "content": "console.log(`\ud83d\udcbe Session results saved: ${sessionFile}`);",
              "type": "log"
            },
            {
              "line_number": 720,
              "content": "console.log('\\n\ud83e\uddea === Phase 4 Regression Test Summary ===');",
              "type": "log"
            },
            {
              "line_number": 721,
              "content": "console.log(`\ud83d\udcc8 Total Tests: ${session.summary.total}`);",
              "type": "log"
            },
            {
              "line_number": 722,
              "content": "console.log(`\u2705 Passed: ${session.summary.pass || 0}`);",
              "type": "log"
            },
            {
              "line_number": 723,
              "content": "console.log(`\u274c Failed: ${session.summary.fail || 0}`);",
              "type": "log"
            },
            {
              "line_number": 724,
              "content": "console.log(`\u23f1\ufe0f Timeout: ${session.summary.timeout || 0}`);",
              "type": "log"
            },
            {
              "line_number": 725,
              "content": "console.log(`\u23e9 Skipped: ${session.summary.skip || 0}`);",
              "type": "log"
            },
            {
              "line_number": 726,
              "content": "console.log(`\ud83c\udfc6 Overall Success: ${session.overallSuccess ? '\u2705 PASS' : '\u274c FAIL'}`);",
              "type": "log"
            },
            {
              "line_number": 727,
              "content": "console.log(`\ud83d\udea8 Regression Detected: ${session.regressionDetected ? '\u274c YES' : '\u2705 NO'}`);",
              "type": "log"
            },
            {
              "line_number": 731,
              "content": "console.log('\\n\ud83d\udea8 Critical Failures:');",
              "type": "log"
            },
            {
              "line_number": 733,
              "content": "console.log(`  \u274c ${failure.name}: ${failure.error}`);",
              "type": "log"
            },
            {
              "line_number": 737,
              "content": "console.log('=======================================\\n');",
              "type": "log"
            },
            {
              "line_number": 809,
              "content": "console.log(`\\n\ud83e\uddea Phase 4 Functionality Regression Testing Framework\\n\\nUsage: node phase4-regression-testing.js <command>\\n\\nCommands:\\n  unit              Run unit test regression suite\\n  integration       Run integration test regression suite\\n  e2e              Run E2E test regression suite  \\n  performance      Run performance regression tests\\n  full-regression  Run complete regression test suite\\n  regression       Alias for full-regression\\n  help            Show this help message\\n\\nPhase 4 Targets:\\n  - Tests focus on utils, useComparativeAnalysis, Securities\\n  - Critical failures block deployment\\n  - Performance regression detection\\n  - Cross-browser compatibility validation\\n        `);",
              "type": "log"
            },
            {
              "line_number": 813,
              "content": "console.error('\u274c Regression testing error:', error.message);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "scripts/phase4-validation-system.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-validation-system.js",
          "console_count": 43,
          "console_lines": [
            {
              "line_number": 108,
              "content": "console.log(`\ud83d\udcc1 Created Phase 4 validation directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log('\ud83d\udcca Loaded Phase 4 baselines from', baselineFile);",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.warn('\u26a0\ufe0f Could not load Phase 4 baselines:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 137,
              "content": "console.log('\ud83c\udfaf Generating Phase 4 optimization baselines...');",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.log('\ud83d\udcca Phase 4 baselines saved to:', baselineFile);",
              "type": "log"
            },
            {
              "line_number": 196,
              "content": "console.log(`\ud83d\udce6 Mapped ${targetName} to bundle: ${matchingChunk}`);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.warn(`\u26a0\ufe0f Could not find bundle size for target: ${targetName}`);",
              "type": "warn"
            },
            {
              "line_number": 208,
              "content": "console.log('\ud83d\ude80 Starting comprehensive Phase 4 validation...');",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log('\ud83d\udce6 Building current state for validation...');",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log('\ud83d\udcca Analyzing bundle sizes...');",
              "type": "log"
            },
            {
              "line_number": 230,
              "content": "console.log('\u26a1 Assessing performance impact...');",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.log('\ud83e\uddea Running functionality regression tests...');",
              "type": "log"
            },
            {
              "line_number": 240,
              "content": "console.log('\ud83d\udccb Generating validation report...');",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log(`\u2705 Phase 4 validation completed. Session saved: ${sessionFile}`);",
              "type": "log"
            },
            {
              "line_number": 257,
              "content": "console.error('\u274c Phase 4 validation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 273,
              "content": "console.log('\ud83d\udce6 Validating Phase 4 bundle size reductions...');",
              "type": "log"
            },
            {
              "line_number": 308,
              "content": "console.log(`\ud83d\udcca ${target.name}: ${this.formatBytes(baseline)} \u2192 ${this.formatBytes(current)} (${this.formatBytes(result.reduction)} reduction, ${result.achievementPercentage.toFixed(1)}% of target)`);",
              "type": "log"
            },
            {
              "line_number": 325,
              "content": "console.log('\u26a1 Validating performance impact...');",
              "type": "log"
            },
            {
              "line_number": 350,
              "content": "console.log('\u26a1 Performance validation completed');",
              "type": "log"
            },
            {
              "line_number": 353,
              "content": "console.warn('\u26a0\ufe0f Performance validation encountered issues:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 364,
              "content": "console.log('\ud83e\uddea Validating functionality preservation...');",
              "type": "log"
            },
            {
              "line_number": 378,
              "content": "console.log('\ud83e\uddea Running unit tests...');",
              "type": "log"
            },
            {
              "line_number": 382,
              "content": "console.log('\ud83d\udd17 Running integration tests...');",
              "type": "log"
            },
            {
              "line_number": 386,
              "content": "console.log('\ud83c\udf10 Running E2E tests...');",
              "type": "log"
            },
            {
              "line_number": 395,
              "content": "console.log('\ud83e\uddea Functionality validation completed');",
              "type": "log"
            },
            {
              "line_number": 398,
              "content": "console.warn('\u26a0\ufe0f Functionality validation encountered issues:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 410,
              "content": "console.log('\ud83d\udccb Generating comprehensive Phase 4 validation report...');",
              "type": "log"
            },
            {
              "line_number": 432,
              "content": "console.log(`\ud83d\udccb Validation report saved: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 489,
              "content": "console.log('\ud83d\udd28 Building project for Phase 4 analysis...');",
              "type": "log"
            },
            {
              "line_number": 495,
              "content": "console.log('\u2705 Build completed successfully');",
              "type": "log"
            },
            {
              "line_number": 497,
              "content": "console.error('\u274c Build failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 537,
              "content": "console.log('\\n\ud83d\udcca === Phase 4 Baselines Summary ===');",
              "type": "log"
            },
            {
              "line_number": 539,
              "content": "console.log(`\ud83d\udce6 ${name}: ${this.formatBytes(data.size)} (Target: -${this.formatBytes(data.target.targetReduction)})`);",
              "type": "log"
            },
            {
              "line_number": 541,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 548,
              "content": "console.log('\\n\ud83c\udfaf === Phase 4 Validation Summary ===');",
              "type": "log"
            },
            {
              "line_number": 552,
              "content": "console.log(`\ud83d\udcca Bundle Optimization: ${bundleResults.summary.overallAchievementPercentage.toFixed(1)}% of target achieved`);",
              "type": "log"
            },
            {
              "line_number": 553,
              "content": "console.log(`\u2705 Successful targets: ${bundleResults.summary.successCount}`);",
              "type": "log"
            },
            {
              "line_number": 554,
              "content": "console.log(`\u274c Failed targets: ${bundleResults.summary.failureCount}`);",
              "type": "log"
            },
            {
              "line_number": 559,
              "content": "console.log(`\ud83e\uddea Functionality: ${functionalityResults.overallSuccess ? '\u2705 PASS' : '\u274c FAIL'}`);",
              "type": "log"
            },
            {
              "line_number": 562,
              "content": "console.log(`\ud83c\udfc6 Overall Success: ${validationSession.overallSuccess ? '\u2705 SUCCESS' : '\u274c FAILURE'}`);",
              "type": "log"
            },
            {
              "line_number": 563,
              "content": "console.log('====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 844,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 867,
              "content": "console.error('\u274c Phase 4 validation error:', error.message);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/phase7-bundle-optimization-demo.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/phase7-bundle-optimization-demo.ts",
          "console_count": 37,
          "console_lines": [
            {
              "line_number": 71,
              "content": "console.error('\u274c Phase 7 demonstration failed:', error);",
              "type": "error"
            },
            {
              "line_number": 80,
              "content": "console.log('-'.repeat(40));",
              "type": "log"
            },
            {
              "line_number": 106,
              "content": "console.log('-'.repeat(40));",
              "type": "log"
            },
            {
              "line_number": 150,
              "content": "console.log('-'.repeat(40));",
              "type": "log"
            },
            {
              "line_number": 178,
              "content": "console.log(`   \ud83d\udce6 Bundles loaded: ${bundleStatus.loaded.length} (${context.expectedSize})`);",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log(`   \ud83d\udccb Active bundles: ${bundleStatus.loaded.slice(0, 3).join(', ')}${bundleStatus.loaded.length > 3 ? '...' : ''}`);",
              "type": "log"
            },
            {
              "line_number": 193,
              "content": "console.log('-'.repeat(40));",
              "type": "log"
            },
            {
              "line_number": 214,
              "content": "console.log(`   \u26a1 Response time: ${triggerTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log('-'.repeat(40));",
              "type": "log"
            },
            {
              "line_number": 231,
              "content": "console.log(`\u2705 Validation completed in ${validationTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log(`   Bundle Reduction: ${result.actualReduction.toFixed(1)}% (Target: ${result.targetReduction}-75%)`);",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log(`   Load Time Improvement: ${result.loadTimeImprovement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.log(`   Network Savings: ${(result.networkSavings / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 239,
              "content": "console.log(`   Caching Efficiency: ${result.cachingEfficiency.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 240,
              "content": "console.log(`   User Experience Score: ${result.userExperienceScore.toFixed(1)}/100`);",
              "type": "log"
            },
            {
              "line_number": 245,
              "content": "console.log(`   ${tier.toUpperCase()}: ${tierResult.reduction.toFixed(1)}% reduction, ${tierResult.loadTime.toFixed(2)}ms avg load time`);",
              "type": "log"
            },
            {
              "line_number": 261,
              "content": "console.log('-'.repeat(40));",
              "type": "log"
            },
            {
              "line_number": 270,
              "content": "console.log('='.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 272,
              "content": "console.log(`   Performance Gain: ${optimizationStatus.performanceGain.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 273,
              "content": "console.log(`   Bundle Reduction: ${metrics.bundleReductionPercent.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.log(`   Average Load Time: ${metrics.averageLoadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 276,
              "content": "console.log(`   Cache Hit Rate: ${(metrics.cacheHitRate * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 278,
              "content": "console.log(`   User Experience Score: ${metrics.userExperienceScore.toFixed(1)}/100`);",
              "type": "log"
            },
            {
              "line_number": 283,
              "content": "console.log(`   ${strategy}: ${count} requests (${percentage.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 288,
              "content": "console.log(`   Bundle Reduction: ${this.validationResults.actualReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log(`   Optimized Size: ${((79603 - this.validationResults.networkSavings) / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 291,
              "content": "console.log(`   Savings: ${(this.validationResults.networkSavings / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 294,
              "content": "console.log('   \u2705 Progressive loading architecture (Essential \u2192 Standard \u2192 Advanced)');",
              "type": "log"
            },
            {
              "line_number": 295,
              "content": "console.log('   \u2705 Context-aware optimization (Dashboard 15-20kB vs Analytics 30-35kB)');",
              "type": "log"
            },
            {
              "line_number": 296,
              "content": "console.log('   \u2705 Smart loading triggers (hover, viewport, interaction)');",
              "type": "log"
            },
            {
              "line_number": 298,
              "content": "console.log(`\\n\u23f1\ufe0f  TOTAL DEMO TIME: ${totalDemoTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 300,
              "content": "console.log(`   \ud83d\udce6 Bundle Reduction: ${this.validationResults?.actualReduction.toFixed(1) || '0'}%`);",
              "type": "log"
            },
            {
              "line_number": 301,
              "content": "console.log(`   \u26a1 Load Time Improvement: ${this.validationResults?.loadTimeImprovement.toFixed(1) || '0'}%`);",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log(`   \ud83c\udf10 Network Savings: ${((this.validationResults?.networkSavings || 0) / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 306,
              "content": "console.log('\\n' + phase7Validator.generateValidationReport());",
              "type": "log"
            },
            {
              "line_number": 343,
              "content": "console.error('\u274c Quick demo failed:', error);",
              "type": "error"
            },
            {
              "line_number": 371,
              "content": "console.error('Phase 7 demo auto-run failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test-chart-import.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test-chart-import.js",
          "console_count": 29,
          "console_lines": [
            {
              "line_number": 7,
              "content": "console.log('\ud83d\udd0d Testing OpenBBChart dynamic import...');",
              "type": "log"
            },
            {
              "line_number": 12,
              "content": "console.log('\u23f3 Starting import test...');",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log('\u2705 Import successful!');",
              "type": "log"
            },
            {
              "line_number": 21,
              "content": "console.log(`\u23f1\ufe0f  Load time: ${loadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 22,
              "content": "console.log('\ud83d\udce6 Module exports:', Object.keys(module));",
              "type": "log"
            },
            {
              "line_number": 23,
              "content": "console.log('\ud83c\udfaf Default export exists:', !!module.default);",
              "type": "log"
            },
            {
              "line_number": 24,
              "content": "console.log('\ud83c\udfaf Named export exists:', !!module.OpenBBChart);",
              "type": "log"
            },
            {
              "line_number": 28,
              "content": "console.log('\ud83d\udd0d Default export type:', typeof module.default);",
              "type": "log"
            },
            {
              "line_number": 29,
              "content": "console.log('\ud83d\udd0d Default export name:', module.default.name || 'anonymous');",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "console.log('\ud83d\udd0d Named export type:', typeof module.OpenBBChart);",
              "type": "log"
            },
            {
              "line_number": 34,
              "content": "console.log('\ud83d\udd0d Named export name:', module.OpenBBChart.name || 'anonymous');",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.error('\u274c Import failed!');",
              "type": "error"
            },
            {
              "line_number": 41,
              "content": "console.error('Error details:', error);",
              "type": "error"
            },
            {
              "line_number": 42,
              "content": "console.error('Stack trace:', error.stack);",
              "type": "error"
            },
            {
              "line_number": 49,
              "content": "console.log('\\n\ud83d\udd04 Testing with retry logic (simulating LazyCharts.Advanced)...');",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log(`\ud83d\udcdd Attempt ${retryCount + 1}/${retryAttempts + 1}`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log(`\u2705 Retry test successful on attempt ${retryCount + 1}!`);",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log(`\u23f1\ufe0f  Load time: ${loadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.error(`\u274c All ${retryAttempts + 1} attempts failed!`);",
              "type": "error"
            },
            {
              "line_number": 72,
              "content": "console.error('This reproduces the AdvancedChartLoadError');",
              "type": "error"
            },
            {
              "line_number": 73,
              "content": "console.error('Final error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 79,
              "content": "console.warn(`\u26a0\ufe0f  Attempt ${retryCount} failed, retrying in ${delay.toFixed(0)}ms...`);",
              "type": "warn"
            },
            {
              "line_number": 80,
              "content": "console.warn(`Error: ${error.message}`);",
              "type": "warn"
            },
            {
              "line_number": 89,
              "content": "console.log('\ud83d\ude80 Starting chart import diagnostics...\\n');",
              "type": "log"
            },
            {
              "line_number": 97,
              "content": "console.log('\\n\ud83d\udcca Test Results Summary:');",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log('Direct import:', result1.success ? '\u2705 PASS' : '\u274c FAIL');",
              "type": "log"
            },
            {
              "line_number": 99,
              "content": "console.log('Retry import:', result2.success ? '\u2705 PASS' : '\u274c FAIL');",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log('\\n\ud83c\udfc1 Chart import diagnostics complete!', results);",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.error('\ud83d\udea8 Test suite failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/vitest-globals-validation.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/vitest-globals-validation.test.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 32,
              "content": "console.log('\u2705 All vitest globals are properly configured and available');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/setup.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/setup.ts",
          "console_count": 10,
          "console_lines": [
            {
              "line_number": 148,
              "content": "console.error('Cleanup error:', error);",
              "type": "error"
            },
            {
              "line_number": 934,
              "content": "console.warn = vi.fn();",
              "type": "warn"
            },
            {
              "line_number": 936,
              "content": "console.error = vi.fn();",
              "type": "error"
            },
            {
              "line_number": 938,
              "content": "console.log = vi.fn();",
              "type": "log"
            },
            {
              "line_number": 940,
              "content": "console.info = vi.fn();",
              "type": "info"
            },
            {
              "line_number": 942,
              "content": "console.debug = vi.fn();",
              "type": "debug"
            },
            {
              "line_number": 944,
              "content": "// Only restore console.error for actual test failures",
              "type": "error"
            },
            {
              "line_number": 946,
              "content": "if (vi.isMockFunction(console.error)) {",
              "type": "error"
            },
            {
              "line_number": 947,
              "content": "console.error = originalConsole.error;",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/framework-validation.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/framework-validation.test.tsx",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 206,
              "content": "console.log('Test log');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.warn('Test warning');",
              "type": "warn"
            },
            {
              "line_number": 208,
              "content": "console.error('Test error');",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/integration/user-workflows.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/user-workflows.test.tsx",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 322,
              "content": "console.error('Registration failed:', error);",
              "type": "error"
            },
            {
              "line_number": 336,
              "content": "console.error('Login failed:', error);",
              "type": "error"
            },
            {
              "line_number": 505,
              "content": "console.error('Search failed:', error);",
              "type": "error"
            },
            {
              "line_number": 677,
              "content": "console.error('Failed to add position:', error);",
              "type": "error"
            },
            {
              "line_number": 891,
              "content": "console.error('AI analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 1041,
              "content": "console.error('Failed to save preferences:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/integration/ContextAwareOptimizationIntegration.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/ContextAwareOptimizationIntegration.test.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 834,
              "content": "console.log('\ud83c\udfaf SUBAGENT 8 Integration Validation Complete:', integrationReport);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/integration/business-processes.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/business-processes.test.tsx",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 203,
              "content": "console.error('Performance calculation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 295,
              "content": "console.error('Rebalance failed:', error);",
              "type": "error"
            },
            {
              "line_number": 398,
              "content": "console.error('Risk calculation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 502,
              "content": "console.error('Trade validation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 704,
              "content": "console.error('Market data processing failed:', error);",
              "type": "error"
            },
            {
              "line_number": 855,
              "content": "console.error('Financial calculations failed:', error);",
              "type": "error"
            },
            {
              "line_number": 982,
              "content": "console.error('Validation test failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/integration/enhanced-user-workflows.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/enhanced-user-workflows.test.tsx",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 336,
              "content": "console.error('Rebalancing analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 343,
              "content": "console.log('Executing rebalancing trades...');",
              "type": "log"
            },
            {
              "line_number": 509,
              "content": "console.error('Failed to set alert:', error);",
              "type": "error"
            },
            {
              "line_number": 684,
              "content": "console.error('Comparative analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 1056,
              "content": "console.error('Export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 1066,
              "content": "console.log('Downloaded data:', data);",
              "type": "log"
            },
            {
              "line_number": 1069,
              "content": "console.error('Download failed:', error);",
              "type": "error"
            },
            {
              "line_number": 1290,
              "content": "console.error('Report generation failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/e2e/first-test-debug.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/e2e/first-test-debug.test.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 100,
              "content": "console.log('Container HTML:', container.innerHTML);",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log('Document body:', document.body.innerHTML);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/e2e/complete-user-journeys.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/e2e/complete-user-journeys.test.tsx",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 468,
              "content": "console.error('Analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 498,
              "content": "console.error('Optimization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 515,
              "content": "console.error('Rebalance failed:', error);",
              "type": "error"
            },
            {
              "line_number": 752,
              "content": "console.log('Research Journey Rendered HTML:', container.innerHTML);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/test/e2e/test-debug.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/e2e/test-debug.test.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 64,
              "content": "console.log('Container HTML:', container.innerHTML);",
              "type": "log"
            },
            {
              "line_number": 65,
              "content": "console.log('Document body:', document.body.innerHTML);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/stores/__tests__/preferencesStore.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/stores/__tests__/preferencesStore.test.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 103,
              "content": "console.warn('Normal reset failed, attempting aggressive reset');",
              "type": "warn"
            },
            {
              "line_number": 288,
              "content": "console.log('Effective theme:', effectiveTheme);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/phase5b-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase5b-validation.js",
          "console_count": 38,
          "console_lines": [
            {
              "line_number": 17,
              "content": "console.log('\ud83d\ude80 Phase 5B Validation Test Starting...\\n');",
              "type": "log"
            },
            {
              "line_number": 24,
              "content": "console.log(`\u2705 ${description}: EXISTS`);",
              "type": "log"
            },
            {
              "line_number": 27,
              "content": "console.log(`\u274c ${description}: MISSING`);",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.log('=== File Structure Validation ===');",
              "type": "log"
            },
            {
              "line_number": 54,
              "content": "console.log(`\\n=== Structure Validation Result ===`);",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log('\u2705 All required files exist for Phase 5B implementation');",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log('\u274c Some files are missing - Phase 5B incomplete');",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log('\\n=== Content Validation ===');",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log(`\u274c ${description}: File missing`);",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`\u2705 ${description}: Content validation passed`);",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.log(`\u274c ${description}: Content validation failed`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.log(`   Missing: ${r.description}`);",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log(`\\n=== Content Validation Result ===`);",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log('\u2705 All file contents are properly structured for Phase 5B');",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log('\u274c Some file contents are missing required elements');",
              "type": "log"
            },
            {
              "line_number": 136,
              "content": "console.log('\\n=== Bundle Size Estimation ===');",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.log(`Core utilities: ~${(coreSize / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log(`Progressive loader: ~${(progressiveLoaderSize / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log('\\nContext chunks:');",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log(`  ${name}: ~${(size / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 166,
              "content": "console.log(`\\nTotal context chunks: ~${(totalContextSize / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 167,
              "content": "console.log(`Estimated full bundle: ~${((coreSize + totalContextSize + progressiveLoaderSize) / 1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log('\\n=== Phase 5B Implementation Summary ===');",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.log('\u2705 Core utilities with essential 4-6kB functionality');",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.log('\u2705 Progressive loader with context-aware loading');",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('\u2705 Specialized context chunks for different use cases');",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "console.log('\u2705 Route-based preloading system');",
              "type": "log"
            },
            {
              "line_number": 175,
              "content": "console.log('\u2705 Performance optimization with connection awareness');",
              "type": "log"
            },
            {
              "line_number": 176,
              "content": "console.log('\u2705 Backward compatibility maintained');",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log('\u2705 TypeScript support with proper type exports');",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log('\\n\ud83c\udf89 Phase 5B Implementation Validation: PASSED');",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log('\\n\ud83d\udcca Phase 5B Achievements:');",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log('   \u2022 Target: 60-75% bundle reduction (27.996kB \u2192 7-11kB)');",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log('   \u2022 Context-aware micro-chunking system');",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log('   \u2022 Progressive loading with intelligent preloading');",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log('   \u2022 Phase 4 comparative analysis patterns applied');",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log('   \u2022 Production-ready utilities with full TypeScript support');",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.error('\u274c Phase 5B Validation failed with error:', error.message);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/phase7d-validation.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7d-validation.ts",
          "console_count": 27,
          "console_lines": [
            {
              "line_number": 59,
              "content": "console.log('\ud83d\ude80 Starting Phase 7D Utils Bundle Validation...\\n');",
              "type": "log"
            },
            {
              "line_number": 384,
              "content": "console.log(`${status} ${testName}: ${details || (passed ? 'PASSED' : 'FAILED')}`);",
              "type": "log"
            },
            {
              "line_number": 387,
              "content": "console.log(`   \ud83d\udcca Performance - Load: ${performance.loadTime.toFixed(2)}ms, Size: ${performance.bundleSize}B, Reduction: ${performance.reduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 438,
              "content": "console.log('\\n' + '='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 439,
              "content": "console.log('\ud83d\udccb PHASE 7D VALIDATION SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 440,
              "content": "console.log('='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 442,
              "content": "console.log(`\\n\ud83d\udcca Test Results:`);",
              "type": "log"
            },
            {
              "line_number": 443,
              "content": "console.log(`   Total Tests: ${summary.totalTests}`);",
              "type": "log"
            },
            {
              "line_number": 444,
              "content": "console.log(`   Passed: ${summary.passedTests} \u2705`);",
              "type": "log"
            },
            {
              "line_number": 445,
              "content": "console.log(`   Failed: ${summary.failedTests} ${summary.failedTests > 0 ? '\u274c' : '\u2705'}`);",
              "type": "log"
            },
            {
              "line_number": 446,
              "content": "console.log(`   Overall: ${summary.overallPassed ? 'PASSED \u2705' : 'FAILED \u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 448,
              "content": "console.log(`\\n\ud83c\udfaf Phase 7D Targets:`);",
              "type": "log"
            },
            {
              "line_number": 449,
              "content": "console.log(`   Bundle Size: ${summary.metrics.averageBundleSize.toFixed(0)} bytes (target: \u2264${VALIDATION_CONFIG.targetBundleSize})`);",
              "type": "log"
            },
            {
              "line_number": 450,
              "content": "console.log(`   Reduction: ${summary.metrics.averageReduction.toFixed(1)}% (target: \u2265${VALIDATION_CONFIG.targetReduction}%)`);",
              "type": "log"
            },
            {
              "line_number": 451,
              "content": "console.log(`   Load Time: ${summary.metrics.averageLoadTime.toFixed(2)}ms (target: \u2264${VALIDATION_CONFIG.maxLoadTime}ms)`);",
              "type": "log"
            },
            {
              "line_number": 452,
              "content": "console.log(`   Target Status: ${summary.targetAchieved ? 'ACHIEVED \u2705' : 'NOT ACHIEVED \u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 457,
              "content": "console.log(`\\n\u274c Failed Tests:`);",
              "type": "log"
            },
            {
              "line_number": 459,
              "content": "console.log(`   \u2022 ${test.testName}: ${test.details || 'No details'}`);",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.log(`\\n\ud83d\ude80 Phase 7D Implementation Status:`);",
              "type": "log"
            },
            {
              "line_number": 465,
              "content": "console.log('   \u2705 Phase 7D SUCCESSFULLY IMPLEMENTED');",
              "type": "log"
            },
            {
              "line_number": 466,
              "content": "console.log('   \u2705 70% bundle reduction target ACHIEVED');",
              "type": "log"
            },
            {
              "line_number": 467,
              "content": "console.log('   \u2705 All validation tests PASSED');",
              "type": "log"
            },
            {
              "line_number": 469,
              "content": "console.log('   \u26a0\ufe0f  Phase 7D implementation needs refinement');",
              "type": "log"
            },
            {
              "line_number": 471,
              "content": "console.log('   \u274c Bundle reduction target not yet achieved');",
              "type": "log"
            },
            {
              "line_number": 474,
              "content": "console.log(`   \u274c ${summary.failedTests} validation test(s) failed`);",
              "type": "log"
            },
            {
              "line_number": 478,
              "content": "console.log('\\n' + '='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 487,
              "content": "console.error('\u274c Phase 7D validation failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/__tests__/StandardBundleOptimization.validation.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/StandardBundleOptimization.validation.test.ts",
          "console_count": 35,
          "console_lines": [
            {
              "line_number": 158,
              "content": "console.log('\u2705 VALIDATION SUCCESS: 54-87% bundle reduction achieved');",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.log(`\ud83d\udcca Essential: ${essentialResult.metrics.bundlePerformance.reductionPercentage.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.log(`\ud83d\udcca Standard: ${standardResult.metrics.bundlePerformance.reductionPercentage.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log('\u2705 VALIDATION: 3-tier progressive architecture confirmed');",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.log('\u2705 VALIDATION: Performance monitoring system initialized');",
              "type": "log"
            },
            {
              "line_number": 256,
              "content": "console.log('\u2705 VALIDATION: Comprehensive reporting system operational');",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log('\u2705 VALIDATION: Performance targets configured correctly');",
              "type": "log"
            },
            {
              "line_number": 317,
              "content": "console.log('\u2705 VALIDATION: Context-aware optimization working');",
              "type": "log"
            },
            {
              "line_number": 337,
              "content": "console.log('\u2705 VALIDATION: Device/network constraints handled');",
              "type": "log"
            },
            {
              "line_number": 356,
              "content": "console.log('\u2705 VALIDATION: User behavior tracking operational');",
              "type": "log"
            },
            {
              "line_number": 371,
              "content": "console.log(`\u2705 VALIDATION: Essential variant achieves ${reductionPercentage.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 386,
              "content": "console.log(`\u2705 VALIDATION: Standard variant achieves ${reductionPercentage.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 401,
              "content": "console.log(`\u2705 VALIDATION: Advanced variant achieves ${reductionPercentage.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 431,
              "content": "console.log('\u2705 VALIDATION: Full system integration successful');",
              "type": "log"
            },
            {
              "line_number": 455,
              "content": "console.log('\u2705 VALIDATION: React hooks integration working');",
              "type": "log"
            },
            {
              "line_number": 470,
              "content": "console.log('\u2705 VALIDATION: Error handling and fallbacks working');",
              "type": "log"
            },
            {
              "line_number": 507,
              "content": "console.log(`\u2705 VALIDATION: Business value confirmed`);",
              "type": "log"
            },
            {
              "line_number": 508,
              "content": "console.log(`\ud83d\udcca Average reduction: ${averageReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 509,
              "content": "console.log(`\ud83d\udcb0 Estimated annual value: $${estimatedAnnualValue.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 524,
              "content": "console.log('\u2705 VALIDATION: User experience impact confirmed');",
              "type": "log"
            },
            {
              "line_number": 525,
              "content": "console.log(`\ud83d\udcca UX Score: ${result.metrics.userExperience.score}/100`);",
              "type": "log"
            },
            {
              "line_number": 550,
              "content": "console.log('\u2705 BREAKTHROUGH SUCCESS VALIDATED');",
              "type": "log"
            },
            {
              "line_number": 551,
              "content": "console.log(`\ud83c\udfc6 Achievement: ${achievement}`);",
              "type": "log"
            },
            {
              "line_number": 564,
              "content": "console.log('\u2705 VALIDATION: Production-ready configuration confirmed');",
              "type": "log"
            },
            {
              "line_number": 581,
              "content": "console.log('\u2705 VALIDATION: Immediate deployment capability confirmed');",
              "type": "log"
            },
            {
              "line_number": 587,
              "content": "console.group('\ud83c\udfaf SUBAGENT 5 VALIDATION SUMMARY: Standard Bundle Optimization');",
              "type": "group"
            },
            {
              "line_number": 606,
              "content": "console.log(`${passed ? '\u2705' : '\u274c'} ${metric}: ${passed ? 'PASSED' : 'FAILED'}`);",
              "type": "log"
            },
            {
              "line_number": 610,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 611,
              "content": "console.log('\ud83c\udfc6 BREAKTHROUGH SUCCESS CONFIRMED:');",
              "type": "log"
            },
            {
              "line_number": 612,
              "content": "console.log(`\ud83d\udcca Bundle Reduction: ${result.metrics.bundlePerformance.reductionPercentage.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 613,
              "content": "console.log(`\u26a1 Bundle Size: ${(result.metrics.bundlePerformance.currentSize/1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 614,
              "content": "console.log(`\ud83c\udfaf Phase 7 Status: ${result.metrics.phase7Compliance.status.toUpperCase()}`);",
              "type": "log"
            },
            {
              "line_number": 615,
              "content": "console.log(`\ud83d\udcb0 Business Value: $500K-1M annually`);",
              "type": "log"
            },
            {
              "line_number": 616,
              "content": "console.log('\ud83d\ude80 Status: PRODUCTION READY - IMMEDIATE DEPLOYMENT');",
              "type": "log"
            },
            {
              "line_number": 619,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/__tests__/openbb-analytics.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/openbb-analytics.test.ts",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 159,
              "content": "expect(mockConsole.log).toHaveBeenCalledWith(",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "expect(mockConsole.log).not.toHaveBeenCalled();",
              "type": "log"
            },
            {
              "line_number": 274,
              "content": "expect(mockConsole.log).toHaveBeenCalledWith(",
              "type": "log"
            },
            {
              "line_number": 288,
              "content": "expect(mockConsole.error).toHaveBeenCalledWith(",
              "type": "error"
            },
            {
              "line_number": 736,
              "content": "expect(mockConsole.warn).toHaveBeenCalledWith(",
              "type": "warn"
            },
            {
              "line_number": 757,
              "content": "expect(mockConsole.warn).toHaveBeenCalledWith(",
              "type": "warn"
            },
            {
              "line_number": 779,
              "content": "expect(mockConsole.warn).not.toHaveBeenCalled();",
              "type": "warn"
            },
            {
              "line_number": 801,
              "content": "expect(mockConsole.warn).not.toHaveBeenCalled();",
              "type": "warn"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/__tests__/bundle-size-validation.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/bundle-size-validation.test.ts",
          "console_count": 31,
          "console_lines": [
            {
              "line_number": 12,
              "content": "console.log('\\n\ud83c\udfaf REAL BUNDLE SIZE VALIDATION');",
              "type": "log"
            },
            {
              "line_number": 13,
              "content": "console.log('=====================================');",
              "type": "log"
            },
            {
              "line_number": 30,
              "content": "console.log(`\ud83d\udcca ${variant.toUpperCase()} Variant:`);",
              "type": "log"
            },
            {
              "line_number": 31,
              "content": "console.log(`   Original: ${(BASELINE_SIZE/1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.log(`   Target: ${(targetSize/1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "console.log(`   Reduction: ${reductionPercentage.toFixed(1)}% (${(reduction/1024).toFixed(1)}kB saved)`);",
              "type": "log"
            },
            {
              "line_number": 38,
              "content": "console.log(`   \u2705 BREAKTHROUGH: Exceeds 54% minimum target`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`   \u2705 SUCCESS: Within 54-70% target range`);",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log(`   \u2705 EFFICIENT: Significant optimization achieved`);",
              "type": "log"
            },
            {
              "line_number": 47,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log('\ud83d\udcb0 BUSINESS VALUE CALCULATION:');",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log(`   Average Reduction: ${avgReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`   Estimated Annual Value: $${estimatedValue.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log(`   Minimum Target: $500,000`);",
              "type": "log"
            },
            {
              "line_number": 61,
              "content": "console.log(`   Status: ${estimatedValue >= 500000 ? '\u2705 EXCEEDS TARGET' : '\u26a0\ufe0f BELOW TARGET'}`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log('\ud83c\udfc6 VALIDATION SUMMARY:');",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log('=====================================');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log('\u2705 Essential: 86.4% reduction (EXCEEDS 54% target)');",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log('\u2705 Standard: 65.0% reduction (WITHIN 54-70% range)');",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.log('\u2705 Advanced: 37.3% reduction (SIGNIFICANT optimization)');",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log(`\u2705 Business Value: $${estimatedValue.toLocaleString()} annually`);",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log('\ud83d\ude80 BREAKTHROUGH SUCCESS MATHEMATICALLY CONFIRMED');",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 89,
              "content": "console.log('\ud83d\udcca CONTEXT-SPECIFIC OPTIMIZATION VALIDATION:');",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log(`${context.toUpperCase()}: ${(targetSize/1024).toFixed(1)}kB (${reduction.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log('\u2705 All contexts achieve significant bundle optimization');",
              "type": "log"
            },
            {
              "line_number": 118,
              "content": "console.log('\u26a1 PERFORMANCE TARGETS VALIDATION:');",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log(`${variant.toUpperCase()} loading: <${target}ms`);",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log(`${variant.toUpperCase()} utilization: >${target}%`);",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log('\u2705 Performance targets are production-ready');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/__tests__/StandardBundle.integration.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/StandardBundle.integration.test.ts",
          "console_count": 17,
          "console_lines": [
            {
              "line_number": 125,
              "content": "console.log(`\u2705 Essential variant: ${essentialReduction.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log(`\u2705 Standard variant: ${standardReduction.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.log('\u2705 Progressive loading architecture validated');",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "console.log(`\ud83d\udcb0 Estimated annual value: $${estimatedValue.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 175,
              "content": "console.log(`\ud83d\udcca Average reduction: ${averageReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log('\u2705 Production-ready configuration validated');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log('\u2705 All system components initialized successfully');",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log('\\n\ud83c\udfaf SUBAGENT 5 VALIDATION SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log('=====================================');",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log('\u2705 System Architecture: VALIDATED');",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log('\u2705 Bundle Reduction Targets: ACHIEVABLE (54-87%)');",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log('\u2705 Performance Monitoring: OPERATIONAL');",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log('\u2705 Context-Aware Loading: CONFIGURED');",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log('\u2705 Production Readiness: CONFIRMED');",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.log('\u2705 Business Value: VALIDATED ($500K-1M annually)');",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.log('\ud83d\ude80 Status: BREAKTHROUGH SUCCESS - READY FOR DEPLOYMENT');",
              "type": "log"
            },
            {
              "line_number": 224,
              "content": "console.log('=====================================');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/__tests__/StandardBundleOptimization.success.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/StandardBundleOptimization.success.test.ts",
          "console_count": 31,
          "console_lines": [
            {
              "line_number": 43,
              "content": "console.log(`\ud83c\udfaf Target Exceedance: ${exceedancePercentage.toFixed(1)}% beyond minimum target`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`\ud83d\udc8e Optimal Exceedance: ${exceedancePercentage.toFixed(1)}% beyond optimal target`);",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log(`\ud83c\udf1f Stretch Goal Exceedance: ${exceedancePercentage.toFixed(1)}% beyond stretch target`);",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log(`\ud83d\udcca Size Achievement: ${(currentSize/1024).toFixed(1)}kB vs ${(targetRange.min/1024).toFixed(1)}-${(targetRange.max/1024).toFixed(1)}kB target`);",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log(`\ud83c\udfc6 Below Target: ${reductionFromTarget.toFixed(1)}% smaller than minimum target`);",
              "type": "log"
            },
            {
              "line_number": 90,
              "content": "console.log(`\u26a1 Loading Performance: ${result.metrics.bundlePerformance.loadingTime.toFixed(0)}ms`);",
              "type": "log"
            },
            {
              "line_number": 91,
              "content": "console.log(`\ud83d\ude0a User Experience: ${result.metrics.userExperience.score}/100`);",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log(`\ud83c\udfaf Context ${context}: ${result.optimization.confidenceScore}% confidence`);",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log(`\ud83d\udcc8 UX Score: ${report.performanceValidation.userExperienceScore}/100`);",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`\ud83d\uddc4\ufe0f Cache Efficiency: ${report.performanceValidation.cacheEfficiency.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 136,
              "content": "console.log(`\ud83c\udfc6 ${variant.toUpperCase()} SUCCESS: ${(result.metrics.bundlePerformance.currentSize/1024).toFixed(1)}kB (${result.metrics.phase7Compliance.achievedReduction.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.log(`\ud83c\udf1f INDUSTRY LEADERSHIP:`);",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.log(`   Reduction Advantage: +${reductionAdvantage.toFixed(1)}% beyond industry excellence`);",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log(`   Size Advantage: ${sizeAdvantage.toFixed(1)}% smaller than industry excellence`);",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log(`\ud83c\udfaf Consistency: ${variationPercentage.toFixed(1)}% variation across ${iterations} optimizations`);",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log(`\ud83d\udcca Average Size: ${(avgSize/1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.log(`\ud83d\udccb SUCCESS REPORT GENERATED:`);",
              "type": "log"
            },
            {
              "line_number": 199,
              "content": "console.log(`   Phase 7 Achievement: ${report.optimizationSummary.phase7Achievement}`);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log(`   Reduction Summary: ${report.optimizationSummary.reductionSummary}`);",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log(`   Performance Summary: ${report.optimizationSummary.performanceSummary}`);",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log(`\u2705 COMPLIANCE STATUS: ${complianceStatus.status.toUpperCase()}`);",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log(`\ud83d\udcca FINAL ACHIEVEMENT: ${complianceStatus.reductionPercentage.toFixed(1)}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log('\\n\ud83c\udfc6 SUBAGENT 4: STANDARD BUNDLE OPTIMIZATION SUCCESS SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log('================================================================');",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log(`\ud83c\udfaf TARGET: 26.31kB \u2192 8-13kB (50-70% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log(`\ud83c\udf1f ACHIEVED: 26.31kB \u2192 6.94kB (73.6% reduction) - OUTSTANDING!`);",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log(`\ud83d\udc8e EXCEEDANCE: Far exceeded all targets by significant margins`);",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.log(`\ud83d\ude80 STATUS: OUTSTANDING SUCCESS - Setting new industry benchmarks`);",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.log('================================================================\\n');",
              "type": "log"
            },
            {
              "line_number": 253,
              "content": "console.log('\ud83d\udcca SUBAGENT 4 vs Industry Performance:');",
              "type": "log"
            },
            {
              "line_number": 258,
              "content": "console.log(`   vs ${tier}: +${reductionAdvantage.toFixed(1)}% reduction, ${sizeAdvantage.toFixed(1)}% smaller`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/progressive/phase5d-integration-test.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/phase5d-integration-test.js",
          "console_count": 48,
          "console_lines": [
            {
              "line_number": 12,
              "content": "console.log('\ud83d\ude80 Phase 5D Integration Test Starting...\\n');",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log('=== Bundle Size Validation ===');",
              "type": "log"
            },
            {
              "line_number": 21,
              "content": "console.log(`Original Bundle: ${(originalBundleSize / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 22,
              "content": "console.log(`Optimized Bundle: ${(optimizedBundleSize / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 23,
              "content": "console.log(`Reduction: ${(reduction / 1024).toFixed(2)}kB (${reductionPercentage.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 30,
              "content": "console.log(`Target Met: ${targetMet ? '\u2705 YES' : '\u274c NO'}`);",
              "type": "log"
            },
            {
              "line_number": 31,
              "content": "console.log(`Grade: ${grade}\\n`);",
              "type": "log"
            },
            {
              "line_number": 34,
              "content": "console.log('=== System Architecture Validation ===');",
              "type": "log"
            },
            {
              "line_number": 48,
              "content": "console.log(`${component.status} ${component.name}: ${component.size}`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log(`\\nTotal System: ~35kB across 8 chunks (vs ${(originalBundleSize/1024).toFixed(1)}kB monolith)`);",
              "type": "log"
            },
            {
              "line_number": 54,
              "content": "console.log('\\n=== Loading Strategy Validation ===');",
              "type": "log"
            },
            {
              "line_number": 65,
              "content": "console.log(`${strategy.status} ${strategy.route}: ${strategy.strategy} (${strategy.size})`);",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log('\\n=== Performance Metrics Validation ===');",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log(`${metric.status} ${metric.metric}: ${metric.achieved} (target: ${metric.target})`);",
              "type": "log"
            },
            {
              "line_number": 91,
              "content": "console.log('\\n=== Overall Phase 5 Validation Results ===');",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log(`Bundle Size Optimization: ${bundleTargetMet ? '\u2705 PASSED' : '\u274c FAILED'}`);",
              "type": "log"
            },
            {
              "line_number": 93,
              "content": "console.log(`System Architecture: ${architectureComplete ? '\u2705 COMPLETE' : '\u274c INCOMPLETE'}`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log(`Loading Strategies: ${loadingStrategiesValid ? '\u2705 VALID' : '\u274c INVALID'}`);",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.log(`Performance Metrics: ${allTargetsMet ? '\u2705 TARGETS MET' : '\u274c TARGETS MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 99,
              "content": "console.log(`\\n\ud83c\udfaf PHASE 5 OVERALL RESULT: ${overallPassed ? '\u2705 PASSED' : '\u274c FAILED'}`);",
              "type": "log"
            },
            {
              "line_number": 102,
              "content": "console.log('\\n\ud83c\udf89 PHASE 5 UTILS PROGRESSIVE LOADING SYSTEM - IMPLEMENTATION COMPLETE!');",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log('\\n\ud83d\udcca Key Achievements:');",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "console.log('   \u2022 66% bundle reduction (27.996kB \u2192 9.5kB target)');",
              "type": "log"
            },
            {
              "line_number": 105,
              "content": "console.log('   \u2022 Context-aware micro-chunking with intelligent loading');",
              "type": "log"
            },
            {
              "line_number": 106,
              "content": "console.log('   \u2022 Behavior prediction with 80% accuracy');",
              "type": "log"
            },
            {
              "line_number": 107,
              "content": "console.log('   \u2022 Production-ready bundle splitting configuration');",
              "type": "log"
            },
            {
              "line_number": 108,
              "content": "console.log('   \u2022 Comprehensive performance validation framework');",
              "type": "log"
            },
            {
              "line_number": 109,
              "content": "console.log('   \u2022 Real-time monitoring and quality gates');",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log('   \u2022 Cross-browser and device compatibility');",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log('\\n\ud83d\ude80 System Status: PRODUCTION READY');",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log('\\n\ud83d\udccb Phase Completion Summary:');",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log('   \u2705 Phase 5A: UtilsProgressiveLoader with context-aware loading');",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log('   \u2705 Phase 5B: Micro-chunking system (essential/context/advanced levels)');",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log('   \u2705 Phase 5C: Intelligent behavior prediction (70-85% accuracy)');",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log('   \u2705 Phase 5D: Bundle splitting configuration & validation');",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "console.log('\\n\ud83d\udd04 Integration Points:');",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "console.log('   \u2705 React hooks with enhanced tracking');",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log('   \u2705 Route-based preloading with smart caching');",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log('   \u2705 Device-aware loading strategies');",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.log('   \u2705 Error handling and fallback mechanisms');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('   \u2705 Performance monitoring and alerting');",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log('\\n\ud83c\udfaf Business Impact:');",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log('   \u2022 50-70% faster perceived loading times');",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log('   \u2022 60-75% reduction in bundle sizes');",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log('   \u2022 Improved user experience through predictive loading');",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log('   \u2022 Reduced bandwidth usage and server load');",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log('   \u2022 Enhanced developer productivity with automated optimization');",
              "type": "log"
            },
            {
              "line_number": 135,
              "content": "console.log('\\n\u274c Phase 5 validation failed - check critical issues');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/progressive/__tests__/UtilsProgressiveArchitecture.validation.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/__tests__/UtilsProgressiveArchitecture.validation.test.ts",
          "console_count": 46,
          "console_lines": [
            {
              "line_number": 103,
              "content": "console.log('\u2705 Architecture activation result:', result);",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('\u2705 Bundle activation coverage:', {",
              "type": "log"
            },
            {
              "line_number": 142,
              "content": "console.log('\u2705 Activation status metrics:', status);",
              "type": "log"
            },
            {
              "line_number": 156,
              "content": "console.log('\u2705 Bundle size reduction validation:', {",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log(`\u2705 ${variant} variant reduction:`, {",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('\u2705 Bundle size accuracy validation:', {",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log('\u2705 Performance validation result:', {",
              "type": "log"
            },
            {
              "line_number": 260,
              "content": "console.log('\u2705 Performance issues analysis:', {",
              "type": "log"
            },
            {
              "line_number": 279,
              "content": "console.log(`\u2705 Monitoring validation #${validationCount}:`, {",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log('\u2705 Architecture activated for monitoring test');",
              "type": "log"
            },
            {
              "line_number": 425,
              "content": "console.log(`\u2705 ${testCase.name} context optimization:`, {",
              "type": "log"
            },
            {
              "line_number": 457,
              "content": "console.log('\u2705 Optimal utils loading result:', {",
              "type": "log"
            },
            {
              "line_number": 480,
              "content": "console.log('\u2705 Architecture health check:', {",
              "type": "log"
            },
            {
              "line_number": 504,
              "content": "console.log('\u2705 Architecture status information:', {",
              "type": "log"
            },
            {
              "line_number": 529,
              "content": "console.log('\u2705 Cross-bundle coordination validation:', {",
              "type": "log"
            },
            {
              "line_number": 541,
              "content": "console.log('\\n\ud83c\udfaf ========================================');",
              "type": "log"
            },
            {
              "line_number": 542,
              "content": "console.log('   UTILS PROGRESSIVE ARCHITECTURE VALIDATION SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 543,
              "content": "console.log('\ud83c\udfaf ========================================\\n');",
              "type": "log"
            },
            {
              "line_number": 546,
              "content": "console.log('\ud83d\udce6 Activating progressive architecture...');",
              "type": "log"
            },
            {
              "line_number": 550,
              "content": "console.log('\ud83d\udd0d Validating performance metrics...');",
              "type": "log"
            },
            {
              "line_number": 590,
              "content": "console.log('\u2705 ACTIVATION RESULTS:');",
              "type": "log"
            },
            {
              "line_number": 591,
              "content": "console.log(`   \u2022 Success: ${summary.activation.success}`);",
              "type": "log"
            },
            {
              "line_number": 592,
              "content": "console.log(`   \u2022 Bundles Activated: ${summary.activation.bundlesActivated}`);",
              "type": "log"
            },
            {
              "line_number": 593,
              "content": "console.log(`   \u2022 Reduction Achieved: ${summary.activation.reductionAchieved}`);",
              "type": "log"
            },
            {
              "line_number": 594,
              "content": "console.log(`   \u2022 Network Savings: ${summary.activation.networkSavings}\\n`);",
              "type": "log"
            },
            {
              "line_number": 596,
              "content": "console.log('\ud83d\udcca PERFORMANCE METRICS:');",
              "type": "log"
            },
            {
              "line_number": 597,
              "content": "console.log(`   \u2022 Performance Score: ${summary.performance.score}`);",
              "type": "log"
            },
            {
              "line_number": 598,
              "content": "console.log(`   \u2022 Grade: ${summary.performance.grade}`);",
              "type": "log"
            },
            {
              "line_number": 599,
              "content": "console.log(`   \u2022 Bundle Reduction: ${summary.performance.bundleReduction}`);",
              "type": "log"
            },
            {
              "line_number": 600,
              "content": "console.log(`   \u2022 Load Time: ${summary.performance.loadTime}`);",
              "type": "log"
            },
            {
              "line_number": 601,
              "content": "console.log(`   \u2022 Memory Usage: ${summary.performance.memoryUsage}`);",
              "type": "log"
            },
            {
              "line_number": 602,
              "content": "console.log(`   \u2022 Selected Variant: ${summary.performance.selectedVariant}\\n`);",
              "type": "log"
            },
            {
              "line_number": 604,
              "content": "console.log('\ud83c\udfaf TARGET ACHIEVEMENT:');",
              "type": "log"
            },
            {
              "line_number": 605,
              "content": "console.log(`   \u2022 Original Size: ${summary.targets.originalSize}`);",
              "type": "log"
            },
            {
              "line_number": 606,
              "content": "console.log(`   \u2022 Current Size: ${summary.targets.currentSize}`);",
              "type": "log"
            },
            {
              "line_number": 607,
              "content": "console.log(`   \u2022 Target Reduction: ${summary.targets.targetReduction}`);",
              "type": "log"
            },
            {
              "line_number": 608,
              "content": "console.log(`   \u2022 Actual Reduction: ${summary.targets.actualReduction}`);",
              "type": "log"
            },
            {
              "line_number": 609,
              "content": "console.log(`   \u2022 Meets Minimum (58%): ${summary.targets.meetsMinimumTarget ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 610,
              "content": "console.log(`   \u2022 Meets Optimal (75%): ${summary.targets.meetsOptimalTarget ? '\u2705' : '\u274c'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 612,
              "content": "console.log('\ud83c\udfe5 HEALTH STATUS:');",
              "type": "log"
            },
            {
              "line_number": 613,
              "content": "console.log(`   \u2022 Overall Health: ${summary.health.isHealthy ? '\u2705 Healthy' : '\u26a0\ufe0f Issues Detected'}`);",
              "type": "log"
            },
            {
              "line_number": 614,
              "content": "console.log(`   \u2022 Issues: ${summary.health.issues}`);",
              "type": "log"
            },
            {
              "line_number": 615,
              "content": "console.log(`   \u2022 Recommendations: ${summary.health.recommendations}`);",
              "type": "log"
            },
            {
              "line_number": 616,
              "content": "console.log(`   \u2022 Performance Score: ${summary.health.performanceScore}\\n`);",
              "type": "log"
            },
            {
              "line_number": 618,
              "content": "console.log('\ud83c\udf89 PROGRESSIVE ARCHITECTURE STATUS: ACTIVE AND VALIDATED');",
              "type": "log"
            },
            {
              "line_number": 619,
              "content": "console.log('\ud83c\udfaf ========================================\\n');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/progressive/validation/UtilsBundleValidator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/validation/UtilsBundleValidator.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 304,
              "content": "console.error(`[${variant}] Functionality validation error:`, error);",
              "type": "error"
            },
            {
              "line_number": 387,
              "content": "console.error(`[${variant}] TypeScript compatibility error:`, error);",
              "type": "error"
            },
            {
              "line_number": 522,
              "content": "console.error('Orchestrator validation error:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/phase8/demo/Phase8Integration.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/demo/Phase8Integration.tsx",
          "console_count": 14,
          "console_lines": [
            {
              "line_number": 40,
              "content": "console.log(`\ud83d\ude80 Phase 8: Loaded utilities for ${route} in ${loadTime.toFixed(1)}ms`);",
              "type": "log"
            },
            {
              "line_number": 47,
              "content": "console.error('Phase 8 loading failed:', error);",
              "type": "error"
            },
            {
              "line_number": 55,
              "content": "console.log('\ud83d\udcca Starting performance comparison...');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log(`\ud83d\udcca Performance Comparison:",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log('\u269b\ufe0f Phase 8 Atoms Demo:');",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.log(`Currency formatting: ${formatted}`);",
              "type": "log"
            },
            {
              "line_number": 90,
              "content": "console.log(`Number validation: ${isValid}`);",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log(`Basic stats:`, stats);",
              "type": "log"
            },
            {
              "line_number": 102,
              "content": "console.log(`Change calculation: ${(change * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 108,
              "content": "console.log('\ud83d\ude80 Activating Phase 8 optimization...');",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.log(`\ud83d\udcc8 Phase 8 Activation Result:",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('\ud83d\udd27 Phase 8 Compatibility Layer Demo:');",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.log(`Legacy API powered by Phase 8:",
              "type": "log"
            },
            {
              "line_number": 143,
              "content": "console.log('Compatibility layer metadata:', compatibilityUtils._compatibilityLayer);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/validation/core.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/validation/core.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 35,
              "content": "console.error(`Validation error in ${context}:`, error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/utils/validation/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/validation/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 46,
              "content": "console.error(`Data error in ${componentName}:`, error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/styles/css-in-js/demo.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/styles/css-in-js/demo.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 138,
              "content": "console.log('Demo: Dynamic styles loading simulated');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/demo/LazyPortfolioDemo.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/demo/LazyPortfolioDemo.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 36,
              "content": "console.error('\u274c Portfolio Demo CSS failed to load:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/css-optimization/demo.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/css-optimization/demo.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 44,
              "content": "console.warn('Animation failed:', error);",
              "type": "warn"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/__tests__/LazyCharts.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/__tests__/LazyCharts.test.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 288,
              "content": "vi.mocked(console.warn).mockImplementation(() => {});",
              "type": "warn"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/VixBaseChart.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixBaseChart.test.tsx",
          "console_count": 12,
          "console_lines": [
            {
              "line_number": 28,
              "content": "console.log('\ud83e\uddea VixBaseChart Phase 6 Optimization - Validation Tests');",
              "type": "log"
            },
            {
              "line_number": 29,
              "content": "console.log('='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 39,
              "content": "console.log(`\u2705 ${variant} - Implementation completed`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log('='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log('\ud83d\udcca Bundle Size Projections:');",
              "type": "log"
            },
            {
              "line_number": 44,
              "content": "console.log('\u2022 Original VixBaseChart: ~13.9kB');",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log('\u2022 Essential variant: ~1.0kB (92% reduction)');",
              "type": "log"
            },
            {
              "line_number": 46,
              "content": "console.log('\u2022 Standard variant: ~2.5kB (82% reduction)');",
              "type": "log"
            },
            {
              "line_number": 47,
              "content": "console.log('\u2022 Advanced variant: ~4.0kB (71% reduction)');",
              "type": "log"
            },
            {
              "line_number": 48,
              "content": "console.log('\u2022 Progressive orchestrator: ~0.3kB');",
              "type": "log"
            },
            {
              "line_number": 49,
              "content": "console.log('='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 50,
              "content": "console.log('\ud83c\udfaf Phase 6 Success: 71-92% bundle size reduction achieved');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/__tests__/VixLegendProgressive.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/__tests__/VixLegendProgressive.test.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 412,
              "content": "// Mock console.error to suppress error output",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/integration-validation.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/integration-validation.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 158,
              "content": "console.error('System validation failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/final-integration-test.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/final-integration-test.js",
          "console_count": 73,
          "console_lines": [
            {
              "line_number": 10,
              "content": "console.log('\ud83c\udfaf Phase 7D Complete System Integration Test');",
              "type": "log"
            },
            {
              "line_number": 11,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log('\ud83d\udce6 COMPONENT ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`${index + 1}. ${component.name}`);",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log(`   Path: ${component.path.split('/').pop()}`);",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.log(`   Size: ${analysis.size.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.log(`   Target: ${component.target.min}-${component.target.max} bytes`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.log(`   Status: ${status}`);",
              "type": "log"
            },
            {
              "line_number": 86,
              "content": "console.log(`   Critical: ${component.critical ? 'YES' : 'NO'}`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 97,
              "content": "console.log('\ud83d\udcca SYSTEM INTEGRATION METRICS');",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 106,
              "content": "console.log(`Original Bundle Size:     ${originalBundleSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 107,
              "content": "console.log(`Current Total Size:       ${totalSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 108,
              "content": "console.log(`Bundle Reduction:         ${reductionPercentage.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 109,
              "content": "console.log(`Target Reduction:         60-67%`);",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log(`Target Status:            ${targetMet ? '\u2705 ACHIEVED' : '\u274c MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log(`Components Passing:       ${passingComponents}/${components.length}`);",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.log(`Critical Components:      ${criticalComponents}/2`);",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log('\u26a1 PERFORMANCE PROJECTIONS');",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log(`Estimated Load Time (3G): ${estimatedLoadTime}ms (vs ${originalLoadTime}ms)`);",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log(`Load Time Improvement:    ${loadTimeImprovement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log(`Estimated Memory Usage:   ${estimatedMemory}MB (vs ${originalMemory}MB)`);",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log(`Memory Improvement:       ${memoryImprovement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log('\ud83c\udfad DEPLOYMENT READINESS');",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 141,
              "content": "console.log(`Essential Components:     ${criticalComponents >= 2 ? '\u2705 READY' : '\u274c NOT READY'}`);",
              "type": "log"
            },
            {
              "line_number": 142,
              "content": "console.log(`Performance Targets:      ${performanceTarget ? '\u2705 MET' : '\u274c MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 143,
              "content": "console.log(`System Integrity:         ${systemIntegrity ? '\u2705 GOOD' : '\u274c ISSUES'}`);",
              "type": "log"
            },
            {
              "line_number": 149,
              "content": "console.log(`Deployment Status:        ${deploymentStatus}`);",
              "type": "log"
            },
            {
              "line_number": 151,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 152,
              "content": "console.log('\ud83d\udd2c ARCHITECTURE VALIDATION');",
              "type": "log"
            },
            {
              "line_number": 153,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log(`${index + 1}. ${layer.layer}`);",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log(`   Size: ${layer.size.toLocaleString()}B (target: ${layer.target.toLocaleString()}B)`);",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log(`   Efficiency: ${efficiency > 0 ? '+' : ''}${efficiency.toFixed(1)}% vs target`);",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log(`   Status: ${status}`);",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log(`   Features: ${layer.functionality}`);",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log('\ud83d\udcc8 BUSINESS IMPACT ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 190,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.log(`Estimated Daily Users:    ${dailyUsers.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 199,
              "content": "console.log(`Average Sessions/User:    ${averageSessions}`);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log(`Daily Data Savings:       ${dailySavings}MB`);",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log(`Monthly Data Savings:     ${(monthlySavings / 1024).toFixed(1)}GB`);",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log(`Load Time Improvement:    ${loadTimeImprovement.toFixed(1)}% faster`);",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log(`User Experience Impact:   ${loadTimeImprovement > 50 ? 'SIGNIFICANT' : 'MODERATE'}`);",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('\ud83c\udfc6 FINAL INTEGRATION ASSESSMENT');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 224,
              "content": "console.log(`Bundle Size Reduction:    ${reductionPercentage.toFixed(1)}% (target: 60-67%)`);",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log(`Performance Improvement:  ${loadTimeImprovement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.log(`Memory Efficiency:        ${memoryImprovement.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 227,
              "content": "console.log(`System Integration:       ${passingComponents}/${components.length} components passing`);",
              "type": "log"
            },
            {
              "line_number": 228,
              "content": "console.log(`Production Readiness:     ${deploymentStatus}`);",
              "type": "log"
            },
            {
              "line_number": 229,
              "content": "console.log(`Overall Grade:            ${overallGrade}`);",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log('\ud83d\udccb RECOMMENDATIONS:');",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.log(`   ${index + 1}. ${rec}`);",
              "type": "log"
            },
            {
              "line_number": 239,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.log('\ud83c\udf89 INTEGRATION SUCCESS: Phase 7D optimization achieved excellent results!');",
              "type": "log"
            },
            {
              "line_number": 242,
              "content": "console.log('\ud83d\ude80 Ready for production deployment with outstanding performance gains.');",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('\u2705 INTEGRATION GOOD: Phase 7D optimization shows good progress.');",
              "type": "log"
            },
            {
              "line_number": 245,
              "content": "console.log('\ud83d\udd04 Consider additional optimizations before production deployment.');",
              "type": "log"
            },
            {
              "line_number": 247,
              "content": "console.log('\u26a0\ufe0f INTEGRATION NEEDS WORK: Phase 7D requires further optimization.');",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log('\ud83d\udee0\ufe0f Address critical issues before proceeding to production.');",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 252,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 253,
              "content": "console.log('\ud83d\udcca Integration Test Complete - See results above');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/complete-system-demo.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/complete-system-demo.js",
          "console_count": 84,
          "console_lines": [
            {
              "line_number": 5,
              "content": "console.log('\ud83c\udfaf Phase 7D Complete System Demonstration');",
              "type": "log"
            },
            {
              "line_number": 6,
              "content": "console.log('='.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log('\ud83d\udcca PHASE 7D ACHIEVEMENT MATRIX');",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log('-'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log('\ud83c\udfc6 ORIGINAL vs OPTIMIZED COMPARISON:');",
              "type": "log"
            },
            {
              "line_number": 46,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log(`${index + 1}. ${item.category}`);",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`   Original:     ${item.original}`);",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log(`   Optimized:    ${item.optimized}`);",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.log(`   Improvement:  ${item.improvement} faster/smaller`);",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.log(`   Status:       ${item.status}`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log('\ud83d\ude80 DEPLOYMENT TIER ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 89,
              "content": "console.log('-'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.log(`${index + 1}. ${tier.tier}`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log(`   Bundle Size:      ${tier.bundleSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log(`   Target Users:     ${tier.targetUsers}`);",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log(`   Features:         ${tier.features}`);",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log(`   Reduction:        ${typeof tier.reduction === 'number' ? tier.reduction + '%' : tier.reduction}`);",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log(`   Load Time (3G):   ${tier.loadTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log(`   Status:           ${tier.deploymentStatus}`);",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log(`   Production Ready: ${tier.productionReady ? '\u2705 YES' : '\u26a0\ufe0f NEEDS OPTIMIZATION'}`);",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 136,
              "content": "console.log('\ud83d\udcc8 BUSINESS IMPACT PROJECTION');",
              "type": "log"
            },
            {
              "line_number": 137,
              "content": "console.log('-'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "console.log('\ud83d\udcca Daily Impact Projections:');",
              "type": "log"
            },
            {
              "line_number": 158,
              "content": "console.log(`   Daily Users:          ${businessMetrics.dailyUsers.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.log(`   Daily Sessions:       ${dailyImpact.totalSessions.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.log(`   Time Saved Daily:     ${(dailyImpact.timeSaved / 3600).toFixed(1)} hours`);",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log(`   Data Saved Daily:     ${dailyImpact.dataSaved.toFixed(1)} MB`);",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log(`   Monthly Data Savings: ${(dailyImpact.dataSaved * 30 / 1024).toFixed(1)} GB`);",
              "type": "log"
            },
            {
              "line_number": 163,
              "content": "console.log(`   Server Load Reduction: ${dailyImpact.serverLoadReduction}`);",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log(`   User Satisfaction:    ${dailyImpact.userSatisfactionIncrease}`);",
              "type": "log"
            },
            {
              "line_number": 166,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 167,
              "content": "console.log('\ud83d\udd27 TECHNICAL EXCELLENCE METRICS');",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log('-'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log(`\ud83d\udccb ${category.toUpperCase()}:`);",
              "type": "log"
            },
            {
              "line_number": 195,
              "content": "console.log(`   ${label}:`.padEnd(25) + value);",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('\ud83c\udfaf VALIDATION SCORECARD');",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('-'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log(`${index + 1}. ${score.category}`);",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log(`   Target:    ${score.target}`);",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log(`   Achieved:  ${score.achieved}`);",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log(`   Grade:     ${score.grade}`);",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log(`   Status:    \u2705 ${score.status}`);",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 224,
              "content": "console.log(`\ud83d\udcca OVERALL VALIDATION GRADE: ${averageGrade} (${averageGrade === 'A+' ? 'OUTSTANDING' : 'EXCELLENT'} SUCCESS)`);",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 227,
              "content": "console.log('\ud83c\udfc6 PHASE 7D INTEGRATION SUCCESS SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 228,
              "content": "console.log('='.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 230,
              "content": "console.log('\ud83c\udf89 MISSION ACCOMPLISHED: COMPLETE SUCCESS');",
              "type": "log"
            },
            {
              "line_number": 231,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.log('\u2705 KEY ACHIEVEMENTS:');",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log(`   \ud83d\udce6 Bundle Reduction:      ${phase7DResults.performanceGains.bundleReduction}% (EXCEEDS TARGET)`);",
              "type": "log"
            },
            {
              "line_number": 234,
              "content": "console.log(`   \u26a1 Load Time Improvement: ${phase7DResults.performanceGains.loadTimeImprovement}% faster`);",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.log(`   \ud83d\udcbe Memory Efficiency:     ${phase7DResults.performanceGains.memoryReduction}% reduction`);",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log(`   \ud83c\udf10 Browser Compatibility: 100% support`);",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log(`   \ud83e\uddea Test Coverage:         94.7% comprehensive`);",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.log(`   \ud83d\udd27 Code Quality:          100% compliance`);",
              "type": "log"
            },
            {
              "line_number": 239,
              "content": "console.log(`   \ud83d\ude80 Production Readiness:  Tiers 1-2 IMMEDIATE deployment`);",
              "type": "log"
            },
            {
              "line_number": 240,
              "content": "console.log(`   \ud83d\udc69\u200d\ud83d\udcbb Developer Experience:  EXCELLENT (Modular architecture)`);",
              "type": "log"
            },
            {
              "line_number": 242,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 243,
              "content": "console.log('\ud83d\udcc8 BUSINESS VALUE:');",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log(`   \ud83d\udcb0 Cost Savings:         HIGH (65% server load reduction)`);",
              "type": "log"
            },
            {
              "line_number": 245,
              "content": "console.log(`   \ud83d\udcf1 User Experience:       SIGNIFICANTLY IMPROVED`);",
              "type": "log"
            },
            {
              "line_number": 246,
              "content": "console.log(`   \ud83d\udd04 Maintainability:       OUTSTANDING (Micro-chunk system)`);",
              "type": "log"
            },
            {
              "line_number": 247,
              "content": "console.log(`   \ud83d\udcca Competitive Advantage: INDUSTRY-LEADING optimization`);",
              "type": "log"
            },
            {
              "line_number": 249,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 250,
              "content": "console.log('\ud83d\ude80 DEPLOYMENT RECOMMENDATION:');",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log('   \u2705 PROCEED WITH IMMEDIATE PRODUCTION DEPLOYMENT');",
              "type": "log"
            },
            {
              "line_number": 252,
              "content": "console.log('   \ud83d\udcc5 Timeline: Deploy Tiers 1-2 within 24-48 hours');",
              "type": "log"
            },
            {
              "line_number": 253,
              "content": "console.log('   \ud83d\udd04 Strategy: Continue Tier 3 optimization in parallel');",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.log('   \ud83d\udcca Monitoring: Track performance metrics and user analytics');",
              "type": "log"
            },
            {
              "line_number": 256,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 257,
              "content": "console.log('\ud83c\udfc6 SUBAGENT 4 MISSION STATUS: COMPLETE SUCCESS');",
              "type": "log"
            },
            {
              "line_number": 258,
              "content": "console.log('   Phase 7D Data Bundle Optimization achieved OUTSTANDING results');",
              "type": "log"
            },
            {
              "line_number": 259,
              "content": "console.log('   Ready for production with exceptional performance gains');",
              "type": "log"
            },
            {
              "line_number": 260,
              "content": "console.log('   This represents the most successful optimization in project history');",
              "type": "log"
            },
            {
              "line_number": 262,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 263,
              "content": "console.log('\ud83e\udd16 Generated by SUBAGENT 4 - Integration & Validation Specialist');",
              "type": "log"
            },
            {
              "line_number": 264,
              "content": "console.log('\ud83d\udcc5 Completed: August 26, 2025');",
              "type": "log"
            },
            {
              "line_number": 265,
              "content": "console.log('\u2705 Status: MISSION ACCOMPLISHED');",
              "type": "log"
            },
            {
              "line_number": 266,
              "content": "console.log('='.repeat(80));",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/AdvancedTierDemo.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/AdvancedTierDemo.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 208,
              "content": "onError={(error) => console.error('Risk Analytics error:', error)}",
              "type": "error"
            },
            {
              "line_number": 238,
              "content": "onError={(error) => console.error('Tabs System error:', error)}",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/advanced/advanced.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced/advanced.test.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 243,
              "content": "console.log(`Advanced features loaded: ${footprint.features.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log(`Advanced layer size: ${footprint.loaded} bytes`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/advanced/bundle-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced/bundle-validation.js",
          "console_count": 30,
          "console_lines": [
            {
              "line_number": 25,
              "content": "console.log('\ud83d\udd0d Advanced Features Bundle Size Validation');",
              "type": "log"
            },
            {
              "line_number": 26,
              "content": "console.log('===========================================');",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log(`${status} ${filename}: ${actualSize} bytes (${percentage}% of ${target}B target)`);",
              "type": "log"
            },
            {
              "line_number": 46,
              "content": "console.log(`\u274c ${filename}: File not found`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log('\\n\ud83d\udcca Advanced Features Summary:');",
              "type": "log"
            },
            {
              "line_number": 52,
              "content": "console.log(`Total Size: ${totalSize} bytes`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`Target Size: ${TOTAL_TARGET} bytes`);",
              "type": "log"
            },
            {
              "line_number": 54,
              "content": "console.log(`Efficiency: ${((totalSize / TOTAL_TARGET) * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 55,
              "content": "console.log(`Status: ${totalSize <= TOTAL_TARGET ? '\u2705 Within Target' : '\u26a0\ufe0f Exceeds Target'}`);",
              "type": "log"
            },
            {
              "line_number": 66,
              "content": "console.log(`\\n\ud83c\udf9b\ufe0f Orchestrator Size: ${orchestratorSize} bytes`);",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log(`\ud83d\udce6 Total with Orchestrator: ${totalWithOrchestrator} bytes`);",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log('\\n\ud83c\udfd7\ufe0f Complete Progressive Stack:');",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log(`Essential Core: ${ESSENTIAL_SIZE} bytes`);",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log(`Progressive Enhancements: ${ENHANCEMENTS_SIZE} bytes`);",
              "type": "log"
            },
            {
              "line_number": 77,
              "content": "console.log(`Advanced Features: ${totalWithOrchestrator} bytes`);",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log(`Complete Stack: ${completeStackSize} bytes`);",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log(`Target Stack (\u22647kB): ${completeStackSize <= 7000 ? '\u2705 Within Target' : '\u26a0\ufe0f Exceeds Target'}`);",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log('\u274c AdvancedOrchestrator.ts: File not found');",
              "type": "log"
            },
            {
              "line_number": 87,
              "content": "console.log('\\n\ud83e\udde0 Memory Efficiency Analysis:');",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log('On-Demand Loading Benefits:');",
              "type": "log"
            },
            {
              "line_number": 89,
              "content": "console.log(`- Minimum Load: ${Math.min(...Object.values(TARGET_SIZES))} bytes (single feature)`);",
              "type": "log"
            },
            {
              "line_number": 90,
              "content": "console.log(`- Common Features: ~900 bytes (transitions + easing + screenReader)`);",
              "type": "log"
            },
            {
              "line_number": 91,
              "content": "console.log(`- Memory Cleanup: Automatic unloading of unused features`);",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log(`- Smart Preloading: Predictive loading based on user interactions`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('\\n\ud83d\udcc8 Progressive Loading Efficiency:');",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.log(`Layer 1 (Essential): 1.2kB \u2192 Basic functionality`);",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log(`Layer 2 (Enhanced): +2.7kB \u2192 Interactive features`);",
              "type": "log"
            },
            {
              "line_number": 97,
              "content": "console.log(`Layer 3 (Advanced): +${(totalWithOrchestrator/1000).toFixed(1)}kB \u2192 Advanced capabilities`);",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log(`Total Growth: ${((completeStackSize/ESSENTIAL_SIZE - 1) * 100).toFixed(0)}% size increase for ${((Object.keys(TARGET_SIZES).length + 1) * 100 / 3).toFixed(0)}% more features`);",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log(`\\n\ud83c\udfaf Final Validation: ${finalStatus ? '\u2705 PASSED' : '\u274c FAILED'}`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/atoms/validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/atoms/validation.js",
          "console_count": 43,
          "console_lines": [
            {
              "line_number": 10,
              "content": "console.log('\ud83c\udfaf Phase 7C.1 Essential Atomization - Final Validation');",
              "type": "log"
            },
            {
              "line_number": 11,
              "content": "console.log('=' .repeat(60));",
              "type": "log"
            },
            {
              "line_number": 19,
              "content": "console.log(`\ud83d\udce6 Bundle Size Analysis:`);",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log(`   Original Bundle:     ${originalSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 21,
              "content": "console.log(`   Essential Core:      ${size.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 22,
              "content": "console.log(`   Savings:            ${(originalSize - size).toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 23,
              "content": "console.log(`   Reduction:          ${reduction}%`);",
              "type": "log"
            },
            {
              "line_number": 24,
              "content": "console.log(`   Target Range:       800-1,200 bytes`);",
              "type": "log"
            },
            {
              "line_number": 25,
              "content": "console.log(`   Status:             ${size >= 800 && size <= 1200 ? '\u2705 ACHIEVED' : '\u274c MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 28,
              "content": "console.log(`\\n\u26a1 Performance Improvements:`);",
              "type": "log"
            },
            {
              "line_number": 29,
              "content": "console.log(`   Load Time:          ~22ms (vs 180ms) - ${((180-22)/180*100).toFixed(1)}% faster`);",
              "type": "log"
            },
            {
              "line_number": 30,
              "content": "console.log(`   Memory Usage:       ~2-3MB (vs 15-20MB) - 85% reduction`);",
              "type": "log"
            },
            {
              "line_number": 31,
              "content": "console.log(`   Network Transfer:   ~1.1kB (vs 9.2kB) - 88% reduction`);",
              "type": "log"
            },
            {
              "line_number": 34,
              "content": "console.log(`\\n\u2705 Feature Completeness:`);",
              "type": "log"
            },
            {
              "line_number": 35,
              "content": "console.log(`   \u2705 Line Charts:       Essential path rendering`);",
              "type": "log"
            },
            {
              "line_number": 36,
              "content": "console.log(`   \u2705 Scatter Plots:     Circle-based data points`);",
              "type": "log"
            },
            {
              "line_number": 37,
              "content": "console.log(`   \u2705 Bar Charts:        Rectangle-based bars`);",
              "type": "log"
            },
            {
              "line_number": 38,
              "content": "console.log(`   \u2705 Data Validation:   Array validation & normalization`);",
              "type": "log"
            },
            {
              "line_number": 39,
              "content": "console.log(`   \u2705 Linear Scaling:    Mathematical interpolation`);",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.log(`   \u2705 SVG Rendering:     Responsive container generation`);",
              "type": "log"
            },
            {
              "line_number": 41,
              "content": "console.log(`   \u2705 TypeScript:        Type-safe React component`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`   \u2705 Zero Dependencies: Completely standalone`);",
              "type": "log"
            },
            {
              "line_number": 50,
              "content": "console.log(`\\n\ud83d\udcca Code Quality Metrics:`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log(`   Lines of Code:      ${lines}`);",
              "type": "log"
            },
            {
              "line_number": 52,
              "content": "console.log(`   Functions:          ${functions}`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`   React Elements:     ${reactElements}`);",
              "type": "log"
            },
            {
              "line_number": 54,
              "content": "console.log(`   Chars per Byte:     ${(content.length / size).toFixed(2)}`);",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log(`\\n\ud83d\udccb Research Specification Compliance:`);",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log(`   \u2705 Target Size:       0.8-1.2kB (${size} bytes achieved)`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`   \u2705 Reduction Goal:    34-67% additional (${reduction}% achieved)`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log(`   \u2705 Essential Core:    All basic chart types supported`);",
              "type": "log"
            },
            {
              "line_number": 61,
              "content": "console.log(`   \u2705 Zero Dependencies: No external library dependencies`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log(`   \u2705 Pure Functions:    All utilities are pure functions`);",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log(`   \u2705 TypeScript Ready:  Full type support maintained`);",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log(`\\n\ud83c\udf89 PHASE 7C.1 ESSENTIAL ATOMIZATION: COMPLETE SUCCESS`);",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log(`   \ud83d\udce6 Bundle Size:     ${size} bytes (target achieved)`);",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log(`   \ud83d\udcc9 Reduction:       ${reduction}% (exceeds 34-67% target)`);",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log(`   \u26a1 Load Speed:      87.8% improvement`);",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.log(`   \ud83d\udcbe Memory:         85% reduction`);",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log(`   \ud83c\udfaf Functionality:  All essential features preserved`);",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log(`\\n\ud83d\ude80 Ready for Progressive Enhancement (Phase 7C.2)`);",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log(`\\n\u26a0\ufe0f Phase 7C.1 targets not fully achieved`);",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log('\\n' + '=' .repeat(60));",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/atoms/ChartAtoms.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/atoms/ChartAtoms.test.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 43,
              "content": "console.log('Bundle size validation:', { sizes, totalSize });",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('Performance validation:', { executionTime, dataPoints: largeData.length });",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/integration.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/integration.test.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 545,
              "content": "console.log('\ud83e\uddea Phase 7C Integration Tests Ready');",
              "type": "log"
            },
            {
              "line_number": 546,
              "content": "console.log('\ud83d\udcca Coverage: System initialization, chart creation, analytics, performance, caching');",
              "type": "log"
            },
            {
              "line_number": 547,
              "content": "console.log('\u26a1 Bundle validation: Essential <1.2kB, Progressive <3kB, Total <6kB');",
              "type": "log"
            },
            {
              "line_number": 548,
              "content": "console.log('\ud83c\udfaf Production-ready testing with comprehensive validation');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/ChartSpecificOptimizer.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/ChartSpecificOptimizer.ts",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 82,
              "content": "console.log('[ChartSpecificOptimizer] Initialized with chart-specific optimizations for all chart types');",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log('[ChartSpecificOptimizer] Initialized profiles for', this.chartProfiles.size, 'chart types');",
              "type": "log"
            },
            {
              "line_number": 315,
              "content": "console.log('[ChartSpecificOptimizer] Generating optimized configuration for', chartType);",
              "type": "log"
            },
            {
              "line_number": 347,
              "content": "console.log('[ChartSpecificOptimizer] Configuration generated:', {",
              "type": "log"
            },
            {
              "line_number": 359,
              "content": "console.error('[ChartSpecificOptimizer] Configuration generation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 694,
              "content": "console.log('[ChartSpecificOptimizer] Using cached configuration for', chartType);",
              "type": "log"
            },
            {
              "line_number": 735,
              "content": "console.log('[ChartSpecificOptimizer] Performance baseline updated for', chartType, {",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/bundle-validation.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/bundle-validation.js",
          "console_count": 25,
          "console_lines": [
            {
              "line_number": 32,
              "content": "console.log('\ud83d\udd0d Phase 7C.2 Progressive Enhancement Bundle Validation');",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "console.log('==================================================\\n');",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.log('\ud83d\udcca Individual Micro-Chunk Analysis:');",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log('\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510');",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log('\u2502 File                \u2502 Status \u2502 Target \u2502 Actual \u2502 Efficiency  \u2502');",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log('\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524');",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log(`\u2502 ${file} \u2502 ${status} \u2502 ${target} \u2502 ${actual} \u2502 ${efficiency} \u2502`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.log('\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n');",
              "type": "log"
            },
            {
              "line_number": 100,
              "content": "console.log('\ud83c\udfaf Progressive Enhancement Tiers:');",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.log(`   Interaction Tier:     ${interactionTier.toString().padStart(4)} bytes (Hover + Click + Tooltip)`);",
              "type": "log"
            },
            {
              "line_number": 102,
              "content": "console.log(`   Rendering Tier:       ${renderingTier.toString().padStart(4)} bytes (Axis + Grid + Legend)`);",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log(`   Data Processing Tier: ${dataProcessingTier.toString().padStart(4)} bytes (Validator + Format + Transform)`);",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "console.log(`   Total Progressive:    ${totalActualSize.toString().padStart(4)} bytes\\n`);",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log('\u2728 Target Validation:');",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.log(`   Essential Core:       ${TARGETS.essential} bytes (baseline)`);",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log(`   Progressive Target:   ${TARGETS.progressive.min}-${TARGETS.progressive.max} bytes`);",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log(`   Progressive Actual:   ${totalActualSize} bytes ${progressiveInRange ? '\u2705' : '\u274c'}`);",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`   Combined Total:       ${combinedTotal} bytes (\u2264${TARGETS.total}) ${combinedTotal <= TARGETS.total ? '\u2705' : '\u274c'}\\n`);",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log('\ud83c\udfc6 Final Assessment:');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('   \u2705 ALL TARGETS MET - Progressive Enhancement System Ready!');",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.log(`   \ud83d\udce6 Achieved ${((totalTargetSize / totalActualSize) * 100).toFixed(1)}% compression efficiency`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log(`   \ud83d\ude80 Bundle reduction: Essential (1.2kB) + Progressive (${(totalActualSize/1000).toFixed(1)}kB) = ${(combinedTotal/1000).toFixed(1)}kB total`);",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log('   \u274c OPTIMIZATION REQUIRED');",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log(`   \ud83d\udccf Progressive bundle outside target range: ${totalActualSize} bytes`);",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log(`   \ud83d\udce6 Combined bundle too large: ${combinedTotal} bytes > ${TARGETS.total} bytes`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/__tests__/ErrorBoundary.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/__tests__/ErrorBoundary.test.tsx",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 22,
              "content": "// Mock console.error to prevent noise in tests",
              "type": "error"
            },
            {
              "line_number": 23,
              "content": "const originalError = console.error;",
              "type": "error"
            },
            {
              "line_number": 25,
              "content": "console.error = vi.fn();",
              "type": "error"
            },
            {
              "line_number": 29,
              "content": "console.error = originalError;",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/analytics/AnalyticsProgressiveTest.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/AnalyticsProgressiveTest.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 29,
              "content": "console.log(`[${component}] ${type.toUpperCase()}: ${message}`);",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.log(`Exporting ${format}:`, data);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/analytics/EssentialAnalyticsDemo.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/EssentialAnalyticsDemo.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 28,
              "content": "console.error('Failed to load progressive analytics:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/analytics/__tests__/AnalyticsDashboardEssential.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/__tests__/AnalyticsDashboardEssential.test.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 230,
              "content": "// Mock console.error to suppress error output during test",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/components/analytics/__tests__/LazyAnalytics.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/__tests__/LazyAnalytics.test.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 260,
              "content": "// Mock console.warn to capture warnings",
              "type": "warn"
            },
            {
              "line_number": 261,
              "content": "vi.mocked(console.warn).mockImplementation(() => {});",
              "type": "warn"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/__tests__/Phase7DashboardValidation.test.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/__tests__/Phase7DashboardValidation.test.tsx",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 500,
              "content": "const originalError = console.error;",
              "type": "error"
            },
            {
              "line_number": 501,
              "content": "console.error = jest.fn();",
              "type": "error"
            },
            {
              "line_number": 508,
              "content": "console.error = originalError;",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/useErrorHandling.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useErrorHandling.test.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 732,
              "content": "expect(console.error).not.toHaveBeenCalled();",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/service.direct.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/service.direct.test.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 31,
              "content": "console.log('Testing direct service call...');",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log('Direct result:', result);",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log(",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/useOpenBBData.debug.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useOpenBBData.debug.test.ts",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 51,
              "content": "console.log('Mock called with:', params);",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log('Starting test...');",
              "type": "log"
            },
            {
              "line_number": 89,
              "content": "console.log('Initial state:', {",
              "type": "log"
            },
            {
              "line_number": 99,
              "content": "console.log('Current state:', {",
              "type": "log"
            },
            {
              "line_number": 109,
              "content": "console.log('Final state:', {",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log('Mock call count:', (openbbService.getEquityHistorical as any).mock.calls.length);",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log('Mock calls:', (openbbService.getEquityHistorical as any).mock.calls);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/mock-debug.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/mock-debug.test.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 16,
              "content": "console.log('mockUseStoreInitialization:', mockUseStoreInitialization);",
              "type": "log"
            },
            {
              "line_number": 18,
              "content": "console.log('Direct call result:', directResult);",
              "type": "log"
            },
            {
              "line_number": 21,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 26,
              "content": "console.log('Registry call result:', registryResult);",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.log('renderHook result.current:', result.current);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/useOpenBBData.cache.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useOpenBBData.cache.test.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 170,
              "content": "console.log('Initial state - result1.current:', {",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log('Waiting for completion - result1.current:', {",
              "type": "log"
            },
            {
              "line_number": 752,
              "content": "console.log('Prefetch result:', prefetchResult.current);",
              "type": "log"
            },
            {
              "line_number": 1235,
              "content": "console.log('Initial state:', {",
              "type": "log"
            },
            {
              "line_number": 1244,
              "content": "console.log('Waiting for error:', {",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/useOpenBBData.simple.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useOpenBBData.simple.test.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 76,
              "content": "console.log('Initial state:', {",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.log('Waiting for data...');",
              "type": "log"
            },
            {
              "line_number": 87,
              "content": "console.log('Current state:', {",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/hooks/__tests__/useStore.integration.test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useStore.integration.test.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 386,
              "content": "// Mock console.warn to avoid test output noise",
              "type": "warn"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/services/data/micro-chunks/integration-test.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/integration-test.ts",
          "console_count": 21,
          "console_lines": [
            {
              "line_number": 37,
              "content": "console.log('\ud83e\uddea Starting Data Bundle Optimization Integration Tests...');",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log('\ud83d\udce6 Testing Essential Tier (5.7kB)...');",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.log('\u26a1 Testing Progressive Tier (8.9kB)...');",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log('\ud83d\ude80 Testing Advanced Tier (6.8kB)...');",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.log('\ud83d\udcca Testing Bundle Size Optimization...');",
              "type": "log"
            },
            {
              "line_number": 327,
              "content": "console.log('\u26a1 Testing Loading Performance...');",
              "type": "log"
            },
            {
              "line_number": 395,
              "content": "console.log(`\u2705 ${testName} (${executionTime.toFixed(2)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log(`\u274c ${testName} (${executionTime.toFixed(2)}ms) - ${error}`);",
              "type": "log"
            },
            {
              "line_number": 418,
              "content": "console.log('\\n\ud83d\udcca Test Results Summary:');",
              "type": "log"
            },
            {
              "line_number": 419,
              "content": "console.log(`\u2705 Passed: ${passedTests.length}`);",
              "type": "log"
            },
            {
              "line_number": 420,
              "content": "console.log(`\u274c Failed: ${failedTests.length}`);",
              "type": "log"
            },
            {
              "line_number": 421,
              "content": "console.log(`\u26a1 Total Execution Time: ${totalExecutionTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 422,
              "content": "console.log(`\ud83d\udce6 Bundle Reduction: ${MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction}`);",
              "type": "log"
            },
            {
              "line_number": 423,
              "content": "console.log(`\ud83d\udcbe Size Savings: ${MICRO_CHUNK_BUNDLE_SIZES.optimized.savings}`);",
              "type": "log"
            },
            {
              "line_number": 426,
              "content": "console.log('\\n\u274c Failed Tests:');",
              "type": "log"
            },
            {
              "line_number": 428,
              "content": "console.log(`  - ${test.testName}: ${test.error}`);",
              "type": "log"
            },
            {
              "line_number": 432,
              "content": "console.log('\\n\ud83c\udfaf Performance Summary:');",
              "type": "log"
            },
            {
              "line_number": 433,
              "content": "console.log(`  - Bundle Optimization Target: 70% reduction`);",
              "type": "log"
            },
            {
              "line_number": 434,
              "content": "console.log(`  - Actual Achievement: ${MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction}`);",
              "type": "log"
            },
            {
              "line_number": 435,
              "content": "console.log(`  - Target Status: ${parseFloat(MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction.replace('%', '')) >= 70 ? '\u2705 ACHIEVED' : '\u274c MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 490,
              "content": "console.log('\ud83e\uddea Data Bundle Integration Tests available. Run: window.runDataBundleTests()');",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/services/analytics/forecasting/micro-chunks/validation.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/analytics/forecasting/micro-chunks/validation.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 450,
              "content": "console.log('[ForecastingValidation] Validation Results:', results);",
              "type": "log"
            },
            {
              "line_number": 453,
              "content": "console.error('[ForecastingValidation] Validation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 462,
              "content": "console.log('[ForecastingValidation] Performance Benchmark:', benchmark);",
              "type": "log"
            },
            {
              "line_number": 465,
              "content": "console.error('[ForecastingValidation] Benchmark failed:', error);",
              "type": "error"
            }
          ],
          "category": "development_debugging"
        },
        {
          "path": "src/validation/Phase7BundleOptimizationValidator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/validation/Phase7BundleOptimizationValidator.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 122,
              "content": "console.log(`Phase 7 validation completed in ${totalTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.error('[Phase 7 Validation] \u274c Validation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 237,
              "content": "console.log(`${tier} tier validation completed in ${totalValidationTime.toFixed(2)}ms`);",
              "type": "log"
            }
          ],
          "category": "development_debugging"
        }
      ],
      "count": 1729,
      "strategy": "eslint-disable"
    },
    "core_application": {
      "patterns": ["src/pages/", "src/components/", "src/hooks/", "src/services/", "src/utils/"],
      "exclude_patterns": ["test", "debug", "spec", "mock", "__tests__", "validation", "demo", "phase.*validation"],
      "files": [
        {
          "path": "src/utils/StandardBundleOptimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/StandardBundleOptimization.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 251,
              "content": "console.error('Standard Bundle optimization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 534,
              "content": "console.group('\ud83c\udfc6 SUBAGENT 4: Standard Bundle Optimization - OUTSTANDING SUCCESS');",
              "type": "group"
            },
            {
              "line_number": 560,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 567,
              "content": "console.group('\ud83d\udcca Standard Bundle Optimization Progress');",
              "type": "group"
            },
            {
              "line_number": 575,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 698,
              "content": "console.error('Bundle optimization failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chart-bundle-analyzer.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chart-bundle-analyzer.ts",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 320,
              "content": "console.log(`[ChartAnalyzer] ${componentType} (${variant}) loaded: ${sizeMB}kB in ${metrics.loadTime.toFixed(0)}ms`);",
              "type": "log"
            },
            {
              "line_number": 449,
              "content": "console.log(`[ChartAnalyzer] ${chartType} render time: ${renderTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 588,
              "content": "console.log(`[ChartAnalyzer] ${metrics.componentType} ${metrics.variant}: ${achievementLevel} (${reductionPercentage.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 617,
              "content": "console.group('[ChartAnalyzer] Chart Optimization Progress');",
              "type": "group"
            },
            {
              "line_number": 619,
              "content": "console.log(`Total Bundle Reduction: ${report.bundleAnalysis.percentageReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 622,
              "content": "console.log(`  ${component}: ${result.reductionPercentage.toFixed(1)}% reduction (${result.targetAchievement})`);",
              "type": "log"
            },
            {
              "line_number": 625,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/StandardBundlePerformanceMonitor.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/StandardBundlePerformanceMonitor.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 230,
              "content": "console.log('\ud83c\udfaf Monitoring 50-70% standard bundle reduction (26.31kB \u2192 8-12kB)');",
              "type": "log"
            },
            {
              "line_number": 329,
              "content": "console.log(`[StandardBundleMonitor] ${bundleType} (${context}) loaded: ${sizekB}kB in ${metrics.loadTime.toFixed(0)}ms (${reductionPercentage}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 618,
              "content": "console.log(`[StandardBundleMonitor] ${metrics.bundleType} (${metrics.context}): ${achievementLevel} (${reductionPercentage.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 622,
              "content": "console.log(`\u2705 Phase 7 Standard Bundle Success: ${reductionPercentage.toFixed(1)}% reduction achieved (target: 50-70%)`);",
              "type": "log"
            },
            {
              "line_number": 624,
              "content": "console.log(`\u26a0\ufe0f Phase 7 Standard Bundle Warning: ${reductionPercentage.toFixed(1)}% reduction below 50% target`);",
              "type": "log"
            },
            {
              "line_number": 638,
              "content": "console.group('[StandardBundleMonitor] Standard Bundle Optimization Progress');",
              "type": "group"
            },
            {
              "line_number": 640,
              "content": "console.log(`Phase 7 Compliance: ${report.phase7Validation.complianceStatus} (${report.phase7Validation.achievedReduction.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 643,
              "content": "console.log(`  ${bundleType}: ${result.reductionPercentage.toFixed(1)}% reduction (${result.targetAchievement}) - ${(result.current/1024).toFixed(1)}kB`);",
              "type": "log"
            },
            {
              "line_number": 646,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/UtilityManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/UtilityManager.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 42,
              "content": "console.error('Failed to load core utilities:', error);",
              "type": "error"
            },
            {
              "line_number": 83,
              "content": "console.error(`Failed to load utility chunk '${chunk}':`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/RouteAwareUtilityManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/RouteAwareUtilityManager.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 456,
              "content": "console.error('Failed to initialize route utilities:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase7-smart-initialization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7-smart-initialization.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 296,
              "content": "console.error(`[Phase7] Failed to load chunk ${chunkName}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/text-analysis-context-loader.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/text-analysis-context-loader.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 86,
              "content": "console.log('\ud83d\udd04 Phase 5: Loading Dashboard context (3-5kB minimal)');",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log('\ud83d\udd04 Phase 5: Loading News Analysis context (8-10kB with NLP)');",
              "type": "log"
            },
            {
              "line_number": 152,
              "content": "console.log('\ud83d\udd04 Phase 5: Loading Full Analysis context (13-15kB comprehensive)');",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('\ud83d\udd04 Phase 5: Loading Export context (10-12kB export-focused)');",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log('\ud83d\udd04 Phase 5: Loading Validation context (5-7kB validation-focused)');",
              "type": "log"
            },
            {
              "line_number": 313,
              "content": "console.log(`\ud83d\ude80 Phase 5: Preloading ${context} context chunks: ${strategy.chunks.join(', ')}`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/activate-utils-progressive.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/activate-utils-progressive.js",
          "console_count": 26,
          "console_lines": [
            {
              "line_number": 19,
              "content": "console.log('\ud83d\ude80 [Utils Progressive] Starting architecture activation...');",
              "type": "log"
            },
            {
              "line_number": 28,
              "content": "console.log('\ud83d\udce6 [Utils Progressive] Creating backup of current index...');",
              "type": "log"
            },
            {
              "line_number": 30,
              "content": "console.log('\u2705 [Utils Progressive] Backup created:', backupPath);",
              "type": "log"
            },
            {
              "line_number": 35,
              "content": "console.log('\ud83d\udd04 [Utils Progressive] Replacing index with optimized version...');",
              "type": "log"
            },
            {
              "line_number": 37,
              "content": "console.log('\u2705 [Utils Progressive] Index replaced successfully');",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log('\ud83d\udd0d [Utils Progressive] Verifying activation...');",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log(`\u2705 [Utils Progressive] ${check}: VERIFIED`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log(`\u274c [Utils Progressive] ${check}: FAILED`);",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log('\\n\ud83c\udf89 [Utils Progressive] Architecture activation SUCCESSFUL!');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log('\\n\ud83d\udcca [Utils Progressive] Optimization Results:');",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log('   \u2022 Chunking: ENABLED (dynamic imports active)');",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.log('   \u2022 Immediate Access: \u22641kB (critical utils only)');",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log('   \u2022 Essential Variant: 3-5kB (82-85% reduction)');",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log('   \u2022 Standard Variant: 6-8kB (70-78% reduction)');",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log('   \u2022 Advanced Variant: 10-12kB (58-64% reduction)');",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log('   \u2022 Original Size: 26.71kB');",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log('   \u2022 Target Reduction: 58-88%');",
              "type": "log"
            },
            {
              "line_number": 77,
              "content": "console.log('\\n\ud83d\ude80 [Utils Progressive] Next Steps:');",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log('   1. Run `npm run build` to verify chunk generation');",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log('   2. Check bundle analyzer for size improvements');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log('   3. Test progressive loading in application');",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.error('\u274c [Utils Progressive] Activation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 102,
              "content": "console.log('\ud83d\udd04 [Utils Progressive] Restoring backup...');",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "console.log('\u2705 [Utils Progressive] Backup restored');",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "console.log('\\n\ud83d\udccb [Utils Progressive] Activation Summary:', result);",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.error('\ud83d\udca5 [Utils Progressive] Unexpected error:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/Phase4PreloadManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/Phase4PreloadManager.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 660,
              "content": "console.error('Phase 4 preloading failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/bundleAnalyzer.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/bundleAnalyzer.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 234,
              "content": "console.group('\ud83c\udfaf Essential Analytics Bundle Analysis');",
              "type": "group"
            },
            {
              "line_number": 239,
              "content": "console.log('\ud83d\udcca Bundle Comparison:', comparison);",
              "type": "log"
            },
            {
              "line_number": 240,
              "content": "console.log('\u2705 Validation Results:', validation);",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.log('\ud83d\udccb Performance Report:\\n' + generatePerformanceReport());",
              "type": "log"
            },
            {
              "line_number": 243,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/StandardBundleContextManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/StandardBundleContextManager.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 585,
              "content": "console.log(`\ud83d\ude80 Phase 7 Context Optimization: ${reductionPercentage.toFixed(1)}% reduction for ${context}`);",
              "type": "log"
            },
            {
              "line_number": 586,
              "content": "console.log(`\ud83d\udcca Bundle: ${optimization.recommendedVariant} (${(optimization.expectedSize/1024).toFixed(1)}kB)`);",
              "type": "log"
            },
            {
              "line_number": 594,
              "content": "console.error('Failed to load optimized bundle:', error);",
              "type": "error"
            },
            {
              "line_number": 672,
              "content": "console.error(`Bundle loading failed for ${context}-${variant} after ${loadTime.toFixed(0)}ms:`, error);",
              "type": "error"
            },
            {
              "line_number": 895,
              "content": "console.error('Failed to load context bundle:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/UtilsProgressiveStandard.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/UtilsProgressiveStandard.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 368,
              "content": "console.log(`\ud83d\ude80 Phase 7 Utils Optimization: ${reductionPercentage.toFixed(1)}% reduction (26.31kB \u2192 ${bundleSize}kB)`);",
              "type": "log"
            },
            {
              "line_number": 458,
              "content": "console.error('Failed to load utils variant:', currentVariant, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase7-bundle-analyzer.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7-bundle-analyzer.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 147,
              "content": "console.log(`[Phase7] Bundle loaded: ${bundleName}`, {",
              "type": "log"
            },
            {
              "line_number": 261,
              "content": "console.group('[Phase7] Bundle Optimization Status');",
              "type": "group"
            },
            {
              "line_number": 262,
              "content": "console.log(`Total Reduction: ${Math.round(report.totalReduction / 1024)}kB (${Math.round(report.percentageReduction)}%)`);",
              "type": "log"
            },
            {
              "line_number": 263,
              "content": "console.log(`Load Time Improvement: ${Math.round(report.loadTimeImprovement)}ms`);",
              "type": "log"
            },
            {
              "line_number": 265,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/logger.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/logger.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 156,
              "content": "console.error(logMessage, entry.data);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/css-lazy-loading-monitor.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/css-lazy-loading-monitor.ts",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 279,
              "content": "console.group('\ud83c\udfa8 CSS Phase 2 Lazy Loading Performance Report');",
              "type": "group"
            },
            {
              "line_number": 281,
              "content": "console.group('\ud83d\udce6 Bundle Metrics');",
              "type": "group"
            },
            {
              "line_number": 287,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 289,
              "content": "console.group('\u26a1 Loading Performance');",
              "type": "group"
            },
            {
              "line_number": 295,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 297,
              "content": "console.group('\ud83c\udf1f Core Web Vitals Impact');",
              "type": "group"
            },
            {
              "line_number": 301,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 303,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/openbb-analytics.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/openbb-analytics.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 485,
              "content": "console.error(",
              "type": "error"
            },
            {
              "line_number": 567,
              "content": "console.warn(",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/build-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/build-optimization.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 21,
              "content": "console.error(`[BuildOptimization] ${message}`, error);",
              "type": "error"
            },
            {
              "line_number": 222,
              "content": "console.error('Error analyzing dependencies:', error);",
              "type": "error"
            },
            {
              "line_number": 786,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 789,
              "content": "console.log(`   Gzipped: ${this.formatBytes(report.analysis.gzippedSize)}`);",
              "type": "log"
            },
            {
              "line_number": 791,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 848,
              "content": "console.error('\u274c Build optimization failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/bundle-performance-monitor.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/bundle-performance-monitor.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 270,
              "content": "const logMethod = type === 'error' ? console.error : console.warn;",
              "type": "error"
            },
            {
              "line_number": 282,
              "content": "console.error('Performance observer error:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/core/export-interface.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/export-interface.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 183,
              "content": "console.warn(`Failed to preload ${format} export chunk:`, error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/core/error-handler.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/error-handler.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 34,
              "content": "console.error('Data Error:', {",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/core/export-chunk-loader.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/export-chunk-loader.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 176,
              "content": "console.warn(`Failed to preload ${format} chunk:`, error);",
              "type": "warn"
            },
            {
              "line_number": 187,
              "content": "console.warn(`Failed to preload ${format} chunk:`, error);",
              "type": "warn"
            },
            {
              "line_number": 261,
              "content": "console.warn(`Retry ${retryCount}/${strategy.retries} for ${chunkName}:`, lastError.message);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/core/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 134,
              "content": "console.error(`Data error in ${componentName}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chartExport/core/ErrorHandler.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/core/ErrorHandler.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 236,
              "content": "console.error('[ChartExport Error]', logData);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chartExport/core/ExportInterface.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/core/ExportInterface.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 131,
              "content": "console.warn(`Failed to preload ${format} export chunk`);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chartExport/chunks/PDFExportChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/PDFExportChunk.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 38,
              "content": "console.log(`[PDF Export] Starting PDF generation for ${options.filename || 'chart'}`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`[PDF Export] Canvas generated: ${canvas.width}x${canvas.height}`);",
              "type": "log"
            },
            {
              "line_number": 108,
              "content": "console.log(`[PDF Export] Successfully exported ${filename} in ${processingTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "console.error('[PDF Export] Export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 156,
              "content": "console.log('[PDF Export] Watermark added successfully');",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.warn('[PDF Export] Failed to add watermark:', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chartExport/chunks/DataExportChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/DataExportChunk.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 40,
              "content": "console.log(`[${this.exportFormat.toUpperCase()} Export] Processing ${data.length} data records`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`[${this.exportFormat.toUpperCase()} Export] Successfully exported ${result.filename} (${result.size} bytes) in ${processingTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.error(`[${this.exportFormat.toUpperCase()} Export] Export failed:`, error);",
              "type": "error"
            },
            {
              "line_number": 90,
              "content": "console.log(`[CSV Export] Processing ${records.length} records with fields: ${headers.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 107,
              "content": "console.warn(`[CSV Export] Skipping malformed record at index ${index}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 129,
              "content": "console.log(`[JSON Export] Serializing ${data.length} records`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chartExport/chunks/SVGExportChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/SVGExportChunk.ts",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 37,
              "content": "console.log(`[SVG Export] Starting SVG extraction for ${options.filename || 'chart'}`);",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log(`[SVG Export] Successfully exported ${filename} (${blob.size} bytes) in ${processingTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 101,
              "content": "console.error('[SVG Export] Export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 145,
              "content": "console.warn('[SVG Export] Failed to embed styles for element:', styleError);",
              "type": "warn"
            },
            {
              "line_number": 149,
              "content": "console.log('[SVG Export] Computed styles embedded successfully');",
              "type": "log"
            },
            {
              "line_number": 152,
              "content": "console.warn('[SVG Export] Failed to embed computed styles:', error);",
              "type": "warn"
            },
            {
              "line_number": 175,
              "content": "console.log(`[SVG Export] Background color ${backgroundColor} applied`);",
              "type": "log"
            },
            {
              "line_number": 178,
              "content": "console.warn('[SVG Export] Failed to apply background color:', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chartExport/chunks/PNGExportChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/PNGExportChunk.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 50,
              "content": "console.log(`[PNG Export] Starting canvas generation for ${options.filename || 'chart'}`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`[PNG Export] Canvas generated: ${canvas.width}x${canvas.height}`);",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.log(`[PNG Export] Successfully exported ${filename} (${blob.size} bytes) in ${processingTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 97,
              "content": "console.error('[PNG Export] Export failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/critical-css/CriticalCSS.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/critical-css/CriticalCSS.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 245,
              "content": "console.error('Critical CSS extraction failed:', error);",
              "type": "error"
            },
            {
              "line_number": 465,
              "content": "console.error('Failed to inline critical CSS:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase2/UtilsPhase2Manager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase2/UtilsPhase2Manager.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 250,
              "content": "console.error(`Phase 2 Utils: Failed to load chunk ${chunkId}:`, error);",
              "type": "error"
            },
            {
              "line_number": 254,
              "content": "console.warn(`Phase 2 Utils: Attempting fallback for ${chunkId}`);",
              "type": "warn"
            },
            {
              "line_number": 311,
              "content": "console.error(`Phase 2 Utils: Fallback loading also failed:`, fallbackError);",
              "type": "error"
            },
            {
              "line_number": 352,
              "content": "console.log(`Phase 2 Utils: Cleaned up chunk ${chunk.id} (${chunk.size} bytes)`);",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log(`Phase 2 Utils Bundle Optimization:",
              "type": "log"
            },
            {
              "line_number": 460,
              "content": "console.warn('Phase 2 Utils: Preloading failed (non-critical):', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase2/useUtilsPhase2.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase2/useUtilsPhase2.tsx",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 90,
              "content": "console.warn('Phase 2 Utils: Preloading failed (non-critical):', error);",
              "type": "warn"
            },
            {
              "line_number": 149,
              "content": "console.error(`Phase 2 Utils: Failed to load chunk ${chunkId}:`, error);",
              "type": "error"
            },
            {
              "line_number": 171,
              "content": "console.warn(`Phase 2 Utils: Using fallback for ${chunkId}`);",
              "type": "warn"
            },
            {
              "line_number": 184,
              "content": "console.error(`Phase 2 Utils: Fallback also failed for ${chunkId}:`, fallbackError);",
              "type": "error"
            },
            {
              "line_number": 256,
              "content": "console.warn(`Phase 2 Utils: Failed to preload chunk ${chunkId}:`, error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase2/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase2/index.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 97,
              "content": "console.log(`\ud83d\ude80 Phase 2 Utils Bundle Optimization initialized",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.warn('Phase 2: Duplicate chunk priorities detected');",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/lazy-loading/ChunkErrorBoundary.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/lazy-loading/ChunkErrorBoundary.tsx",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 118,
              "content": "console.group(`\ud83d\udea8 Chunk Loading Error - ${chunkName}`);",
              "type": "group"
            },
            {
              "line_number": 120,
              "content": "console.error('Error:', error);",
              "type": "error"
            },
            {
              "line_number": 122,
              "content": "console.error('Error Info:', errorInfo);",
              "type": "error"
            },
            {
              "line_number": 124,
              "content": "console.error('Component Stack:', errorInfo.componentStack);",
              "type": "error"
            },
            {
              "line_number": 126,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 171,
              "content": "console.warn(`Maximum retry attempts (${maxRetries}) reached for chunk: ${chunkName}`);",
              "type": "warn"
            },
            {
              "line_number": 201,
              "content": "console.log(`\ud83d\udd04 Retrying chunk load for ${chunkName} (attempt ${retryCount + 1}/${maxRetries}) in ${delay}ms`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/lazy-loading/PreloadingProvider.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/lazy-loading/PreloadingProvider.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 341,
              "content": "console.error(`Failed to preload ${type} components:`, error);",
              "type": "error"
            },
            {
              "line_number": 360,
              "content": "console.error('Failed to get preloading status:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/lazy-loading/createLazyComponent.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/lazy-loading/createLazyComponent.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 93,
              "content": "console.warn(`Chunk loading failed (attempt ${attempt + 1}/${retryAttempts + 1}):`, error);",
              "type": "warn"
            },
            {
              "line_number": 205,
              "content": "console.error('Failed to preload component:', error);",
              "type": "error"
            },
            {
              "line_number": 236,
              "content": "console.error('Failed to preload component during idle time:', error);",
              "type": "error"
            },
            {
              "line_number": 261,
              "content": "console.error(`Failed to preload component for route ${pattern}:`, error);",
              "type": "error"
            },
            {
              "line_number": 295,
              "content": "console.error('Failed to preload component on intersection:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/chunks/text-analysis-progressive-manager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chunks/text-analysis-progressive-manager.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 95,
              "content": "console.log(`\ud83d\udcbe Phase 5 Cache Hit: ${chunkName} (${cached.accessCount} accesses)`);",
              "type": "log"
            },
            {
              "line_number": 137,
              "content": "console.log(`\u2705 Phase 5 Chunk Loaded: ${chunkName} (${metrics.loadTime.toFixed(1)}ms, ${Math.round(chunkSize/1024)}kB)`);",
              "type": "log"
            },
            {
              "line_number": 143,
              "content": "console.error(`\u274c Phase 5 Chunk Load Failed: ${chunkName}`, error);",
              "type": "error"
            },
            {
              "line_number": 304,
              "content": "console.error(`Coordination callback error for ${chunkName}:`, error);",
              "type": "error"
            },
            {
              "line_number": 332,
              "content": "console.log(`\ud83d\uddd1\ufe0f Phase 5: Evicted chunk ${chunkName} (${Math.round(cached.size/1024)}kB)`);",
              "type": "log"
            },
            {
              "line_number": 418,
              "content": "console.error(`Failed to load text analysis chunk: ${chunkName}`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase6-micro-chunking/progressive-loader.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase6-micro-chunking/progressive-loader.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 236,
              "content": "console.log(`[Phase6] Loaded utility micro-chunk: ${chunk.id} (${chunk.size} bytes)`);",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.error(`[Phase6] Failed to load utility chunk: ${chunk.id}`, error);",
              "type": "error"
            },
            {
              "line_number": 341,
              "content": "console.log('[Phase6] Utils Progressive Loader initialized - Micro-chunking architecture active');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/BundleSplitConfig.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/BundleSplitConfig.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 217,
              "content": "pure_funcs: ['console.log', 'console.debug']",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsEssential.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsEssential.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 290,
              "content": "console.error(`[${context}] Error:`, error.message);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/Phase7DEnhancement.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/Phase7DEnhancement.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 43,
              "content": "console.log('\ud83d\ude80 Phase 7D enhancement enabled for existing progressive utils system');",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.warn('Phase 7D loading failed, falling back to original system:', error);",
              "type": "warn"
            },
            {
              "line_number": 99,
              "content": "console.warn('Phase 7D route loading failed, falling back:', error);",
              "type": "warn"
            },
            {
              "line_number": 124,
              "content": "console.warn('Phase 7D context loading failed, falling back:', error);",
              "type": "warn"
            },
            {
              "line_number": 272,
              "content": "console.warn('Phase 7D route creation failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 293,
              "content": "console.warn('Phase 7D optimization failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 328,
              "content": "console.log('\ud83d\udd04 Phase 7D gradual migration enabled - existing APIs will be enhanced progressively');",
              "type": "log"
            },
            {
              "line_number": 344,
              "content": "console.warn('Phase 7D enhancement failed, using original function:', error);",
              "type": "warn"
            },
            {
              "line_number": 391,
              "content": "console.warn('Phase 7D performance validation failed:', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/useProgressiveLoading.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/useProgressiveLoading.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 94,
              "content": "console.error(`Progressive loading failed for ${bundleId}:`, loadError);",
              "type": "error"
            },
            {
              "line_number": 105,
              "content": "console.error(`Fallback failed for ${bundleId}:`, fallbackError);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsContext.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsContext.tsx",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 64,
              "content": "console.log('\ud83d\ude80 [UtilsProvider] Initializing Utils progressive architecture...');",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log(`\ud83d\udccb [UtilsProvider] Loading strategy for ${progressive.context.applicationContext}:`, {",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log('\u2705 [UtilsProvider] Utils progressive architecture initialized successfully', {",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.error('\u274c [UtilsProvider] Utils initialization failed:', err);",
              "type": "error"
            },
            {
              "line_number": 140,
              "content": "console.log(`\ud83d\udd04 [UtilsProvider] Context adapted for ${progressive.context.applicationContext}`);",
              "type": "log"
            },
            {
              "line_number": 144,
              "content": "console.warn('\u26a0\ufe0f [UtilsProvider] Context adaptation warning:', err);",
              "type": "warn"
            },
            {
              "line_number": 160,
              "content": "console.warn('\u26a0\ufe0f [UtilsProvider] Low chunk success rate:', metrics.chunkSuccessRate);",
              "type": "warn"
            },
            {
              "line_number": 164,
              "content": "console.warn('\u26a0\ufe0f [UtilsProvider] Total load time exceeds target:', metrics.totalLoadTime);",
              "type": "warn"
            },
            {
              "line_number": 277,
              "content": "console.error('\ud83d\udea8 [UtilsLoadingBoundary] Utils loading error:', error, errorInfo);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsProgressiveLoader.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsProgressiveLoader.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 110,
              "content": "console.error(this.state.error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsPerformanceValidator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsPerformanceValidator.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 112,
              "content": "console.log('\ud83d\udd0d [UtilsValidator] Starting performance validation...');",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "console.log(`\u2705 [UtilsValidator] Performance validation complete (${validationTime.toFixed(2)}ms):`, {",
              "type": "log"
            },
            {
              "line_number": 397,
              "content": "console.error('\u274c [UtilsValidator] Monitoring validation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 401,
              "content": "console.log(`\ud83d\udd04 [UtilsValidator] Continuous monitoring started (${intervalMs}ms interval)`);",
              "type": "log"
            },
            {
              "line_number": 413,
              "content": "console.log('\u23f9\ufe0f [UtilsValidator] Continuous monitoring stopped');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/fallbacks.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/fallbacks.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 64,
              "content": "console.error(`Progressive loading error in ${this.props.bundleId || 'unknown bundle'}:`, error, errorInfo);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/activateArchitecture.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/activateArchitecture.ts",
          "console_count": 15,
          "console_lines": [
            {
              "line_number": 36,
              "content": "console.log('\ud83d\udfe2 [UtilsArchitecture] Progressive architecture already activated');",
              "type": "log"
            },
            {
              "line_number": 48,
              "content": "console.log('\ud83d\ude80 [UtilsArchitecture] Starting progressive architecture activation...');",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log('\ud83d\udce6 [UtilsArchitecture] Phase 1: Initializing progressive loading system...');",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log('\u26a1 [UtilsArchitecture] Phase 2: Activating enhanced bundle architecture...');",
              "type": "log"
            },
            {
              "line_number": 64,
              "content": "console.log('\ud83c\udfad [UtilsArchitecture] Phase 3: Initializing progressive orchestrator...');",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log('\u2705 [UtilsArchitecture] Phase 4: Validating architecture activation...');",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log('\ud83c\udfaf [UtilsArchitecture] Progressive architecture activation SUCCESSFUL!', {",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.log('\ud83d\udcca [UtilsArchitecture] Bundle optimization summary:', {",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.error('\u274c [UtilsArchitecture] Progressive architecture activation FAILED:', activationResult.errors);",
              "type": "error"
            },
            {
              "line_number": 152,
              "content": "console.error('\ud83d\udca5 [UtilsArchitecture] Architecture activation error:', error);",
              "type": "error"
            },
            {
              "line_number": 185,
              "content": "console.log('\ud83d\udd04 [UtilsArchitecture] Forcing architecture reactivation...');",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.log('\ud83c\udf1f [UtilsArchitecture] Auto-activating progressive architecture...');",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log('\u2728 [UtilsArchitecture] Auto-activation complete:', {",
              "type": "log"
            },
            {
              "line_number": 257,
              "content": "console.log('\ud83d\udd27 [UtilsArchitecture] Debug: window.__utilsArchitectureStatus() available');",
              "type": "log"
            },
            {
              "line_number": 262,
              "content": "console.error('\u274c [UtilsArchitecture] Auto-activation failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsProgressiveOrchestrator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsProgressiveOrchestrator.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 144,
              "content": "console.log(`[UtilsOrchestrator] Variant selected: ${result.selectedVariant} (${selectionTime.toFixed(2)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 378,
              "content": "console.log(`[UtilsOrchestrator] Loaded ${variant} variant (${loadTime.toFixed(2)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 398,
              "content": "console.log(`[UtilsOrchestrator] Upgrading variant: ${this.currentVariant} -> ${targetVariant} (${reason})`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/ProgressiveLoadingManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/ProgressiveLoadingManager.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 535,
              "content": "console.error(`Fallback failed for ${bundleId}:`, fallbackError);",
              "type": "error"
            },
            {
              "line_number": 694,
              "content": "console.error(`Error in progressive loading event handler:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/PerformanceValidator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/PerformanceValidator.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 536,
              "content": "console.log(`Overall Grade: ${result.overall.grade} (${result.overall.score.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 540,
              "content": "console.log(`\\n\ud83d\udce6 Bundle Size: ${(bs.original/1024).toFixed(1)}kB \u2192 ${(bs.optimized/1024).toFixed(1)}kB (${(bs.reductionPercentage*100).toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 545,
              "content": "result.criticalIssues.forEach(issue => console.log(`   ${issue}`));",
              "type": "log"
            },
            {
              "line_number": 550,
              "content": "result.recommendations.forEach(rec => console.log(`   ${rec}`));",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/index.ts",
          "console_count": 10,
          "console_lines": [
            {
              "line_number": 124,
              "content": "console.log(`\ud83d\udcca Progressive Loading Success: ${event.bundleId}`, {",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.group('\ud83d\udcc8 Progressive Loading Performance Report');",
              "type": "group"
            },
            {
              "line_number": 147,
              "content": "console.log('Bundle Reduction:', `${(report.performanceImprovements.bundleReduction * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log('Load Time Improvement:', `${(report.performanceImprovements.loadTimeImprovement * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 149,
              "content": "console.log('Cache Efficiency:', `${(report.performanceImprovements.cacheEfficiency * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 154,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 160,
              "content": "console.log('\ud83d\ude80 Progressive Loading System Initialized', {",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": ".catch(error => console.debug(`Preload failed for ${bundleId}:`, error))",
              "type": "debug"
            },
            {
              "line_number": 405,
              "content": "console.log('\ud83d\ude80 [ProgressiveIndex] Enhanced Utils architecture activation triggered');",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.error('\u274c [ProgressiveIndex] Failed to trigger architecture activation:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsBundleActivator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsBundleActivator.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 173,
              "content": "console.error(`\u274c [UtilsBundleActivator] Failed to activate ${config.id}:`, bundleResult.errors);",
              "type": "error"
            },
            {
              "line_number": 178,
              "content": "console.error(`\u274c [UtilsBundleActivator] ${errorMessage}`);",
              "type": "error"
            },
            {
              "line_number": 363,
              "content": "console.error(`\u274c [UtilsBundleActivator] Failed to load shared resource ${resourceId}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/progressive/UtilsMetrics.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsMetrics.ts",
          "console_count": 11,
          "console_lines": [
            {
              "line_number": 128,
              "content": "console.log(`${status} [UtilsMetrics] ${chunkName} in ${context}: ${loadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 140,
              "content": "console.log(`\ud83d\udd04 [UtilsMetrics] Context switch: ${from} \u2192 ${to}`);",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.log('\ud83d\udd04 [UtilsMetrics] Metrics reset');",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.group('\ud83d\udcca Utils Performance Insights');",
              "type": "group"
            },
            {
              "line_number": 408,
              "content": "console.log('Bundle Reduction:', `${report.summary.bundleReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 409,
              "content": "console.log('Average Load Time:', `${report.summary.averageLoadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 410,
              "content": "console.log('Success Rate:', `${report.summary.successRate.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 411,
              "content": "console.log('Context Switches:', report.summary.contextSwitches);",
              "type": "log"
            },
            {
              "line_number": 414,
              "content": "console.log('\ud83c\udfaf Optimization Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 416,
              "content": "console.log(`  \u2022 ${rec.description} (${rec.expectedImprovement})`);",
              "type": "log"
            },
            {
              "line_number": 420,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/micro-chunks/ExportUtilitiesChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/ExportUtilitiesChunk.ts",
          "console_count": 10,
          "console_lines": [
            {
              "line_number": 40,
              "content": "console.warn('No data provided for CSV export');",
              "type": "warn"
            },
            {
              "line_number": 80,
              "content": "console.error('CSV export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 105,
              "content": "console.error('JSON export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 157,
              "content": "console.error('Excel CSV export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 197,
              "content": "console.warn(`Transformer failed for column ${column}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 239,
              "content": "console.warn('No datasets provided for batch export');",
              "type": "warn"
            },
            {
              "line_number": 258,
              "content": "console.warn(`Unknown format '${format}' for dataset ${index}`);",
              "type": "warn"
            },
            {
              "line_number": 267,
              "content": "console.error(`Batch export failed for dataset ${index}:`, error);",
              "type": "error"
            },
            {
              "line_number": 282,
              "content": "console.error('Data URL export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 343,
              "content": "console.error('File download failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/micro-chunks/PerformanceMonitorChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/PerformanceMonitorChunk.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 34,
              "content": "console.warn('Performance timer start failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 81,
              "content": "console.warn('Performance timer end failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 197,
              "content": "console.warn('Memory tracking failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 295,
              "content": "console.warn('Connection info failed:', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/micro-chunks/CoreEssentialChunk.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/CoreEssentialChunk.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 181,
              "content": "console.error(`Data error in ${componentName}:`, error);",
              "type": "error"
            },
            {
              "line_number": 183,
              "content": "console.warn(`Error in ${componentName}:`, error.message);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/micro-chunks/phase7d/Phase7DOrchestrator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/phase7d/Phase7DOrchestrator.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 380,
              "content": "console.warn(`Unknown micro-chunk: ${chunkName}`);",
              "type": "warn"
            },
            {
              "line_number": 388,
              "content": "console.error(`Failed to load micro-chunk ${chunkName}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/micro-chunks/phase7d/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/phase7d/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 61,
              "content": "console.log('\ud83d\ude80 Phase 7D Utils Optimization initialized');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase7/DashboardPerformanceMonitor.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7/DashboardPerformanceMonitor.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 148,
              "content": "console.log(`Phase 7 ${variant} Bundle:`, {",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log('Phase 7 LCP:', `${entry.startTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log('Phase 7 FID:', `${fid.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('Phase 7 CLS:', cls.toFixed(4));",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log(`Phase 7 ${variant} Load:`, {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase8/Phase8Manager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/Phase8Manager.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 114,
              "content": "console.error('Phase 8 loading failed:', error);",
              "type": "error"
            },
            {
              "line_number": 317,
              "content": "console.warn(`Phase 8: Load time ${loadTime}ms exceeds threshold ${this.config.maxLoadTime}ms`);",
              "type": "warn"
            },
            {
              "line_number": 391,
              "content": "console.log('\ud83d\ude80 Phase 8 Optimization Result:', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase8/compatibility/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/compatibility/index.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 115,
              "content": "console.error(`Migration failed for ${functionName}:`, error);",
              "type": "error"
            },
            {
              "line_number": 203,
              "content": "console.warn('Phase 8 rollback completed - reverted to Phase 7 legacy system');",
              "type": "warn"
            },
            {
              "line_number": 207,
              "content": "console.error('Rollback failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/utils/phase8/progressive/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/progressive/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 78,
              "content": "console.error('Phase 8 loading error:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/CSSErrorBoundary.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/CSSErrorBoundary.tsx",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 248,
              "content": "console.error('CSS Error Boundary caught an error:', error, errorInfo);",
              "type": "error"
            },
            {
              "line_number": 260,
              "content": "console.group('\ud83c\udfa8 CSS Loading Error');",
              "type": "group"
            },
            {
              "line_number": 261,
              "content": "console.error('Error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 262,
              "content": "console.error('CSS Path:', this.props.cssPath);",
              "type": "error"
            },
            {
              "line_number": 263,
              "content": "console.error('Component Stack:', errorInfo.componentStack);",
              "type": "error"
            },
            {
              "line_number": 264,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 306,
              "content": "console.error(`\u274c CSS reload failed: ${cssPath}`, error);",
              "type": "error"
            },
            {
              "line_number": 383,
              "content": "console.error(`CSS loading error for ${cssPath}:`, error);",
              "type": "error"
            },
            {
              "line_number": 396,
              "content": "console.error(`CSS retry failed for ${cssPath}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/vix-tooltip/context/ChartTooltipProvider.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/context/ChartTooltipProvider.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 89,
              "content": "console.debug(`[ChartTooltipProvider] Successfully preloaded tooltip: ${chartType}`);",
              "type": "debug"
            },
            {
              "line_number": 91,
              "content": "console.warn(`[ChartTooltipProvider] Failed to preload tooltip: ${chartType}`, error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/vix-tooltip/progressive/ProgressiveFeatureLoader.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/progressive/ProgressiveFeatureLoader.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 270,
              "content": "console.error(`Failed to import feature module: ${featureId}`, error);",
              "type": "error"
            },
            {
              "line_number": 474,
              "content": "console.warn('Memory pressure detected, consider increasing memory budget or reducing feature usage');",
              "type": "warn"
            },
            {
              "line_number": 485,
              "content": "console.error('Error in feature loading event listener:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/vix-tooltip/progressive/LoadingOrchestrator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/progressive/LoadingOrchestrator.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 218,
              "content": "console.warn('Loading orchestration timeout, proceeding with loaded features');",
              "type": "warn"
            },
            {
              "line_number": 225,
              "content": "console.error('Loading orchestration failed:', error);",
              "type": "error"
            },
            {
              "line_number": 269,
              "content": "console.warn(`Optional phase ${phase.phase} failed:`, error);",
              "type": "warn"
            },
            {
              "line_number": 497,
              "content": "console.warn(`Failed to load essential feature ${featureId}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 515,
              "content": "console.warn(`Failed to load basic feature ${featureId}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 523,
              "content": "console.error('Fallback strategy failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/vix-tooltip/hooks/useProgressiveTooltipV2.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/hooks/useProgressiveTooltipV2.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 305,
              "content": "console.warn('Failed to load essential features:', error);",
              "type": "warn"
            },
            {
              "line_number": 368,
              "content": "console.error('Failed to analyze and load features:', error);",
              "type": "error"
            },
            {
              "line_number": 455,
              "content": "console.error('Failed to initialize essential features:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/vix-tooltip/factory/useSmartTooltip.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/factory/useSmartTooltip.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 162,
              "content": "console.debug(`[useSmartTooltip] Preloaded tooltip: ${effectiveConfig.chartType}`);",
              "type": "debug"
            },
            {
              "line_number": 164,
              "content": "console.warn(`[useSmartTooltip] Failed to preload tooltip: ${effectiveConfig.chartType}`, error);",
              "type": "warn"
            },
            {
              "line_number": 208,
              "content": "console.warn(`[useSmartTooltip] Failed to load tooltip variant: ${targetVariant}`, error);",
              "type": "warn"
            },
            {
              "line_number": 270,
              "content": "console.warn(`[useSmartTooltip] Loading timeout for tooltip: ${effectiveConfig.chartType}`);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/ui/vix-tooltip/factory/createChartTooltip.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/factory/createChartTooltip.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 73,
              "content": "console.warn(`Failed to preload tooltip for chart type: ${chartType}`, error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/securities/SecuritiesCharts.Progressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/securities/SecuritiesCharts.Progressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 224,
              "content": "console.log('SecuritiesCharts Progressive Selection:', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/securities/SecuritiesCharts.Advanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/securities/SecuritiesCharts.Advanced.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 180,
              "content": "console.error('Failed to load technical indicators:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/securities/SecuritiesProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/securities/SecuritiesProgressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 239,
              "content": "console.error(`Failed to load ${feature}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/css-optimization/ResponsiveLayoutEngine.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/css-optimization/ResponsiveLayoutEngine.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 246,
              "content": "console.warn(`Layout generator '${type}' not found`);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/LocalPointPhase3Progressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LocalPointPhase3Progressive.tsx",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 283,
              "content": "console.error('Failed to process point:', error);",
              "type": "error"
            },
            {
              "line_number": 366,
              "content": "console.error('Failed to preload chart:', error);",
              "type": "error"
            },
            {
              "line_number": 485,
              "content": "console.error('Failed to preload:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/VixBarChartPhase3LocalPoint.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/VixBarChartPhase3LocalPoint.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 132,
              "content": "console.log('Phase 3 LocalPoint Metrics:', {",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.warn('Phase 3 LocalPoint failed:', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/LazyCharts.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LazyCharts.tsx",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 209,
              "content": "console.warn('Failed to preload charts:', error);",
              "type": "warn"
            },
            {
              "line_number": 220,
              "content": "console.warn('Failed to preload core charts:', error);",
              "type": "warn"
            },
            {
              "line_number": 231,
              "content": "console.warn('Failed to preload basic charts:', error);",
              "type": "warn"
            },
            {
              "line_number": 240,
              "content": "console.warn('Failed to get preload status:', error);",
              "type": "warn"
            },
            {
              "line_number": 365,
              "content": "console.log('\ud83d\ude80 LazyCharts Phase 6 Progressive Architecture Initialized:', {",
              "type": "log"
            },
            {
              "line_number": 374,
              "content": "console.log('\ud83d\udcca Device Context Detection:', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/LocalPointPhase3MicroChunking.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LocalPointPhase3MicroChunking.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 321,
              "content": "console.error('Failed to load micro chunk:', error);",
              "type": "error"
            },
            {
              "line_number": 405,
              "content": "console.error('Failed to load chunk:', chunkId, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/ChartInfrastructureIntegration.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/ChartInfrastructureIntegration.tsx",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 459,
              "content": "console.group('\ud83d\udcca Chart Infrastructure Migration Metrics');",
              "type": "group"
            },
            {
              "line_number": 460,
              "content": "console.table(metrics.bundleReduction);",
              "type": "table"
            },
            {
              "line_number": 461,
              "content": "console.log('\ud83d\ude80', metrics.loadingImprovement);",
              "type": "log"
            },
            {
              "line_number": 462,
              "content": "console.log('\u2705', metrics.compatibilityStatus);",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/LazyCharts.Standard.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LazyCharts.Standard.tsx",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 71,
              "content": "console.error(`Failed to load ${chunkName}:`, error);",
              "type": "error"
            },
            {
              "line_number": 82,
              "content": "console.error(`\ud83d\udea8 Failed to load ${chunkName} after ${maxRetries} attempts`);",
              "type": "error"
            },
            {
              "line_number": 103,
              "content": "link.onload = () => console.log(`\ud83d\udce6 Prefetched ${chunkName}`);",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "link.onerror = () => console.warn(`\u26a0\ufe0f Failed to prefetch ${chunkName}`);",
              "type": "warn"
            },
            {
              "line_number": 232,
              "content": "console.error(`Standard chart error in ${componentName}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/PriceChart.Progressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/PriceChart.Progressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 225,
              "content": "console.log('PriceChart Progressive Selection:', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/PriceChart.Advanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/PriceChart.Advanced.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 153,
              "content": "console.error('Failed to load technical indicators:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/LocalPointPhase3Unified.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LocalPointPhase3Unified.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 204,
              "content": "console.error('Failed to get enhanced point:', error);",
              "type": "error"
            },
            {
              "line_number": 285,
              "content": "console.error('Failed to initialize unified system:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/LazyCharts.Advanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LazyCharts.Advanced.tsx",
          "console_count": 20,
          "console_lines": [
            {
              "line_number": 117,
              "content": "console.warn('Performance monitoring not available:', error);",
              "type": "warn"
            },
            {
              "line_number": 138,
              "content": "console.log(`[${operationId}] \ud83d\ude80 Starting advanced chart import: ${chunkName}`);",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.log(`[${operationId}] \ud83d\udcdd Import attempt ${retryCount + 1}/${retryAttempts + 1} for ${chunkName}`);",
              "type": "log"
            },
            {
              "line_number": 175,
              "content": "console.log(`[${operationId}] \u2705 Advanced Chart Loaded: ${chunkName} in ${totalTime.toFixed(2)}ms (${retryCount} retries, attempt time: ${attemptTime.toFixed(2)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 176,
              "content": "console.log(`[${operationId}] \ud83d\udce6 Module exports:`, Object.keys(module));",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.warn(`[${operationId}] \u26a0\ufe0f Advanced Chart Import Failed: ${chunkName} attempt ${retryCount}/${retryAttempts + 1}`);",
              "type": "warn"
            },
            {
              "line_number": 187,
              "content": "console.warn(`[${operationId}] \ud83d\udca5 Error:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 188,
              "content": "console.warn(`[${operationId}] \u23f0 Time so far: ${currentTime.toFixed(2)}ms`);",
              "type": "warn"
            },
            {
              "line_number": 211,
              "content": "console.error(`[${operationId}] \u274c FINAL FAILURE: Advanced chart loading for ${chunkName}`);",
              "type": "error"
            },
            {
              "line_number": 212,
              "content": "console.error(`[${operationId}] \ud83d\udcca Total time: ${totalTime.toFixed(2)}ms`);",
              "type": "error"
            },
            {
              "line_number": 213,
              "content": "console.error(`[${operationId}] \ud83d\udd04 Retry attempts: ${retryCount - 1}`);",
              "type": "error"
            },
            {
              "line_number": 214,
              "content": "console.error(`[${operationId}] \ud83d\udea8 Last error:`, lastError);",
              "type": "error"
            },
            {
              "line_number": 225,
              "content": "console.warn(`[${operationId}] \u23f3 Retrying ${chunkName} in ${delay.toFixed(0)}ms...`);",
              "type": "warn"
            },
            {
              "line_number": 242,
              "content": "console.log(`\ud83d\udd04 Advanced Preload Started: ${chunkName}`);",
              "type": "log"
            },
            {
              "line_number": 386,
              "content": "console.warn('\ud83d\udd04 Primary OpenBBChart import failed, trying alternative paths:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 394,
              "content": "console.error('\ud83d\udea8 All OpenBBChart import attempts failed');",
              "type": "error"
            },
            {
              "line_number": 395,
              "content": "console.error('Primary error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 396,
              "content": "console.error('Fallback error:', fallbackError.message);",
              "type": "error"
            },
            {
              "line_number": 440,
              "content": "console.error(`\ud83d\udea8 Advanced Chart Error in ${componentName}:`, error);",
              "type": "error"
            },
            {
              "line_number": 445,
              "content": "console.warn(`\ud83d\udd04 Enabling fallback mode for ${componentName}`);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/BaseChart.Advanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/BaseChart.Advanced.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 87,
              "content": "console.log(`[BaseChart-Advanced] Render #${metrics.renderCount + 1}: ${renderTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log(`[Analytics] Chart Error: ${props.analyticsId}`, { error });",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/OpenBBChartOptimized.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/OpenBBChartOptimized.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 298,
              "content": "console.log('OpenBB Chart Performance:', metrics);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/axis/AxisProgressivePhase7.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/axis/AxisProgressivePhase7.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 496,
              "content": "console.error('Failed to load progressive axis variant:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixBarChart-Progressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixBarChart-Progressive.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 224,
              "content": "console.error('Failed to load layer:', layer, error);",
              "type": "error"
            },
            {
              "line_number": 420,
              "content": "onExport={(type) => console.log(`Exported as ${type}`)}",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixResponsiveWrapper.Advanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixResponsiveWrapper.Advanced.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 237,
              "content": "console.log('[VixResponsiveWrapper Advanced] Resize complete:', {",
              "type": "log"
            },
            {
              "line_number": 252,
              "content": "console.log('[VixResponsiveWrapper Advanced] Resize started');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixResponsiveWrapper.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixResponsiveWrapper.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 170,
              "content": "*   onVariantChange={(variant, reason) => console.log('Using:', variant)}",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixScatterPlotProgressiveEnhanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixScatterPlotProgressiveEnhanced.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 204,
              "content": "console.log('Upgrade to advanced scatter plot');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixPieChartProgressivePhase7.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixPieChartProgressivePhase7.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 192,
              "content": "console.log('Upgrade to advanced pie chart');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixComposedChart.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixComposedChart.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 460,
              "content": "console.log('\ud83d\ude80 VixComposedChart Ultra-Optimized: Target 16.40kB \u2192 3.3-4.1kB (75-80% reduction)');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixComposedChartProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixComposedChartProgressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 322,
              "content": "console.log('[Phase7] VixComposedChart orchestrator initialized:', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/VixScatterPlotProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixScatterPlotProgressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 385,
              "content": "console.error('[VixScatterPlotProgressive] Loading failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/variants/VixComposedChartEssential.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/variants/VixComposedChartEssential.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 239,
              "content": "console.log('[Phase7] VixComposedChartEssential loaded - Target: 1.5-2kB (85%+ reduction)');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/AnalyticsRiskCore.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/AnalyticsRiskCore.tsx",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 94,
              "content": "onError={(error) => console.error('RiskIndicators error:', error)}",
              "type": "error"
            },
            {
              "line_number": 109,
              "content": "onError={(error) => console.error('RiskMetrics error:', error)}",
              "type": "error"
            },
            {
              "line_number": 124,
              "content": "onError={(error) => console.error('RiskCalculations error:', error)}",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/AnalyticsTabsCore.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/AnalyticsTabsCore.tsx",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 157,
              "content": "onError={(error) => console.error('TabContent error:', error)}",
              "type": "error"
            },
            {
              "line_number": 172,
              "content": "onError={(error) => console.error('TabVisuals error:', error)}",
              "type": "error"
            },
            {
              "line_number": 187,
              "content": "onError={(error) => console.error('TabUtils error:', error)}",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/accurate-integration-assessment.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/accurate-integration-assessment.js",
          "console_count": 88,
          "console_lines": [
            {
              "line_number": 5,
              "content": "console.log('\ud83c\udfaf Phase 7D ACCURATE Integration Assessment');",
              "type": "log"
            },
            {
              "line_number": 6,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 38,
              "content": "console.log('\ud83d\udce6 ACCURATE BUNDLE SIZE ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 39,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log('\ud83c\udfc6 LAYER 1 - ESSENTIAL CORE');",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log(`   Original Size:        ${actualResults.essential.originalSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 44,
              "content": "console.log(`   Optimized Size:       ${actualResults.essential.optimizedSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log(`   Reduction:           ${actualResults.essential.reduction}%`);",
              "type": "log"
            },
            {
              "line_number": 46,
              "content": "console.log(`   Target Range:        800-1,200 bytes`);",
              "type": "log"
            },
            {
              "line_number": 47,
              "content": "console.log(`   Status:              \u2705 ${actualResults.essential.status} (EXCELLENT)`);",
              "type": "log"
            },
            {
              "line_number": 48,
              "content": "console.log(`   Production Ready:    \u2705 IMMEDIATE DEPLOYMENT`);",
              "type": "log"
            },
            {
              "line_number": 49,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 52,
              "content": "console.log('\ud83d\ude80 LAYER 2 - PROGRESSIVE ENHANCEMENTS');",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`   Bundle Size:         ${actualResults.progressive.bundleSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 54,
              "content": "console.log(`   Target Range:        ${actualResults.progressive.target.min}-${actualResults.progressive.target.max} bytes`);",
              "type": "log"
            },
            {
              "line_number": 55,
              "content": "console.log(`   Efficiency:          ${actualResults.progressive.efficiency}% vs target`);",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log(`   Status:              \u2705 ${actualResults.progressive.status} (EXCELLENT)`);",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log(`   Production Ready:    \u2705 IMMEDIATE DEPLOYMENT`);",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 64,
              "content": "console.log('\ud83c\udfaf COMBINED PRODUCTION SYSTEM (LAYERS 1+2)');",
              "type": "log"
            },
            {
              "line_number": 65,
              "content": "console.log(`   Combined Size:       ${combinedSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 66,
              "content": "console.log(`   Original Size:       ${actualResults.essential.originalSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log(`   Total Reduction:     ${combinedReduction.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log(`   Target Achievement:  \u2705 EXCEEDS 60-67% target`);",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log(`   Status:              \ud83c\udfc6 OUTSTANDING SUCCESS`);",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log('\u26a1 LAYER 3 - ADVANCED FEATURES (SPECIALIZED)');",
              "type": "log"
            },
            {
              "line_number": 74,
              "content": "console.log(`   Bundle Size:         ${actualResults.advanced.bundleSize.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log(`   Target Size:         ${actualResults.advanced.target.toLocaleString()} bytes`);",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log(`   Efficiency:          ${actualResults.advanced.efficiency}% of target`);",
              "type": "log"
            },
            {
              "line_number": 77,
              "content": "console.log(`   Status:              \u26a0\ufe0f ${actualResults.advanced.status} (FOR OPTIMIZATION)`);",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log(`   Usage:               \ud83c\udfaf SPECIALIZED POWER USERS ONLY`);",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log('\ud83c\udfc6 PRODUCTION DEPLOYMENT STRATEGY');",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 109,
              "content": "console.log(`${index + 1}. ${tier.name}`);",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log(`   Bundle Size:      ${typeof tier.size === 'number' ? tier.size.toLocaleString() + ' bytes' : 'Variable'}`);",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log(`   Reduction:        ${typeof tier.reduction === 'number' ? tier.reduction.toFixed(1) + '%' : tier.reduction}`);",
              "type": "log"
            },
            {
              "line_number": 112,
              "content": "console.log(`   Target Users:     ${tier.target}`);",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log(`   Status:           ${tier.status}`);",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log('\u26a1 PERFORMANCE IMPACT ANALYSIS');",
              "type": "log"
            },
            {
              "line_number": 118,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 137,
              "content": "console.log(`\ud83d\udcca ${metric.tier}`);",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.log(`   Load Time (3G):      ${metric.loadTime3G}ms (vs 180ms baseline)`);",
              "type": "log"
            },
            {
              "line_number": 139,
              "content": "console.log(`   Improvement:         ${metric.improvement.toFixed(1)}% faster`);",
              "type": "log"
            },
            {
              "line_number": 140,
              "content": "console.log(`   Memory Reduction:    ~85% less memory usage`);",
              "type": "log"
            },
            {
              "line_number": 141,
              "content": "console.log(`   Network Savings:     ${((9160 - metric.size) / 1024).toFixed(1)}KB per load`);",
              "type": "log"
            },
            {
              "line_number": 142,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log('\ud83c\udfaf BUSINESS IMPACT VALIDATION');",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 158,
              "content": "console.log(`   ${label}:`.padEnd(25) + value);",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log('\ud83d\udccb QUALITY ASSURANCE METRICS');",
              "type": "log"
            },
            {
              "line_number": 163,
              "content": "console.log('-'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log(`   ${key}:`.padEnd(25) + value);",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log('\ud83c\udfc6 FINAL VALIDATION SCORECARD');",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log(`${category}:`.padEnd(25) + grade);",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log(`OVERALL GRADE: ${overallGrade} (${overallGrade === 'A+' ? 'OUTSTANDING' : 'EXCELLENT'} SUCCESS)`);",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.log('\u2705 INTEGRATION SUCCESS SUMMARY');",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            },
            {
              "line_number": 208,
              "content": "console.log('\ud83c\udf89 PHASE 7D INTEGRATION: COMPLETE SUCCESS');",
              "type": "log"
            },
            {
              "line_number": 209,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 210,
              "content": "console.log('KEY ACHIEVEMENTS:');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log(`\u2705 Bundle Reduction:      ${combinedReduction.toFixed(1)}% (EXCEEDS 60-67% target)`);",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log(`\u2705 Load Time Improvement: ${combinedReduction.toFixed(1)}% faster`);",
              "type": "log"
            },
            {
              "line_number": 213,
              "content": "console.log(`\u2705 Memory Efficiency:     85% reduction`);",
              "type": "log"
            },
            {
              "line_number": 214,
              "content": "console.log(`\u2705 Production Ready:      Layers 1-2 ready for immediate deployment`);",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log(`\u2705 Code Quality:          100% compliance with all standards`);",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log(`\u2705 Test Coverage:         94.7% comprehensive validation`);",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log(`\u2705 Compatibility:         100% browser support`);",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log(`\u2705 Developer Experience:  Modular micro-chunk architecture`);",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log('\ud83d\ude80 DEPLOYMENT RECOMMENDATION:');",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.log('   PROCEED WITH IMMEDIATE PRODUCTION DEPLOYMENT');",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.log('   - Deploy Essential + Progressive layers (3.8kB total)');",
              "type": "log"
            },
            {
              "line_number": 224,
              "content": "console.log('   - Continue optimizing Advanced layer in parallel');",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log('   - Monitor performance and gather usage analytics');",
              "type": "log"
            },
            {
              "line_number": 227,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 228,
              "content": "console.log('\ud83c\udfc6 PHASE 7D: MISSION ACCOMPLISHED');",
              "type": "log"
            },
            {
              "line_number": 229,
              "content": "console.log('   Outstanding success with industry-leading optimization results');",
              "type": "log"
            },
            {
              "line_number": 230,
              "content": "console.log('   Ready for production with exceptional performance gains');",
              "type": "log"
            },
            {
              "line_number": 231,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.log('='.repeat(70));",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/TabUtils.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/TabUtils.tsx",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 84,
              "content": "action: () => console.log('Refreshing data...')",
              "type": "log"
            },
            {
              "line_number": 91,
              "content": "action: () => console.log('Sharing analysis...')",
              "type": "log"
            },
            {
              "line_number": 102,
              "content": "action: () => console.log('Setting alerts...')",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "action: () => console.log('Adding peer...')",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "action: () => console.log('Opening model settings...')",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "action: () => console.log('Generating risk report...')",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "action: () => console.log('Adding indicators...')",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "action: () => console.log('Opening earnings calendar...')",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/advanced-grid-index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced-grid-index.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 178,
              "content": "console.log('[Phase7C] Initializing complete advanced grid optimization system...');",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.log('[Phase7C] Advanced grid optimization system ready');",
              "type": "log"
            },
            {
              "line_number": 309,
              "content": "console.log('[Phase7C] Shutting down advanced grid optimization system...');",
              "type": "log"
            },
            {
              "line_number": 317,
              "content": "console.log('[Phase7C] Advanced grid optimization system shutdown complete');",
              "type": "log"
            },
            {
              "line_number": 336,
              "content": "console.log(`[Phase7C] Advanced Grid Optimization Framework v${PHASE7C_VERSION} loaded with ${PHASE7C_FEATURES.length} features`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/GridOptimizationFramework.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/GridOptimizationFramework.ts",
          "console_count": 23,
          "console_lines": [
            {
              "line_number": 109,
              "content": "console.log('[GridOptimizationFramework] Comprehensive grid optimization framework initialized');",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "console.log('[GridOptimizationFramework] Initializing comprehensive optimization framework...');",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log('[GridOptimizationFramework] Framework initialization complete');",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.error('[GridOptimizationFramework] Framework initialization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 143,
              "content": "console.log('[GridOptimizationFramework] All subsystems initialized');",
              "type": "log"
            },
            {
              "line_number": 150,
              "content": "console.log('[GridOptimizationFramework] Integration points established');",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "console.log('[GridOptimizationFramework] Analytics and monitoring active');",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log('[GridOptimizationFramework] Starting comprehensive grid optimization for', request.chartType);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('[GridOptimizationFramework] Cache hit - returning cached optimization');",
              "type": "log"
            },
            {
              "line_number": 269,
              "content": "console.log('[GridOptimizationFramework] Optimization completed successfully:', {",
              "type": "log"
            },
            {
              "line_number": 282,
              "content": "console.error('[GridOptimizationFramework] Optimization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 319,
              "content": "console.warn('[GridOptimizationFramework] Cache check failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 333,
              "content": "console.error('[GridOptimizationFramework] Complexity analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 357,
              "content": "console.error('[GridOptimizationFramework] Chart optimization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 382,
              "content": "console.error('[GridOptimizationFramework] Loading strategy generation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 431,
              "content": "console.error('[GridOptimizationFramework] Advanced grid creation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 461,
              "content": "console.log('[GridOptimizationFramework] Viewport optimization set up for', request.chartId);",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.error('[GridOptimizationFramework] Viewport optimization setup failed:', error);",
              "type": "error"
            },
            {
              "line_number": 500,
              "content": "console.error('[GridOptimizationFramework] Optimization caching failed:', error);",
              "type": "error"
            },
            {
              "line_number": 522,
              "content": "console.error('[GridOptimizationFramework] Analytics tracking failed:', error);",
              "type": "error"
            },
            {
              "line_number": 622,
              "content": "console.log('[GridOptimizationFramework] Configuration updated');",
              "type": "log"
            },
            {
              "line_number": 628,
              "content": "console.log('[GridOptimizationFramework] Optimization history cleared');",
              "type": "log"
            },
            {
              "line_number": 642,
              "content": "console.log('[GridOptimizationFramework] Framework destroyed and resources cleaned up');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/advanced/usage-examples.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced/usage-examples.tsx",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 11,
              "content": "console.log('[Example] Loading animation features...');",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "console.log('[Example] Animations enabled with advanced features');",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log(`[Example] Loading accessibility features for ${level} mode`);",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.log(`Data point ${i}: ${data[i]}`);",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log('[Example] Loading export capabilities...');",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log(`[Example] Triggering predictive preload for: ${interaction}`);",
              "type": "log"
            },
            {
              "line_number": 259,
              "content": "console.log(`[ProgressiveStack] Loading ${layer} layer...`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/atoms/bundleAnalyzer.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/atoms/bundleAnalyzer.js",
          "console_count": 16,
          "console_lines": [
            {
              "line_number": 19,
              "content": "console.log('\ud83d\udd2c ChartAtoms Bundle Size Analysis');",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log('==================================');",
              "type": "log"
            },
            {
              "line_number": 36,
              "content": "console.log(`${valid ? '\u2705' : '\u274c'} ${file.padEnd(20)} ${size.toString().padStart(4)}B (target: ${target}B)`);",
              "type": "log"
            },
            {
              "line_number": 39,
              "content": "console.log(`\u274c ${file.padEnd(20)} MISSING`);",
              "type": "log"
            },
            {
              "line_number": 44,
              "content": "console.log('==================================');",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log(`\ud83d\udcca Total Bundle Size: ${totalSize}B`);",
              "type": "log"
            },
            {
              "line_number": 46,
              "content": "console.log(`\ud83c\udfaf Target Range: 800-1200B`);",
              "type": "log"
            },
            {
              "line_number": 49,
              "content": "console.log(`${withinTarget ? '\u2705' : '\u274c'} Bundle Size Target: ${withinTarget ? 'ACHIEVED' : 'MISSED'}`);",
              "type": "log"
            },
            {
              "line_number": 52,
              "content": "console.log(`\ud83d\udcc9 Reduction from 9.16kB: ${reductionFromOriginal}%`);",
              "type": "log"
            },
            {
              "line_number": 55,
              "content": "console.log('\\n\ud83c\udf89 SUCCESS: Phase 7C.1 Essential Atomization targets achieved!');",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log(`   \u2022 Ultra-essential core: ${totalSize}B`);",
              "type": "log"
            },
            {
              "line_number": 57,
              "content": "console.log(`   \u2022 Bundle reduction: ${reductionFromOriginal}%`);",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log(`   \u2022 All individual file targets met`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log('\\n\u26a0\ufe0f  Issues detected:');",
              "type": "log"
            },
            {
              "line_number": 61,
              "content": "if (!withinTarget) console.log(`   \u2022 Total size ${totalSize}B outside target range`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "if (!allValid) console.log(`   \u2022 Individual file size targets not met`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/PerformanceMonitor.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/PerformanceMonitor.ts",
          "console_count": 12,
          "console_lines": [
            {
              "line_number": 68,
              "content": "console.log('[PerformanceMonitor] Performance observer initialized');",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.warn('[PerformanceMonitor] Performance observer failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 105,
              "content": "console.log(`[PerformanceMonitor] Metric recorded: ${category}.${metric}`, {",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.warn(`[PerformanceMonitor] Loading issues detected for ${data.feature}:`, issues);",
              "type": "warn"
            },
            {
              "line_number": 198,
              "content": "console.warn(`[PerformanceMonitor] Rendering issues detected for ${data.chartType}:`, issues);",
              "type": "warn"
            },
            {
              "line_number": 292,
              "content": "console.log(`[PerformanceMonitor] Generated ${suggestions.length} optimization suggestions`,",
              "type": "log"
            },
            {
              "line_number": 479,
              "content": "console.log('[PerformanceMonitor] Grid optimization performance tracked:', {",
              "type": "log"
            },
            {
              "line_number": 540,
              "content": "console.warn(`[PerformanceMonitor] Grid optimization issues detected for ${data.chartType}:`, issues);",
              "type": "warn"
            },
            {
              "line_number": 571,
              "content": "console.log('[PerformanceMonitor] Grid optimization suggestions:', suggestions);",
              "type": "log"
            },
            {
              "line_number": 593,
              "content": "console.log('[PerformanceMonitor] Grid bundle size tracked:', {",
              "type": "log"
            },
            {
              "line_number": 602,
              "content": "console.warn(`[PerformanceMonitor] Bundle size regression detected for ${data.componentName}:`, {",
              "type": "warn"
            },
            {
              "line_number": 754,
              "content": "console.error('[PerformanceMonitor] CRITICAL GRID PERFORMANCE ISSUES DETECTED:', criticalIssues);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/SmartGridCache.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/SmartGridCache.ts",
          "console_count": 26,
          "console_lines": [
            {
              "line_number": 88,
              "content": "console.log('[SmartGridCache] Initialized with predictive caching and usage pattern analysis');",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "console.log('[SmartGridCache] Cache monitoring and cleanup scheduled');",
              "type": "log"
            },
            {
              "line_number": 116,
              "content": "console.log('[SmartGridCache] Pattern analysis and predictive modeling started');",
              "type": "log"
            },
            {
              "line_number": 158,
              "content": "console.log('[SmartGridCache] Data fingerprint generated:', {",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.error('[SmartGridCache] Data fingerprint generation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 260,
              "content": "console.log('[SmartGridCache] Configuration stored:', {",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.error('[SmartGridCache] Store operation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 294,
              "content": "console.log('[SmartGridCache] Cache miss for key:', key.slice(0, 20) + '...');",
              "type": "log"
            },
            {
              "line_number": 316,
              "content": "console.log('[SmartGridCache] Cache hit for key:', {",
              "type": "log"
            },
            {
              "line_number": 331,
              "content": "console.error('[SmartGridCache] Get operation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 393,
              "content": "console.log('[SmartGridCache] Evicted', evicted, 'entries', {",
              "type": "log"
            },
            {
              "line_number": 401,
              "content": "console.error('[SmartGridCache] Eviction failed:', error);",
              "type": "error"
            },
            {
              "line_number": 479,
              "content": "console.warn('[SmartGridCache] Pattern recording failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 511,
              "content": "console.log('[SmartGridCache] Analyzing usage patterns...');",
              "type": "log"
            },
            {
              "line_number": 546,
              "content": "console.log('[SmartGridCache] Pattern analysis completed:', {",
              "type": "log"
            },
            {
              "line_number": 555,
              "content": "console.error('[SmartGridCache] Pattern analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 572,
              "content": "console.log('[SmartGridCache] Predictive model updated, active sessions:',",
              "type": "log"
            },
            {
              "line_number": 576,
              "content": "console.warn('[SmartGridCache] Predictive model update failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 634,
              "content": "console.log('[SmartGridCache] Preload recommendations generated:', {",
              "type": "log"
            },
            {
              "line_number": 650,
              "content": "console.error('[SmartGridCache] Preload recommendation generation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 722,
              "content": "console.log('[SmartGridCache] Cache analysis:', {",
              "type": "log"
            },
            {
              "line_number": 737,
              "content": "console.log('[SmartGridCache] Increased cache size to', this.maxCacheSize);",
              "type": "log"
            },
            {
              "line_number": 740,
              "content": "console.log('[SmartGridCache] Decreased cache size to', this.maxCacheSize);",
              "type": "log"
            },
            {
              "line_number": 746,
              "content": "console.log('[SmartGridCache] Increased memory limit to', this.maxMemoryMB + 'MB');",
              "type": "log"
            },
            {
              "line_number": 769,
              "content": "console.log('[SmartGridCache] Cleaned up', cleaned, 'expired entries');",
              "type": "log"
            },
            {
              "line_number": 784,
              "content": "console.log('[SmartGridCache] Cache cleared,', previousSize, 'entries removed');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/NetworkAwareLoading.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/NetworkAwareLoading.ts",
          "console_count": 10,
          "console_lines": [
            {
              "line_number": 50,
              "content": "console.log('[NetworkAware] Monitoring network conditions', {",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log('[NetworkAware] Network condition updated', {",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('[NetworkAware] Estimated network condition', this.networkCondition);",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log('[NetworkAware] Loading features with strategy', {",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.warn(`[NetworkAware] Failed to load ${batch[index].features[0]}:`, result.reason);",
              "type": "warn"
            },
            {
              "line_number": 238,
              "content": "console.error('[NetworkAware] Batch loading error:', error);",
              "type": "error"
            },
            {
              "line_number": 279,
              "content": "console.warn(`[NetworkAware] Load attempt ${attempt + 1} failed for ${featureName}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 326,
              "content": "console.log('[NetworkAware] Load performance tracked', performanceData);",
              "type": "log"
            },
            {
              "line_number": 366,
              "content": "console.log('[NetworkAware] No features meet preload threshold');",
              "type": "log"
            },
            {
              "line_number": 370,
              "content": "console.log('[NetworkAware] Intelligent preload starting', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/MasterOrchestrator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/MasterOrchestrator.ts",
          "console_count": 16,
          "console_lines": [
            {
              "line_number": 56,
              "content": "console.log('[MasterOrchestrator] Dependency map initialized');",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log(`[MasterOrchestrator] Starting orchestration: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "console.log(`[MasterOrchestrator] Orchestration completed: ${operationId}`, orchestratedResult);",
              "type": "log"
            },
            {
              "line_number": 108,
              "content": "console.error(`[MasterOrchestrator] Orchestration failed: ${operationId}`, error);",
              "type": "error"
            },
            {
              "line_number": 168,
              "content": "console.log(`[MasterOrchestrator] Generated ${plans.length} loading phases`,",
              "type": "log"
            },
            {
              "line_number": 209,
              "content": "console.log(`[MasterOrchestrator] Selected progressive features for ${config.type}:`, features);",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log(`[MasterOrchestrator] Selected advanced features:`, features);",
              "type": "log"
            },
            {
              "line_number": 273,
              "content": "console.log(`[MasterOrchestrator] Executing phase: ${plan.phase}`, {",
              "type": "log"
            },
            {
              "line_number": 317,
              "content": "console.log(`[MasterOrchestrator] Phase ${plan.phase} completed in ${Math.round(phaseTime)}ms`);",
              "type": "log"
            },
            {
              "line_number": 320,
              "content": "console.error(`[MasterOrchestrator] Phase ${plan.phase} failed:`, error);",
              "type": "error"
            },
            {
              "line_number": 355,
              "content": "console.log(`[MasterOrchestrator] Loaded ${results.length} features immediately for ${operationId}`);",
              "type": "log"
            },
            {
              "line_number": 364,
              "content": "console.log(`[MasterOrchestrator] Bundle cache hit: ${bundleKey}`);",
              "type": "log"
            },
            {
              "line_number": 385,
              "content": "console.log(`[MasterOrchestrator] Bundle loaded: ${bundleKey} (${totalSize} bytes)`);",
              "type": "log"
            },
            {
              "line_number": 410,
              "content": "console.warn(`[MasterOrchestrator] Preload failed for ${feature}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 432,
              "content": "console.log(`[MasterOrchestrator] Preloaded ${results.length}/${features.length} features for ${operationId}`);",
              "type": "log"
            },
            {
              "line_number": 450,
              "content": "console.log(`[MasterOrchestrator] Setup lazy loading for ${features.length} features in ${operationId}`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/UsagePatternAnalytics.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/UsagePatternAnalytics.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 71,
              "content": "console.log(`[UsageAnalytics] Tracked usage: ${feature}`, {",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log(`[UsageAnalytics] Load timing: ${metrics.featureName}`, {",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log(`[UsageAnalytics] Generated ${predictions.length} predictions for ${chartType || 'unknown'} chart`, {",
              "type": "log"
            },
            {
              "line_number": 229,
              "content": "console.log(`[UsageAnalytics] Generated ${bundles.length} bundle recommendations`, bundles);",
              "type": "log"
            },
            {
              "line_number": 263,
              "content": "console.log('[UsageAnalytics] Session data cleared');",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log(`[UsageAnalytics] Imported data from ${new Date(data.timestamp).toLocaleString()}`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/GridAnalyticsDashboard.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/GridAnalyticsDashboard.ts",
          "console_count": 13,
          "console_lines": [
            {
              "line_number": 110,
              "content": "console.log('[GridAnalyticsDashboard] Real-time analytics dashboard initialized');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('[GridAnalyticsDashboard] Analytics system started with real-time monitoring');",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.log('[GridAnalyticsDashboard] Real-time monitoring started');",
              "type": "log"
            },
            {
              "line_number": 144,
              "content": "console.log('[GridAnalyticsDashboard] Updating analytics data...');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log('[GridAnalyticsDashboard] Analytics updated:', {",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.error('[GridAnalyticsDashboard] Analytics update failed:', error);",
              "type": "error"
            },
            {
              "line_number": 498,
              "content": "console.log(`[GridAnalyticsDashboard] ALERT [${severity.toUpperCase()}]:`, message);",
              "type": "log"
            },
            {
              "line_number": 586,
              "content": "console.log('[GridAnalyticsDashboard] Historical data loaded');",
              "type": "log"
            },
            {
              "line_number": 594,
              "content": "console.log('[GridAnalyticsDashboard] Analytics updates scheduled');",
              "type": "log"
            },
            {
              "line_number": 627,
              "content": "console.log('[GridAnalyticsDashboard] Alert resolved:', alert.message);",
              "type": "log"
            },
            {
              "line_number": 639,
              "content": "console.log('[GridAnalyticsDashboard] Alert configuration updated');",
              "type": "log"
            },
            {
              "line_number": 667,
              "content": "console.log('[GridAnalyticsDashboard] Monitoring stopped');",
              "type": "log"
            },
            {
              "line_number": 675,
              "content": "console.log('[GridAnalyticsDashboard] Resources cleaned up');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/index.ts",
          "console_count": 20,
          "console_lines": [
            {
              "line_number": 66,
              "content": "console.log('[SmartChartOrchestrator] Initializing Phase 7C orchestration system...');",
              "type": "log"
            },
            {
              "line_number": 75,
              "content": "console.log('[SmartChartOrchestrator] Initialization complete');",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.error('[SmartChartOrchestrator] Initialization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 97,
              "content": "console.log('[SmartChartOrchestrator] Loaded historical analytics data');",
              "type": "log"
            },
            {
              "line_number": 100,
              "content": "console.warn('[SmartChartOrchestrator] Failed to load historical data:', error);",
              "type": "warn"
            },
            {
              "line_number": 107,
              "content": "console.log('[SmartChartOrchestrator] Cache system ready');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log(`[SmartChartOrchestrator] Essential core preloaded (${Math.round(loadTime)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.warn('[SmartChartOrchestrator] Essential preload failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 137,
              "content": "console.log(`[SmartChartOrchestrator] Creating smart chart: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log(`[SmartChartOrchestrator] Chart creation completed: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.error(`[SmartChartOrchestrator] Chart creation failed: ${operationId}`, error);",
              "type": "error"
            },
            {
              "line_number": 257,
              "content": "console.log(`[SmartChartOrchestrator] Chart built successfully with ${chartElements.length} elements`);",
              "type": "log"
            },
            {
              "line_number": 261,
              "content": "console.error('[SmartChartOrchestrator] Chart building failed:', error);",
              "type": "error"
            },
            {
              "line_number": 326,
              "content": "console.log(`[SmartChartOrchestrator] Chart updated with ${newData.length} data points`);",
              "type": "log"
            },
            {
              "line_number": 335,
              "content": "console.warn('[SmartChartOrchestrator] Failed to save analytics data:', error);",
              "type": "warn"
            },
            {
              "line_number": 364,
              "content": "console.log('[SmartChartOrchestrator] System destroyed');",
              "type": "log"
            },
            {
              "line_number": 426,
              "content": "console.log('\ud83d\ude80 Phase 7C Smart Loading Orchestration System Ready');",
              "type": "log"
            },
            {
              "line_number": 427,
              "content": "console.log('\ud83d\udcca Features: Usage Analytics, Network-Aware Loading, Performance Monitoring, Intelligent Caching');",
              "type": "log"
            },
            {
              "line_number": 428,
              "content": "console.log('\u26a1 Target: 3-6kB bundle sizes with smart progressive loading');",
              "type": "log"
            },
            {
              "line_number": 429,
              "content": "console.log('\ud83c\udfaf Production-ready with comprehensive monitoring and optimization');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/ProductionStrategy.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/ProductionStrategy.ts",
          "console_count": 12,
          "console_lines": [
            {
              "line_number": 69,
              "content": "console.log('[ProductionStrategy] Initialized with config:', {",
              "type": "log"
            },
            {
              "line_number": 151,
              "content": "console.log(`[ProductionStrategy] Monitoring started (${this.config.monitoring.reportingInterval}ms interval)`);",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.error('[ProductionStrategy] Metrics collection failed:', error);",
              "type": "error"
            },
            {
              "line_number": 307,
              "content": "console.warn(`[ProductionStrategy] Health check: ${status} (score: ${score})`, recommendations);",
              "type": "warn"
            },
            {
              "line_number": 361,
              "content": "console.error(`[ProductionStrategy] ERROR: ${message}`);",
              "type": "error"
            },
            {
              "line_number": 364,
              "content": "console.warn(`[ProductionStrategy] WARNING: ${message}`);",
              "type": "warn"
            },
            {
              "line_number": 367,
              "content": "console.info(`[ProductionStrategy] INFO: ${message}`);",
              "type": "info"
            },
            {
              "line_number": 408,
              "content": "console.error('[ProductionStrategy] Performance optimization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 430,
              "content": "console.log('[ProductionStrategy] Error handling configured');",
              "type": "log"
            },
            {
              "line_number": 461,
              "content": "console.log('[ProductionStrategy] Running forced optimization...');",
              "type": "log"
            },
            {
              "line_number": 539,
              "content": "console.log('[ProductionStrategy] Production monitoring stopped');",
              "type": "log"
            },
            {
              "line_number": 558,
              "content": "console.log('\ud83c\udfed Production Strategy initialized with comprehensive monitoring');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/CacheOptimizer.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/CacheOptimizer.ts",
          "console_count": 19,
          "console_lines": [
            {
              "line_number": 71,
              "content": "console.log('[CacheOptimizer] Initialized with strategy:', this.strategy);",
              "type": "log"
            },
            {
              "line_number": 100,
              "content": "console.log('[CacheOptimizer] Adapted strategy for device capabilities:', {",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`[CacheOptimizer] Cache miss: ${key}`);",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log(`[CacheOptimizer] Cache expired: ${key}`);",
              "type": "log"
            },
            {
              "line_number": 138,
              "content": "console.log(`[CacheOptimizer] Cache hit: ${key}`, {",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log(`[CacheOptimizer] Cached: ${key}`, {",
              "type": "log"
            },
            {
              "line_number": 259,
              "content": "console.log(`[CacheOptimizer] Evicted: ${key}`, {",
              "type": "log"
            },
            {
              "line_number": 330,
              "content": "console.log(`[CacheOptimizer] Bundle usage tracked: ${bundleId}`, {",
              "type": "log"
            },
            {
              "line_number": 358,
              "content": "console.log('[CacheOptimizer] No features meet preload threshold');",
              "type": "log"
            },
            {
              "line_number": 365,
              "content": "console.log(`[CacheOptimizer] Intelligent preload starting`, {",
              "type": "log"
            },
            {
              "line_number": 419,
              "content": "console.log(`[CacheOptimizer] Bundle already cached: ${bundleGroup.id}`);",
              "type": "log"
            },
            {
              "line_number": 423,
              "content": "console.log(`[CacheOptimizer] Preloading bundle: ${bundleGroup.id}`, {",
              "type": "log"
            },
            {
              "line_number": 432,
              "content": "console.warn(`[CacheOptimizer] Preload failed for bundle ${bundleGroup.id}:`, error);",
              "type": "warn"
            },
            {
              "line_number": 453,
              "content": "console.log(`[CacheOptimizer] Preloaded bundle: ${bundleId} (${features.join(', ')})`);",
              "type": "log"
            },
            {
              "line_number": 490,
              "content": "console.log(`[CacheOptimizer] Cleared ${cleared} expired entries`);",
              "type": "log"
            },
            {
              "line_number": 508,
              "content": "console.log(`[CacheOptimizer] Cleared ${cleared} entries by tags:`, tags);",
              "type": "log"
            },
            {
              "line_number": 632,
              "content": "console.log('[CacheOptimizer] High eviction rate detected, optimizing cache strategy');",
              "type": "log"
            },
            {
              "line_number": 644,
              "content": "console.log('[CacheOptimizer] Increased cache limits:', {",
              "type": "log"
            },
            {
              "line_number": 656,
              "content": "console.log('[CacheOptimizer] Increased TTL due to high access frequency:', this.strategy.ttl);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/EnhancedChart.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/EnhancedChart.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 44,
              "content": "console.error('Failed to load micro-chunks:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/ViewportAwareGridLoader.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/ViewportAwareGridLoader.ts",
          "console_count": 23,
          "console_lines": [
            {
              "line_number": 87,
              "content": "console.log('[ViewportAwareGridLoader] Initialized with Intersection Observer optimization');",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.warn('[ViewportAwareGridLoader] IntersectionObserver not supported, using fallback');",
              "type": "warn"
            },
            {
              "line_number": 109,
              "content": "console.log('[ViewportAwareGridLoader] Intersection Observer initialized with config:', {",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "console.error('[ViewportAwareGridLoader] Initialization failed:', error);",
              "type": "error"
            },
            {
              "line_number": 130,
              "content": "console.log('[ViewportAwareGridLoader] Processing intersection changes for', entries.length, 'elements');",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log('[ViewportAwareGridLoader] Intersection changes processed:', {",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.error('[ViewportAwareGridLoader] Intersection handling failed:', error);",
              "type": "error"
            },
            {
              "line_number": 204,
              "content": "console.log('[ViewportAwareGridLoader] Loading grid for element:', element.id, element.chartType);",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log('[ViewportAwareGridLoader] Grid loaded for element:', {",
              "type": "log"
            },
            {
              "line_number": 243,
              "content": "console.error('[ViewportAwareGridLoader] Grid loading failed for element:', element.id, error);",
              "type": "error"
            },
            {
              "line_number": 255,
              "content": "console.log('[ViewportAwareGridLoader] Unloading element:', element.id);",
              "type": "log"
            },
            {
              "line_number": 288,
              "content": "console.log('[ViewportAwareGridLoader] Grid unloaded for element:', element.id);",
              "type": "log"
            },
            {
              "line_number": 291,
              "content": "console.error('[ViewportAwareGridLoader] Grid unloading failed:', error);",
              "type": "error"
            },
            {
              "line_number": 308,
              "content": "console.warn('[ViewportAwareGridLoader] Adaptive spacing failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 380,
              "content": "console.warn('[ViewportAwareGridLoader] DOM spacing update failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 515,
              "content": "console.log('[ViewportAwareGridLoader] Performance monitoring started');",
              "type": "log"
            },
            {
              "line_number": 606,
              "content": "console.log('[ViewportAwareGridLoader] Optimized config for poor performance:', {",
              "type": "log"
            },
            {
              "line_number": 620,
              "content": "console.log('[ViewportAwareGridLoader] Using fallback viewport tracking');",
              "type": "log"
            },
            {
              "line_number": 684,
              "content": "console.warn('[ViewportAwareGridLoader] Element already registered:', id);",
              "type": "warn"
            },
            {
              "line_number": 705,
              "content": "console.log('[ViewportAwareGridLoader] Element registered:', {",
              "type": "log"
            },
            {
              "line_number": 728,
              "content": "console.log('[ViewportAwareGridLoader] Element unregistered:', id);",
              "type": "log"
            },
            {
              "line_number": 739,
              "content": "console.log('[ViewportAwareGridLoader] Adaptive spacing config updated');",
              "type": "log"
            },
            {
              "line_number": 755,
              "content": "console.log('[ViewportAwareGridLoader] Resources cleaned up');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedComplexityDetector.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedComplexityDetector.ts",
          "console_count": 12,
          "console_lines": [
            {
              "line_number": 56,
              "content": "console.log('[AdvancedComplexityDetector] Initialized with ML-inspired pattern recognition');",
              "type": "log"
            },
            {
              "line_number": 100,
              "content": "console.log('[AdvancedComplexityDetector] Data complexity analysis completed:', {",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.error('[AdvancedComplexityDetector] Data complexity analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 159,
              "content": "console.log('[AdvancedComplexityDetector] Visual complexity analysis completed:', {",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.error('[AdvancedComplexityDetector] Visual complexity analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 192,
              "content": "console.log('[AdvancedComplexityDetector] Starting comprehensive complexity profiling...');",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log('[AdvancedComplexityDetector] Complexity profile generated:', {",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.error('[AdvancedComplexityDetector] Complexity profiling failed:', error);",
              "type": "error"
            },
            {
              "line_number": 334,
              "content": "console.warn('[AdvancedComplexityDetector] Temporal analysis failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 380,
              "content": "console.warn('[AdvancedComplexityDetector] Clustering analysis failed:', error);",
              "type": "warn"
            },
            {
              "line_number": 696,
              "content": "console.log('[AdvancedComplexityDetector] Pattern success updated:', {",
              "type": "log"
            },
            {
              "line_number": 717,
              "content": "console.log('[AdvancedComplexityDetector] Pattern weights updated based on successful optimization');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedGridFeatures.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedGridFeatures.ts",
          "console_count": 22,
          "console_lines": [
            {
              "line_number": 97,
              "content": "console.log('[AdvancedGridFeatures] Advanced grid system initialized with custom lines, major/minor grid, and adaptive animations');",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log('[AdvancedGridFeatures] Advanced features initialized');",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log('[AdvancedGridFeatures] Creating advanced grid system for', chartType);",
              "type": "log"
            },
            {
              "line_number": 234,
              "content": "console.log('[AdvancedGridFeatures] Advanced grid system created:', {",
              "type": "log"
            },
            {
              "line_number": 247,
              "content": "console.error('[AdvancedGridFeatures] Grid system creation failed:', error);",
              "type": "error"
            },
            {
              "line_number": 284,
              "content": "console.log('[AdvancedGridFeatures] Custom grid line added:', {",
              "type": "log"
            },
            {
              "line_number": 296,
              "content": "console.error('[AdvancedGridFeatures] Custom line addition failed:', error);",
              "type": "error"
            },
            {
              "line_number": 335,
              "content": "console.log('[AdvancedGridFeatures] Custom grid line removed:', lineId);",
              "type": "log"
            },
            {
              "line_number": 339,
              "content": "console.error('[AdvancedGridFeatures] Custom line removal failed:', error);",
              "type": "error"
            },
            {
              "line_number": 369,
              "content": "console.log('[AdvancedGridFeatures] Grid configuration updated:', {",
              "type": "log"
            },
            {
              "line_number": 378,
              "content": "console.error('[AdvancedGridFeatures] Grid configuration update failed:', error);",
              "type": "error"
            },
            {
              "line_number": 396,
              "content": "console.log('[AdvancedGridFeatures] Adaptive animations', enabled ? 'enabled' : 'disabled', 'for', chartId);",
              "type": "log"
            },
            {
              "line_number": 499,
              "content": "console.log('[AdvancedGridFeatures] Started line addition animation:', line.id);",
              "type": "log"
            },
            {
              "line_number": 526,
              "content": "console.log('[AdvancedGridFeatures] Started line removal animation:', line.id);",
              "type": "log"
            },
            {
              "line_number": 554,
              "content": "console.log('[AdvancedGridFeatures] Started configuration morph animation:', chartId);",
              "type": "log"
            },
            {
              "line_number": 613,
              "content": "console.log('[AdvancedGridFeatures] Animation progress:', key, Math.round(opacity * 100) + '%');",
              "type": "log"
            },
            {
              "line_number": 625,
              "content": "console.log('[AdvancedGridFeatures] Configuration morph progress:', Math.round(progress * 100) + '%');",
              "type": "log"
            },
            {
              "line_number": 641,
              "content": "console.log('[AdvancedGridFeatures] Animation completed:', key);",
              "type": "log"
            },
            {
              "line_number": 655,
              "content": "console.warn('[AdvancedGridFeatures] Animation frame exceeded budget:', Math.round(frameTime) + 'ms');",
              "type": "warn"
            },
            {
              "line_number": 677,
              "content": "console.log('[AdvancedGridFeatures] Reducing animation quality due to poor performance');",
              "type": "log"
            },
            {
              "line_number": 732,
              "content": "console.log('[AdvancedGridFeatures] Chart resources cleared:', chartId);",
              "type": "log"
            },
            {
              "line_number": 766,
              "content": "console.log('[AdvancedGridFeatures] Resources cleaned up');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/dashboard/BundleAnalyticsDashboard-UPA.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/dashboard/BundleAnalyticsDashboard-UPA.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 414,
              "content": "console.log(`Phase 7 Chart Interaction: ${type}`, data);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/dashboard/DeveloperToolsPanel.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/dashboard/DeveloperToolsPanel.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 482,
              "content": "console.error('Export failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/dashboard/charts/BundleChartWrappers-UPA.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/dashboard/charts/BundleChartWrappers-UPA.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 92,
              "content": "console.error(`UPA chart chunk loading failed: ${chunkName}`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/notifications/LazyNotificationSystem.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/notifications/LazyNotificationSystem.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 49,
              "content": "console.error('\u274c Notification Panel CSS failed to load:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/widgets/PerformanceWidget.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/widgets/PerformanceWidget.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 487,
              "content": "console.error('PerformanceWidget Error:', {",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/widgets/StockWidget.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/widgets/StockWidget.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 303,
              "content": "console.error('StockWidget Error:', {",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/widgets/PortfolioSummary.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/widgets/PortfolioSummary.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 49,
              "content": "console.error('Failed to refresh portfolio data:', err);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/analytics/ForecastingDashboard.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/ForecastingDashboard.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 91,
              "content": "loadForContext('analytics').catch(console.error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/analytics/ForecastingDashboardProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/ForecastingDashboardProgressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 165,
              "content": "loadUtilities().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/analytics/AnalyticsDashboard.optimized.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/AnalyticsDashboard.optimized.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 93,
              "content": "console.error(`Failed to load ${targetTier} tier:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/components/analytics/LazyAnalyticsOptimized.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/LazyAnalyticsOptimized.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 168,
              "content": "console.error('Failed to preload optimized analytics:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useGitHubActionsData.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useGitHubActionsData.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 129,
              "content": "console.error('Failed to fetch bundle data:', err);",
              "type": "error"
            },
            {
              "line_number": 146,
              "content": "console.error('Failed to fetch trends:', err);",
              "type": "error"
            },
            {
              "line_number": 162,
              "content": "console.error('Failed to fetch Phase 1 data:', err);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useLazyAnalytics.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useLazyAnalytics.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 59,
              "content": "getCachedAnalyticsDomain(domain).catch(console.warn);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useEssentialAnalytics.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useEssentialAnalytics.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 233,
              "content": "console.error('Export failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/usePWA.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/usePWA.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 146,
              "content": "console.error('Error during PWA installation:', error);",
              "type": "error"
            },
            {
              "line_number": 174,
              "content": "console.error('Error clearing app cache:', error);",
              "type": "error"
            },
            {
              "line_number": 204,
              "content": "console.error('Error getting service worker version:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useStore.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useStore.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 133,
              "content": "console.error('Store initialization failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useErrorHandling.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useErrorHandling.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 280,
              "content": "console.error(`API Error ${contextInfo}:`, {",
              "type": "error"
            },
            {
              "line_number": 303,
              "content": "console.error(`Query Error (${keyString}):`, classified);",
              "type": "error"
            },
            {
              "line_number": 318,
              "content": "console.error('Mutation Error:', {",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useLazyCss.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useLazyCss.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 135,
              "content": "console.log(`\u2705 CSS loaded: ${cssPath} (${duration.toFixed(1)}ms)`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useComparativeAnalysis/phase6-progressive-core.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/phase6-progressive-core.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 119,
              "content": "console.warn('[Phase6] Analysis tier loading failed, fallback to core', error);",
              "type": "warn"
            },
            {
              "line_number": 137,
              "content": "console.warn('[Phase6] Advanced tier loading failed, fallback to analysis', error);",
              "type": "warn"
            },
            {
              "line_number": 251,
              "content": "console.log('[Phase6] Progressive Comparative Analysis Core loaded - Target: 26.31kB \u2192 8-13kB (65-75% reduction)');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useComparativeAnalysis/standard-optimized.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/standard-optimized.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 122,
              "content": "console.error('Failed to load analysis engine:', error);",
              "type": "error"
            },
            {
              "line_number": 152,
              "content": "console.error('Failed to load advanced features:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useComparativeAnalysis/layers/standard-advanced.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/layers/standard-advanced.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 105,
              "content": "console.error('Portfolio upgrade failed:', error);",
              "type": "error"
            },
            {
              "line_number": 365,
              "content": "console.debug(`${operation} completed in ${duration.toFixed(2)}ms`);",
              "type": "debug"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useComparativeAnalysis/layers/standard-core.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/layers/standard-core.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 183,
              "content": "console.error('Failed to load analysis engine:', error);",
              "type": "error"
            },
            {
              "line_number": 197,
              "content": "console.error('Failed to load advanced features:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/useComparativeAnalysis/layers/standard-analysis.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/layers/standard-analysis.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 271,
              "content": "enableAnalysisEngine(queryClient, queryKeys, options).catch(console.warn);",
              "type": "warn"
            },
            {
              "line_number": 300,
              "content": "console.debug(`Analysis engine loaded in ${loadTime.toFixed(2)}ms`);",
              "type": "debug"
            },
            {
              "line_number": 314,
              "content": "console.debug(`${queryType} analysis completed in ${queryTime.toFixed(2)}ms`);",
              "type": "debug"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/data/useProgressiveFinancialData.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/data/useProgressiveFinancialData.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 332,
              "content": "console.error('[Phase 7] Failed to load OpenBB services:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/analytics/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/index.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 168,
              "content": "console.log(`${prefix} ${message}`, {",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log('[ProgressiveAnalytics] Performance Report', {",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/analytics/useProgressiveAnalytics.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/useProgressiveAnalytics.ts",
          "console_count": 16,
          "console_lines": [
            {
              "line_number": 142,
              "content": "console.log(`[ProgressiveAnalytics] Starting context detection: ${operationId}`);",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log(`[ProgressiveAnalytics] Context detection completed: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "console.error(`[ProgressiveAnalytics] Context detection failed: ${operationId}`, error);",
              "type": "error"
            },
            {
              "line_number": 318,
              "content": "console.log(`[ProgressiveAnalytics] Starting optimal tier selection: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 376,
              "content": "console.log(`[ProgressiveAnalytics] Tier selection completed: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 396,
              "content": "console.log(`[ProgressiveAnalytics] Starting tier transition: ${operationId}`, {",
              "type": "log"
            },
            {
              "line_number": 445,
              "content": "console.log(`[ProgressiveAnalytics] Tier transition successful: ${operationId}`, result);",
              "type": "log"
            },
            {
              "line_number": 464,
              "content": "console.error(`[ProgressiveAnalytics] Tier transition failed: ${operationId}`, error);",
              "type": "error"
            },
            {
              "line_number": 502,
              "content": "console.log(`[ProgressiveAnalytics] Starting intelligent preloading: ${operationId}`);",
              "type": "log"
            },
            {
              "line_number": 513,
              "content": "console.log(`[ProgressiveAnalytics] Preloading features for ${predictedTier}: ${newFeatures.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 534,
              "content": "console.error(`[ProgressiveAnalytics] Preloading failed: ${operationId}`, error);",
              "type": "error"
            },
            {
              "line_number": 574,
              "content": "console.log(`[ProgressiveAnalytics] Auto-upgrade triggered: ${currentTier} \u2192 ${optimalTier}`);",
              "type": "log"
            },
            {
              "line_number": 583,
              "content": "console.log('[ProgressiveAnalytics] Initializing Progressive Enhancement System');",
              "type": "log"
            },
            {
              "line_number": 597,
              "content": "console.log('[ProgressiveAnalytics] Progressive Enhancement System initialized', {",
              "type": "log"
            },
            {
              "line_number": 604,
              "content": "console.error('[ProgressiveAnalytics] System initialization failed', error);",
              "type": "error"
            },
            {
              "line_number": 627,
              "content": "console.error('[ProgressiveAnalytics] Context re-evaluation failed', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/analytics/components/StandardAnalyticsProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/components/StandardAnalyticsProgressive.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 323,
              "content": "console.error('Layer transition failed:', error);",
              "type": "error"
            },
            {
              "line_number": 362,
              "content": "console.log('\ud83c\udfaf Progressive Analytics Decision:', debugInfo);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/analytics/components/StandardAnalyticsAdvanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/components/StandardAnalyticsAdvanced.tsx",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 376,
              "content": "console.log('CSV Export:', csv);",
              "type": "log"
            },
            {
              "line_number": 380,
              "content": "console.log('JSON Export:', JSON.stringify(data, null, 2));",
              "type": "log"
            },
            {
              "line_number": 384,
              "content": "console.log('PDF Export: Generated report');",
              "type": "log"
            },
            {
              "line_number": 388,
              "content": "console.log('PNG Export: Chart image saved');",
              "type": "log"
            },
            {
              "line_number": 395,
              "content": "console.error('Export failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/hooks/analytics/components/AdvancedAnalytics.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/components/AdvancedAnalytics.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 514,
              "content": "console.log(`[AdvancedAnalytics] Exporting data in ${format} format`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/DashboardUPA.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/DashboardUPA.tsx",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 64,
              "content": "console.error(`UPA chunk loading failed: ${chunkName}`, error);",
              "type": "error"
            },
            {
              "line_number": 177,
              "content": "console.warn('Error accessing device metrics:', error);",
              "type": "warn"
            },
            {
              "line_number": 192,
              "content": "console.warn('PerformanceObserver not available - skipping UPA performance monitoring');",
              "type": "warn"
            },
            {
              "line_number": 214,
              "content": "console.warn('PerformanceObserver callback error:', error);",
              "type": "warn"
            },
            {
              "line_number": 222,
              "content": "console.log('\ud83d\udd0d UPA PerformanceObserver initialized safely');",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.warn('Failed to initialize PerformanceObserver:', error);",
              "type": "warn"
            },
            {
              "line_number": 234,
              "content": "console.log('\ud83d\udd0d UPA PerformanceObserver disconnected safely');",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.warn('Error disconnecting PerformanceObserver:', error);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/Portfolio.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/Portfolio.tsx",
          "console_count": 16,
          "console_lines": [
            {
              "line_number": 143,
              "content": "console.log('\ud83d\udd17 FMP API connected - loading real data');",
              "type": "log"
            },
            {
              "line_number": 156,
              "content": "console.log('\u2705 Real portfolio data loaded successfully');",
              "type": "log"
            },
            {
              "line_number": 158,
              "content": "console.warn('\u26a0\ufe0f No real data available, falling back to mock data');",
              "type": "warn"
            },
            {
              "line_number": 163,
              "content": "console.warn('\u274c FMP API not accessible, using mock data');",
              "type": "warn"
            },
            {
              "line_number": 168,
              "content": "console.error('\u274c Error loading portfolio data:', error);",
              "type": "error"
            },
            {
              "line_number": 184,
              "content": "console.error('Failed to load portfolio utilities:', error);",
              "type": "error"
            },
            {
              "line_number": 192,
              "content": "console.log('Portfolio render - modal states:', {",
              "type": "log"
            },
            {
              "line_number": 252,
              "content": "console.log('\ud83d\udd04 Refreshing real portfolio data...');",
              "type": "log"
            },
            {
              "line_number": 263,
              "content": "console.log('\u2705 Portfolio data refreshed with real data');",
              "type": "log"
            },
            {
              "line_number": 268,
              "content": "console.log('\ud83d\udd04 Refreshed mock data');",
              "type": "log"
            },
            {
              "line_number": 273,
              "content": "console.error('\u274c Error refreshing portfolio data:', error);",
              "type": "error"
            },
            {
              "line_number": 280,
              "content": "console.log('handleRebalance called - opening rebalance modal');",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log('handlePerformanceAnalysis called - opening performance modal');",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('handleRiskAnalysis called - opening risk modal');",
              "type": "log"
            },
            {
              "line_number": 295,
              "content": "console.log('handleSettings called - opening settings modal');",
              "type": "log"
            },
            {
              "line_number": 560,
              "content": "console.log('Position clicked:', position);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/SecuritiesUPA.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/SecuritiesUPA.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 61,
              "content": "console.error(`UPA chunk loading failed: ${chunkName}`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/SecuritiesProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/SecuritiesProgressive.tsx",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 102,
              "content": "}).catch(console.error);",
              "type": "error"
            },
            {
              "line_number": 141,
              "content": "console.error('Failed to load securities data:', error);",
              "type": "error"
            },
            {
              "line_number": 158,
              "content": "console.error('Failed to load technical indicators:', error);",
              "type": "error"
            },
            {
              "line_number": 174,
              "content": "console.error('Failed to load chart configurations:', error);",
              "type": "error"
            },
            {
              "line_number": 184,
              "content": "loadForContext('charts').catch(console.error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/DashboardProgressive.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/DashboardProgressive.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 206,
              "content": "loadUtilities().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/Analysis.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/Analysis.tsx",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 119,
              "content": "console.error('Export failed:', error);",
              "type": "error"
            },
            {
              "line_number": 258,
              "content": "console.error('Analysis dashboard error:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/securities/components/micro-chunks/FundamentalMetricsModule.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/FundamentalMetricsModule.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 46,
              "content": "console.error('Failed to load fundamental data:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/securities/components/micro-chunks/AdvancedSearchFeatures.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/AdvancedSearchFeatures.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 106,
              "content": "onClick={() => console.log('Search suggestion:', suggestion)}",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/securities/components/micro-chunks/TechnicalMetricsModule.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/TechnicalMetricsModule.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 44,
              "content": "console.error('Failed to calculate technical metrics:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/securities/components/micro-chunks/DetailedMetricsRenderer.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/DetailedMetricsRenderer.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 35,
              "content": "console.error('Failed to load formatters:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/dashboard/DashboardAdvanced.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/dashboard/DashboardAdvanced.tsx",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 172,
              "content": "console.log('AI insight action would be executed here');",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log(`Advanced dashboard export to ${format.toUpperCase()} would be executed here`);",
              "type": "log"
            },
            {
              "line_number": 187,
              "content": "console.log('Portfolio optimization analysis would be executed here');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/pages/dashboard/DashboardCore.tsx",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/dashboard/DashboardCore.tsx",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 79,
              "content": "console.log(`\ud83d\ude80 Dashboard Core: Requesting upgrade to ${feature}`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/github-actions-integration.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/github-actions-integration.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 161,
              "content": "console.error('Failed to fetch workflow runs:', error);",
              "type": "error"
            },
            {
              "line_number": 191,
              "content": "console.error(`Failed to fetch artifacts for run ${runId}:`, error);",
              "type": "error"
            },
            {
              "line_number": 250,
              "content": "console.error(`Failed to fetch performance baseline for run ${runId}:`, error);",
              "type": "error"
            },
            {
              "line_number": 303,
              "content": "console.error('Failed to fetch bundle trends:', error);",
              "type": "error"
            },
            {
              "line_number": 345,
              "content": "console.error('Failed to fetch Phase 1 data:', error);",
              "type": "error"
            },
            {
              "line_number": 441,
              "content": "console.error('Failed to get bundle analysis data:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/DataServiceManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/DataServiceManager.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 281,
              "content": "console.warn(`Failed to preload service ${service.id}:`, error)",
              "type": "warn"
            },
            {
              "line_number": 358,
              "content": "console.error(`Failed to load data service ${service.id}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/Phase7MasterOrchestrator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/Phase7MasterOrchestrator.ts",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 155,
              "content": "console.error('[Phase7 Master] \u274c Component health check failed:', error);",
              "type": "error"
            },
            {
              "line_number": 247,
              "content": "console.log(`[Phase7 Master] \ud83d\udd04 Orchestration cycle complete - ${status.achievementSummary.totalAchievements} achievements, ${status.currentTargets.overallProgress.toFixed(1)}% progress`);",
              "type": "log"
            },
            {
              "line_number": 252,
              "content": "console.error('[Phase7 Master] \u274c Orchestration cycle error:', error);",
              "type": "error"
            },
            {
              "line_number": 458,
              "content": "console.log(`[Phase7 Master] \ud83d\udd04 Components coordinated - ${orchestrationData.performance.overallProgress.toFixed(1)}% progress`);",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.error('[Phase7 Master] \u274c Component coordination error:', error);",
              "type": "error"
            },
            {
              "line_number": 474,
              "content": "console.error('[Phase7 Master] \ud83d\udea8 CRITICAL ORCHESTRATION HEALTH');",
              "type": "error"
            },
            {
              "line_number": 591,
              "content": "console.log(`[Phase7 Master] \ud83d\udcca Integrated report generated - ${integratedReport.executiveSummary.progressPercentage.toFixed(1)}% achievement`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/realDataPortfolio.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/realDataPortfolio.ts",
          "console_count": 13,
          "console_lines": [
            {
              "line_number": 61,
              "content": "console.error(`FMP API error for ${symbol}: ${response.status}`);",
              "type": "error"
            },
            {
              "line_number": 67,
              "content": "console.error(`No data returned for symbol ${symbol}`);",
              "type": "error"
            },
            {
              "line_number": 73,
              "content": "console.error(`Error fetching data for ${symbol}:`, error);",
              "type": "error"
            },
            {
              "line_number": 89,
              "content": "console.error(`FMP batch API error: ${response.status}`);",
              "type": "error"
            },
            {
              "line_number": 96,
              "content": "console.error('Error fetching batch quotes:', error);",
              "type": "error"
            },
            {
              "line_number": 156,
              "content": "console.log('\ud83d\udcca Fetching real portfolio data from FMP API...');",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.error('\u274c No stock data received from FMP API');",
              "type": "error"
            },
            {
              "line_number": 169,
              "content": "console.log(`\u2705 Received data for ${stockDataList.length} stocks`);",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.warn(`\u26a0\ufe0f  No data found for ${holding.symbol}`);",
              "type": "warn"
            },
            {
              "line_number": 192,
              "content": "console.log(`\ud83c\udfaf Generated ${positions.length} real portfolio positions`);",
              "type": "log"
            },
            {
              "line_number": 193,
              "content": "console.log(`\ud83d\udcb0 Total portfolio value: $${totalValue.toLocaleString()}`);",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.error('\u274c Error generating real portfolio positions:', error);",
              "type": "error"
            },
            {
              "line_number": 211,
              "content": "console.error('FMP connection test failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/documentation/Phase7SuccessDocumentation.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/documentation/Phase7SuccessDocumentation.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 376,
              "content": "console.log(`[Phase7 Docs] \ud83c\udfc6 Achievement recorded: ${achievement.title} (${achievement.quantifiedImpact.improvementPercentage.toFixed(1)}% improvement)`);",
              "type": "log"
            },
            {
              "line_number": 463,
              "content": "console.log(`[Phase7 Docs] Documentation updated - ${progress.overallProgress.toFixed(1)}% overall progress`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/charts/price-data-service.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/charts/price-data-service.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 59,
              "content": "console.error('Failed to fetch price history:', error);",
              "type": "error"
            },
            {
              "line_number": 87,
              "content": "console.log(`Subscribing to real-time updates for ${symbol}`);",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log(`Unsubscribed from real-time updates for ${symbol}`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/charts/technical-indicators-service.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/charts/technical-indicators-service.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 138,
              "content": "console.error('Failed to calculate technical indicators:', error);",
              "type": "error"
            },
            {
              "line_number": 162,
              "content": "console.error('Pattern recognition failed:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/openbb/realtime-service.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/openbb/realtime-service.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 71,
              "content": "console.log('OpenBB Real-time service connected');",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.error('Error parsing real-time data:', error);",
              "type": "error"
            },
            {
              "line_number": 87,
              "content": "console.log('OpenBB Real-time service disconnected');",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.error('OpenBB Real-time service error:', error);",
              "type": "error"
            },
            {
              "line_number": 106,
              "content": "console.error('Failed to connect to real-time service:', error);",
              "type": "error"
            },
            {
              "line_number": 188,
              "content": "console.error(`Error polling quote for ${symbol}:`, error);",
              "type": "error"
            },
            {
              "line_number": 218,
              "content": "console.error('Max reconnection attempts reached');",
              "type": "error"
            },
            {
              "line_number": 226,
              "content": "console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);",
              "type": "log"
            },
            {
              "line_number": 246,
              "content": "console.error('Error notifying listener:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/openbb/data-service.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/openbb/data-service.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 69,
              "content": "console.error('OpenBB Data Service error:', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/monitoring/Phase7ChartPerformanceIntegration.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/monitoring/Phase7ChartPerformanceIntegration.ts",
          "console_count": 4,
          "console_lines": [
            {
              "line_number": 176,
              "content": "console.log(`[ChartIntegration] Fed chart data to coordinator:`, {",
              "type": "log"
            },
            {
              "line_number": 401,
              "content": "console.log(`[ChartIntegration] Chart variant ${variant} selected and loaded in ${loadTime.toFixed(0)}ms`);",
              "type": "log"
            },
            {
              "line_number": 486,
              "content": "console.log('[ChartIntegration] Progressive loading sequence analyzed:', {",
              "type": "log"
            },
            {
              "line_number": 624,
              "content": "console.log(`[ChartIntegration] User interaction: ${interactionType} on ${componentType} - ${responseTime.toFixed(0)}ms (satisfaction: ${interactionMetric.satisfactionScore}/10)`);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/monitoring/Phase7ProductionMonitor.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/monitoring/Phase7ProductionMonitor.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 67,
              "content": "console.error('\u274c Phase 7: Failed to establish baseline metrics', error);",
              "type": "error"
            },
            {
              "line_number": 79,
              "content": "console.log(`\ud83d\ude80 Phase 7: Monitoring canary deployment - ${stage} (${trafficPercentage}%)`);",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.error(`\u274c Phase 7: Canary stage ${stage} failed validation`, validation.failures);",
              "type": "error"
            },
            {
              "line_number": 297,
              "content": "console.error(`\ud83d\udea8 Phase 7: Triggering rollback for stage ${stage}`, failures);",
              "type": "error"
            },
            {
              "line_number": 322,
              "content": "console.error('\ud83d\udea8 CRITICAL ALERT: Phase 7 Deployment Failure', alertData);",
              "type": "error"
            },
            {
              "line_number": 348,
              "content": "console.error('\u274c Phase 7: Rollback failed', error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/monitoring/Phase7PerformanceCoordinator.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/monitoring/Phase7PerformanceCoordinator.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 317,
              "content": "console.group('[Phase7] Performance Progress Update');",
              "type": "group"
            },
            {
              "line_number": 318,
              "content": "console.log(`Overall Progress: ${progress.overallProgress.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 320,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 341,
              "content": "console.log(`[Phase7] Performance Metric: ${metric} = ${value.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 355,
              "content": "console.log(`[Phase7] Bundle Loaded: ${metrics.name} - ${sizeMB}kB (${compressedMB}kB compressed) in ${metrics.loadTime.toFixed(0)}ms`);",
              "type": "log"
            },
            {
              "line_number": 402,
              "content": "console.log(`[Phase7] Target Validation: ${bundleName} achieved ${achievementLevel} level (${reductionPercentage.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 556,
              "content": "console.log(`[Phase7] \u2705 SUCCESS: ${progress.overallProgress.toFixed(1)}% reduction achieved - within 72-82% target range`);",
              "type": "log"
            },
            {
              "line_number": 562,
              "content": "console.log(`[Phase7] \ud83c\udfc6 EXCEPTIONAL SUCCESS: ${progress.overallProgress.toFixed(1)}% reduction - exceeding 82% target!`);",
              "type": "log"
            },
            {
              "line_number": 568,
              "content": "console.warn(`[Phase7] \u26a0\ufe0f TARGET MISS: ${progress.overallProgress.toFixed(1)}% reduction - below 72% target`);",
              "type": "warn"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/Phase7DataIntegration.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/Phase7DataIntegration.ts",
          "console_count": 12,
          "console_lines": [
            {
              "line_number": 168,
              "content": "console.log(`[Phase 7] \u2705 Context data loaded in ${loadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.error('[Phase 7] Context data loading failed:', error);",
              "type": "error"
            },
            {
              "line_number": 181,
              "content": "console.log('[Phase 7] \ud83d\udd25 Loading essential data only (fallback mode)');",
              "type": "log"
            },
            {
              "line_number": 193,
              "content": "console.error('[Phase 7] Essential data fallback failed:', error);",
              "type": "error"
            },
            {
              "line_number": 232,
              "content": "console.error(`[Phase 7] Financial data loading failed for ${symbol}:`, error);",
              "type": "error"
            },
            {
              "line_number": 375,
              "content": "console.group('[Phase 7] Performance Summary');",
              "type": "group"
            },
            {
              "line_number": 376,
              "content": "console.log('\ud83d\udcca Bundle Reduction:', `${metrics.bundleReductionPercent.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 377,
              "content": "console.log('\u26a1 Average Load Time:', `${metrics.averageLoadTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 378,
              "content": "console.log('\ud83d\udcbe Cache Hit Rate:', `${(metrics.cacheHitRate * 100).toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 379,
              "content": "console.log('\ud83c\udfaf User Experience Score:', `${metrics.userExperienceScore.toFixed(1)}/100`);",
              "type": "log"
            },
            {
              "line_number": 381,
              "content": "console.groupEnd();",
              "type": "group"
            },
            {
              "line_number": 493,
              "content": "console.log('[Phase 7] Target: 77.69kB \u2192 15-25kB (60-75% reduction)');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/advanced/advancedFinancialData.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/advanced/advancedFinancialData.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 398,
              "content": "console.error(`[Phase 7] Failed to load advanced financial data for ${upperSymbol}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/standard/standardFinancialData.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/standard/standardFinancialData.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 220,
              "content": "console.error(`[Phase 7] Failed to load standard financial data for ${upperSymbol}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/progressive/DataProgressiveManager.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/progressive/DataProgressiveManager.ts",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 148,
              "content": "console.debug(`[Phase 7] Registered data bundle: ${config.id} (${(config.estimatedSize/1024).toFixed(1)}kB)`);",
              "type": "debug"
            },
            {
              "line_number": 175,
              "content": "console.warn('[Phase 7] Standard bundle loading failed:', error)",
              "type": "warn"
            },
            {
              "line_number": 224,
              "content": "console.log(`[Phase 7] Viewport trigger for ${componentId}:`, bundles.map(b => b.id));",
              "type": "log"
            },
            {
              "line_number": 229,
              "content": "console.warn('[Phase 7] Viewport-based loading failed:', error)",
              "type": "warn"
            },
            {
              "line_number": 297,
              "content": "console.error(`[Phase 7] Failed to load bundle ${bundle.id}:`, error);",
              "type": "error"
            },
            {
              "line_number": 303,
              "content": "console.log(`[Phase 7] Loaded ${loadType} bundle group in ${totalTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 330,
              "content": "console.log(`[Phase 7] \u2705 Loaded bundle: ${bundle.id} (${(bundle.estimatedSize/1024).toFixed(1)}kB)`);",
              "type": "log"
            },
            {
              "line_number": 392,
              "content": "console.error(`[Phase 7] Data loading failed for ${bundle.id}:`, error);",
              "type": "error"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/index.ts",
          "console_count": 15,
          "console_lines": [
            {
              "line_number": 53,
              "content": "console.log('[Micro-Chunks] Loading progressive services (8.9kB)...');",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log('[Micro-Chunks] \u2705 Progressive services loaded');",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.error('[Micro-Chunks] Failed to load progressive services:', error);",
              "type": "error"
            },
            {
              "line_number": 74,
              "content": "console.log('[Micro-Chunks] Loading advanced services (6.8kB)...');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log('[Micro-Chunks] \u2705 Advanced services loaded');",
              "type": "log"
            },
            {
              "line_number": 83,
              "content": "console.error('[Micro-Chunks] Failed to load advanced services:', error);",
              "type": "error"
            },
            {
              "line_number": 109,
              "content": "console.warn('[Micro-Chunks] Preload failed for progressive:', error)",
              "type": "warn"
            },
            {
              "line_number": 113,
              "content": "console.warn('[Micro-Chunks] Preload failed for advanced:', error)",
              "type": "warn"
            },
            {
              "line_number": 126,
              "content": "console.log('[Micro-Chunks] Caches cleared');",
              "type": "log"
            },
            {
              "line_number": 300,
              "content": "console.group('[Data Bundle Optimization] Micro-Chunk System Initialized');",
              "type": "group"
            },
            {
              "line_number": 301,
              "content": "console.log('\ud83d\udce6 Original Bundle:', MICRO_CHUNK_BUNDLE_SIZES.original.size);",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log('\u26a1 Optimized Bundle:', MICRO_CHUNK_BUNDLE_SIZES.optimized.total);",
              "type": "log"
            },
            {
              "line_number": 303,
              "content": "console.log('\ud83c\udfaf Bundle Reduction:', `${MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction} (${MICRO_CHUNK_BUNDLE_SIZES.optimized.savings} saved)`);",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log('\ud83d\ude80 Load Strategy:', MICRO_CHUNK_BUNDLE_SIZES.loadingStrategy);",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.groupEnd();",
              "type": "group"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/advanced/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/advanced/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 154,
              "content": "console.log('[Data Bundle Optimization] Advanced micro-chunk loaded:', ADVANCED_MICRO_CHUNK_TOTAL_SIZE.total);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/essential/queryCore.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/essential/queryCore.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 94,
              "content": "console.log(`[Essential Data] ${operation}`, data);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/essential/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/essential/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 123,
              "content": "console.log('[Data Bundle Optimization] Essential micro-chunk loaded:', ESSENTIAL_MICRO_CHUNK_TOTAL_SIZE.total);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/essential/marketEssentials.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/essential/marketEssentials.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 98,
              "content": "console.warn(`[Market Essentials] Invalid symbol: ${symbol}`);",
              "type": "warn"
            },
            {
              "line_number": 111,
              "content": "console.warn(`[Market Essentials] Invalid price data for ${symbol}:`, validation.errors);",
              "type": "warn"
            },
            {
              "line_number": 118,
              "content": "console.error(`[Market Essentials] Failed to fetch price for ${symbol}:`, error);",
              "type": "error"
            },
            {
              "line_number": 148,
              "content": "console.error('[Market Essentials] Failed to fetch market summary:', error);",
              "type": "error"
            },
            {
              "line_number": 209,
              "content": "console.log('[Market Essentials] Cache cleared');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/progressive/portfolioServices.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/progressive/portfolioServices.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 161,
              "content": "console.warn('[Portfolio Services] Invalid performance data:', validation.errors);",
              "type": "warn"
            },
            {
              "line_number": 168,
              "content": "console.error('[Portfolio Services] Failed to fetch portfolio performance:', error);",
              "type": "error"
            },
            {
              "line_number": 195,
              "content": "console.error('[Portfolio Services] Failed to fetch watchlist:', error);",
              "type": "error"
            },
            {
              "line_number": 211,
              "content": "console.warn('[Portfolio Services] Invalid watchlist item:', validation.errors);",
              "type": "warn"
            },
            {
              "line_number": 216,
              "content": "console.log('[Portfolio Services] Added to watchlist:', watchlistItem);",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.error('[Portfolio Services] Failed to add to watchlist:', error);",
              "type": "error"
            },
            {
              "line_number": 231,
              "content": "console.log('[Portfolio Services] Removed from watchlist:', symbol);",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.error('[Portfolio Services] Failed to remove from watchlist:', error);",
              "type": "error"
            },
            {
              "line_number": 293,
              "content": "console.log('[Portfolio Services] Cache cleared');",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/data/micro-chunks/progressive/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/progressive/index.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 177,
              "content": "console.log('[Data Bundle Optimization] Progressive micro-chunk loaded:', PROGRESSIVE_MICRO_CHUNK_TOTAL_SIZE.total);",
              "type": "log"
            }
          ],
          "category": "core_application"
        },
        {
          "path": "src/services/analytics/index.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/analytics/index.ts",
          "console_count": 2,
          "console_lines": [
            {
              "line_number": 77,
              "content": "console.error(`Failed to load analytics domain: ${domain}`, error);",
              "type": "error"
            },
            {
              "line_number": 164,
              "content": "(error) => console.warn('Failed to preload analytics domains in development:', error)",
              "type": "warn"
            }
          ],
          "category": "core_application"
        }
      ],
      "count": 939,
      "strategy": "proper_logging"
    },
    "build_scripts": {
      "patterns": ["vite.config", "scripts/", "bundle-", "analyze-", "lint-"],
      "files": [
        {
          "path": "vite.config.analytics-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.analytics-optimization.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 123,
              "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.visx-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.visx-optimization.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 97,
              "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "quick-lint-sample.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/quick-lint-sample.js",
          "console_count": 14,
          "console_lines": [
            {
              "line_number": 9,
              "content": "console.log('\ud83d\udccb Sampling frontend linter errors...');",
              "type": "log"
            },
            {
              "line_number": 26,
              "content": "console.log(`Checking ${file}...`);",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.log(`  \u274c ${lintResults[0].errorCount} errors, ${lintResults[0].warningCount} warnings`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`  \u2705 No errors`);",
              "type": "log"
            },
            {
              "line_number": 51,
              "content": "console.log(`  \u26a0\ufe0f Could not parse JSON, but file may have issues`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`  \u2753 Could not check ${file}: ${error.message.split('\\n')[0]}`);",
              "type": "log"
            },
            {
              "line_number": 58,
              "content": "console.log(`\\n\ud83d\udcca Sample Results:`);",
              "type": "log"
            },
            {
              "line_number": 59,
              "content": "console.log(`Files sampled: ${testFiles.length}`);",
              "type": "log"
            },
            {
              "line_number": 60,
              "content": "console.log(`Total errors in sample: ${totalSampleErrors}`);",
              "type": "log"
            },
            {
              "line_number": 63,
              "content": "console.log(`\\n\u274c SIGNIFICANT LINTER ERRORS DETECTED IN SAMPLE`);",
              "type": "log"
            },
            {
              "line_number": 64,
              "content": "console.log(`Based on ${testFiles.length} files having ${totalSampleErrors} errors,`);",
              "type": "log"
            },
            {
              "line_number": 65,
              "content": "console.log(`the full codebase likely still has substantial linter issues.`);",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.error('Error in sample check:', error);",
              "type": "error"
            },
            {
              "line_number": 76,
              "content": "sampleLintCheck().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.phase2-utils-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase2-utils-optimization.ts",
          "console_count": 18,
          "console_lines": [
            {
              "line_number": 264,
              "content": "console.debug(`[Utils Micro-Chunk] ${id} \u2192 ${chunkName} (${target.targetSize}) ${target.forceAsync ? '[ASYNC]' : '[SYNC]'}`);",
              "type": "debug"
            },
            {
              "line_number": 354,
              "content": "console.log('\\n\ud83c\udfaf PHASE 2 UTILS BUNDLE OPTIMIZATION RESULTS:');",
              "type": "log"
            },
            {
              "line_number": 355,
              "content": "console.log(`\ud83d\udcca Original Bundle: 84.89kB`);",
              "type": "log"
            },
            {
              "line_number": 356,
              "content": "console.log(`\ud83d\udcca Optimized Bundle: ${utilsBundleKB}kB`);",
              "type": "log"
            },
            {
              "line_number": 357,
              "content": "console.log(`\ud83d\udcca Reduction Achieved: ${reductionPercentage.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 358,
              "content": "console.log(`\ud83d\udcca Target Range: 15-25kB (78% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 361,
              "content": "console.log('\u2705 PHASE 2 SUCCESS: Utils bundle optimization target achieved!');",
              "type": "log"
            },
            {
              "line_number": 362,
              "content": "console.log(`\ud83d\ude80 Final Size: ${utilsBundleKB}kB (${reductionPercentage.toFixed(1)}% reduction)`);",
              "type": "log"
            },
            {
              "line_number": 364,
              "content": "console.warn(`\u26a0\ufe0f Bundle size (${utilsBundleKB}kB) exceeds target maximum (25kB)`);",
              "type": "warn"
            },
            {
              "line_number": 365,
              "content": "console.warn(`\ud83c\udfaf Additional optimization needed: ${((utilsBundles - targetMax)/1024).toFixed(1)}kB`);",
              "type": "warn"
            },
            {
              "line_number": 367,
              "content": "console.log(`\u2705 EXCELLENT PROGRESS: ${reductionPercentage.toFixed(1)}% reduction achieved`);",
              "type": "log"
            },
            {
              "line_number": 369,
              "content": "console.warn(`\ud83c\udfaf Progress: ${reductionPercentage.toFixed(1)}% reduction, target: 78%`);",
              "type": "warn"
            },
            {
              "line_number": 373,
              "content": "console.log('\\n\ud83d\udccb Micro-Chunk Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 379,
              "content": "console.log(`  \u2022 ${name}: ${sizeKB}kB`);",
              "type": "log"
            },
            {
              "line_number": 501,
              "content": "console.log('\\n\ud83c\udfaf PHASE 2 UTILS BUNDLE OPTIMIZATION COMPLETE');",
              "type": "log"
            },
            {
              "line_number": 502,
              "content": "console.log('\ud83d\udcca Target: 84.89kB \u2192 15-25kB (78% reduction)');",
              "type": "log"
            },
            {
              "line_number": 503,
              "content": "console.log('\ud83d\udd27 Applied: Aggressive micro-chunking + conflict resolution');",
              "type": "log"
            },
            {
              "line_number": 504,
              "content": "console.log('\ud83d\ude80 Integrated: Phase 7 progressive architecture patterns');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.phase6-axis.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase6-axis.ts",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 111,
              "content": "console.warn('[Phase6AxisOptimization] Heavy formatter detected - should use inline formatters');",
              "type": "warn"
            },
            {
              "line_number": 158,
              "content": "console.log(`\u2705 Phase 6 Axis Success: ${bundleName} (${(size/1024).toFixed(1)}kB) within target ${config.target} (${config.reduction} reduction)`);",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.warn(`\u26a0\ufe0f Phase 6 Axis Warning: ${bundleName} (${(size/1024).toFixed(1)}kB) exceeds target ${config.target}`);",
              "type": "warn"
            },
            {
              "line_number": 171,
              "content": "console.log(`\ud83d\ude80 Phase 6 Axis BREAKTHROUGH: ${(totalPhase6AxisSize/1024).toFixed(1)}kB \u2264 8kB target (${actualReduction.toFixed(1)}% reduction achieved)`);",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.warn(`\ud83c\udfaf Phase 6 Axis Progress: ${(totalPhase6AxisSize/1024).toFixed(1)}kB, target \u2264 8kB (${actualReduction.toFixed(1)}% reduction)`);",
              "type": "warn"
            },
            {
              "line_number": 176,
              "content": "console.log(`\ud83d\udcca Phase 6 Axis Variants: ${successCount}/${Object.keys(phase6Targets).length} targets achieved`);",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.phase7-data-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-data-optimization.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 40,
              "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "analyze-utils-bundle.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/analyze-utils-bundle.js",
          "console_count": 69,
          "console_lines": [
            {
              "line_number": 12,
              "content": "console.log('\ud83d\udd0d Phase 8B Utils Bundle Source Map Analysis');",
              "type": "log"
            },
            {
              "line_number": 13,
              "content": "console.log('============================================');",
              "type": "log"
            },
            {
              "line_number": 19,
              "content": "console.log(`\ud83d\udce6 Bundle Size: ${(utilsBundle.length / 1024).toFixed(2)}kB (${utilsBundle.length} bytes)`);",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log('\ud83d\udd17 Detected Dependencies:');",
              "type": "log"
            },
            {
              "line_number": 50,
              "content": "console.log(`  - ${imp}`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log('\ud83d\udcc4 Large String Literals (>100 chars):');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log(`  - ${str.size} chars: ${str.content}`);",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "console.log('\ud83d\udd27 Function Analysis:');",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log(`  - Regular functions: ${functionMatches.length}`);",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log(`  - Arrow functions: ${arrowFunctionMatches.length}`);",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`  - Total estimated functions: ${functionMatches.length + arrowFunctionMatches.length}`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.log('\ud83d\udd2c Pattern Analysis:');",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log(`  - ${pattern.description}: ${matches.length} occurrences`);",
              "type": "log"
            },
            {
              "line_number": 100,
              "content": "console.log(`    Examples: ${[...new Set(matches)].slice(0, 5).join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 114,
              "content": "console.log('\ud83d\udcca Content Size Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log(`  - ${section.name}: ${(totalSize / 1024).toFixed(2)}kB (${percentage}%)`);",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log(`  - Other content: ${((utilsBundle.length - totalAnalyzed) / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log('\ud83d\udd24 Minified Variables (indicating heavy dependencies):');",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log(`  - Single-letter variables: ${uniqueMinifiedNames.length}`);",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log(`  - Most common: ${uniqueMinifiedNames.slice(0, 10).join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log('\ud83d\udccb Utility Categories Analysis:');",
              "type": "log"
            },
            {
              "line_number": 151,
              "content": "console.log(`  - ${category}: ${matches.length} references`);",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 163,
              "content": "console.log('\ud83e\udde9 Module Structure Analysis:');",
              "type": "log"
            },
            {
              "line_number": 166,
              "content": "console.log(`  - ${pattern.name}: ${matches.length} instances`);",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.log('\ud83c\udfaf OPTIMIZATION OPPORTUNITIES:');",
              "type": "log"
            },
            {
              "line_number": 172,
              "content": "console.log('=====================================');",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log(`\ud83d\udccf Size Analysis:`);",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log(`  - Current Size: ${currentSizeKB.toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log(`  - Target Size: ${targetSizeKB}kB`);",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log(`  - Reduction Needed: ${reductionNeeded.toFixed(2)}kB (${((reductionNeeded / currentSizeKB) * 100).toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log('\ud83d\udd27 Specific Optimization Targets:');",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log('  1. LODASH REPLACEMENT (High Impact):');",
              "type": "log"
            },
            {
              "line_number": 190,
              "content": "console.log('     - Replace lodash with native ES6+ methods');",
              "type": "log"
            },
            {
              "line_number": 191,
              "content": "console.log('     - Estimated savings: 3-8kB');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log('     - Priority: HIGH');",
              "type": "log"
            },
            {
              "line_number": 196,
              "content": "console.log('  2. LARGE STRING OPTIMIZATION (Medium Impact):');",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log(`     - Found ${stringMatches.length} large strings`);",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.log('     - Consider lazy loading or compression');",
              "type": "log"
            },
            {
              "line_number": 199,
              "content": "console.log('     - Estimated savings: 1-3kB');",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('     - Priority: MEDIUM');",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log('  3. FUNCTION CHUNKING (High Impact):');",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.log(`     - ${functionMatches.length + arrowFunctionMatches.length} functions detected`);",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('     - Split into route-specific chunks');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('     - Estimated savings: 2-6kB per route');",
              "type": "log"
            },
            {
              "line_number": 208,
              "content": "console.log('     - Priority: HIGH');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log('  4. TREE SHAKING IMPROVEMENTS (High Impact):');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log('     - Review unused exports and dead code');",
              "type": "log"
            },
            {
              "line_number": 213,
              "content": "console.log('     - Optimize import patterns');",
              "type": "log"
            },
            {
              "line_number": 214,
              "content": "console.log('     - Estimated savings: 2-5kB');",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log('     - Priority: HIGH');",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log('\ud83d\udccb Implementation Plan:');",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log('  Phase 1: Replace heavy dependencies (lodash, etc.)');",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log('  Phase 2: Implement route-based chunking');",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log('  Phase 3: Optimize string literals and data');",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.log('  Phase 4: Enhanced tree shaking');",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.log('  Phase 5: Validate and fine-tune');",
              "type": "log"
            },
            {
              "line_number": 225,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.log('\u2705 Analysis Complete - Ready for source map deep dive');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "analyze-source-maps.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/analyze-source-maps.js",
          "console_count": 70,
          "console_lines": [
            {
              "line_number": 12,
              "content": "console.log('\ud83d\uddfa\ufe0f  Source Map Analysis for Utils Bundle Optimization');",
              "type": "log"
            },
            {
              "line_number": 13,
              "content": "console.log('====================================================');",
              "type": "log"
            },
            {
              "line_number": 30,
              "content": "console.log('\ud83d\udcca Bundle Size Analysis:');",
              "type": "log"
            },
            {
              "line_number": 31,
              "content": "console.log(`  - Vendor Utils Bundle: ${(vendorUtilsJs.length / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.log(`  - Utils Main Bundle: ${(utilsMainJs.length / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "console.log(`  - Total Combined: ${((vendorUtilsJs.length + utilsMainJs.length) / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 34,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 37,
              "content": "console.log('\ud83c\udfd7\ufe0f  Vendor Utils Source Analysis:');",
              "type": "log"
            },
            {
              "line_number": 38,
              "content": "console.log(`  - Source files: ${vendorUtilsMap.sources ? vendorUtilsMap.sources.length : 0}`);",
              "type": "log"
            },
            {
              "line_number": 62,
              "content": "console.log('  \ud83d\udce6 Third-party packages:');",
              "type": "log"
            },
            {
              "line_number": 66,
              "content": "console.log(`    - ${pkg}: ${files.length} files`);",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "files.forEach(file => console.log(`      \u2514\u2500 ${file}`));",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "files.slice(0, 3).forEach(file => console.log(`      \u2514\u2500 ${file}`));",
              "type": "log"
            },
            {
              "line_number": 71,
              "content": "console.log(`      \u2514\u2500 ... and ${files.length - 3} more`);",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 79,
              "content": "console.log('\ud83d\udd27 Utils Main Source Analysis:');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log(`  - Source files: ${utilsMainMap.sources ? utilsMainMap.sources.length : 0}`);",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log('  \ud83d\udcc1 Our source categories:');",
              "type": "log"
            },
            {
              "line_number": 115,
              "content": "console.log(`    - ${category}: ${files.length} files`);",
              "type": "log"
            },
            {
              "line_number": 117,
              "content": "files.forEach(file => console.log(`      \u2514\u2500 ${file}`));",
              "type": "log"
            },
            {
              "line_number": 119,
              "content": "files.slice(0, 2).forEach(file => console.log(`      \u2514\u2500 ${file}`));",
              "type": "log"
            },
            {
              "line_number": 120,
              "content": "console.log(`      \u2514\u2500 ... and ${files.length - 2} more`);",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log(`\ud83d\udd0d ${bundleName} Pattern Analysis:`);",
              "type": "log"
            },
            {
              "line_number": 144,
              "content": "console.log(`  - ${name}: ${matches.length} instances`);",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log(`    Examples: ${uniqueLodash.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 153,
              "content": "console.log(`    Examples: ${uniqueDateFns.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log('\ud83c\udfaf SOURCE MAP-BASED OPTIMIZATION OPPORTUNITIES:');",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log('==============================================');",
              "type": "log"
            },
            {
              "line_number": 167,
              "content": "console.log('\ud83d\udccf Target Analysis:');",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log(`  - Current Total: ${((vendorUtilsJs.length + utilsMainJs.length) / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "console.log(`  - Target Size: 29kB (for the combined bundle)`);",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log(`  - Reduction Needed: ${((vendorUtilsJs.length + utilsMainJs.length) / 1024 - 29).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log('\ud83d\udd25 HIGH IMPACT: Date-fns Replacement');",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log('  - date-fns is contributing significantly to bundle size');",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log('  - Replace with native Date API or lightweight alternative');",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log('  - Estimated savings: 15-25kB');",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log('  - Implementation: Create date utility atoms using native APIs');",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.log('\ud83d\udd25 HIGH IMPACT: Lodash Replacement');",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log('  - lodash utilities detected in bundle');",
              "type": "log"
            },
            {
              "line_number": 190,
              "content": "console.log('  - Replace with native ES6+ methods');",
              "type": "log"
            },
            {
              "line_number": 191,
              "content": "console.log('  - Estimated savings: 8-15kB');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log('  - Implementation: Create native utility functions');",
              "type": "log"
            },
            {
              "line_number": 193,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log('\ud83d\udccb IMPLEMENTATION PLAN (Source Map Guided):');",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('Phase 1: Third-Party Dependency Replacement (HIGH IMPACT)');",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('  1. Replace date-fns with native Date utilities');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log('  2. Replace lodash with native ES6+ methods');",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log('  3. Audit other third-party utilities in vendor bundle');",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log('  Expected savings: 20-35kB');",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('Phase 2: Utils Bundle Chunking (MEDIUM IMPACT)');",
              "type": "log"
            },
            {
              "line_number": 208,
              "content": "console.log('  1. Fix static/dynamic import conflicts preventing chunking');",
              "type": "log"
            },
            {
              "line_number": 209,
              "content": "console.log('  2. Implement route-based utils chunking');",
              "type": "log"
            },
            {
              "line_number": 210,
              "content": "console.log('  3. Lazy load specialized utilities');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log('  Expected savings: 5-15kB per route');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 214,
              "content": "console.log('Phase 3: Tree Shaking Optimization (MEDIUM IMPACT)');",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log('  1. Ensure all imports are tree-shakable');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log('  2. Remove unused utility functions');",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log('  3. Optimize export patterns');",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log('  Expected savings: 3-8kB');",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 221,
              "content": "console.log('\u2705 Source Map Analysis Complete');",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.log('\ud83c\udfaf Primary target: Replace date-fns and lodash dependencies');",
              "type": "log"
            },
            {
              "line_number": 223,
              "content": "console.log('\ud83d\udcca Expected total savings: 25-50kB (exceeding 29kB target)');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.standard-bundle-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.standard-bundle-optimization.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 206,
              "content": "console.debug(`Standard Bundle: ${id} \u2192 ${chunkName} (${target.targetSize})`);",
              "type": "debug"
            },
            {
              "line_number": 312,
              "content": "console.log(`${statusIcon} Standard Bundle: ${bundleName} (${sizeKB.toFixed(1)}kB) - Target: ${target.targetSize}`);",
              "type": "log"
            },
            {
              "line_number": 322,
              "content": "console.log(`\ud83d\ude80 STANDARD BUNDLE SUCCESS: ${totalReductionPercentage.toFixed(1)}% reduction achieved (Target: 54-70%)`);",
              "type": "log"
            },
            {
              "line_number": 323,
              "content": "console.log(`\ud83d\udcca Total Size: ${(totalStandardSize/1024).toFixed(1)}kB (from 26.31kB baseline)`);",
              "type": "log"
            },
            {
              "line_number": 325,
              "content": "console.warn(`\ud83c\udfaf Standard Bundle Progress: ${totalReductionPercentage.toFixed(1)}% reduction, target: 54-70%`);",
              "type": "warn"
            },
            {
              "line_number": 342,
              "content": "console.log('\\n\ud83d\udcca Standard Bundle Strategy Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 344,
              "content": "console.log(`  ${strategy}: ${(data.size/1024).toFixed(1)}kB (${data.count} chunks)`);",
              "type": "log"
            },
            {
              "line_number": 459,
              "content": "console.log('\\n\ud83d\udd0d Standard Bundle Optimization Analysis Complete');",
              "type": "log"
            },
            {
              "line_number": 460,
              "content": "console.log('\ud83d\udcca Bundle size validation would run here with actual build data');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.assets.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.assets.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 233,
              "content": "// Remove console.log in production",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "pure_funcs: process.env.NODE_ENV === 'production' ? ['console.log', 'console.info'] : [],",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.production.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.production.ts",
          "console_count": 9,
          "console_lines": [
            {
              "line_number": 112,
              "content": "'console.log',",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "'console.warn',",
              "type": "warn"
            },
            {
              "line_number": 114,
              "content": "'console.error',",
              "type": "error"
            },
            {
              "line_number": 2192,
              "content": "console.warn(`\u26a0\ufe0f Phase 7 Warning: ${bundleName} (${(size/1024).toFixed(1)}kB) exceeds target ${config.target}`);",
              "type": "warn"
            },
            {
              "line_number": 2194,
              "content": "console.log(`\u2705 Phase 7 Success: ${bundleName} (${(size/1024).toFixed(1)}kB) within target ${config.target}`);",
              "type": "log"
            },
            {
              "line_number": 2209,
              "content": "console.log(`\ud83d\ude80 Phase 7 CHART MICRO-CHUNKING SUCCESS: 6-chunk system ${(totalPhase7ChartSize/1024).toFixed(1)}kB \u2264 ${phase7ChartTarget/1024}kB target`);",
              "type": "log"
            },
            {
              "line_number": 2211,
              "content": "console.warn(`\ud83c\udfaf Phase 7 Progress: Chart micro-chunks ${(totalPhase7ChartSize/1024).toFixed(1)}kB, target \u2264 ${phase7ChartTarget/1024}kB`);",
              "type": "warn"
            },
            {
              "line_number": 2221,
              "content": "console.log(`\ud83d\ude80 Phase 5/6 CONTINUED SUCCESS: Total optimized bundles ${(totalPhase5Size/1024).toFixed(1)}kB \u2264 ${phase5Target/1024}kB target`);",
              "type": "log"
            },
            {
              "line_number": 2223,
              "content": "console.warn(`\ud83c\udfaf Phase 5/6 Monitoring: Total bundles ${(totalPhase5Size/1024).toFixed(1)}kB, target \u2264 ${phase5Target/1024}kB`);",
              "type": "warn"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "analyze-analytics-bundle.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/analyze-analytics-bundle.js",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 19,
              "content": "info: (msg, data) => console.log(`[INFO] ${msg}`, data || ''),",
              "type": "log"
            },
            {
              "line_number": 20,
              "content": "warn: (msg, data) => console.warn(`[WARN] ${msg}`, data || ''),",
              "type": "warn"
            },
            {
              "line_number": 21,
              "content": "error: (msg, data) => console.error(`[ERROR] ${msg}`, data || ''),",
              "type": "error"
            },
            {
              "line_number": 22,
              "content": "success: (msg, data) => console.log(`[SUCCESS] ${msg}`, data || '')",
              "type": "log"
            },
            {
              "line_number": 506,
              "content": "console.log('\\n\ud83c\udfaf Analytics Dashboard Bundle Optimization Analysis Complete!');",
              "type": "log"
            },
            {
              "line_number": 510,
              "content": "console.error('\u274c Analysis failed:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.phase7-micro-chunking.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-micro-chunking.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 109,
              "content": "['console.log', 'console.info', 'console.debug'] : []",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "bundle-size-analyzer.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/bundle-size-analyzer.js",
          "console_count": 50,
          "console_lines": [
            {
              "line_number": 12,
              "content": "console.log('\ud83c\udfaf Comprehensive Bundle Size Attribution Analysis');",
              "type": "log"
            },
            {
              "line_number": 13,
              "content": "console.log('================================================');",
              "type": "log"
            },
            {
              "line_number": 89,
              "content": "console.log('\ud83d\udcca Bundle Size Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 90,
              "content": "console.log(`  \ud83c\udfd7\ufe0f  Vendor Utils: ${(vendorUtilsAnalysis.totalSize / 1024).toFixed(2)}kB (${vendorUtilsAnalysis.numSources} sources)`);",
              "type": "log"
            },
            {
              "line_number": 91,
              "content": "console.log(`  \ud83d\udd27 Utils Main: ${(utilsMainAnalysis.totalSize / 1024).toFixed(2)}kB (${utilsMainAnalysis.numSources} sources)`);",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log(`  \ud83d\udce6 Total Combined: ${(totalBundleSize / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 93,
              "content": "console.log(`  \ud83c\udfaf Target: 29kB`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log(`  \ud83d\udd25 Reduction Needed: ${(totalBundleSize / 1024 - 29).toFixed(2)}kB (${(((totalBundleSize - 29*1024) / totalBundleSize) * 100).toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.log('\ud83c\udfc6 TOP 20 BUNDLE SIZE CONTRIBUTORS:');",
              "type": "log"
            },
            {
              "line_number": 124,
              "content": "console.log('=====================================');",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log(`${String(index + 1).padStart(2)}. ${source}`);",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log(`    \ud83d\udccf Size: ${sizeKB}kB (${percentage}% of total)`);",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log(`    \ud83d\udcc1 Files: ${data.files.length}`);",
              "type": "log"
            },
            {
              "line_number": 135,
              "content": "console.log(`       \u2514\u2500 ${file}`);",
              "type": "log"
            },
            {
              "line_number": 139,
              "content": "console.log(`       \u2514\u2500 ${file}`);",
              "type": "log"
            },
            {
              "line_number": 141,
              "content": "console.log(`       \u2514\u2500 ... and ${data.files.length - 2} more`);",
              "type": "log"
            },
            {
              "line_number": 143,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "console.log('\ud83d\udca1 OPTIMIZATION POTENTIAL BY CATEGORY:');",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log('======================================');",
              "type": "log"
            },
            {
              "line_number": 187,
              "content": "console.log(`${category}:`);",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.log(`  \ud83d\udccf Current Size: ${(totalCategorySize / 1024).toFixed(2)}kB (${percentage}%)`);",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log(`  \ud83d\udcc1 Files: ${categoryFiles}`);",
              "type": "log"
            },
            {
              "line_number": 217,
              "content": "console.log(`  \ud83d\udcbe Potential Savings: ${(potentialSavings / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log(`  \ud83d\udd27 Strategy: ${optimizationStrategy}`);",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 233,
              "content": "console.log('\ud83c\udfaf OPTIMIZATION FEASIBILITY ANALYSIS:');",
              "type": "log"
            },
            {
              "line_number": 234,
              "content": "console.log('====================================');",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.log(`Current Size: ${(totalBundleSize / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log(`Potential Savings: ${(totalPotentialSavings / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log(`Projected Optimized Size: ${(optimizedSize / 1024).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.log(`Target Size: 29kB`);",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.log('\u2705 TARGET ACHIEVABLE with proposed optimizations!');",
              "type": "log"
            },
            {
              "line_number": 242,
              "content": "console.log(`   Margin: ${(29 - optimizedSize / 1024).toFixed(2)}kB under target`);",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('\u26a0\ufe0f  Additional optimization needed');",
              "type": "log"
            },
            {
              "line_number": 245,
              "content": "console.log(`   Still over by: ${(optimizedSize / 1024 - 29).toFixed(2)}kB`);",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 249,
              "content": "console.log('\ud83d\udd25 IMMEDIATE ACTION PLAN (Priority Order):');",
              "type": "log"
            },
            {
              "line_number": 250,
              "content": "console.log('==========================================');",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log('1. \ud83e\udd47 Replace date-fns with native Date utilities');",
              "type": "log"
            },
            {
              "line_number": 252,
              "content": "console.log('   Expected impact: 15-25kB reduction');",
              "type": "log"
            },
            {
              "line_number": 253,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.log('2. \ud83e\udd48 Replace lodash with native ES6+ methods');",
              "type": "log"
            },
            {
              "line_number": 255,
              "content": "console.log('   Expected impact: 8-15kB reduction');",
              "type": "log"
            },
            {
              "line_number": 256,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 257,
              "content": "console.log('3. \ud83e\udd49 Implement utils chunking and tree shaking');",
              "type": "log"
            },
            {
              "line_number": 258,
              "content": "console.log('   Expected impact: 5-10kB reduction');",
              "type": "log"
            },
            {
              "line_number": 259,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 260,
              "content": "console.log('Total expected reduction: 28-50kB');",
              "type": "log"
            },
            {
              "line_number": 261,
              "content": "console.log('\ud83c\udfaf This should easily achieve the 29kB target!');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.performance.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.performance.ts",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 90,
              "content": "console.warn('\ud83d\udea8 Performance Warning: Large bundle detected', warning);",
              "type": "warn"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.phase7-chart-chunking.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-chart-chunking.ts",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 191,
              "content": "console.debug(`Phase 7: ${id} \u2192 ${chunkName}`);",
              "type": "debug"
            },
            {
              "line_number": 215,
              "content": "console.warn(`\u26a0\ufe0f Phase 7 Warning: ${chunkName} (${sizeKB.toFixed(1)}kB) exceeds target ${target.targetSize}`);",
              "type": "warn"
            },
            {
              "line_number": 217,
              "content": "console.log(`\u2705 Phase 7 Success: ${chunkName} (${sizeKB.toFixed(1)}kB) within target ${target.targetSize}`);",
              "type": "log"
            },
            {
              "line_number": 230,
              "content": "console.log(`\ud83d\ude80 Phase 7 ACHIEVEMENT: Chart bundle reduction ${reductionPercentage.toFixed(1)}% (${(totalPhase7Size/1024).toFixed(1)}kB total)`);",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.warn(`\ud83c\udfaf Phase 7 Progress: Chart bundle reduction ${reductionPercentage.toFixed(1)}%, target \u226540%`);",
              "type": "warn"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 82,
              "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "lint-check.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/lint-check.js",
          "console_count": 12,
          "console_lines": [
            {
              "line_number": 8,
              "content": "console.log('\ud83d\udd0d Starting linter error count...');",
              "type": "log"
            },
            {
              "line_number": 39,
              "content": "console.log('\\n\ud83d\udcca LINTER VALIDATION RESULTS:');",
              "type": "log"
            },
            {
              "line_number": 40,
              "content": "console.log(`Total files checked: ${results.length}`);",
              "type": "log"
            },
            {
              "line_number": 41,
              "content": "console.log(`Files with errors: ${filesWithErrors}`);",
              "type": "log"
            },
            {
              "line_number": 42,
              "content": "console.log(`Total errors: ${totalErrors}`);",
              "type": "log"
            },
            {
              "line_number": 43,
              "content": "console.log(`Total warnings: ${totalWarnings}`);",
              "type": "log"
            },
            {
              "line_number": 46,
              "content": "console.log('\\n\u274c LINTER ERRORS STILL PRESENT');",
              "type": "log"
            },
            {
              "line_number": 47,
              "content": "console.log('\\nTop files with most errors:');",
              "type": "log"
            },
            {
              "line_number": 52,
              "content": "console.log(`  ${item.file}: ${item.errors} errors, ${item.warnings} warnings`);",
              "type": "log"
            },
            {
              "line_number": 55,
              "content": "console.log('\\n\u2705 NO LINTER ERRORS FOUND');",
              "type": "log"
            },
            {
              "line_number": 61,
              "content": "console.error('Error running linter:', error);",
              "type": "error"
            },
            {
              "line_number": 71,
              "content": "console.error('Failed to check lint errors:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.data-optimization.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.data-optimization.ts",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 194,
              "content": "'console.log',",
              "type": "log"
            },
            {
              "line_number": 195,
              "content": "'console.warn',",
              "type": "warn"
            },
            {
              "line_number": 196,
              "content": "'console.error',",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "vite.config.phase7-dashboard-core.ts",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-dashboard-core.ts",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 190,
              "content": "console.debug(`Dashboard Bundle: ${id} \u2192 ${chunkName} (${target.targetSize})`);",
              "type": "debug"
            },
            {
              "line_number": 292,
              "content": "console.log(`${statusIcon} Dashboard Bundle: ${bundleName} (${sizeKB.toFixed(1)}kB) - Target: ${target.targetSize}`);",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log(`\ud83d\ude80 DASHBOARD OPTIMIZATION SUCCESS: ${totalReductionPercentage.toFixed(1)}% reduction achieved (Target: 65-75%)`);",
              "type": "log"
            },
            {
              "line_number": 303,
              "content": "console.log(`\ud83d\udcca Total Size: ${(totalDashboardSize/1024).toFixed(1)}kB (from 28.4kB baseline)`);",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.warn(`\ud83c\udfaf Dashboard Progress: ${totalReductionPercentage.toFixed(1)}% reduction, target: 65-75%`);",
              "type": "warn"
            },
            {
              "line_number": 416,
              "content": "console.log('\\\\n\ud83c\udfaf Phase 7 Dashboard Core Optimization Complete');",
              "type": "log"
            },
            {
              "line_number": 417,
              "content": "console.log('\ud83d\udcca Target: 65-75% reduction from 28.4kB baseline');",
              "type": "log"
            },
            {
              "line_number": 418,
              "content": "console.log('\ud83c\udfc6 Applying proven Phase 6 Standard Bundle patterns');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase7-benchmark-suite.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-benchmark-suite.js",
          "console_count": 55,
          "console_lines": [
            {
              "line_number": 91,
              "content": "console.log('\ud83c\udfc1 Phase 7 Comprehensive Benchmarking Suite Initialized');",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log('\ud83c\udfc1 STARTING PHASE 7 COMPREHENSIVE BENCHMARKING SUITE');",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 142,
              "content": "console.log('\ud83d\udcca RUNNING BUNDLE ANALYSIS BENCHMARKS...');",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log('\u26a1 RUNNING LOAD PERFORMANCE BENCHMARKS...');",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log('\ud83d\ude80 RUNNING RUNTIME PERFORMANCE BENCHMARKS...');",
              "type": "log"
            },
            {
              "line_number": 151,
              "content": "console.log('\ud83e\udde0 RUNNING MEMORY PROFILING BENCHMARKS...');",
              "type": "log"
            },
            {
              "line_number": 154,
              "content": "console.log('\ud83c\udf10 RUNNING NETWORK SIMULATION BENCHMARKS...');",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "console.log('\ud83d\udcc8 RUNNING COMPARATIVE ANALYSIS BENCHMARKS...');",
              "type": "log"
            },
            {
              "line_number": 161,
              "content": "console.log('\ud83d\udd0d GENERATING COMPREHENSIVE ANALYSIS...');",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log('\ud83d\udcca GENERATING PHASE COMPARISONS...');",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "console.log('\ud83c\udfc6 CALCULATING OVERALL PERFORMANCE SCORE...');",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('\ud83d\udcc8 GENERATING STATISTICAL ANALYSIS...');",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log('\ud83d\udccb GENERATING COMPREHENSIVE BENCHMARK REPORT...');",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log('\u2705 PHASE 7 COMPREHENSIVE BENCHMARKING COMPLETED');",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.error('\u274c Benchmarking failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 237,
              "content": "console.log(`\u2705 Bundle analysis benchmarks completed`);",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.error('\u274c Bundle analysis benchmarks failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 266,
              "content": "console.log(`\ud83d\udce1 Testing ${conditionName} network conditions...`);",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log(`\u2705 Load performance benchmarks completed`);",
              "type": "log"
            },
            {
              "line_number": 296,
              "content": "console.error('\u274c Load performance benchmarks failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 321,
              "content": "console.log(`\ud83d\udcf1 Testing ${profileName} device profile...`);",
              "type": "log"
            },
            {
              "line_number": 347,
              "content": "console.log(`\u2705 Runtime performance benchmarks completed`);",
              "type": "log"
            },
            {
              "line_number": 351,
              "content": "console.error('\u274c Runtime performance benchmarks failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 398,
              "content": "console.log(`\u2705 Memory profiling benchmarks completed`);",
              "type": "log"
            },
            {
              "line_number": 402,
              "content": "console.error('\u274c Memory profiling benchmarks failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 426,
              "content": "console.log(`\ud83c\udf10 Deep testing ${conditionName} network simulation...`);",
              "type": "log"
            },
            {
              "line_number": 450,
              "content": "console.log(`\u2705 Network simulation benchmarks completed`);",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.error('\u274c Network simulation benchmarks failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 500,
              "content": "console.log(`\u2705 Comparative analysis benchmarks completed`);",
              "type": "log"
            },
            {
              "line_number": 504,
              "content": "console.error('\u274c Comparative analysis benchmarks failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 548,
              "content": "console.warn('\u26a0\ufe0f Could not generate comprehensive analysis:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 587,
              "content": "console.warn('\u26a0\ufe0f Could not generate phase comparisons:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 629,
              "content": "console.warn('\u26a0\ufe0f Could not generate statistical analysis:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 717,
              "content": "console.log(`\ud83d\udccb Comprehensive benchmark report saved: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 840,
              "content": "console.log('\\n\ud83c\udfc1 === Phase 7 Benchmarking Summary ===');",
              "type": "log"
            },
            {
              "line_number": 841,
              "content": "console.log(`\ud83d\udcca Session ID: ${benchmarkSession.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 842,
              "content": "console.log(`\ud83d\udd50 Timestamp: ${benchmarkSession.timestamp}`);",
              "type": "log"
            },
            {
              "line_number": 843,
              "content": "console.log(`\ud83c\udfc6 Overall Score: ${benchmarkSession.overallScore}/100`);",
              "type": "log"
            },
            {
              "line_number": 845,
              "content": "console.log('\\n\ud83d\udcc8 Benchmark Suite Results:');",
              "type": "log"
            },
            {
              "line_number": 849,
              "content": "console.log(`  ${status} ${category}: ${score}/100`);",
              "type": "log"
            },
            {
              "line_number": 853,
              "content": "console.log('\\n\ud83c\udfaf Key Metrics:');",
              "type": "log"
            },
            {
              "line_number": 855,
              "content": "console.log(`  Bundle Size Reduction: ${metrics.bundleSizeReduction?.toFixed(1) || 'N/A'}%`);",
              "type": "log"
            },
            {
              "line_number": 856,
              "content": "console.log(`  Load Time Improvement: ${metrics.loadTimeImprovement?.toFixed(1) || 'N/A'}%`);",
              "type": "log"
            },
            {
              "line_number": 857,
              "content": "console.log(`  Memory Efficiency: ${metrics.memoryEfficiency?.toFixed(1) || 'N/A'}%`);",
              "type": "log"
            },
            {
              "line_number": 860,
              "content": "console.log('==========================================\\n');",
              "type": "log"
            },
            {
              "line_number": 1393,
              "content": "console.log('Bundle analysis benchmarks:', JSON.stringify(bundleResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1398,
              "content": "console.log('Load performance benchmarks:', JSON.stringify(loadResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1403,
              "content": "console.log('Runtime performance benchmarks:', JSON.stringify(runtimeResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1408,
              "content": "console.log('Memory profiling benchmarks:', JSON.stringify(memoryResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1413,
              "content": "console.log('Network simulation benchmarks:', JSON.stringify(networkResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1418,
              "content": "console.log('Comparative analysis benchmarks:', JSON.stringify(comparativeResult, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1429,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 1476,
              "content": "console.error('\u274c Benchmarking error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/subagent-10-bundle-monitor.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/subagent-10-bundle-monitor.js",
          "console_count": 89,
          "console_lines": [
            {
              "line_number": 133,
              "content": "console.log('\u2705 Bundle monitoring is already running');",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log('Use \"npm run monitor:status\" to check system status');",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('\ud83d\ude80 Bundle Monitoring System started successfully');",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "console.log(`\ud83d\udcca Real-time monitoring: http://localhost:${config.realTimeMonitoring.port}`);",
              "type": "log"
            },
            {
              "line_number": 175,
              "content": "console.log(`\ud83e\udd16 AI predictions: ${config.predictiveAnalytics.enabled ? 'Enabled' : 'Disabled'}`);",
              "type": "log"
            },
            {
              "line_number": 176,
              "content": "console.log(`\ud83d\udcc8 Live dashboard: ${options['enable-dashboard'] ? 'Available' : 'Disabled'}`);",
              "type": "log"
            },
            {
              "line_number": 180,
              "content": "console.log('\ud83d\udcca System Metrics:', {",
              "type": "log"
            },
            {
              "line_number": 191,
              "content": "console.log('\\n\ud83d\udca1 Press Ctrl+C to stop monitoring');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log('\u26a0\ufe0f  Bundle monitoring is not running');",
              "type": "log"
            },
            {
              "line_number": 234,
              "content": "console.log('\u2705 Bundle monitoring stopped successfully');",
              "type": "log"
            },
            {
              "line_number": 243,
              "content": "console.log('\u26a0\ufe0f  Monitoring system stopped (forced cleanup)');",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log('\ud83d\udd04 Restarting Bundle Monitoring System...');",
              "type": "log"
            },
            {
              "line_number": 270,
              "content": "console.log('\u274c Bundle monitoring is not running');",
              "type": "log"
            },
            {
              "line_number": 271,
              "content": "console.log('Use \"npm run monitor:start\" to start monitoring');",
              "type": "log"
            },
            {
              "line_number": 280,
              "content": "console.log('\u2705 Bundle monitoring is running');",
              "type": "log"
            },
            {
              "line_number": 281,
              "content": "console.log('\ud83d\udcca System Status:');",
              "type": "log"
            },
            {
              "line_number": 282,
              "content": "console.log(`   Uptime: ${Math.round(response.metrics.uptime / 1000)}s`);",
              "type": "log"
            },
            {
              "line_number": 283,
              "content": "console.log(`   Total Predictions: ${response.metrics.totalPredictions}`);",
              "type": "log"
            },
            {
              "line_number": 284,
              "content": "console.log(`   Alerts Generated: ${response.metrics.alertsGenerated}`);",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log(`   System Overhead: ${response.performance.overhead.toFixed(2)}%`);",
              "type": "log"
            },
            {
              "line_number": 286,
              "content": "console.log(`   Connected Clients: ${response.metrics.connectedClients}`);",
              "type": "log"
            },
            {
              "line_number": 287,
              "content": "console.log(`   Last Update: ${response.metrics.lastUpdate}`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('\u26a0\ufe0f  Recent Alerts:');",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log(`   ${alert.severity.toUpperCase()}: ${alert.message}`);",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log('\u26a0\ufe0f  Bundle monitoring process running but not responding');",
              "type": "log"
            },
            {
              "line_number": 298,
              "content": "console.log('Consider restarting: \"npm run monitor:restart\"');",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log('\u274c Error checking system status:', error.message);",
              "type": "log"
            },
            {
              "line_number": 310,
              "content": "console.log('\ud83d\ude80 Launching Live Performance Dashboard...');",
              "type": "log"
            },
            {
              "line_number": 313,
              "content": "console.log('\u274c Bundle monitoring is not running');",
              "type": "log"
            },
            {
              "line_number": 314,
              "content": "console.log('Start monitoring first: \"npm run monitor:start\"');",
              "type": "log"
            },
            {
              "line_number": 324,
              "content": "console.log(`\ud83d\udcca Dashboard available at: ${dashboardUrl}`);",
              "type": "log"
            },
            {
              "line_number": 330,
              "content": "console.log('\ud83c\udf10 Dashboard opened in browser');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.log('\u26a0\ufe0f  Could not open browser automatically');",
              "type": "log"
            },
            {
              "line_number": 333,
              "content": "console.log(`Please open ${dashboardUrl} manually`);",
              "type": "log"
            },
            {
              "line_number": 342,
              "content": "console.log('\ud83d\udd0d Running Bundle Regression Analysis...');",
              "type": "log"
            },
            {
              "line_number": 360,
              "content": "console.log('\ud83d\udcca Analysis Results:');",
              "type": "log"
            },
            {
              "line_number": 361,
              "content": "console.log('   \ud83d\udd2e Regression predictions generated');",
              "type": "log"
            },
            {
              "line_number": 362,
              "content": "console.log('   \ud83d\udcc8 Performance correlations analyzed');",
              "type": "log"
            },
            {
              "line_number": 363,
              "content": "console.log('   \ud83c\udfaf Optimization opportunities identified');",
              "type": "log"
            },
            {
              "line_number": 367,
              "content": "console.log(`\ud83d\udcc4 Detailed report saved to: ${reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 382,
              "content": "console.log('\ud83c\udfaf Generating Bundle Optimization Recommendations...');",
              "type": "log"
            },
            {
              "line_number": 391,
              "content": "console.log('\ud83d\udca1 Optimization Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 392,
              "content": "console.log('   \ud83d\udce6 Bundle size optimizations identified');",
              "type": "log"
            },
            {
              "line_number": 393,
              "content": "console.log('   \u26a1 Build performance improvements available');",
              "type": "log"
            },
            {
              "line_number": 394,
              "content": "console.log('   \ud83d\udcbe Caching strategy optimizations suggested');",
              "type": "log"
            },
            {
              "line_number": 395,
              "content": "console.log('   \ud83c\udf33 Tree-shaking improvements recommended');",
              "type": "log"
            },
            {
              "line_number": 422,
              "content": "console.log(`\\n${index + 1}. ${rec.type.toUpperCase()}`);",
              "type": "log"
            },
            {
              "line_number": 423,
              "content": "console.log(`   Description: ${rec.description}`);",
              "type": "log"
            },
            {
              "line_number": 424,
              "content": "console.log(`   Savings: ${rec.estimatedSavings}`);",
              "type": "log"
            },
            {
              "line_number": 425,
              "content": "console.log(`   Effort: ${rec.effort}`);",
              "type": "log"
            },
            {
              "line_number": 426,
              "content": "console.log(`   Priority: ${rec.priority}`);",
              "type": "log"
            },
            {
              "line_number": 441,
              "content": "console.log('\ud83d\udd17 Integrating with Existing Monitoring Systems...');",
              "type": "log"
            },
            {
              "line_number": 451,
              "content": "console.log('\u274c System compatibility issues found:');",
              "type": "log"
            },
            {
              "line_number": 453,
              "content": "console.log(`   \u2022 ${issue}`);",
              "type": "log"
            },
            {
              "line_number": 455,
              "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 457,
              "content": "console.log(`   \u2022 ${rec}`);",
              "type": "log"
            },
            {
              "line_number": 471,
              "content": "console.log('\u2705 Integration completed successfully');",
              "type": "log"
            },
            {
              "line_number": 472,
              "content": "console.log('\ud83d\ude80 Enhanced monitoring capabilities available');",
              "type": "log"
            },
            {
              "line_number": 486,
              "content": "console.log('\ud83d\udd0d Validating Bundle Monitor System...');",
              "type": "log"
            },
            {
              "line_number": 495,
              "content": "console.log('\u2705 System validation passed');",
              "type": "log"
            },
            {
              "line_number": 496,
              "content": "console.log('\ud83d\ude80 Bundle monitoring system is ready to use');",
              "type": "log"
            },
            {
              "line_number": 498,
              "content": "console.log('\u274c System validation failed');",
              "type": "log"
            },
            {
              "line_number": 499,
              "content": "console.log('\\nIssues found:');",
              "type": "log"
            },
            {
              "line_number": 501,
              "content": "console.log(`   \u2022 ${issue}`);",
              "type": "log"
            },
            {
              "line_number": 503,
              "content": "console.log('\\nRecommendations:');",
              "type": "log"
            },
            {
              "line_number": 505,
              "content": "console.log(`   \u2022 ${rec}`);",
              "type": "log"
            },
            {
              "line_number": 510,
              "content": "console.log('\u274c Validation error:', error.message);",
              "type": "log"
            },
            {
              "line_number": 532,
              "content": "console.log('\u274c Unknown config action:', action);",
              "type": "log"
            },
            {
              "line_number": 533,
              "content": "console.log('Available actions: show, reset, validate');",
              "type": "log"
            },
            {
              "line_number": 549,
              "content": "console.log(`\ud83d\udcc4 Showing last ${options.lines} lines from ${this.logFile}:`);",
              "type": "log"
            },
            {
              "line_number": 550,
              "content": "console.log('\u2500'.repeat(80));",
              "type": "log"
            },
            {
              "line_number": 557,
              "content": "console.log(line);",
              "type": "log"
            },
            {
              "line_number": 561,
              "content": "console.log('\ud83d\udcc4 No log file found');",
              "type": "log"
            },
            {
              "line_number": 564,
              "content": "console.log('\u274c Error reading logs:', error.message);",
              "type": "log"
            },
            {
              "line_number": 572,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 729,
              "content": "console.log('\\\\n\ud83d\uded1 Shutting down Bundle Monitoring System...');",
              "type": "log"
            },
            {
              "line_number": 734,
              "content": "console.log('\u2705 Bundle monitoring stopped gracefully');",
              "type": "log"
            },
            {
              "line_number": 737,
              "content": "console.error('\u274c Error during shutdown:', error.message);",
              "type": "error"
            },
            {
              "line_number": 792,
              "content": "console.log('\ud83d\udcc4 Current Configuration:');",
              "type": "log"
            },
            {
              "line_number": 793,
              "content": "console.log(JSON.stringify(config, null, 2));",
              "type": "log"
            },
            {
              "line_number": 795,
              "content": "console.log('\u274c Error showing config:', error.message);",
              "type": "log"
            },
            {
              "line_number": 803,
              "content": "console.log('\u2705 Configuration reset to defaults');",
              "type": "log"
            },
            {
              "line_number": 805,
              "content": "console.log('\u274c Error resetting config:', error.message);",
              "type": "log"
            },
            {
              "line_number": 817,
              "content": "console.log('\u274c Configuration validation failed');",
              "type": "log"
            },
            {
              "line_number": 818,
              "content": "console.log('Missing sections:', missing.join(', '));",
              "type": "log"
            },
            {
              "line_number": 820,
              "content": "console.log('\u2705 Configuration validation passed');",
              "type": "log"
            },
            {
              "line_number": 823,
              "content": "console.log('\u274c Error validating config:', error.message);",
              "type": "log"
            },
            {
              "line_number": 863,
              "content": "console.error('Log write error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 872,
              "content": "console.error('\u274c Bundle Monitor CLI error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase7-master-validator.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-master-validator.js",
          "console_count": 61,
          "console_lines": [
            {
              "line_number": 67,
              "content": "console.log('\ud83c\udfbc Phase 7 Master Validation Orchestrator Initialized');",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log('\ud83c\udfaf Building on Phase 6\\'s proven 78.7%, 81%, 73.9% reduction success');",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('\ud83c\udfbc STARTING PHASE 7 MASTER VALIDATION ORCHESTRATION');",
              "type": "log"
            },
            {
              "line_number": 95,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 96,
              "content": "console.log(`\ud83d\udcca Session ID: ${this.orchestrationState.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 97,
              "content": "console.log(`\u2699\ufe0f Execution Mode: ${mode}`);",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log(`\ud83c\udfaf Phase 7 Targets: data, AxisBottom, dashboard, index optimizations`);",
              "type": "log"
            },
            {
              "line_number": 99,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log('\ud83d\udccb GENERATING COMPREHENSIVE ORCHESTRATION REPORT...');",
              "type": "log"
            },
            {
              "line_number": 136,
              "content": "console.log('\ud83c\udfc6 CALCULATING PHASE 7 ACHIEVEMENTS...');",
              "type": "log"
            },
            {
              "line_number": 147,
              "content": "console.log('\u2705 PHASE 7 MASTER VALIDATION ORCHESTRATION COMPLETED');",
              "type": "log"
            },
            {
              "line_number": 148,
              "content": "console.log('=' .repeat(80));",
              "type": "log"
            },
            {
              "line_number": 154,
              "content": "console.error('\u274c Phase 7 orchestration failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 171,
              "content": "console.log('\u26a1 EXECUTING PARALLEL VALIDATION - ALL COMPONENTS CONCURRENT');",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log('\u2705 Parallel validation completed');",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log('\ud83d\udd04 EXECUTING SEQUENTIAL VALIDATION - COORDINATED EXECUTION');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('\ud83d\udcca Step 1: Starting monitoring dashboard...');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log('\ud83e\uddea Step 2: Executing validation system...');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log('\ud83d\udd0d Step 3: Executing regression testing...');",
              "type": "log"
            },
            {
              "line_number": 220,
              "content": "console.log('\ud83c\udfc1 Step 4: Executing benchmark suite...');",
              "type": "log"
            },
            {
              "line_number": 224,
              "content": "console.log('\ud83d\udcca Step 5: Stopping monitoring dashboard...');",
              "type": "log"
            },
            {
              "line_number": 229,
              "content": "console.log('\u2705 Sequential validation completed');",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log('\ud83c\udfad EXECUTING STAGED VALIDATION - DEPENDENCY-AWARE COORDINATION');",
              "type": "log"
            },
            {
              "line_number": 239,
              "content": "console.log('\ud83c\udfad STAGE 1: Infrastructure Setup');",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('\ud83c\udfad STAGE 2: Baseline Validation');",
              "type": "log"
            },
            {
              "line_number": 248,
              "content": "console.log('\ud83c\udfad STAGE 3: Concurrent Analysis Phase');",
              "type": "log"
            },
            {
              "line_number": 257,
              "content": "console.log('\ud83c\udfad STAGE 4: Performance Validation Phase');",
              "type": "log"
            },
            {
              "line_number": 266,
              "content": "console.log('\ud83c\udfad STAGE 5: Comprehensive Testing Phase');",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.log('\ud83c\udfad STAGE 6: Final Coordination and Reporting');",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log('\ud83c\udfad STAGE 7: Orchestration Completion');",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('\u2705 Staged validation completed');",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log('\ud83d\udcca EXECUTING MONITORING DASHBOARD ONLY');",
              "type": "log"
            },
            {
              "line_number": 300,
              "content": "console.log('\ud83d\udcca Monitoring dashboard started - press Ctrl+C to stop');",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.log('\\n\ud83d\udcca Stopping monitoring dashboard...');",
              "type": "log"
            },
            {
              "line_number": 316,
              "content": "console.log('\ud83e\uddea EXECUTING VALIDATION SYSTEM ONLY');",
              "type": "log"
            },
            {
              "line_number": 324,
              "content": "console.log('\ud83d\udd0d EXECUTING REGRESSION TESTING ONLY');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.log('\ud83c\udfc1 EXECUTING BENCHMARK SUITE ONLY');",
              "type": "log"
            },
            {
              "line_number": 346,
              "content": "console.log(`\ud83d\ude80 Executing ${componentName}...`);",
              "type": "log"
            },
            {
              "line_number": 370,
              "content": "console.log(`\u2705 ${componentName} completed successfully (${duration}ms)`);",
              "type": "log"
            },
            {
              "line_number": 387,
              "content": "console.error(`\u274c ${componentName} failed (${duration}ms): ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 403,
              "content": "console.log(`\ud83d\udcca Monitoring dashboard started (PID: ${monitoringProcess.pid})`);",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.warn('\u26a0\ufe0f Could not start monitoring dashboard:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 425,
              "content": "console.error('\u274c Could not start monitoring dashboard:', error.message);",
              "type": "error"
            },
            {
              "line_number": 437,
              "content": "console.log(`\ud83d\udcca Background process stopped (PID: ${process.pid})`);",
              "type": "log"
            },
            {
              "line_number": 439,
              "content": "console.warn('\u26a0\ufe0f Could not stop background process:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 452,
              "content": "console.log(`\u2705 ${componentName} completed successfully`);",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.error(`\u274c ${componentName} failed:`, result.reason.message);",
              "type": "error"
            },
            {
              "line_number": 497,
              "content": "console.log(`\ud83d\udccb Orchestration report saved: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 885,
              "content": "console.log('\\n\ud83c\udfbc === Phase 7 Orchestration Summary ===');",
              "type": "log"
            },
            {
              "line_number": 886,
              "content": "console.log(`\ud83d\udcca Session ID: ${this.orchestrationState.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 887,
              "content": "console.log(`\ud83d\udd50 Duration: ${this.calculateTotalDuration()}s`);",
              "type": "log"
            },
            {
              "line_number": 888,
              "content": "console.log(`\ud83c\udfc6 Overall Success: ${this.orchestrationState.overallSuccess ? '\u2705 SUCCESS' : '\u274c FAILURE'}`);",
              "type": "log"
            },
            {
              "line_number": 890,
              "content": "console.log('\\n\ud83e\udde9 Component Execution:');",
              "type": "log"
            },
            {
              "line_number": 894,
              "content": "console.log(`  ${status} ${name}: ${duration}s`);",
              "type": "log"
            },
            {
              "line_number": 898,
              "content": "console.log('\\n\ud83c\udfaf Phase 7 Achievements:');",
              "type": "log"
            },
            {
              "line_number": 899,
              "content": "console.log(`  Bundle Optimization: ${this.orchestrationState.achievements.bundleOptimization?.achievementRate || 0}%`);",
              "type": "log"
            },
            {
              "line_number": 900,
              "content": "console.log(`  Performance: ${this.orchestrationState.achievements.performanceImprovements?.status || 'unknown'}`);",
              "type": "log"
            },
            {
              "line_number": 901,
              "content": "console.log(`  Overall Score: ${this.orchestrationState.achievements.overallScore}/100`);",
              "type": "log"
            },
            {
              "line_number": 904,
              "content": "console.log('==========================================\\n');",
              "type": "log"
            },
            {
              "line_number": 965,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 1012,
              "content": "console.error('\u274c Orchestration error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-pre-commit.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-pre-commit.js",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 44,
              "content": "console.error(`\u274c ${message}`);",
              "type": "error"
            },
            {
              "line_number": 47,
              "content": "console.warn(`\u26a0\ufe0f  ${message}`);",
              "type": "warn"
            },
            {
              "line_number": 50,
              "content": "console.log(`\u2705 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`\ud83d\udd0d ${message}`);",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('\\n\ud83d\udca1 Tip: Run \"npm run lint:fix\" to automatically fix issues before committing.');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase4-master-validator.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-master-validator.js",
          "console_count": 49,
          "console_lines": [
            {
              "line_number": 156,
              "content": "console.log(`\ud83d\udcc1 Created master validation directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log('\ud83c\udfaf Starting Phase 4 Master Validation Suite...');",
              "type": "log"
            },
            {
              "line_number": 166,
              "content": "console.log(`Session ID: ${this.session.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 167,
              "content": "console.log(`Timestamp: ${this.session.timestamp}`);",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log(`Git Branch: ${this.session.gitInfo.branch}`);",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "console.log(`Git Commit: ${this.session.gitInfo.commit.slice(0, 8)}`);",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log('\\n' + '='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "console.log('\\n\ud83d\udd0d Step 1: Pre-validation checks');",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log('\\n\ud83d\udcca Step 2: Starting performance monitoring');",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log('\\n\ud83e\uddea Step 3: Running validation sequence');",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.log('\\n\ud83d\udcca Step 4: Analyzing validation results');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log('\\n\ud83d\udcc8 Step 5: Generating master validation report');",
              "type": "log"
            },
            {
              "line_number": 196,
              "content": "console.log('\\n\ud83d\udcbe Step 6: Saving session results');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log('\\n' + '='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log(`\ud83c\udfc6 Phase 4 Master Validation ${success ? 'COMPLETED SUCCESSFULLY' : 'COMPLETED WITH ISSUES'}`);",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log(`Session: ${this.session.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.error('\\n\u274c Phase 4 Master Validation FAILED:', error.message);",
              "type": "error"
            },
            {
              "line_number": 228,
              "content": "console.log('  \ud83d\udd28 Checking build capability...');",
              "type": "log"
            },
            {
              "line_number": 236,
              "content": "console.log('    \u2705 Build check passed');",
              "type": "log"
            },
            {
              "line_number": 239,
              "content": "console.log('    \u274c Build check failed:', error.message);",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log('  \ud83d\udcdc Checking validation scripts...');",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log(`    \u2705 ${step.script} found`);",
              "type": "log"
            },
            {
              "line_number": 254,
              "content": "console.log(`    \u274c ${step.script} not found`);",
              "type": "log"
            },
            {
              "line_number": 270,
              "content": "console.log(`  \ud83d\udcca Starting monitoring dashboard on port ${this.config.monitoring.port}...`);",
              "type": "log"
            },
            {
              "line_number": 272,
              "content": "console.log('    \u2705 Monitoring started (background process)');",
              "type": "log"
            },
            {
              "line_number": 280,
              "content": "console.log('    \u26a0\ufe0f Could not start monitoring:', error.message);",
              "type": "log"
            },
            {
              "line_number": 298,
              "content": "console.log(`\\n  \ud83e\uddea Running ${step.name} validation...`);",
              "type": "log"
            },
            {
              "line_number": 324,
              "content": "console.log(`    \ud83d\udcbb Executing: ${command}`);",
              "type": "log"
            },
            {
              "line_number": 334,
              "content": "console.log(`    \u2705 ${step.name} completed successfully (${duration}ms)`);",
              "type": "log"
            },
            {
              "line_number": 345,
              "content": "console.log(`    ${step.required ? '\u274c' : '\u26a0\ufe0f'} ${step.name} ${step.required ? 'failed' : 'failed (optional)'} (${duration}ms)`);",
              "type": "log"
            },
            {
              "line_number": 406,
              "content": "console.log(`    \ud83d\udcca Analysis complete: ${analysis.successfulSteps} successful, ${analysis.failedSteps} failed`);",
              "type": "log"
            },
            {
              "line_number": 435,
              "content": "console.log(`    \ud83d\udcc8 Master report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 604,
              "content": "console.log(`    \ud83d\udcbe Session saved: ${sessionFile}`);",
              "type": "log"
            },
            {
              "line_number": 613,
              "content": "console.log('\\n\ud83c\udfc6 === Master Validation Summary ===');",
              "type": "log"
            },
            {
              "line_number": 614,
              "content": "console.log(`\ud83c\udfaf Overall Success: ${this.session.overallSuccess ? '\u2705 YES' : '\u274c NO'}`);",
              "type": "log"
            },
            {
              "line_number": 615,
              "content": "console.log(`\ud83d\udcca Successful Steps: ${summary?.successfulSteps || 0}`);",
              "type": "log"
            },
            {
              "line_number": 616,
              "content": "console.log(`\u274c Failed Steps: ${summary?.failedSteps || 0}`);",
              "type": "log"
            },
            {
              "line_number": 617,
              "content": "console.log(`\ud83d\udea8 Errors: ${this.session.errors.length}`);",
              "type": "log"
            },
            {
              "line_number": 618,
              "content": "console.log(`\u26a0\ufe0f Warnings: ${this.session.warnings.length}`);",
              "type": "log"
            },
            {
              "line_number": 619,
              "content": "console.log(`\ud83d\udcc8 Reports Generated: ${Object.keys(this.session.results).length}`);",
              "type": "log"
            },
            {
              "line_number": 620,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 623,
              "content": "console.log('\ud83c\udf89 \ud83c\udf86 PHASE 4 VALIDATION SUCCESSFUL! \ud83c\udf86 \ud83c\udf89');",
              "type": "log"
            },
            {
              "line_number": 624,
              "content": "console.log('\ud83c\udfaf Ready for Phase 4 deployment!');",
              "type": "log"
            },
            {
              "line_number": 626,
              "content": "console.log('\u26a0\ufe0f \ud83d\udea8 PHASE 4 VALIDATION REQUIRES ATTENTION \ud83d\udea8 \u26a0\ufe0f');",
              "type": "log"
            },
            {
              "line_number": 627,
              "content": "console.log('\ud83d\udd27 Please address validation issues before deployment.');",
              "type": "log"
            },
            {
              "line_number": 650,
              "content": "console.log('\u2705 Pre-validation checks completed successfully');",
              "type": "log"
            },
            {
              "line_number": 655,
              "content": "console.log('Phase 4 validation status checking...');",
              "type": "log"
            },
            {
              "line_number": 660,
              "content": "console.log(`\\n\ud83c\udfaf Phase 4 Master Validation Coordinator\\n\\n\ud83c\udfc6 **PERFORMANCE VALIDATION SPECIALIST #6**\\n",
              "type": "log"
            },
            {
              "line_number": 665,
              "content": "console.error('\u274c Master validation error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/build-performance-integration.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-performance-integration.js",
          "console_count": 38,
          "console_lines": [
            {
              "line_number": 66,
              "content": "console.log('\ud83d\ude80 Starting comprehensive build performance analysis...');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log('\ud83d\udce6 Phase 1: Cache Optimization Analysis...');",
              "type": "log"
            },
            {
              "line_number": 86,
              "content": "console.log('\u23f1\ufe0f Phase 2: Build Performance Monitoring...');",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log('\ud83d\udcca Phase 3: Baseline Analysis...');",
              "type": "log"
            },
            {
              "line_number": 98,
              "content": "console.log('\ud83d\udea8 Phase 4: Performance Alert Analysis...');",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log('\ud83d\udca1 Phase 5: Generating Comprehensive Recommendations...');",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log(`\u2705 Comprehensive analysis completed in ${Math.round(totalTime)}ms`);",
              "type": "log"
            },
            {
              "line_number": 123,
              "content": "console.log(`\ud83d\udcc4 Analysis saved: ${analysisFile}`);",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.error('\u274c Comprehensive analysis failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 142,
              "content": "console.log('\ud83d\udd0d Analyzing cache performance...');",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "console.warn('\u26a0\ufe0f Cache analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 169,
              "content": "console.log('\ud83c\udfd7\ufe0f Running build with comprehensive monitoring...');",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.warn('\u26a0\ufe0f Build monitoring failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 215,
              "content": "console.log('\ud83d\udcc8 Performing baseline analysis...');",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.warn('\u26a0\ufe0f Baseline analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 238,
              "content": "console.log('\u26a0\ufe0f Analyzing performance alerts...');",
              "type": "log"
            },
            {
              "line_number": 249,
              "content": "console.warn('\u26a0\ufe0f Alert analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 404,
              "content": "console.log('\\n\ud83d\udcca === Comprehensive Build Performance Analysis Summary ===');",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.log(`\ud83c\udfaf Overall Score: ${overall.score}/100 (${overall.healthStatus.toUpperCase()})`);",
              "type": "log"
            },
            {
              "line_number": 408,
              "content": "console.log(`\u2705 Success Rate: ${overall.successRate.toFixed(1)}% (${overall.successCount}/${overall.totalCount} components)`);",
              "type": "log"
            },
            {
              "line_number": 411,
              "content": "console.log(`\ud83d\udea8 Critical Issues: ${overall.criticalIssues}`);",
              "type": "log"
            },
            {
              "line_number": 415,
              "content": "console.log(`\u26a0\ufe0f High Priority Issues: ${overall.highPriorityIssues}`);",
              "type": "log"
            },
            {
              "line_number": 419,
              "content": "console.log('\\n\ud83d\udccb Component Status:');",
              "type": "log"
            },
            {
              "line_number": 422,
              "content": "console.log(`  ${status} ${name.charAt(0).toUpperCase() + name.slice(1)}`);",
              "type": "log"
            },
            {
              "line_number": 427,
              "content": "console.log('\\n\ud83d\udca1 Top Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 430,
              "content": "console.log(`  ${i + 1}. ${priority} ${rec.message}`);",
              "type": "log"
            },
            {
              "line_number": 434,
              "content": "console.log('\\n===============================================================\\n');",
              "type": "log"
            },
            {
              "line_number": 472,
              "content": "console.log('\ud83d\udea8 CI/CD: CRITICAL issues detected - failing build');",
              "type": "log"
            },
            {
              "line_number": 477,
              "content": "console.log('\u26a0\ufe0f CI/CD: Performance score too low - failing build');",
              "type": "log"
            },
            {
              "line_number": 482,
              "content": "console.log('\u26a0\ufe0f CI/CD: Too many high priority issues - warning');",
              "type": "log"
            },
            {
              "line_number": 486,
              "content": "console.log('\u2705 CI/CD: Performance checks passed');",
              "type": "log"
            },
            {
              "line_number": 494,
              "content": "console.log('\ud83e\uddea Generating integration test report...');",
              "type": "log"
            },
            {
              "line_number": 603,
              "content": "console.log('\ud83e\uddea Integration Test Results:');",
              "type": "log"
            },
            {
              "line_number": 604,
              "content": "console.log(JSON.stringify(testReport, null, 2));",
              "type": "log"
            },
            {
              "line_number": 613,
              "content": "console.log('\ud83d\udd04 Running CI/CD integration analysis...');",
              "type": "log"
            },
            {
              "line_number": 621,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 648,
              "content": "console.error('\u274c Integration error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 661,
              "content": "console.error('Build performance integration failed:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-ci.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-ci.js",
          "console_count": 14,
          "console_lines": [
            {
              "line_number": 44,
              "content": "console.error(`${prefix} \u274c ${message}`);",
              "type": "error"
            },
            {
              "line_number": 47,
              "content": "console.warn(`${prefix} \u26a0\ufe0f  ${message}`);",
              "type": "warn"
            },
            {
              "line_number": 50,
              "content": "console.log(`${prefix} \u2705 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 53,
              "content": "console.log(`${prefix} \ud83d\udd0d ${message}`);",
              "type": "log"
            },
            {
              "line_number": 56,
              "content": "console.log(`${prefix} \ud83d\udcca ${message}`);",
              "type": "log"
            },
            {
              "line_number": 162,
              "content": "console.log('\\n\ud83d\udccb CI Lint Summary:');",
              "type": "log"
            },
            {
              "line_number": 163,
              "content": "console.log(`   Files analyzed: ${filesCount}`);",
              "type": "log"
            },
            {
              "line_number": 164,
              "content": "console.log(`   Errors found: ${errorsCount}`);",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log(`   Warnings found: ${warningsCount}`);",
              "type": "log"
            },
            {
              "line_number": 166,
              "content": "console.log(`   Duration: ${duration}ms`);",
              "type": "log"
            },
            {
              "line_number": 167,
              "content": "console.log(`\\n\ud83d\udcc4 Reports generated:`);",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.log(`   JSON report: ${LINT_REPORT_FILE}`);",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "console.log(`   JUnit report: ${LINT_JUNIT_FILE}`);",
              "type": "log"
            },
            {
              "line_number": 170,
              "content": "console.log(`   Performance metrics: ${PERFORMANCE_FILE}`);",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/clear-lint-cache.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/clear-lint-cache.js",
          "console_count": 20,
          "console_lines": [
            {
              "line_number": 62,
              "content": "console.log(`${emoji} ${message}`);",
              "type": "log"
            },
            {
              "line_number": 113,
              "content": "console.log('\u2501'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 125,
              "content": "console.log(`\u2705 ${name}`);",
              "type": "log"
            },
            {
              "line_number": 126,
              "content": "console.log(`   File: ${fileName}`);",
              "type": "log"
            },
            {
              "line_number": 127,
              "content": "console.log(`   Size: ${formatBytes(info.size)}`);",
              "type": "log"
            },
            {
              "line_number": 128,
              "content": "console.log(`   Modified: ${info.lastModifiedFormatted}`);",
              "type": "log"
            },
            {
              "line_number": 129,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log(`\u274c ${name}`);",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log(`   File: ${fileName} (not found)`);",
              "type": "log"
            },
            {
              "line_number": 134,
              "content": "console.log(`   Error: ${info.error}`);",
              "type": "log"
            },
            {
              "line_number": 136,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 140,
              "content": "console.log('\u2501'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.log('\u2501'.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 246,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 251,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 260,
              "content": "console.log();",
              "type": "log"
            },
            {
              "line_number": 270,
              "content": "console.error('\u274c Cache management failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 271,
              "content": "console.error(error.stack);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-watch.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-watch.js",
          "console_count": 15,
          "console_lines": [
            {
              "line_number": 64,
              "content": "console.error(`[${timestamp}] \u274c ${message}`);",
              "type": "error"
            },
            {
              "line_number": 67,
              "content": "console.warn(`[${timestamp}] \u26a0\ufe0f  ${message}`);",
              "type": "warn"
            },
            {
              "line_number": 70,
              "content": "console.log(`[${timestamp}] \u2705 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.log(`[${timestamp}] \ud83d\udd0d ${message}`);",
              "type": "log"
            },
            {
              "line_number": 76,
              "content": "console.log(`[${timestamp}] \ud83d\udc40 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('\\n\u2328\ufe0f  Keyboard controls:');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log('   r + Enter: Force re-lint all files');",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log('   c + Enter: Clear console');",
              "type": "log"
            },
            {
              "line_number": 204,
              "content": "console.log('   q + Enter: Quit gracefully');",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.log('   Ctrl+C: Force exit');",
              "type": "log"
            },
            {
              "line_number": 206,
              "content": "console.log('');",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log('\ud83d\ude80 Starting ESLint Watch Mode');",
              "type": "log"
            },
            {
              "line_number": 286,
              "content": "console.log(`\ud83d\udcc1 Watching directories: ${WATCH_DIRECTORIES.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 287,
              "content": "console.log(`\ud83d\udcc4 File extensions: ${LINT_EXTENSIONS.join(', ')}`);",
              "type": "log"
            },
            {
              "line_number": 288,
              "content": "console.log('');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase4-benchmark-suite.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-benchmark-suite.js",
          "console_count": 37,
          "console_lines": [
            {
              "line_number": 133,
              "content": "console.log(`\ud83d\udcc1 Created benchmark directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 142,
              "content": "console.log('\ud83d\ude80 Starting Phase 4 comprehensive benchmark suite...');",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.log(`\ud83d\udd25 Running ${this.config.warmupRuns} warmup builds...`);",
              "type": "log"
            },
            {
              "line_number": 165,
              "content": "console.log('\u23f1\ufe0f Running build performance benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "console.log('\ud83d\udce6 Running bundle size stability tests...');",
              "type": "log"
            },
            {
              "line_number": 173,
              "content": "console.log('\ud83c\udf10 Running load time simulation benchmarks...');",
              "type": "log"
            },
            {
              "line_number": 177,
              "content": "console.log('\ud83e\udde0 Running memory usage profiling...');",
              "type": "log"
            },
            {
              "line_number": 181,
              "content": "console.log('\ud83d\udd0d Running performance regression analysis...');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log(`\u2705 Phase 4 benchmark suite completed. Results saved: ${sessionFile}`);",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.error('\u274c Benchmark suite failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 212,
              "content": "console.log(`\u23f1\ufe0f Running ${this.config.buildRuns} build performance measurements...`);",
              "type": "log"
            },
            {
              "line_number": 218,
              "content": "console.log(`  \ud83d\udcca Build run ${i + 1}/${this.config.buildRuns}...`);",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.log(`    \u23f1\ufe0f Build ${i + 1}: ${buildTime.toFixed(0)}ms, Bundle: ${this.formatBytes(bundleSize)}`);",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.warn(`    \u26a0\ufe0f Build ${i + 1} failed:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 263,
              "content": "console.log('\ud83d\udce6 Testing bundle size stability and determinism...');",
              "type": "log"
            },
            {
              "line_number": 269,
              "content": "console.log(`  \ud83d\udcca Stability test ${i + 1}/3...`);",
              "type": "log"
            },
            {
              "line_number": 306,
              "content": "console.log('\ud83c\udf10 Simulating load times across network conditions...');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.log(`  \ud83c\udf10 ${condition}: ${loadTime.totalLoadTime.toFixed(0)}ms`);",
              "type": "log"
            },
            {
              "line_number": 346,
              "content": "console.log('\ud83e\udde0 Profiling memory usage...');",
              "type": "log"
            },
            {
              "line_number": 356,
              "content": "console.log(`  \ud83e\udde0 Memory profiling run ${i + 1}/3...`);",
              "type": "log"
            },
            {
              "line_number": 377,
              "content": "console.log(`    \ud83e\udde0 Memory delta: RSS ${this.formatBytes(memoryDelta.rss)}, Heap ${this.formatBytes(memoryDelta.heapUsed)}`);",
              "type": "log"
            },
            {
              "line_number": 380,
              "content": "console.warn(`    \u26a0\ufe0f Memory profiling run ${i + 1} failed:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 397,
              "content": "console.log('\ud83d\udd0d Analyzing performance regressions...');",
              "type": "log"
            },
            {
              "line_number": 431,
              "content": "console.warn('\u26a0\ufe0f Regression analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 478,
              "content": "console.warn('\u26a0\ufe0f Could not clean previous builds:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 487,
              "content": "console.log(`  \ud83d\udd25 Warmup build ${i + 1}/${this.config.warmupRuns}...`);",
              "type": "log"
            },
            {
              "line_number": 498,
              "content": "console.warn(`    \u26a0\ufe0f Warmup build ${i + 1} failed:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 821,
              "content": "console.log('\\n\ud83d\udcca === Phase 4 Benchmark Summary ===');",
              "type": "log"
            },
            {
              "line_number": 822,
              "content": "console.log(`\u23f1\ufe0f Build Time: ${Math.round(summary.buildPerformance.meanBuildTime / 1000)}s (${summary.buildPerformance.buildTimeVariability})`);",
              "type": "log"
            },
            {
              "line_number": 823,
              "content": "console.log(`\ud83d\udce6 Bundle Size: ${this.formatBytes(summary.buildPerformance.meanBundleSize)}`);",
              "type": "log"
            },
            {
              "line_number": 824,
              "content": "console.log(`\ud83d\udd04 Build Stability: ${summary.stability.deterministic ? '\u2705 Deterministic' : '\u274c Non-deterministic'}`);",
              "type": "log"
            },
            {
              "line_number": 827,
              "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 829,
              "content": "console.log(`${i + 1}. [${rec.priority.toUpperCase()}] ${rec.message}`);",
              "type": "log"
            },
            {
              "line_number": 833,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 920,
              "content": "console.log(`\\n\ud83c\udfaf Benchmark session completed: ${results.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 925,
              "content": "console.log(`\\n\ud83d\ude80 Phase 4 Automated Performance Benchmarking Suite\\n\\nUsage: node phase4-benchmark-suite.js <command>\\n\\nCommands:\\n  build-performance     Benchmark build performance across multiple runs\\n  bundle-stability      Test bundle size stability and determinism\\n  load-simulation      Simulate load times across network conditions\\n  memory-profiling     Profile memory usage during builds\\n  full-benchmark       Run complete benchmark suite\\n  benchmark           Alias for full-benchmark\\n  help               Show this help message\\n\\nConfiguration:\\n  - Build runs: ${BENCHMARK_CONFIG.buildRuns}\\n  - Performance runs: ${BENCHMARK_CONFIG.performanceRuns}\\n  - Confidence level: ${BENCHMARK_CONFIG.confidenceLevel}\\n  - Timeout: ${BENCHMARK_CONFIG.timeoutMs / 1000}s\\n        `);",
              "type": "log"
            },
            {
              "line_number": 929,
              "content": "console.error('\u274c Benchmark suite error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/build-performance-monitor.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-performance-monitor.js",
          "console_count": 27,
          "console_lines": [
            {
              "line_number": 224,
              "content": "console.warn('Cache analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 305,
              "content": "console.warn('Bundle analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 454,
              "content": "console.log('\ud83d\ude80 Starting build performance monitoring...');",
              "type": "log"
            },
            {
              "line_number": 490,
              "content": "console.log(`\ud83d\udcca Build phase started: ${phase}`);",
              "type": "log"
            },
            {
              "line_number": 499,
              "content": "console.log(`\u2705 Build phase completed: ${phase} (${duration}ms)`);",
              "type": "log"
            },
            {
              "line_number": 515,
              "content": "console.log(`${icon} Alert [${level.toUpperCase()}]: ${message}`);",
              "type": "log"
            },
            {
              "line_number": 520,
              "content": "console.log('\ud83d\udd0d Analyzing build performance...');",
              "type": "log"
            },
            {
              "line_number": 544,
              "content": "console.log('\ud83d\udcdd No previous build report found for regression comparison');",
              "type": "log"
            },
            {
              "line_number": 582,
              "content": "console.warn('\u26a0\ufe0f Could not perform regression analysis:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 587,
              "content": "console.log('\ud83d\udcca Generating build performance report...');",
              "type": "log"
            },
            {
              "line_number": 615,
              "content": "console.log('\\n\ud83d\udcca === Build Performance Summary ===');",
              "type": "log"
            },
            {
              "line_number": 616,
              "content": "console.log(`\ud83c\udfd7\ufe0f Total Build Time: ${Math.round(report.totalDuration)}ms`);",
              "type": "log"
            },
            {
              "line_number": 617,
              "content": "console.log(`\ud83d\udcbe Peak Memory Usage: ${Math.round(report.memory.peak.heapUsed / 1024 / 1024)}MB`);",
              "type": "log"
            },
            {
              "line_number": 622,
              "content": "console.log(`\ud83d\udce6 Total Bundle Size: ${totalSizeKB}KB (${gzippedSizeKB}KB gzipped)`);",
              "type": "log"
            },
            {
              "line_number": 626,
              "content": "console.log(`\ud83c\udfaf Cache Hit Ratio: ${report.cacheMetrics.hitRatio.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 631,
              "content": "console.log('\\n\ud83d\udcc8 Build Phase Breakdown:');",
              "type": "log"
            },
            {
              "line_number": 634,
              "content": "console.log(`  ${phase}: ${Math.round(duration)}ms (${percentage.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 640,
              "content": "console.log('\\n\ud83d\udea8 Performance Alerts:');",
              "type": "log"
            },
            {
              "line_number": 648,
              "content": "console.log(`  ${icon} ${alert.message}`);",
              "type": "log"
            },
            {
              "line_number": 654,
              "content": "console.log('\\n\ud83d\udca1 Optimization Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 656,
              "content": "console.log(`  \u2022 ${rec.message}`);",
              "type": "log"
            },
            {
              "line_number": 658,
              "content": "console.log(`    Suggestion: ${rec.suggestion}`);",
              "type": "log"
            },
            {
              "line_number": 663,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 689,
              "content": "console.log(`\ud83d\udd28 Executing build command: ${buildCommand}`);",
              "type": "log"
            },
            {
              "line_number": 707,
              "content": "console.log('\u2705 Build monitoring completed successfully!');",
              "type": "log"
            },
            {
              "line_number": 713,
              "content": "console.error('\u274c Build failed with monitoring data captured');",
              "type": "error"
            },
            {
              "line_number": 735,
              "content": "console.error('Build monitoring failed:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/build-cache-performance-optimizer.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-cache-performance-optimizer.js",
          "console_count": 35,
          "console_lines": [
            {
              "line_number": 53,
              "content": "console.log('\ud83d\ude80 Initializing Build Cache Performance Optimizer...');",
              "type": "log"
            },
            {
              "line_number": 64,
              "content": "console.log('\u2705 Cache system initialized successfully');",
              "type": "log"
            },
            {
              "line_number": 94,
              "content": "console.log('\ud83d\udcca No existing cache metrics found, starting fresh');",
              "type": "log"
            },
            {
              "line_number": 118,
              "content": "console.log('\ud83d\udd0d Performing cache health check...');",
              "type": "log"
            },
            {
              "line_number": 130,
              "content": "console.log(`\ud83d\udccb ${level.toUpperCase()} Cache: ${levelHealth.fileCount} files, ${this.formatBytes(levelHealth.totalSize)}, ${levelHealth.hitRatio.toFixed(1)}% hit ratio`);",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log('\u26a1 Optimizing build cache performance...');",
              "type": "log"
            },
            {
              "line_number": 190,
              "content": "console.log('\ud83e\uddf9 Cache size approaching limit, performing cleanup...');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log('\u2705 Cache optimization complete');",
              "type": "log"
            },
            {
              "line_number": 212,
              "content": "console.log(`\ud83d\udcca Total cache size: ${report.totalCacheSize}`);",
              "type": "log"
            },
            {
              "line_number": 213,
              "content": "console.log(`\ud83d\udd27 Applied ${optimizations.length} optimizations`);",
              "type": "log"
            },
            {
              "line_number": 237,
              "content": "console.log('\ud83e\uddf9 Performing intelligent cache cleanup...');",
              "type": "log"
            },
            {
              "line_number": 294,
              "content": "console.warn(`\u26a0\ufe0f  Failed to remove cache file: ${fileInfo.name}`);",
              "type": "warn"
            },
            {
              "line_number": 299,
              "content": "console.log(`\ud83e\uddf9 Cleaned ${levelName} cache: ${filesRemoved} files, ${this.formatBytes(bytesRemoved)}`);",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.warn(`\u26a0\ufe0f  Failed to cleanup ${levelName} cache:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 380,
              "content": "console.log('\ud83d\udcca Starting cache performance monitoring...');",
              "type": "log"
            },
            {
              "line_number": 401,
              "content": "console.log('\u2705 Cache performance monitoring complete');",
              "type": "log"
            },
            {
              "line_number": 405,
              "content": "console.error('\u274c Build failed during cache monitoring:', error.message);",
              "type": "error"
            },
            {
              "line_number": 456,
              "content": "console.log('\ud83d\udd25 Warming build cache...');",
              "type": "log"
            },
            {
              "line_number": 472,
              "content": "console.log(`\u2705 Cache warming complete: ${successCount}/${results.length} operations successful`);",
              "type": "log"
            },
            {
              "line_number": 482,
              "content": "console.log('\ud83d\udcbe Warming dependency cache...');",
              "type": "log"
            },
            {
              "line_number": 495,
              "content": "console.log('\ud83d\udd04 Warming transform cache...');",
              "type": "log"
            },
            {
              "line_number": 508,
              "content": "console.log('\ud83d\uddbc\ufe0f  Warming asset cache...');",
              "type": "log"
            },
            {
              "line_number": 531,
              "content": "console.warn(`\u26a0\ufe0f  Failed to remove ${file}:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 538,
              "content": "console.log(`\ud83e\uddf9 Cleared ${level} cache: ${clearedCount} files removed`);",
              "type": "log"
            },
            {
              "line_number": 542,
              "content": "console.error(`\u274c Failed to clear ${level} cache:`, error.message);",
              "type": "error"
            },
            {
              "line_number": 551,
              "content": "console.log('\ud83e\uddf9 Clearing all build cache...');",
              "type": "log"
            },
            {
              "line_number": 565,
              "content": "console.log('\u2705 All cache levels cleared');",
              "type": "log"
            },
            {
              "line_number": 609,
              "content": "console.log(`\ud83d\udcca Cache status report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 625,
              "content": "console.log('\\n\ud83d\udcca Cache Status Summary:');",
              "type": "log"
            },
            {
              "line_number": 626,
              "content": "console.log(`Total Size: ${optimizer.formatBytes(report.summary.totalSize)}`);",
              "type": "log"
            },
            {
              "line_number": 627,
              "content": "console.log(`Overall Hit Ratio: ${report.summary.overallHitRatio.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 628,
              "content": "console.log(`Recommendations: ${report.recommendations.length}`);",
              "type": "log"
            },
            {
              "line_number": 654,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 674,
              "content": "console.error('\u274c Cache optimization failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 680,
              "content": "main().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/bundle-regression-check.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/bundle-regression-check.js",
          "console_count": 22,
          "console_lines": [
            {
              "line_number": 97,
              "content": "console.warn('Warning: Could not read build manifest, using fallback analysis');",
              "type": "warn"
            },
            {
              "line_number": 127,
              "content": "console.warn('Warning: dist directory not found');",
              "type": "warn"
            },
            {
              "line_number": 164,
              "content": "console.log('No baseline found, current analysis will be used as baseline');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.warn('Warning: Could not load baseline:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 227,
              "content": "console.log(`\u2705 Baseline updated: ${this.baselinePath}`);",
              "type": "log"
            },
            {
              "line_number": 229,
              "content": "console.error('Error: Could not store baseline:', error.message);",
              "type": "error"
            },
            {
              "line_number": 254,
              "content": "console.log(`\ud83d\udcca Report generated: ${this.reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 280,
              "content": "console.log('\ud83d\udd0d Starting bundle regression analysis...');",
              "type": "log"
            },
            {
              "line_number": 286,
              "content": "console.log('\ud83d\udcca Analyzing current build...');",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.warn('\u26a0\ufe0f  Warning: No bundle files found. Make sure to run this after build.');",
              "type": "warn"
            },
            {
              "line_number": 294,
              "content": "console.log(`\ud83d\udce6 Current bundle size: ${analyzer.formatSize(currentAnalysis.totalSize)}`);",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log('\ud83d\udd0d Checking for regressions...');",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log('\u2705 No bundle size regressions detected');",
              "type": "log"
            },
            {
              "line_number": 307,
              "content": "console.log(`\u274c Found ${regressions.length} bundle size regressions:`);",
              "type": "log"
            },
            {
              "line_number": 314,
              "content": "console.log(`  ${icon} ${regression.chunk}: ${analyzer.formatSize(regression.baseline)} \u2192 ${analyzer.formatSize(regression.current)} (+${regression.percentage.toFixed(1)}%)`);",
              "type": "log"
            },
            {
              "line_number": 321,
              "content": "console.error('\ud83d\udca5 Critical bundle size regressions detected - failing build');",
              "type": "error"
            },
            {
              "line_number": 324,
              "content": "console.log('\u26a0\ufe0f  Non-critical regressions detected - build will continue');",
              "type": "log"
            },
            {
              "line_number": 332,
              "content": "console.log('\ud83c\udf89 Bundle regression analysis completed successfully');",
              "type": "log"
            },
            {
              "line_number": 335,
              "content": "console.error('\ud83d\udca5 Error during bundle analysis:', error.message);",
              "type": "error"
            },
            {
              "line_number": 347,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 369,
              "content": "console.log('\ud83d\uddd1\ufe0f  Baseline cleared');",
              "type": "log"
            },
            {
              "line_number": 371,
              "content": "console.log('\u2139\ufe0f  No baseline to clear');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/coverage-analysis.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/coverage-analysis.js",
          "console_count": 18,
          "console_lines": [
            {
              "line_number": 32,
              "content": "console.log('\ud83d\udd0d Starting comprehensive coverage analysis...\\n');",
              "type": "log"
            },
            {
              "line_number": 38,
              "content": "console.error('\u274c Failed to load coverage data');",
              "type": "error"
            },
            {
              "line_number": 66,
              "content": "console.log('\\n\u2705 All coverage thresholds met!');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log('\\n\u274c Coverage thresholds not met!');",
              "type": "log"
            },
            {
              "line_number": 73,
              "content": "console.error('\u274c Coverage analysis failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 83,
              "content": "console.error(`Coverage summary file not found: ${COVERAGE_SUMMARY_FILE}`);",
              "type": "error"
            },
            {
              "line_number": 104,
              "content": "console.error('Error reading coverage files:', error.message);",
              "type": "error"
            },
            {
              "line_number": 309,
              "content": "console.warn('Could not read coverage history, starting fresh');",
              "type": "warn"
            },
            {
              "line_number": 376,
              "content": "console.log('\ud83d\udcca COVERAGE ANALYSIS RESULTS');",
              "type": "log"
            },
            {
              "line_number": 377,
              "content": "console.log('\u2500'.repeat(50));",
              "type": "log"
            },
            {
              "line_number": 380,
              "content": "console.log('\\n\ud83d\udcc8 Overall Coverage:');",
              "type": "log"
            },
            {
              "line_number": 385,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 391,
              "content": "console.log('\\n\ud83c\udfaf Threshold Compliance:');",
              "type": "log"
            },
            {
              "line_number": 398,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 405,
              "content": "console.log('\\n\ud83d\udcca Trends:');",
              "type": "log"
            },
            {
              "line_number": 412,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 421,
              "content": "console.log(`\\n\ud83d\udccb Summary: ${passedCount}/${totalCount} thresholds met`);",
              "type": "log"
            },
            {
              "line_number": 430,
              "content": "console.log(`\\n\ud83d\udcc4 Detailed report saved to: ${COVERAGE_REPORT_FILE}`);",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-super-fast.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-super-fast.js",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 33,
              "content": "console.log(`${emoji} ${message}`);",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log(`  - ${relPath} (modified: ${mtime})`);",
              "type": "log"
            },
            {
              "line_number": 139,
              "content": "console.error('\u274c Super-fast lint failed:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/validate-build-optimizations.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/validate-build-optimizations.js",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 46,
              "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
              "type": "log"
            },
            {
              "line_number": 919,
              "content": "console.error(error.stack);",
              "type": "error"
            },
            {
              "line_number": 932,
              "content": "console.error('Failed to run build optimization validation:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/ast-bundle-analyzer.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/ast-bundle-analyzer.js",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 18,
              "content": "info: (msg, data) => console.log(`[AST-ANALYZER] ${msg}`, data || ''),",
              "type": "log"
            },
            {
              "line_number": 19,
              "content": "warn: (msg, data) => console.warn(`[AST-ANALYZER] ${msg}`, data || ''),",
              "type": "warn"
            },
            {
              "line_number": 20,
              "content": "error: (msg, data) => console.error(`[AST-ANALYZER] ${msg}`, data || ''),",
              "type": "error"
            },
            {
              "line_number": 21,
              "content": "success: (msg, data) => console.log(`[AST-SUCCESS] ${msg}`, data || '')",
              "type": "log"
            },
            {
              "line_number": 558,
              "content": "console.log('\\n\ud83c\udfaf AST-Based Bundle Analysis Complete!');",
              "type": "log"
            },
            {
              "line_number": 559,
              "content": "console.log(`\ud83d\udcca Found ${results.optimizationTargets.length} optimization opportunities`);",
              "type": "log"
            },
            {
              "line_number": 566,
              "content": "console.log('\u2705 80-90% bundle size reduction is ACHIEVABLE!');",
              "type": "log"
            },
            {
              "line_number": 572,
              "content": "console.error('\u274c AST Analysis failed:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-changed-files.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-changed-files.js",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 69,
              "content": "console.error(`${prefix}\u274c ${message}`);",
              "type": "error"
            },
            {
              "line_number": 72,
              "content": "console.warn(`${prefix}\u26a0\ufe0f  ${message}`);",
              "type": "warn"
            },
            {
              "line_number": 75,
              "content": "console.log(`${prefix}\u2705 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 78,
              "content": "if (options.verbose) console.log(`${prefix}\u23f3 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 81,
              "content": "console.log(`${prefix}${message}`);",
              "type": "log"
            },
            {
              "line_number": 407,
              "content": "console.error(error.stack);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/performance-alerts.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/performance-alerts.js",
          "console_count": 35,
          "console_lines": [
            {
              "line_number": 82,
              "content": "console.log('\ud83d\udd0d Analyzing performance data for regressions...');",
              "type": "log"
            },
            {
              "line_number": 88,
              "content": "console.log('\u26a0\ufe0f No performance report found');",
              "type": "log"
            },
            {
              "line_number": 155,
              "content": "console.log(`\ud83d\udcca Performance analysis saved: ${analysisFile}`);",
              "type": "log"
            },
            {
              "line_number": 156,
              "content": "console.log(`\ud83d\udea8 Overall severity: ${analysis.overallSeverity}`);",
              "type": "log"
            },
            {
              "line_number": 160,
              "content": "console.error('\u274c Error analyzing performance data:', error.message);",
              "type": "error"
            },
            {
              "line_number": 350,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 356,
              "content": "console.log(`\ud83d\udcac Creating GitHub PR comment for PR #${prNumber}`);",
              "type": "log"
            },
            {
              "line_number": 369,
              "content": "console.log(`\ud83d\udcdd PR comment saved: ${commentFile}`);",
              "type": "log"
            },
            {
              "line_number": 370,
              "content": "console.log('\\n--- PR Comment Content ---');",
              "type": "log"
            },
            {
              "line_number": 371,
              "content": "console.log(comment);",
              "type": "log"
            },
            {
              "line_number": 372,
              "content": "console.log('--- End PR Comment ---\\n');",
              "type": "log"
            },
            {
              "line_number": 376,
              "content": "console.error('\u274c Error creating PR comment:', error.message);",
              "type": "error"
            },
            {
              "line_number": 553,
              "content": "console.log('\u2705 No performance issues detected, skipping notifications');",
              "type": "log"
            },
            {
              "line_number": 584,
              "content": "console.log('\ud83d\udcf1 Preparing Slack notification...');",
              "type": "log"
            },
            {
              "line_number": 627,
              "content": "console.log(`\ud83d\udcf1 Slack notification prepared: ${slackFile}`);",
              "type": "log"
            },
            {
              "line_number": 635,
              "content": "console.log('\ud83c\udfae Preparing Discord notification...');",
              "type": "log"
            },
            {
              "line_number": 679,
              "content": "console.log(`\ud83c\udfae Discord notification prepared: ${discordFile}`);",
              "type": "log"
            },
            {
              "line_number": 687,
              "content": "console.log('\ud83d\udc54 Preparing Teams notification...');",
              "type": "log"
            },
            {
              "line_number": 728,
              "content": "console.log(`\ud83d\udc54 Teams notification prepared: ${teamsFile}`);",
              "type": "log"
            },
            {
              "line_number": 736,
              "content": "console.log('\ud83d\udce7 Preparing email notification...');",
              "type": "log"
            },
            {
              "line_number": 753,
              "content": "console.log(`\ud83d\udce7 Email notification prepared: ${emailFile}`);",
              "type": "log"
            },
            {
              "line_number": 863,
              "content": "console.log('\ud83d\udccb Generating performance alert summary...');",
              "type": "log"
            },
            {
              "line_number": 867,
              "content": "console.log('\u274c No performance data available for analysis');",
              "type": "log"
            },
            {
              "line_number": 882,
              "content": "console.log(`\ud83d\udccb Alert Summary:`);",
              "type": "log"
            },
            {
              "line_number": 883,
              "content": "console.log(`   Severity: ${summary.severity}`);",
              "type": "log"
            },
            {
              "line_number": 884,
              "content": "console.log(`   Regressions: ${summary.regressions}`);",
              "type": "log"
            },
            {
              "line_number": 885,
              "content": "console.log(`   Improvements: ${summary.improvements}`);",
              "type": "log"
            },
            {
              "line_number": 886,
              "content": "console.log(`   Requires Action: ${summary.requiresAction}`);",
              "type": "log"
            },
            {
              "line_number": 904,
              "content": "console.log('\u2705 Performance analysis completed');",
              "type": "log"
            },
            {
              "line_number": 913,
              "content": "console.log('\u274c Performance analysis failed');",
              "type": "log"
            },
            {
              "line_number": 922,
              "content": "console.error('\u274c PR number required');",
              "type": "error"
            },
            {
              "line_number": 937,
              "content": "console.log('\u2705 Notifications sent');",
              "type": "log"
            },
            {
              "line_number": 945,
              "content": "console.log(JSON.stringify(summaryResult.summary, null, 2));",
              "type": "log"
            },
            {
              "line_number": 952,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 980,
              "content": "console.error('\u274c Error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/ci-cd-performance-integration.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/ci-cd-performance-integration.js",
          "console_count": 21,
          "console_lines": [
            {
              "line_number": 59,
              "content": "console.log('\ud83d\ude80 Initializing CI/CD Performance Integration...');",
              "type": "log"
            },
            {
              "line_number": 67,
              "content": "console.log(`\ud83d\udd27 Detected CI Environment: ${this.ciEnvironment.name}`);",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log('\u2705 CI/CD integration initialized');",
              "type": "log"
            },
            {
              "line_number": 171,
              "content": "console.log('\ud83d\udeaa Running CI/CD performance quality gates...');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.error('\u274c Performance quality gates failed - blocking build');",
              "type": "error"
            },
            {
              "line_number": 214,
              "content": "console.warn(`\u26a0\ufe0f  Performance quality gates passed with ${qualityGateResults.warnings.length} warnings`);",
              "type": "warn"
            },
            {
              "line_number": 216,
              "content": "console.log('\u2705 All performance quality gates passed');",
              "type": "log"
            },
            {
              "line_number": 222,
              "content": "console.error('\u274c Quality gate evaluation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 238,
              "content": "console.log('\ud83d\udcca Gathering performance metrics...');",
              "type": "log"
            },
            {
              "line_number": 269,
              "content": "console.log('\ud83d\udd0d Evaluating performance quality gates...');",
              "type": "log"
            },
            {
              "line_number": 428,
              "content": "console.log('\ud83d\udcc4 Generating CI performance report...');",
              "type": "log"
            },
            {
              "line_number": 454,
              "content": "console.log(`\ud83d\udcca CI report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 534,
              "content": "console.log('\ud83d\udcdd Skipping PR comment - not a pull request');",
              "type": "log"
            },
            {
              "line_number": 538,
              "content": "console.log(`\ud83d\udcdd Generating PR comment for #${this.ciEnvironment.prNumber}...`);",
              "type": "log"
            },
            {
              "line_number": 548,
              "content": "console.log(`\ud83d\udcac PR comment content saved: ${commentFile}`);",
              "type": "log"
            },
            {
              "line_number": 621,
              "content": "console.log('\u2705 Performance quality gates passed - no notifications needed');",
              "type": "log"
            },
            {
              "line_number": 625,
              "content": "console.log('\ud83d\udce4 Sending performance notifications...');",
              "type": "log"
            },
            {
              "line_number": 642,
              "content": "console.log(`\ud83d\udce7 Notification data saved: ${notificationFile}`);",
              "type": "log"
            },
            {
              "line_number": 699,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 714,
              "content": "console.error('\u274c CI/CD performance integration failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 720,
              "content": "main().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/build-performance-monitor-enhanced.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-performance-monitor-enhanced.js",
          "console_count": 29,
          "console_lines": [
            {
              "line_number": 91,
              "content": "console.log('\ud83d\ude80 Starting Enhanced Build Performance Monitoring...');",
              "type": "log"
            },
            {
              "line_number": 92,
              "content": "console.log(`\ud83d\udccb Build Command: ${buildCommand}`);",
              "type": "log"
            },
            {
              "line_number": 156,
              "content": "console.log('\u23f1\ufe0f  Starting build execution with real-time monitoring...');",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.log('\u2705 Build completed successfully');",
              "type": "log"
            },
            {
              "line_number": 205,
              "content": "console.error(`\u274c Build failed with code: ${code}`);",
              "type": "error"
            },
            {
              "line_number": 257,
              "content": "console.log(`\ud83d\udcca Build Phase Started: ${phaseName}`);",
              "type": "log"
            },
            {
              "line_number": 263,
              "content": "console.log(`\u23f1\ufe0f  Build Phase Completed: ${phaseName} (${phase.duration.toFixed(2)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('\ud83d\udcc8 Analyzing build performance results...');",
              "type": "log"
            },
            {
              "line_number": 313,
              "content": "console.log(`\u2705 Build analysis complete. Total time: ${totalBuildTime.toFixed(2)}ms`);",
              "type": "log"
            },
            {
              "line_number": 326,
              "content": "console.log('\ud83d\udcdd No historical performance data found, creating baseline...');",
              "type": "log"
            },
            {
              "line_number": 336,
              "content": "console.log('\ud83d\udcca No baseline data for regression detection');",
              "type": "log"
            },
            {
              "line_number": 380,
              "content": "console.warn(`\u26a0\ufe0f  Performance regressions detected: ${this.performanceMetrics.regressions.length}`);",
              "type": "warn"
            },
            {
              "line_number": 390,
              "content": "console.log('\ud83d\udcbe Analyzing build cache performance...');",
              "type": "log"
            },
            {
              "line_number": 410,
              "content": "console.log('\ud83d\udcc4 Generating comprehensive performance report...');",
              "type": "log"
            },
            {
              "line_number": 453,
              "content": "console.log(`\u2705 Performance report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 514,
              "content": "console.log('\ud83d\udd14 Checking performance thresholds...');",
              "type": "log"
            },
            {
              "line_number": 570,
              "content": "console.log(`\ud83d\udea8 Sending ${alerts.length} performance alerts...`);",
              "type": "log"
            },
            {
              "line_number": 573,
              "content": "console.error(`${alert.severity.toUpperCase()}: ${alert.message}`);",
              "type": "error"
            },
            {
              "line_number": 592,
              "content": "console.log('\ud83c\udfc3\u200d\u2642\ufe0f Running comprehensive build benchmark suite...');",
              "type": "log"
            },
            {
              "line_number": 603,
              "content": "console.log('\u2744\ufe0f  Running cold build benchmark...');",
              "type": "log"
            },
            {
              "line_number": 608,
              "content": "console.log('\ud83d\udd25 Running hot build benchmark...');",
              "type": "log"
            },
            {
              "line_number": 612,
              "content": "console.log('\ud83d\udcbe Analyzing cache performance...');",
              "type": "log"
            },
            {
              "line_number": 622,
              "content": "console.error('\u274c Benchmark suite failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 636,
              "content": "console.log('\ud83e\uddf9 Build cache cleaned');",
              "type": "log"
            },
            {
              "line_number": 638,
              "content": "console.warn('\u26a0\ufe0f  Failed to clean build cache:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 690,
              "content": "console.log(`\ud83d\udcca Benchmark report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 724,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 743,
              "content": "console.error('\u274c Build performance monitoring failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 749,
              "content": "main().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase4-reporting-engine.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-reporting-engine.js",
          "console_count": 33,
          "console_lines": [
            {
              "line_number": 167,
              "content": "console.log(`\ud83d\udcc1 Created report directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 176,
              "content": "console.log('\ud83d\udcc8 Generating comprehensive Phase 4 achievement report...');",
              "type": "log"
            },
            {
              "line_number": 187,
              "content": "console.log('\ud83d\udcca Collecting Phase 4 achievement data...');",
              "type": "log"
            },
            {
              "line_number": 191,
              "content": "console.log('\ud83d\udcc8 Analyzing achievements and metrics...');",
              "type": "log"
            },
            {
              "line_number": 195,
              "content": "console.log('\ud83d\udcbc Generating executive summary report...');",
              "type": "log"
            },
            {
              "line_number": 199,
              "content": "console.log('\ud83d\udd27 Generating technical analysis report...');",
              "type": "log"
            },
            {
              "line_number": 203,
              "content": "console.log('\ud83d\udd04 Generating phase comparison report...');",
              "type": "log"
            },
            {
              "line_number": 207,
              "content": "console.log('\ud83d\udccf Generating progress tracking report...');",
              "type": "log"
            },
            {
              "line_number": 211,
              "content": "console.log('\ud83d\udcc4 Generating evidence collection report...');",
              "type": "log"
            },
            {
              "line_number": 215,
              "content": "console.log('\ud83d\udcc9 Generating visual charts and analysis...');",
              "type": "log"
            },
            {
              "line_number": 219,
              "content": "console.log('\ud83d\udca1 Generating summary and recommendations...');",
              "type": "log"
            },
            {
              "line_number": 226,
              "content": "console.log(`\u2705 Comprehensive Phase 4 report generated: ${reportSession.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.error('\u274c Report generation failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 590,
              "content": "console.warn('\u26a0\ufe0f Could not load validation results:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 614,
              "content": "console.warn('\u26a0\ufe0f Could not load benchmark results:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 636,
              "content": "console.warn('\u26a0\ufe0f Could not load regression results:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 654,
              "content": "console.warn('\u26a0\ufe0f Could not load monitoring data:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 741,
              "content": "console.log('\\n\ud83d\udcc8 === Phase 4 Report Generation Summary ===');",
              "type": "log"
            },
            {
              "line_number": 742,
              "content": "console.log(`\ud83c\udfaf Session ID: ${reportSession.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 743,
              "content": "console.log(`\ud83d\udccb Reports Generated:`);",
              "type": "log"
            },
            {
              "line_number": 746,
              "content": "console.log(`  \u2705 ${type.charAt(0).toUpperCase() + type.slice(1)} Report`);",
              "type": "log"
            },
            {
              "line_number": 747,
              "content": "if (report.htmlFile) console.log(`    \ud83c\udf10 HTML: ${path.basename(report.htmlFile)}`);",
              "type": "log"
            },
            {
              "line_number": 748,
              "content": "if (report.markdownFile) console.log(`    \ud83d\udcdd Markdown: ${path.basename(report.markdownFile)}`);",
              "type": "log"
            },
            {
              "line_number": 753,
              "content": "console.log(`\\n\ud83c\udfc6 Overall Success: ${summary.overallSuccess ? '\u2705 YES' : '\u274c NO'}`);",
              "type": "log"
            },
            {
              "line_number": 754,
              "content": "console.log(`\ud83d\udcca Success Rate: ${summary.successRate.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 755,
              "content": "console.log(`\ud83d\udd22 Achievements: ${summary.successfulAchievements}/${summary.totalAchievements}`);",
              "type": "log"
            },
            {
              "line_number": 758,
              "content": "console.log('===========================================\\n');",
              "type": "log"
            },
            {
              "line_number": 843,
              "content": "console.log(`\ud83d\udccb Executive report generated: ${executiveReport.markdownFile}`);",
              "type": "log"
            },
            {
              "line_number": 850,
              "content": "console.log(`\ud83d\udd27 Technical report generated: ${technicalReport.markdownFile}`);",
              "type": "log"
            },
            {
              "line_number": 856,
              "content": "console.log(`\ud83d\udd04 Comparison report generated: ${comparisonReport.htmlFile}`);",
              "type": "log"
            },
            {
              "line_number": 862,
              "content": "console.log(`\\n\ud83c\udfc6 Comprehensive Phase 4 report completed: ${fullReport.sessionId}`);",
              "type": "log"
            },
            {
              "line_number": 867,
              "content": "console.log(`\\n\ud83d\udcc8 Phase 4 Comprehensive Achievement Reporting Engine\\n\\nUsage: node phase4-reporting-engine.js <command>\\n\\nCommands:\\n  executive        Generate executive summary report\\n  technical        Generate technical analysis report\\n  comparison       Generate phase comparison report\\n  full-report      Generate comprehensive report suite\\n  comprehensive    Alias for full-report\\n  help            Show this help message\\n\\nReport Features:\\n  - Executive summaries for stakeholders\\n  - Technical analysis for developers\\n  - Phase-by-phase comparison analysis\\n  - Visual charts and progress tracking\\n  - Evidence collection and validation\\n  - Multiple output formats (HTML, Markdown, JSON)\\n\\nPhase 4 Targets:\\n  - utils: 27.34kB reduction\\n  - useComparativeAnalysis: 27.36kB reduction\\n  - Securities: 26.13kB reduction\\n  - Total: 80.83kB reduction target\\n        `);",
              "type": "log"
            },
            {
              "line_number": 871,
              "content": "console.error('\u274c Report generation error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/generate-coverage-badge.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/generate-coverage-badge.js",
          "console_count": 5,
          "console_lines": [
            {
              "line_number": 21,
              "content": "console.log('\ud83c\udff7\ufe0f Generating coverage badges...');",
              "type": "log"
            },
            {
              "line_number": 26,
              "content": "console.warn('\u26a0\ufe0f Coverage summary not found, skipping badge generation');",
              "type": "warn"
            },
            {
              "line_number": 69,
              "content": "console.log('\u2705 Coverage badges generated successfully');",
              "type": "log"
            },
            {
              "line_number": 70,
              "content": "console.log(`\ud83d\udcca Overall Coverage: ${overallCoverage}%`);",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.error('\u274c Failed to generate coverage badges:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/bundle-size-monitoring-system.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/bundle-size-monitoring-system.js",
          "console_count": 26,
          "console_lines": [
            {
              "line_number": 57,
              "content": "console.log('\ud83d\ude80 Initializing Bundle Size Monitoring System...');",
              "type": "log"
            },
            {
              "line_number": 68,
              "content": "console.log('\u2705 Bundle monitoring system initialized');",
              "type": "log"
            },
            {
              "line_number": 80,
              "content": "console.log(`\ud83d\udcca Loaded ${this.bundleHistory.length} historical bundle analyses`);",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log('\ud83d\udcdd No bundle history found, starting fresh');",
              "type": "log"
            },
            {
              "line_number": 105,
              "content": "console.log('\ud83d\udd0d Analyzing current bundle state...');",
              "type": "log"
            },
            {
              "line_number": 121,
              "content": "console.log('\ud83d\udd28 Building project for bundle analysis...');",
              "type": "log"
            },
            {
              "line_number": 140,
              "content": "console.error('\u274c Bundle analysis failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 144,
              "content": "console.log('\u2705 Bundle analysis complete');",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log(`\ud83d\udce6 Total bundles: ${analysis.chunkCount}`);",
              "type": "log"
            },
            {
              "line_number": 146,
              "content": "console.log(`\ud83d\udccf Total size: ${this.formatBytes(analysis.totalSize)}`);",
              "type": "log"
            },
            {
              "line_number": 190,
              "content": "console.warn('\u26a0\ufe0f  Failed to analyze bundle files:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 234,
              "content": "console.log('\ud83d\udcdd No detailed bundle composition available');",
              "type": "log"
            },
            {
              "line_number": 325,
              "content": "console.log('\ud83d\udcca No baseline data for regression detection');",
              "type": "log"
            },
            {
              "line_number": 428,
              "content": "console.log('\u2705 No bundle size regressions detected');",
              "type": "log"
            },
            {
              "line_number": 432,
              "content": "console.log(`\ud83d\udea8 Found ${regressions.length} bundle size issues:`);",
              "type": "log"
            },
            {
              "line_number": 445,
              "content": "console.log(`${icon} ${regression.description}`);",
              "type": "log"
            },
            {
              "line_number": 477,
              "content": "console.log('\ud83d\udcc4 Generating comprehensive bundle report...');",
              "type": "log"
            },
            {
              "line_number": 480,
              "content": "console.error('\u274c No bundle analysis available. Run analyze first.');",
              "type": "error"
            },
            {
              "line_number": 509,
              "content": "console.log(`\ud83d\udcca Bundle report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 510,
              "content": "console.log(`\ud83d\udcdd Summary report: ${summaryFile}`);",
              "type": "log"
            },
            {
              "line_number": 658,
              "content": "console.log('\ud83d\udd04 Running complete bundle monitoring cycle...');",
              "type": "log"
            },
            {
              "line_number": 689,
              "content": "console.log('\u2705 Bundle monitoring cycle complete');",
              "type": "log"
            },
            {
              "line_number": 693,
              "content": "console.error('\u274c Bundle monitoring cycle failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 749,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 767,
              "content": "console.error('\u274c Bundle monitoring failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 773,
              "content": "main().catch(console.error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/analyze-analytics-webpack.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/analyze-analytics-webpack.js",
          "console_count": 8,
          "console_lines": [
            {
              "line_number": 18,
              "content": "info: (msg, data) => console.log(`[ANALYTICS-ANALYZER] ${msg}`, data || ''),",
              "type": "log"
            },
            {
              "line_number": 19,
              "content": "warn: (msg, data) => console.warn(`[ANALYTICS-ANALYZER] ${msg}`, data || ''),",
              "type": "warn"
            },
            {
              "line_number": 20,
              "content": "error: (msg, data) => console.error(`[ANALYTICS-ANALYZER] ${msg}`, data || ''),",
              "type": "error"
            },
            {
              "line_number": 21,
              "content": "success: (msg, data) => console.log(`[ANALYTICS-SUCCESS] ${msg}`, data || '')",
              "type": "log"
            },
            {
              "line_number": 428,
              "content": "console.log('\\n\ud83d\ude80 Advanced Analytics Bundle Analysis Complete!');",
              "type": "log"
            },
            {
              "line_number": 429,
              "content": "console.log('\ud83d\udcca Bundle report: analytics-bundle-report.html');",
              "type": "log"
            },
            {
              "line_number": 430,
              "content": "console.log('\ud83d\udccb Recommendations: development/research-reports/analytics-webpack-optimization-recommendations.md');",
              "type": "log"
            },
            {
              "line_number": 434,
              "content": "console.error('\u274c Analysis failed:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/build-phase3-localpoint.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-phase3-localpoint.js",
          "console_count": 27,
          "console_lines": [
            {
              "line_number": 204,
              "content": "console.error('Bundle analysis failed:', error);",
              "type": "error"
            },
            {
              "line_number": 259,
              "content": "console.log('\ud83d\ude80 Starting Phase 3 LocalPoint Bundle Optimization...\\n');",
              "type": "log"
            },
            {
              "line_number": 263,
              "content": "console.log('\ud83d\udcca Phase 1: Analyzing current bundle size...');",
              "type": "log"
            },
            {
              "line_number": 268,
              "content": "console.log(`   Current LocalPoint bundle: ${baselineAnalysis.totalSizeKB}kB (${baselineAnalysis.chunkCount} chunks)`);",
              "type": "log"
            },
            {
              "line_number": 271,
              "content": "console.log('   No baseline found (will create new baseline)');",
              "type": "log"
            },
            {
              "line_number": 275,
              "content": "console.log('\\n\ud83d\udd28 Phase 2: Building with Phase 3 optimizations...');",
              "type": "log"
            },
            {
              "line_number": 276,
              "content": "console.log('   \u2022 Phase 3A: Force Dependency Exclusion');",
              "type": "log"
            },
            {
              "line_number": 277,
              "content": "console.log('   \u2022 Phase 3B: Dynamic Import Conversion');",
              "type": "log"
            },
            {
              "line_number": 278,
              "content": "console.log('   \u2022 Phase 3C: Micro-Chunking Enhancement');",
              "type": "log"
            },
            {
              "line_number": 281,
              "content": "console.log('   \u2705 Build completed successfully');",
              "type": "log"
            },
            {
              "line_number": 284,
              "content": "console.log('\\n\ud83d\udcc8 Phase 3: Analyzing optimized bundle...');",
              "type": "log"
            },
            {
              "line_number": 288,
              "content": "console.log(`   Optimized LocalPoint bundle: ${optimizedAnalysis.totalSizeKB}kB (${optimizedAnalysis.chunkCount} chunks)`);",
              "type": "log"
            },
            {
              "line_number": 289,
              "content": "console.log('\\n   \ud83d\udce6 Chunk breakdown:');",
              "type": "log"
            },
            {
              "line_number": 291,
              "content": "console.log(`     \u2022 ${file.name}: ${file.sizeKB}kB`);",
              "type": "log"
            },
            {
              "line_number": 296,
              "content": "console.log('\\n\ud83d\udccb Phase 4: Generating optimization report...');",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log('\\n\ud83c\udfaf Phase 3 LocalPoint Optimization Results:');",
              "type": "log"
            },
            {
              "line_number": 303,
              "content": "console.log('=====================================');",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log(`\ud83d\udce6 Final Bundle Size: ${report.overallResults.finalBundleSize}`);",
              "type": "log"
            },
            {
              "line_number": 305,
              "content": "console.log(`\ud83d\ude80 Total Optimization: ${report.overallResults.totalOptimization}`);",
              "type": "log"
            },
            {
              "line_number": 306,
              "content": "console.log(`\u26a1 Performance Score: ${report.overallResults.performanceScore}/100`);",
              "type": "log"
            },
            {
              "line_number": 307,
              "content": "console.log(`\ud83d\udd04 Progressive Chunks: ${report.phase3BResults.progressiveChunks}`);",
              "type": "log"
            },
            {
              "line_number": 308,
              "content": "console.log(`\ud83d\udd2c Micro Chunks: ${report.phase3CResults.microChunks}`);",
              "type": "log"
            },
            {
              "line_number": 310,
              "content": "console.log('\\n\ud83d\udcca Detailed report saved to: dist-phase3-optimized/phase3-optimization-report.json');",
              "type": "log"
            },
            {
              "line_number": 311,
              "content": "console.log('\\n\u2705 Phase 3 LocalPoint optimization completed successfully!');",
              "type": "log"
            },
            {
              "line_number": 315,
              "content": "console.log('\\n\ud83c\udfc6 BREAKTHROUGH: LocalPoint bundle optimized below 1kB target!');",
              "type": "log"
            },
            {
              "line_number": 316,
              "content": "console.log('   This represents exceptional optimization success.');",
              "type": "log"
            },
            {
              "line_number": 320,
              "content": "console.error('\u274c Phase 3 build failed:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-syntax-only.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-syntax-only.js",
          "console_count": 3,
          "console_lines": [
            {
              "line_number": 27,
              "content": "console.log(`${emoji} ${message}`);",
              "type": "log"
            },
            {
              "line_number": 84,
              "content": "console.error('\u274c Syntax check failed:', error.message);",
              "type": "error"
            },
            {
              "line_number": 93,
              "content": "console.error('\u274c Syntax check error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/analyze-barchart-bundle.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/analyze-barchart-bundle.js",
          "console_count": 39,
          "console_lines": [
            {
              "line_number": 16,
              "content": "console.log(`\\n\ud83d\udd0d Analyzing bundle size for: ${description}`);",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "console.error(`Failed to analyze bundle: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 77,
              "content": "console.log('\\n\ud83d\udcca Analyzing import sizes...\\n');",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log('\ud83d\udce6 RECHARTS DEPENDENCIES (Original):');",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "rechartsImports.forEach(imp => console.log(`   - ${imp}`));",
              "type": "log"
            },
            {
              "line_number": 106,
              "content": "console.log('\\n\ud83d\udce6 VISX DEPENDENCIES (Migrated):');",
              "type": "log"
            },
            {
              "line_number": 107,
              "content": "visxImports.forEach(imp => console.log(`   - ${imp}`));",
              "type": "log"
            },
            {
              "line_number": 109,
              "content": "console.log(`\\n\ud83d\udd0d Import Count Comparison:`);",
              "type": "log"
            },
            {
              "line_number": 110,
              "content": "console.log(`   Recharts: ${rechartsImports.length} imports`);",
              "type": "log"
            },
            {
              "line_number": 111,
              "content": "console.log(`   Visx: ${visxImports.length} imports`);",
              "type": "log"
            },
            {
              "line_number": 122,
              "content": "console.log('\\n\ud83d\udcbe ESTIMATED BUNDLE SIZE SAVINGS:\\n');",
              "type": "log"
            },
            {
              "line_number": 131,
              "content": "console.log(`   Recharts bundle: ${formatBytes(rechartsSize)}`);",
              "type": "log"
            },
            {
              "line_number": 132,
              "content": "console.log(`   Visx bundle: ${formatBytes(visxSize)}`);",
              "type": "log"
            },
            {
              "line_number": 133,
              "content": "console.log(`   Estimated savings: ${formatBytes(savings)} (${savingsPercent}%)`);",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log('\\n\u26a1 PERFORMANCE OPTIMIZATION FEATURES:\\n');",
              "type": "log"
            },
            {
              "line_number": 157,
              "content": "optimizations.forEach(opt => console.log(`   ${opt}`));",
              "type": "log"
            },
            {
              "line_number": 159,
              "content": "console.log('\\n\ud83d\udcc8 FINANCIAL FEATURES ENHANCED:');",
              "type": "log"
            },
            {
              "line_number": 169,
              "content": "financialFeatures.forEach(feature => console.log(`   ${feature}`));",
              "type": "log"
            },
            {
              "line_number": 174,
              "content": "console.log('\\n' + '='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 175,
              "content": "console.log('\ud83d\udcca BARCHART MIGRATION TO VISX - ANALYSIS REPORT');",
              "type": "log"
            },
            {
              "line_number": 176,
              "content": "console.log('='.repeat(60));",
              "type": "log"
            },
            {
              "line_number": 182,
              "content": "console.log('\\n\ud83c\udfaf MIGRATION SUMMARY:');",
              "type": "log"
            },
            {
              "line_number": 183,
              "content": "console.log(`   \u2705 Successfully migrated from Recharts to Visx`);",
              "type": "log"
            },
            {
              "line_number": 184,
              "content": "console.log(`   \u2705 Maintained full API compatibility`);",
              "type": "log"
            },
            {
              "line_number": 185,
              "content": "console.log(`   \u2705 Enhanced financial data visualization`);",
              "type": "log"
            },
            {
              "line_number": 186,
              "content": "console.log(`   \u2705 Added positive/negative value styling`);",
              "type": "log"
            },
            {
              "line_number": 187,
              "content": "console.log(`   \u2705 Improved tooltip information`);",
              "type": "log"
            },
            {
              "line_number": 188,
              "content": "console.log(`   \u2705 Performance optimizations implemented`);",
              "type": "log"
            },
            {
              "line_number": 189,
              "content": "console.log(`   \u2705 Bundle size reduced by ~${savings.savingsPercent}%`);",
              "type": "log"
            },
            {
              "line_number": 191,
              "content": "console.log('\\n\ud83d\udccb MIGRATION CHECKLIST:');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log(`   \u2705 VixBarChart component created`);",
              "type": "log"
            },
            {
              "line_number": 193,
              "content": "console.log(`   \u2705 BaseChart integration maintained`);",
              "type": "log"
            },
            {
              "line_number": 194,
              "content": "console.log(`   \u2705 Financial data formatting preserved`);",
              "type": "log"
            },
            {
              "line_number": 195,
              "content": "console.log(`   \u2705 Volume data visualization enhanced`);",
              "type": "log"
            },
            {
              "line_number": 196,
              "content": "console.log(`   \u2705 Hover states and tooltips improved`);",
              "type": "log"
            },
            {
              "line_number": 197,
              "content": "console.log(`   \u2705 TypeScript types properly configured`);",
              "type": "log"
            },
            {
              "line_number": 198,
              "content": "console.log(`   \u2705 Performance optimizations added`);",
              "type": "log"
            },
            {
              "line_number": 200,
              "content": "console.log('\\n\ud83d\ude80 READY FOR DEPLOYMENT');",
              "type": "log"
            },
            {
              "line_number": 201,
              "content": "console.log('='.repeat(60) + '\\n');",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase4-monitoring-dashboard.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-monitoring-dashboard.js",
          "console_count": 23,
          "console_lines": [
            {
              "line_number": 156,
              "content": "console.log(`\ud83d\udcc1 Created monitoring directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 175,
              "content": "console.log('\u26a0\ufe0f Monitoring system is already running');",
              "type": "log"
            },
            {
              "line_number": 179,
              "content": "console.log('\ud83d\udcca Starting Phase 4 performance monitoring...');",
              "type": "log"
            },
            {
              "line_number": 192,
              "content": "console.log(`\u2705 Phase 4 monitoring started successfully`);",
              "type": "log"
            },
            {
              "line_number": 193,
              "content": "console.log(`\ud83c\udf10 Dashboard available at: http://${this.config.server.host}:${this.config.server.port}`);",
              "type": "log"
            },
            {
              "line_number": 202,
              "content": "console.error('\u274c Failed to start monitoring:', error.message);",
              "type": "error"
            },
            {
              "line_number": 212,
              "content": "console.log('\u26a0\ufe0f Monitoring system is not running');",
              "type": "log"
            },
            {
              "line_number": 216,
              "content": "console.log('\ud83d\udeab Stopping Phase 4 performance monitoring...');",
              "type": "log"
            },
            {
              "line_number": 232,
              "content": "console.log('\u2705 Phase 4 monitoring stopped');",
              "type": "log"
            },
            {
              "line_number": 308,
              "content": "console.error('HTTP request error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 624,
              "content": "console.error('Fetch error:', error);",
              "type": "error"
            },
            {
              "line_number": 647,
              "content": "console.error('Refresh error:', error);",
              "type": "error"
            },
            {
              "line_number": 875,
              "content": "console.warn('\u26a0\ufe0f Could not load baselines:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 892,
              "content": "console.warn('\u26a0\ufe0f Could not load historical metrics:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 902,
              "content": "console.warn('\u26a0\ufe0f Could not load historical events:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 925,
              "content": "console.error('\u274c Error saving monitoring data:', error.message);",
              "type": "error"
            },
            {
              "line_number": 956,
              "content": "console.log(`\ud83d\udea8 [${event.severity.toUpperCase()}] ${event.type}: ${JSON.stringify(event.data)}`);",
              "type": "log"
            },
            {
              "line_number": 973,
              "content": "console.error(`\ud83d\udea8 CRITICAL: ${event.type} - ${JSON.stringify(event.data)}`);",
              "type": "error"
            },
            {
              "line_number": 982,
              "content": "console.log(`\ud83d\udea8 ALERT: ${alert.message}`);",
              "type": "log"
            },
            {
              "line_number": 1047,
              "content": "console.log('\\n\ud83d\udeab Shutting down monitoring...');",
              "type": "log"
            },
            {
              "line_number": 1058,
              "content": "console.log('Phase 4 Progress:', JSON.stringify(status, null, 2));",
              "type": "log"
            },
            {
              "line_number": 1063,
              "content": "console.log(`\\n\ud83d\udcca Phase 4 Real-time Performance Monitoring Dashboard\\n\\nUsage: node phase4-monitoring-dashboard.js <command>\\n\\nCommands:\\n  start      Start real-time monitoring dashboard\\n  monitor    Alias for start\\n  status     Show current Phase 4 progress status\\n  help       Show this help message\\n\\nDashboard Features:\\n  - Real-time bundle size monitoring\\n  - Performance regression detection\\n  - Phase 4 progress tracking\\n  - Automated alerting system\\n  - Web-based monitoring interface\\n\\nDefault dashboard URL: http://localhost:4007\\n        `);",
              "type": "log"
            },
            {
              "line_number": 1067,
              "content": "console.error('\u274c Monitoring dashboard error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/build-cache-optimizer.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-cache-optimizer.js",
          "console_count": 31,
          "console_lines": [
            {
              "line_number": 230,
              "content": "console.log('\ud83d\udcc2 Loading cache from disk...');",
              "type": "log"
            },
            {
              "line_number": 235,
              "content": "console.log('\ud83d\udcdd No existing cache index found, starting fresh');",
              "type": "log"
            },
            {
              "line_number": 262,
              "content": "console.warn(`\u26a0\ufe0f Failed to load cache entry ${key}:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 267,
              "content": "console.log(`\u2705 Loaded ${loadedCount} cache entries (${this.formatBytes(totalSize)}) in ${Math.round(loadTime)}ms`);",
              "type": "log"
            },
            {
              "line_number": 274,
              "content": "console.warn('\u26a0\ufe0f Failed to load cache from disk:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 283,
              "content": "console.log('\ud83d\udcbe Saving cache to disk...');",
              "type": "log"
            },
            {
              "line_number": 319,
              "content": "console.log(`\u2705 Saved ${this.cache.size} cache entries in ${Math.round(saveTime)}ms`);",
              "type": "log"
            },
            {
              "line_number": 322,
              "content": "console.error('\u274c Failed to save cache to disk:', error.message);",
              "type": "error"
            },
            {
              "line_number": 404,
              "content": "console.log(`\ud83d\uddd1\ufe0f Cleared ${clearedCount} entries of type '${type}' (${this.formatBytes(clearedSize)})`);",
              "type": "log"
            },
            {
              "line_number": 443,
              "content": "console.log(`\ud83d\uddd1\ufe0f Evicted ${evictedCount} entries (${this.formatBytes(freedSpace)})`);",
              "type": "log"
            },
            {
              "line_number": 474,
              "content": "console.log(`\ud83e\uddf9 Cleaned ${cleanedCount} expired entries (${this.formatBytes(cleanedSize)})`);",
              "type": "log"
            },
            {
              "line_number": 484,
              "content": "console.log('\u26a1 Optimizing cache performance...');",
              "type": "log"
            },
            {
              "line_number": 502,
              "content": "console.log(`\u2705 Cache optimization completed in ${Math.round(optimizationTime)}ms`);",
              "type": "log"
            },
            {
              "line_number": 503,
              "content": "console.log(`\ud83d\udcca Current cache: ${this.cache.size} entries, ${this.formatBytes(this.stats.stats.totalSize)}`);",
              "type": "log"
            },
            {
              "line_number": 545,
              "content": "console.log(`\ud83d\uddd1\ufe0f Removed ${orphanedCount} orphaned cache files (${this.formatBytes(orphanedSize)})`);",
              "type": "log"
            },
            {
              "line_number": 549,
              "content": "console.warn('\u26a0\ufe0f Disk storage optimization failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 561,
              "content": "console.log('\ud83d\udc41\ufe0f Starting cache monitoring...');",
              "type": "log"
            },
            {
              "line_number": 568,
              "content": "console.log('\u26a0\ufe0f Cache size approaching limit, triggering cleanup...');",
              "type": "log"
            },
            {
              "line_number": 582,
              "content": "console.log('\u2705 Cache monitoring stopped');",
              "type": "log"
            },
            {
              "line_number": 591,
              "content": "console.log(`\ud83d\udcca Cache Stats - Entries: ${stats.entryCount}, Size: ${this.formatBytes(stats.totalSize)}, Hit Rate: ${stats.hitRate.toFixed(1)}%`);",
              "type": "log"
            },
            {
              "line_number": 674,
              "content": "console.log('\ud83d\udd25 Warming up cache...');",
              "type": "log"
            },
            {
              "line_number": 696,
              "content": "console.log(`\ud83d\udd25 Cache warmed with ${warmedCount} entries in ${Math.round(warmTime)}ms`);",
              "type": "log"
            },
            {
              "line_number": 716,
              "content": "console.log('\ud83d\udd0c Shutting down cache optimizer...');",
              "type": "log"
            },
            {
              "line_number": 721,
              "content": "console.log('\u2705 Cache optimizer shutdown complete');",
              "type": "log"
            },
            {
              "line_number": 753,
              "content": "console.log('\ud83d\udcca === Cache Status Report ===');",
              "type": "log"
            },
            {
              "line_number": 754,
              "content": "console.log(JSON.stringify(report, null, 2));",
              "type": "log"
            },
            {
              "line_number": 769,
              "content": "console.log('\ud83d\uddd1\ufe0f Cache cleared completely');",
              "type": "log"
            },
            {
              "line_number": 781,
              "content": "console.log('\ud83d\udc41\ufe0f Cache monitoring started. Press Ctrl+C to stop.');",
              "type": "log"
            },
            {
              "line_number": 796,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 822,
              "content": "console.error('\u274c Error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 839,
              "content": "console.error('Cache optimizer failed:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/phase7-monitoring-dashboard.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-monitoring-dashboard.js",
          "console_count": 27,
          "console_lines": [
            {
              "line_number": 44,
              "content": "console.log('\ud83d\udcca Phase 7 Monitoring Dashboard Initialized');",
              "type": "log"
            },
            {
              "line_number": 45,
              "content": "console.log(`\ud83c\udf10 Dashboard will be available at: http://localhost:${this.port}`);",
              "type": "log"
            },
            {
              "line_number": 102,
              "content": "console.log(`\ud83d\ude80 Phase 7 Monitoring Dashboard running on http://localhost:${this.port}`);",
              "type": "log"
            },
            {
              "line_number": 103,
              "content": "console.log('\ud83d\udcca Available endpoints:');",
              "type": "log"
            },
            {
              "line_number": 104,
              "content": "console.log('   GET  / - Main dashboard');",
              "type": "log"
            },
            {
              "line_number": 105,
              "content": "console.log('   GET  /api/metrics - Current metrics JSON');",
              "type": "log"
            },
            {
              "line_number": 106,
              "content": "console.log('   GET  /api/achievements - Achievement progress');",
              "type": "log"
            },
            {
              "line_number": 107,
              "content": "console.log('   GET  /api/alerts - Regression alerts');",
              "type": "log"
            },
            {
              "line_number": 108,
              "content": "console.log('   POST /api/update - Update metrics');",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.error('\u274c Dashboard request error:', error.message);",
              "type": "error"
            },
            {
              "line_number": 327,
              "content": "console.error('Failed to fetch metrics:', error);",
              "type": "error"
            },
            {
              "line_number": 338,
              "content": "console.error('Failed to fetch achievements:', error);",
              "type": "error"
            },
            {
              "line_number": 348,
              "content": "console.error('Failed to fetch alerts:', error);",
              "type": "error"
            },
            {
              "line_number": 592,
              "content": "console.warn('\u26a0\ufe0f Failed to update metrics:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 708,
              "content": "console.log('\ud83d\udcca Starting automatic metrics collection...');",
              "type": "log"
            },
            {
              "line_number": 718,
              "content": "console.log('\u2705 Metrics collection started - updating every 60 seconds');",
              "type": "log"
            },
            {
              "line_number": 728,
              "content": "console.log('\ud83d\udcca Phase 7 Monitoring Dashboard stopped');",
              "type": "log"
            },
            {
              "line_number": 771,
              "content": "console.log(`\ud83d\udccb Monitoring report saved: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 824,
              "content": "console.log('\\n\ud83d\ude80 Phase 7 Monitoring Dashboard is running!');",
              "type": "log"
            },
            {
              "line_number": 825,
              "content": "console.log(`\ud83d\udcca Dashboard: http://localhost:${port}`);",
              "type": "log"
            },
            {
              "line_number": 826,
              "content": "console.log('\ud83d\udcc8 API endpoints: /api/metrics, /api/achievements, /api/alerts');",
              "type": "log"
            },
            {
              "line_number": 827,
              "content": "console.log('\\nPress Ctrl+C to stop the dashboard');",
              "type": "log"
            },
            {
              "line_number": 831,
              "content": "console.log('\\n\ud83d\uded1 Shutting down dashboard...');",
              "type": "log"
            },
            {
              "line_number": 839,
              "content": "console.log('\ud83d\udccb Generated monitoring report:', JSON.stringify(report, null, 2));",
              "type": "log"
            },
            {
              "line_number": 845,
              "content": "console.log('\ud83d\udcca Current achievements:', JSON.stringify(achievements, null, 2));",
              "type": "log"
            },
            {
              "line_number": 850,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 876,
              "content": "console.error('\u274c Dashboard error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/lint-parallel.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-parallel.js",
          "console_count": 10,
          "console_lines": [
            {
              "line_number": 60,
              "content": "console.error(`${prefix} \u274c ${message}`);",
              "type": "error"
            },
            {
              "line_number": 63,
              "content": "console.warn(`${prefix} \u26a0\ufe0f  ${message}`);",
              "type": "warn"
            },
            {
              "line_number": 66,
              "content": "console.log(`${prefix} \u2705 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "if (options.verbose) console.log(`${prefix} \u23f3 ${message}`);",
              "type": "log"
            },
            {
              "line_number": 72,
              "content": "console.log(`${prefix} ${message}`);",
              "type": "log"
            },
            {
              "line_number": 249,
              "content": "console.error(`Worker ${workerResult.workerId} stderr:`, workerResult.stderr);",
              "type": "error"
            },
            {
              "line_number": 301,
              "content": "console.log('\\n\ud83d\udccb Files with issues:');",
              "type": "log"
            },
            {
              "line_number": 303,
              "content": "console.log(`   ${fileResult.filePath}: ${fileResult.errorCount} errors, ${fileResult.warningCount} warnings`);",
              "type": "log"
            },
            {
              "line_number": 307,
              "content": "console.log(`   ... and ${aggregated.problemFiles.length - 10} more files`);",
              "type": "log"
            },
            {
              "line_number": 325,
              "content": "console.error(error.stack);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/analyze-existing-bundle.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/analyze-existing-bundle.js",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 17,
              "content": "info: (msg, data) => console.log(`[BUNDLE-ANALYZER] ${msg}`, data || ''),",
              "type": "log"
            },
            {
              "line_number": 18,
              "content": "warn: (msg, data) => console.warn(`[BUNDLE-ANALYZER] ${msg}`, data || ''),",
              "type": "warn"
            },
            {
              "line_number": 19,
              "content": "error: (msg, data) => console.error(`[BUNDLE-ANALYZER] ${msg}`, data || ''),",
              "type": "error"
            },
            {
              "line_number": 20,
              "content": "success: (msg, data) => console.log(`[BUNDLE-SUCCESS] ${msg}`, data || '')",
              "type": "log"
            },
            {
              "line_number": 410,
              "content": "console.log('\\n\ud83c\udfaf Existing Bundle Analysis Complete!');",
              "type": "log"
            },
            {
              "line_number": 414,
              "content": "console.error('\u274c Analysis failed:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/vite-performance-plugin.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/vite-performance-plugin.js",
          "console_count": 21,
          "console_lines": [
            {
              "line_number": 55,
              "content": "console.log('\ud83d\udcca Vite Performance Plugin initialized');",
              "type": "log"
            },
            {
              "line_number": 69,
              "content": "console.log('\ud83d\ude80 Build started with performance monitoring');",
              "type": "log"
            },
            {
              "line_number": 82,
              "content": "console.log(`\ud83d\udce6 Resolved ${moduleCount} modules...`);",
              "type": "log"
            },
            {
              "line_number": 144,
              "content": "console.log(`\ud83d\udce6 Generated ${Object.keys(bundle).length} output files`);",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log(`\ud83d\udcca Bundle analysis: ${bundleAnalysis.totalSize} bytes total`);",
              "type": "log"
            },
            {
              "line_number": 278,
              "content": "console.warn('\u26a0\ufe0f Final analysis failed:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 284,
              "content": "console.log('\\n\ud83c\udfaf === Vite Build Performance Summary ===');",
              "type": "log"
            },
            {
              "line_number": 285,
              "content": "console.log(`\u23f1\ufe0f Total Build Time: ${Math.round(report.totalDuration)}ms`);",
              "type": "log"
            },
            {
              "line_number": 286,
              "content": "console.log(`\ud83d\udce6 Modules Processed: ${moduleCount}`);",
              "type": "log"
            },
            {
              "line_number": 287,
              "content": "console.log(`\ud83d\udd04 Modules Transformed: ${transformedModules}`);",
              "type": "log"
            },
            {
              "line_number": 288,
              "content": "console.log(`\ud83d\udcbe Peak Memory: ${Math.round(report.memory.peak.heapUsed / 1024 / 1024)}MB`);",
              "type": "log"
            },
            {
              "line_number": 292,
              "content": "console.log(`\ud83d\udcca Bundle Files: ${stats.bundleCount}`);",
              "type": "log"
            },
            {
              "line_number": 295,
              "content": "console.log(`\u26a0\ufe0f Slow Transforms: ${stats.slowTransforms.length}`);",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log(`  \u2022 ${transform.id.split('/').pop()}: ${transform.duration}ms`);",
              "type": "log"
            },
            {
              "line_number": 302,
              "content": "console.log('\ud83d\udcc8 Top Plugin Performance:');",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log(`  \u2022 ${plugin.name}: ${Math.round(plugin.totalDuration)}ms (${plugin.callCount} calls)`);",
              "type": "log"
            },
            {
              "line_number": 309,
              "content": "console.log('==========================================\\n');",
              "type": "log"
            },
            {
              "line_number": 337,
              "content": "console.log('\ud83d\udd04 Dev server WebSocket connected');",
              "type": "log"
            },
            {
              "line_number": 345,
              "content": "console.log(`\ud83d\udd04 HMR Update #${hmrUpdateCount}: ${payload.updates?.length || 0} modules`);",
              "type": "log"
            },
            {
              "line_number": 373,
              "content": "console.log(`\u26a0\ufe0f Slow dev server request: ${url} (${Math.round(duration)}ms)`);",
              "type": "log"
            },
            {
              "line_number": 395,
              "content": "console.log(`\u26a0\ufe0f Slow HMR update: ${ctx.file} (${Math.round(duration)}ms)`);",
              "type": "log"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/performance-baseline.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/performance-baseline.js",
          "console_count": 40,
          "console_lines": [
            {
              "line_number": 53,
              "content": "console.log(`\ud83d\udcc1 Created directory: ${dir}`);",
              "type": "log"
            },
            {
              "line_number": 85,
              "content": "console.warn('\u26a0\ufe0f Could not get Git information:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 99,
              "content": "console.log('\u23f1\ufe0f Measuring build time...');",
              "type": "log"
            },
            {
              "line_number": 144,
              "content": "console.log(`\u2705 Build completed in ${buildTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 145,
              "content": "console.log(`\ud83d\udcc4 Build data saved to: ${buildTimeFile}`);",
              "type": "log"
            },
            {
              "line_number": 168,
              "content": "console.error(`\u274c Build failed after ${buildTime}ms: ${error.message}`);",
              "type": "error"
            },
            {
              "line_number": 177,
              "content": "console.log('\ud83d\udcca Analyzing bundle size...');",
              "type": "log"
            },
            {
              "line_number": 238,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 241,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 244,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 247,
              "content": "console.log(`\ud83d\udcc4 Bundle analysis saved to: ${bundleFile}`);",
              "type": "log"
            },
            {
              "line_number": 335,
              "content": "console.log(`\ud83d\udd0d Comparing ${type} performance with baseline...`);",
              "type": "log"
            },
            {
              "line_number": 344,
              "content": "console.log(`\ud83d\udcdd No baseline found, creating new baseline for ${type}`);",
              "type": "log"
            },
            {
              "line_number": 377,
              "content": "console.log(`\u274c Performance regression detected in ${type}:`);",
              "type": "log"
            },
            {
              "line_number": 378,
              "content": "console.log(`   Change: ${comparison.changePercent.toFixed(2)}%`);",
              "type": "log"
            },
            {
              "line_number": 379,
              "content": "console.log(`   Threshold: ${this.thresholds[type] || 10}%`);",
              "type": "log"
            },
            {
              "line_number": 381,
              "content": "console.log(`\u2705 Performance improvement detected in ${type}:`);",
              "type": "log"
            },
            {
              "line_number": 382,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 386,
              "content": "console.log(`\u2705 ${type} performance within acceptable range:`);",
              "type": "log"
            },
            {
              "line_number": 387,
              "content": "console.log(`   Change: ${comparison.changePercent.toFixed(2)}%`);",
              "type": "log"
            },
            {
              "line_number": 469,
              "content": "console.log('\ud83d\udca1 Storing Lighthouse performance data...');",
              "type": "log"
            },
            {
              "line_number": 512,
              "content": "console.log(`\ud83d\udca1 Lighthouse data saved to: ${lighthouseFile}`);",
              "type": "log"
            },
            {
              "line_number": 513,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 524,
              "content": "console.log('\ud83d\udcca Generating comprehensive performance report...');",
              "type": "log"
            },
            {
              "line_number": 593,
              "content": "console.log(`\ud83d\udcca Performance report generated: ${reportFile}`);",
              "type": "log"
            },
            {
              "line_number": 609,
              "content": "console.warn(`\u26a0\ufe0f Could not load latest ${type} data:`, error.message);",
              "type": "warn"
            },
            {
              "line_number": 740,
              "content": "console.log('\\n\ud83d\udcca === Performance Report Summary ===');",
              "type": "log"
            },
            {
              "line_number": 741,
              "content": "console.log(`\ud83c\udfd7\ufe0f Build Time: ${report.summary.buildTime}ms`);",
              "type": "log"
            },
            {
              "line_number": 742,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 745,
              "content": "console.log(`\ud83c\udfaf Performance Score: ${report.summary.performanceScore}/100`);",
              "type": "log"
            },
            {
              "line_number": 746,
              "content": "console.log(`\ud83d\udcca Total Size: ${this.formatBytes(report.summary.totalSize)}`);",
              "type": "log"
            },
            {
              "line_number": 749,
              "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
              "type": "log"
            },
            {
              "line_number": 751,
              "content": "console.log(`${i + 1}. [${rec.priority.toUpperCase()}] ${rec.message}`);",
              "type": "log"
            },
            {
              "line_number": 755,
              "content": "console.log('=====================================\\n');",
              "type": "log"
            },
            {
              "line_number": 777,
              "content": "console.log(",
              "type": "log"
            },
            {
              "line_number": 809,
              "content": "console.log(`\ud83e\uddf9 Cleaned ${cleanedFiles} old performance data files`);",
              "type": "log"
            },
            {
              "line_number": 840,
              "content": "console.log(`\u274c No data found for type: ${type}`);",
              "type": "log"
            },
            {
              "line_number": 848,
              "content": "console.error('\u274c Lighthouse report file not found');",
              "type": "error"
            },
            {
              "line_number": 871,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 896,
              "content": "console.error('\u274c Error:', error.message);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/performance-budget-enforcement.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/performance-budget-enforcement.js",
          "console_count": 20,
          "console_lines": [
            {
              "line_number": 232,
              "content": "console.log('\ud83d\udcca Using bundle analysis from regression report');",
              "type": "log"
            },
            {
              "line_number": 240,
              "content": "console.log('\ud83d\udcca Using bundle analysis from baseline');",
              "type": "log"
            },
            {
              "line_number": 245,
              "content": "console.log('\ud83d\udcca Generating new bundle analysis...');",
              "type": "log"
            },
            {
              "line_number": 255,
              "content": "console.warn('Warning: Could not load bundle analysis:', error.message);",
              "type": "warn"
            },
            {
              "line_number": 280,
              "content": "console.log(`\ud83d\udcca Budget report generated: ${reportPath}`);",
              "type": "log"
            },
            {
              "line_number": 290,
              "content": "console.log('\ud83c\udfaf Starting performance budget enforcement...');",
              "type": "log"
            },
            {
              "line_number": 297,
              "content": "console.log('\ud83d\udce6 Checking bundle size budgets...');",
              "type": "log"
            },
            {
              "line_number": 304,
              "content": "console.log(`\ud83d\udcca Total bundle size: ${checker.formatSize(bundleAnalysis.totalSize)}`);",
              "type": "log"
            },
            {
              "line_number": 306,
              "content": "console.log(`  \ud83d\udce6 ${chunk}: ${checker.formatSize(size)}`);",
              "type": "log"
            },
            {
              "line_number": 311,
              "content": "console.log('\ud83d\ude80 Checking Web Vitals budgets...');",
              "type": "log"
            },
            {
              "line_number": 320,
              "content": "console.log('\u2705 All performance budgets are within limits');",
              "type": "log"
            },
            {
              "line_number": 322,
              "content": "console.log(`\u274c Found ${violations.length} performance budget violations:`);",
              "type": "log"
            },
            {
              "line_number": 326,
              "content": "console.log(`  ${icon} ${violation.description}`);",
              "type": "log"
            },
            {
              "line_number": 333,
              "content": "console.error('\ud83d\udca5 Critical performance budget violations detected - failing build');",
              "type": "error"
            },
            {
              "line_number": 336,
              "content": "console.log('\u26a0\ufe0f  Warning-level violations detected - build will continue');",
              "type": "log"
            },
            {
              "line_number": 341,
              "content": "console.log('\ud83c\udf89 Performance budget enforcement completed');",
              "type": "log"
            },
            {
              "line_number": 344,
              "content": "console.error('\ud83d\udca5 Error during budget enforcement:', error.message);",
              "type": "error"
            },
            {
              "line_number": 356,
              "content": "console.log(`",
              "type": "log"
            },
            {
              "line_number": 379,
              "content": "console.log(`\ud83d\udccb Using custom budget configuration: ${configPath}`);",
              "type": "log"
            },
            {
              "line_number": 381,
              "content": "console.error(`Error: Config file not found: ${configPath}`);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        },
        {
          "path": "scripts/validate-vixpiechart-progressive.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/validate-vixpiechart-progressive.js",
          "console_count": 7,
          "console_lines": [
            {
              "line_number": 30,
              "content": "success: (msg) => console.log(`${colors.green}\u2705 ${msg}${colors.reset}`),",
              "type": "log"
            },
            {
              "line_number": 31,
              "content": "error: (msg) => console.log(`${colors.red}\u274c ${msg}${colors.reset}`),",
              "type": "log"
            },
            {
              "line_number": 32,
              "content": "warn: (msg) => console.log(`${colors.yellow}\u26a0\ufe0f  ${msg}${colors.reset}`),",
              "type": "log"
            },
            {
              "line_number": 33,
              "content": "info: (msg) => console.log(`${colors.blue}\u2139\ufe0f  ${msg}${colors.reset}`),",
              "type": "log"
            },
            {
              "line_number": 34,
              "content": "header: (msg) => console.log(`${colors.bold}${colors.magenta}\\n\ud83d\ude80 ${msg}${colors.reset}\\n`),",
              "type": "log"
            },
            {
              "line_number": 35,
              "content": "section: (msg) => console.log(`${colors.bold}${colors.cyan}\\n\ud83d\udccb ${msg}${colors.reset}`)",
              "type": "log"
            },
            {
              "line_number": 586,
              "content": "console.error('Validation script failed:', error);",
              "type": "error"
            }
          ],
          "category": "build_scripts"
        }
      ],
      "count": 1214,
      "strategy": "eslint-disable"
    },
    "removable": {
      "patterns": ["temp", "quick-", "simple-", "temporary"],
      "files": [
        {
          "path": "temp_add_scripts.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/temp_add_scripts.js",
          "console_count": 1,
          "console_lines": [
            {
              "line_number": 20,
              "content": "console.log('\u2705 Coverage scripts added to package.json');",
              "type": "log"
            }
          ],
          "category": "removable"
        },
        {
          "path": "temp_check_tasks.js",
          "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/temp_check_tasks.js",
          "console_count": 6,
          "console_lines": [
            {
              "line_number": 6,
              "content": "console.log(\"\ud83c\udd93 TRULY AVAILABLE TASKS (not claimed):\");",
              "type": "log"
            },
            {
              "line_number": 9,
              "content": "console.log(\"No unclaimed tasks available\");",
              "type": "log"
            },
            {
              "line_number": 14,
              "content": "console.log(`${i+1}. [${task.category}] ${task.title}`);",
              "type": "log"
            },
            {
              "line_number": 15,
              "content": "console.log(`   ID: ${task.id}`);",
              "type": "log"
            },
            {
              "line_number": 16,
              "content": "console.log(`   Priority: ${task.priority}`);",
              "type": "log"
            },
            {
              "line_number": 17,
              "content": "console.log(\"\");",
              "type": "log"
            }
          ],
          "category": "removable"
        }
      ],
      "count": 7,
      "strategy": "remove"
    }
  },
  "detailed_files": [
    {
      "path": "vite.config.analytics-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.analytics-optimization.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 123,
          "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.visx-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.visx-optimization.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 97,
          "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "quick-lint-sample.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/quick-lint-sample.js",
      "console_count": 14,
      "console_lines": [
        {
          "line_number": 9,
          "content": "console.log('\ud83d\udccb Sampling frontend linter errors...');",
          "type": "log"
        },
        {
          "line_number": 26,
          "content": "console.log(`Checking ${file}...`);",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.log(`  \u274c ${lintResults[0].errorCount} errors, ${lintResults[0].warningCount} warnings`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`  \u2705 No errors`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log(`  \u26a0\ufe0f Could not parse JSON, but file may have issues`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`  \u2753 Could not check ${file}: ${error.message.split('\\n')[0]}`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`\\n\ud83d\udcca Sample Results:`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`Files sampled: ${testFiles.length}`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log(`Total errors in sample: ${totalSampleErrors}`);",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log(`\\n\u274c SIGNIFICANT LINTER ERRORS DETECTED IN SAMPLE`);",
          "type": "log"
        },
        {
          "line_number": 64,
          "content": "console.log(`Based on ${testFiles.length} files having ${totalSampleErrors} errors,`);",
          "type": "log"
        },
        {
          "line_number": 65,
          "content": "console.log(`the full codebase likely still has substantial linter issues.`);",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.error('Error in sample check:', error);",
          "type": "error"
        },
        {
          "line_number": 76,
          "content": "sampleLintCheck().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.phase2-utils-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase2-utils-optimization.ts",
      "console_count": 18,
      "console_lines": [
        {
          "line_number": 264,
          "content": "console.debug(`[Utils Micro-Chunk] ${id} \u2192 ${chunkName} (${target.targetSize}) ${target.forceAsync ? '[ASYNC]' : '[SYNC]'}`);",
          "type": "debug"
        },
        {
          "line_number": 354,
          "content": "console.log('\\n\ud83c\udfaf PHASE 2 UTILS BUNDLE OPTIMIZATION RESULTS:');",
          "type": "log"
        },
        {
          "line_number": 355,
          "content": "console.log(`\ud83d\udcca Original Bundle: 84.89kB`);",
          "type": "log"
        },
        {
          "line_number": 356,
          "content": "console.log(`\ud83d\udcca Optimized Bundle: ${utilsBundleKB}kB`);",
          "type": "log"
        },
        {
          "line_number": 357,
          "content": "console.log(`\ud83d\udcca Reduction Achieved: ${reductionPercentage.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 358,
          "content": "console.log(`\ud83d\udcca Target Range: 15-25kB (78% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 361,
          "content": "console.log('\u2705 PHASE 2 SUCCESS: Utils bundle optimization target achieved!');",
          "type": "log"
        },
        {
          "line_number": 362,
          "content": "console.log(`\ud83d\ude80 Final Size: ${utilsBundleKB}kB (${reductionPercentage.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 364,
          "content": "console.warn(`\u26a0\ufe0f Bundle size (${utilsBundleKB}kB) exceeds target maximum (25kB)`);",
          "type": "warn"
        },
        {
          "line_number": 365,
          "content": "console.warn(`\ud83c\udfaf Additional optimization needed: ${((utilsBundles - targetMax)/1024).toFixed(1)}kB`);",
          "type": "warn"
        },
        {
          "line_number": 367,
          "content": "console.log(`\u2705 EXCELLENT PROGRESS: ${reductionPercentage.toFixed(1)}% reduction achieved`);",
          "type": "log"
        },
        {
          "line_number": 369,
          "content": "console.warn(`\ud83c\udfaf Progress: ${reductionPercentage.toFixed(1)}% reduction, target: 78%`);",
          "type": "warn"
        },
        {
          "line_number": 373,
          "content": "console.log('\\n\ud83d\udccb Micro-Chunk Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 379,
          "content": "console.log(`  \u2022 ${name}: ${sizeKB}kB`);",
          "type": "log"
        },
        {
          "line_number": 501,
          "content": "console.log('\\n\ud83c\udfaf PHASE 2 UTILS BUNDLE OPTIMIZATION COMPLETE');",
          "type": "log"
        },
        {
          "line_number": 502,
          "content": "console.log('\ud83d\udcca Target: 84.89kB \u2192 15-25kB (78% reduction)');",
          "type": "log"
        },
        {
          "line_number": 503,
          "content": "console.log('\ud83d\udd27 Applied: Aggressive micro-chunking + conflict resolution');",
          "type": "log"
        },
        {
          "line_number": 504,
          "content": "console.log('\ud83d\ude80 Integrated: Phase 7 progressive architecture patterns');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.phase6-axis.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase6-axis.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 111,
          "content": "console.warn('[Phase6AxisOptimization] Heavy formatter detected - should use inline formatters');",
          "type": "warn"
        },
        {
          "line_number": 158,
          "content": "console.log(`\u2705 Phase 6 Axis Success: ${bundleName} (${(size/1024).toFixed(1)}kB) within target ${config.target} (${config.reduction} reduction)`);",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.warn(`\u26a0\ufe0f Phase 6 Axis Warning: ${bundleName} (${(size/1024).toFixed(1)}kB) exceeds target ${config.target}`);",
          "type": "warn"
        },
        {
          "line_number": 171,
          "content": "console.log(`\ud83d\ude80 Phase 6 Axis BREAKTHROUGH: ${(totalPhase6AxisSize/1024).toFixed(1)}kB \u2264 8kB target (${actualReduction.toFixed(1)}% reduction achieved)`);",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.warn(`\ud83c\udfaf Phase 6 Axis Progress: ${(totalPhase6AxisSize/1024).toFixed(1)}kB, target \u2264 8kB (${actualReduction.toFixed(1)}% reduction)`);",
          "type": "warn"
        },
        {
          "line_number": 176,
          "content": "console.log(`\ud83d\udcca Phase 6 Axis Variants: ${successCount}/${Object.keys(phase6Targets).length} targets achieved`);",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.phase7-data-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-data-optimization.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 40,
          "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "test-theme-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/test-theme-validation.js",
      "console_count": 40,
      "console_lines": [
        {
          "line_number": 25,
          "content": "console.log('\ud83d\ude80 Starting comprehensive dark theme validation...\\n');",
          "type": "log"
        },
        {
          "line_number": 28,
          "content": "console.log('1. Validating file structure...');",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`   \u2705 ${file} - EXISTS`);",
          "type": "log"
        },
        {
          "line_number": 44,
          "content": "console.log(`   \u274c ${file} - MISSING`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log(`   ${allFilesExist ? '\u2705' : '\u274c'} File structure validation: ${allFilesExist ? 'PASSED' : 'FAILED'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log(`   \u274c File structure validation: FAILED - ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log('2. Validating CSS theme variables...');",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log(`   \u2705 ${variable} - FOUND`);",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log(`   \u274c ${variable} - MISSING`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log(`   ${allVariablesPresent ? '\u2705' : '\u274c'} CSS variables validation: ${allVariablesPresent ? 'PASSED' : 'FAILED'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log('   \u274c CSS variables validation: FAILED - File not found\\n');",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log(`   \u274c CSS variables validation: FAILED - ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log('3. Validating ThemeToggle component...');",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log(`   \u2705 ${feature} - FOUND`);",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log(`   \u274c ${feature} - MISSING`);",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.log(`   ${allFeaturesPresent ? '\u2705' : '\u274c'} ThemeToggle component validation: ${allFeaturesPresent ? 'PASSED' : 'FAILED'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log('   \u274c ThemeToggle component validation: FAILED - File not found\\n');",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log(`   \u274c ThemeToggle component validation: FAILED - ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log('4. Validating Zustand store integration...');",
          "type": "log"
        },
        {
          "line_number": 152,
          "content": "console.log(`   \u2705 ${feature} - FOUND`);",
          "type": "log"
        },
        {
          "line_number": 154,
          "content": "console.log(`   \u274c ${feature} - MISSING`);",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log(`   ${allStoreFeaturesPresent ? '\u2705' : '\u274c'} Store integration validation: ${allStoreFeaturesPresent ? 'PASSED' : 'FAILED'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log('   \u274c Store integration validation: FAILED - File not found\\n');",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log(`   \u274c Store integration validation: FAILED - ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log('\ud83d\udcca VALIDATION SUMMARY:');",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('=' .repeat(50));",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log(`Overall Status: ${overallSuccess ? '\u2705 PASSED' : '\u274c FAILED'}`);",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log(`File Structure: ${validationResults.fileStructure ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log(`CSS Variables: ${validationResults.cssVariables ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log(`Theme Toggle: ${validationResults.themeToggleComponent ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log(`Store Integration: ${validationResults.storeIntegration ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 187,
          "content": "console.log('\\n\ud83d\udea8 ERRORS FOUND:');",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log(`${index + 1}. ${error}`);",
          "type": "log"
        },
        {
          "line_number": 194,
          "content": "console.log('\\n\u26a0\ufe0f WARNINGS:');",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.log(`${index + 1}. ${warning}`);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('\\n\ud83d\udd0d NEXT STEPS:');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log('\u2705 All validations passed! Theme implementation is ready for browser testing.');",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log('\u274c Some validations failed. Please fix the issues above before proceeding.');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('\\n\ud83d\ude80 Dark theme validation completed.');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log(`\ud83d\udcc4 Detailed results saved to: ${resultsPath}`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "analyze-utils-bundle.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/analyze-utils-bundle.js",
      "console_count": 69,
      "console_lines": [
        {
          "line_number": 12,
          "content": "console.log('\ud83d\udd0d Phase 8B Utils Bundle Source Map Analysis');",
          "type": "log"
        },
        {
          "line_number": 13,
          "content": "console.log('============================================');",
          "type": "log"
        },
        {
          "line_number": 19,
          "content": "console.log(`\ud83d\udce6 Bundle Size: ${(utilsBundle.length / 1024).toFixed(2)}kB (${utilsBundle.length} bytes)`);",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log('\ud83d\udd17 Detected Dependencies:');",
          "type": "log"
        },
        {
          "line_number": 50,
          "content": "console.log(`  - ${imp}`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log('\ud83d\udcc4 Large String Literals (>100 chars):');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log(`  - ${str.size} chars: ${str.content}`);",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log('\ud83d\udd27 Function Analysis:');",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log(`  - Regular functions: ${functionMatches.length}`);",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log(`  - Arrow functions: ${arrowFunctionMatches.length}`);",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`  - Total estimated functions: ${functionMatches.length + arrowFunctionMatches.length}`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.log('\ud83d\udd2c Pattern Analysis:');",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log(`  - ${pattern.description}: ${matches.length} occurrences`);",
          "type": "log"
        },
        {
          "line_number": 100,
          "content": "console.log(`    Examples: ${[...new Set(matches)].slice(0, 5).join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log('\ud83d\udcca Content Size Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log(`  - ${section.name}: ${(totalSize / 1024).toFixed(2)}kB (${percentage}%)`);",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log(`  - Other content: ${((utilsBundle.length - totalAnalyzed) / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log('\ud83d\udd24 Minified Variables (indicating heavy dependencies):');",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log(`  - Single-letter variables: ${uniqueMinifiedNames.length}`);",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log(`  - Most common: ${uniqueMinifiedNames.slice(0, 10).join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log('\ud83d\udccb Utility Categories Analysis:');",
          "type": "log"
        },
        {
          "line_number": 151,
          "content": "console.log(`  - ${category}: ${matches.length} references`);",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 163,
          "content": "console.log('\ud83e\udde9 Module Structure Analysis:');",
          "type": "log"
        },
        {
          "line_number": 166,
          "content": "console.log(`  - ${pattern.name}: ${matches.length} instances`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.log('\ud83c\udfaf OPTIMIZATION OPPORTUNITIES:');",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log('=====================================');",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log(`\ud83d\udccf Size Analysis:`);",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log(`  - Current Size: ${currentSizeKB.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log(`  - Target Size: ${targetSizeKB}kB`);",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log(`  - Reduction Needed: ${reductionNeeded.toFixed(2)}kB (${((reductionNeeded / currentSizeKB) * 100).toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log('\ud83d\udd27 Specific Optimization Targets:');",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log('  1. LODASH REPLACEMENT (High Impact):');",
          "type": "log"
        },
        {
          "line_number": 190,
          "content": "console.log('     - Replace lodash with native ES6+ methods');",
          "type": "log"
        },
        {
          "line_number": 191,
          "content": "console.log('     - Estimated savings: 3-8kB');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log('     - Priority: HIGH');",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.log('  2. LARGE STRING OPTIMIZATION (Medium Impact):');",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log(`     - Found ${stringMatches.length} large strings`);",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.log('     - Consider lazy loading or compression');",
          "type": "log"
        },
        {
          "line_number": 199,
          "content": "console.log('     - Estimated savings: 1-3kB');",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('     - Priority: MEDIUM');",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log('  3. FUNCTION CHUNKING (High Impact):');",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.log(`     - ${functionMatches.length + arrowFunctionMatches.length} functions detected`);",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('     - Split into route-specific chunks');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('     - Estimated savings: 2-6kB per route');",
          "type": "log"
        },
        {
          "line_number": 208,
          "content": "console.log('     - Priority: HIGH');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log('  4. TREE SHAKING IMPROVEMENTS (High Impact):');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log('     - Review unused exports and dead code');",
          "type": "log"
        },
        {
          "line_number": 213,
          "content": "console.log('     - Optimize import patterns');",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log('     - Estimated savings: 2-5kB');",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log('     - Priority: HIGH');",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log('\ud83d\udccb Implementation Plan:');",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log('  Phase 1: Replace heavy dependencies (lodash, etc.)');",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log('  Phase 2: Implement route-based chunking');",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log('  Phase 3: Optimize string literals and data');",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.log('  Phase 4: Enhanced tree shaking');",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.log('  Phase 5: Validate and fine-tune');",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.log('\u2705 Analysis Complete - Ready for source map deep dive');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "analyze-source-maps.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/analyze-source-maps.js",
      "console_count": 70,
      "console_lines": [
        {
          "line_number": 12,
          "content": "console.log('\ud83d\uddfa\ufe0f  Source Map Analysis for Utils Bundle Optimization');",
          "type": "log"
        },
        {
          "line_number": 13,
          "content": "console.log('====================================================');",
          "type": "log"
        },
        {
          "line_number": 30,
          "content": "console.log('\ud83d\udcca Bundle Size Analysis:');",
          "type": "log"
        },
        {
          "line_number": 31,
          "content": "console.log(`  - Vendor Utils Bundle: ${(vendorUtilsJs.length / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log(`  - Utils Main Bundle: ${(utilsMainJs.length / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "console.log(`  - Total Combined: ${((vendorUtilsJs.length + utilsMainJs.length) / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 34,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 37,
          "content": "console.log('\ud83c\udfd7\ufe0f  Vendor Utils Source Analysis:');",
          "type": "log"
        },
        {
          "line_number": 38,
          "content": "console.log(`  - Source files: ${vendorUtilsMap.sources ? vendorUtilsMap.sources.length : 0}`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log('  \ud83d\udce6 Third-party packages:');",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log(`    - ${pkg}: ${files.length} files`);",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "files.forEach(file => console.log(`      \u2514\u2500 ${file}`));",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "files.slice(0, 3).forEach(file => console.log(`      \u2514\u2500 ${file}`));",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log(`      \u2514\u2500 ... and ${files.length - 3} more`);",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log('\ud83d\udd27 Utils Main Source Analysis:');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log(`  - Source files: ${utilsMainMap.sources ? utilsMainMap.sources.length : 0}`);",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log('  \ud83d\udcc1 Our source categories:');",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`    - ${category}: ${files.length} files`);",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "files.forEach(file => console.log(`      \u2514\u2500 ${file}`));",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "files.slice(0, 2).forEach(file => console.log(`      \u2514\u2500 ${file}`));",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "console.log(`      \u2514\u2500 ... and ${files.length - 2} more`);",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log(`\ud83d\udd0d ${bundleName} Pattern Analysis:`);",
          "type": "log"
        },
        {
          "line_number": 144,
          "content": "console.log(`  - ${name}: ${matches.length} instances`);",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log(`    Examples: ${uniqueLodash.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 153,
          "content": "console.log(`    Examples: ${uniqueDateFns.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log('\ud83c\udfaf SOURCE MAP-BASED OPTIMIZATION OPPORTUNITIES:');",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log('==============================================');",
          "type": "log"
        },
        {
          "line_number": 167,
          "content": "console.log('\ud83d\udccf Target Analysis:');",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log(`  - Current Total: ${((vendorUtilsJs.length + utilsMainJs.length) / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "console.log(`  - Target Size: 29kB (for the combined bundle)`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log(`  - Reduction Needed: ${((vendorUtilsJs.length + utilsMainJs.length) / 1024 - 29).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log('\ud83d\udd25 HIGH IMPACT: Date-fns Replacement');",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log('  - date-fns is contributing significantly to bundle size');",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log('  - Replace with native Date API or lightweight alternative');",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log('  - Estimated savings: 15-25kB');",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log('  - Implementation: Create date utility atoms using native APIs');",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log('\ud83d\udd25 HIGH IMPACT: Lodash Replacement');",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log('  - lodash utilities detected in bundle');",
          "type": "log"
        },
        {
          "line_number": 190,
          "content": "console.log('  - Replace with native ES6+ methods');",
          "type": "log"
        },
        {
          "line_number": 191,
          "content": "console.log('  - Estimated savings: 8-15kB');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log('  - Implementation: Create native utility functions');",
          "type": "log"
        },
        {
          "line_number": 193,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log('\ud83d\udccb IMPLEMENTATION PLAN (Source Map Guided):');",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('Phase 1: Third-Party Dependency Replacement (HIGH IMPACT)');",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('  1. Replace date-fns with native Date utilities');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log('  2. Replace lodash with native ES6+ methods');",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log('  3. Audit other third-party utilities in vendor bundle');",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log('  Expected savings: 20-35kB');",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('Phase 2: Utils Bundle Chunking (MEDIUM IMPACT)');",
          "type": "log"
        },
        {
          "line_number": 208,
          "content": "console.log('  1. Fix static/dynamic import conflicts preventing chunking');",
          "type": "log"
        },
        {
          "line_number": 209,
          "content": "console.log('  2. Implement route-based utils chunking');",
          "type": "log"
        },
        {
          "line_number": 210,
          "content": "console.log('  3. Lazy load specialized utilities');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log('  Expected savings: 5-15kB per route');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log('Phase 3: Tree Shaking Optimization (MEDIUM IMPACT)');",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log('  1. Ensure all imports are tree-shakable');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log('  2. Remove unused utility functions');",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log('  3. Optimize export patterns');",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log('  Expected savings: 3-8kB');",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log('\u2705 Source Map Analysis Complete');",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.log('\ud83c\udfaf Primary target: Replace date-fns and lodash dependencies');",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.log('\ud83d\udcca Expected total savings: 25-50kB (exceeding 29kB target)');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.standard-bundle-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.standard-bundle-optimization.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 206,
          "content": "console.debug(`Standard Bundle: ${id} \u2192 ${chunkName} (${target.targetSize})`);",
          "type": "debug"
        },
        {
          "line_number": 312,
          "content": "console.log(`${statusIcon} Standard Bundle: ${bundleName} (${sizeKB.toFixed(1)}kB) - Target: ${target.targetSize}`);",
          "type": "log"
        },
        {
          "line_number": 322,
          "content": "console.log(`\ud83d\ude80 STANDARD BUNDLE SUCCESS: ${totalReductionPercentage.toFixed(1)}% reduction achieved (Target: 54-70%)`);",
          "type": "log"
        },
        {
          "line_number": 323,
          "content": "console.log(`\ud83d\udcca Total Size: ${(totalStandardSize/1024).toFixed(1)}kB (from 26.31kB baseline)`);",
          "type": "log"
        },
        {
          "line_number": 325,
          "content": "console.warn(`\ud83c\udfaf Standard Bundle Progress: ${totalReductionPercentage.toFixed(1)}% reduction, target: 54-70%`);",
          "type": "warn"
        },
        {
          "line_number": 342,
          "content": "console.log('\\n\ud83d\udcca Standard Bundle Strategy Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 344,
          "content": "console.log(`  ${strategy}: ${(data.size/1024).toFixed(1)}kB (${data.count} chunks)`);",
          "type": "log"
        },
        {
          "line_number": 459,
          "content": "console.log('\\n\ud83d\udd0d Standard Bundle Optimization Analysis Complete');",
          "type": "log"
        },
        {
          "line_number": 460,
          "content": "console.log('\ud83d\udcca Bundle size validation would run here with actual build data');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "check_eslint.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/check_eslint.js",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 10,
          "content": "console.log(resultText);",
          "type": "log"
        },
        {
          "line_number": 12,
          "content": "console.error(error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "vite.config.assets.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.assets.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 233,
          "content": "// Remove console.log in production",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "pure_funcs: process.env.NODE_ENV === 'production' ? ['console.log', 'console.info'] : [],",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.production.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.production.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 112,
          "content": "'console.log',",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "'console.warn',",
          "type": "warn"
        },
        {
          "line_number": 114,
          "content": "'console.error',",
          "type": "error"
        },
        {
          "line_number": 2192,
          "content": "console.warn(`\u26a0\ufe0f Phase 7 Warning: ${bundleName} (${(size/1024).toFixed(1)}kB) exceeds target ${config.target}`);",
          "type": "warn"
        },
        {
          "line_number": 2194,
          "content": "console.log(`\u2705 Phase 7 Success: ${bundleName} (${(size/1024).toFixed(1)}kB) within target ${config.target}`);",
          "type": "log"
        },
        {
          "line_number": 2209,
          "content": "console.log(`\ud83d\ude80 Phase 7 CHART MICRO-CHUNKING SUCCESS: 6-chunk system ${(totalPhase7ChartSize/1024).toFixed(1)}kB \u2264 ${phase7ChartTarget/1024}kB target`);",
          "type": "log"
        },
        {
          "line_number": 2211,
          "content": "console.warn(`\ud83c\udfaf Phase 7 Progress: Chart micro-chunks ${(totalPhase7ChartSize/1024).toFixed(1)}kB, target \u2264 ${phase7ChartTarget/1024}kB`);",
          "type": "warn"
        },
        {
          "line_number": 2221,
          "content": "console.log(`\ud83d\ude80 Phase 5/6 CONTINUED SUCCESS: Total optimized bundles ${(totalPhase5Size/1024).toFixed(1)}kB \u2264 ${phase5Target/1024}kB target`);",
          "type": "log"
        },
        {
          "line_number": 2223,
          "content": "console.warn(`\ud83c\udfaf Phase 5/6 Monitoring: Total bundles ${(totalPhase5Size/1024).toFixed(1)}kB, target \u2264 ${phase5Target/1024}kB`);",
          "type": "warn"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "auth-analysis.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/auth-analysis.js",
      "console_count": 40,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.log(logEntry);",
          "type": "log"
        },
        {
          "line_number": 374,
          "content": "console.log('\\n\ud83d\ude80 ENHANCED COMPREHENSIVE AUTHENTICATION ANALYSIS\\n');",
          "type": "log"
        },
        {
          "line_number": 375,
          "content": "console.log('Features: Systematic Button Testing | Screenshots | Performance | Accessibility\\n');",
          "type": "log"
        },
        {
          "line_number": 879,
          "content": "console.log('\\n\ud83d\ude80 ENHANCED COMPREHENSIVE AUTHENTICATION ANALYSIS REPORT');",
          "type": "log"
        },
        {
          "line_number": 880,
          "content": "console.log('==========================================================');",
          "type": "log"
        },
        {
          "line_number": 881,
          "content": "console.log(`Application URL: ${baseUrl}`);",
          "type": "log"
        },
        {
          "line_number": 882,
          "content": "console.log(`Analysis Time: ${new Date().toISOString()}`);",
          "type": "log"
        },
        {
          "line_number": 883,
          "content": "console.log(`Session ID: ${sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 884,
          "content": "console.log('\\n\ud83d\udcca ENHANCED FEATURES TESTED:');",
          "type": "log"
        },
        {
          "line_number": 885,
          "content": "console.log('\u2705 Systematic Button Testing - All interactive elements tested');",
          "type": "log"
        },
        {
          "line_number": 886,
          "content": "console.log('\u2705 Comprehensive Screenshot System - Multiple viewports, before/after states');",
          "type": "log"
        },
        {
          "line_number": 887,
          "content": "console.log('\u2705 Detailed System Logging - Performance, network, accessibility');",
          "type": "log"
        },
        {
          "line_number": 888,
          "content": "console.log('\u2705 Enhanced Error Handling - Retry logic, graceful recovery');",
          "type": "log"
        },
        {
          "line_number": 889,
          "content": "console.log('\u2705 Accessibility Testing - Focus management, ARIA compliance');",
          "type": "log"
        },
        {
          "line_number": 890,
          "content": "console.log('\u2705 Performance Monitoring - Load times, memory usage, resources');",
          "type": "log"
        },
        {
          "line_number": 892,
          "content": "console.log('\\n\ud83d\udd0d KEY FINDINGS:');",
          "type": "log"
        },
        {
          "line_number": 894,
          "content": "console.log(`${index + 1}. ${finding}`);",
          "type": "log"
        },
        {
          "line_number": 905,
          "content": "console.log('\\n\ud83c\udfaf ENHANCED AUTHENTICATION STATUS SUMMARY:');",
          "type": "log"
        },
        {
          "line_number": 906,
          "content": "console.log(`Login Page Available: ${hasLoginPage ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 907,
          "content": "console.log(`Register Page Available: ${hasRegisterPage ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 908,
          "content": "console.log(`Demo Login Functional: ${demoLoginWorks ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 909,
          "content": "console.log(`Authentication Required: ${requiresAuth ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 910,
          "content": "console.log(`State Management: ${hasAuthStorage ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 911,
          "content": "console.log(`Errors Detected: ${hasErrors ? `\u274c YES (${testResults.errors.length})` : '\u2705 NO'}`);",
          "type": "log"
        },
        {
          "line_number": 913,
          "content": "console.log('\\n\ud83d\udcc8 TESTING STATISTICS:');",
          "type": "log"
        },
        {
          "line_number": 914,
          "content": "console.log(`Screenshots Taken: ${testResults.screenshots.length}`);",
          "type": "log"
        },
        {
          "line_number": 915,
          "content": "console.log(`Button Tests Performed: ${testResults.buttonTests.reduce((sum, test) => sum + test.totalButtons, 0)}`);",
          "type": "log"
        },
        {
          "line_number": 916,
          "content": "console.log(`Performance Metrics Collected: ${testResults.performanceMetrics.length}`);",
          "type": "log"
        },
        {
          "line_number": 917,
          "content": "console.log(`Accessibility Tests Run: ${testResults.accessibilityTests.length}`);",
          "type": "log"
        },
        {
          "line_number": 918,
          "content": "console.log(`Network Requests Monitored: ${testResults.networkRequests.length}`);",
          "type": "log"
        },
        {
          "line_number": 919,
          "content": "console.log(`Console Messages Logged: ${testResults.consoleMessages.length}`);",
          "type": "log"
        },
        {
          "line_number": 920,
          "content": "console.log(`Total Errors Found: ${testResults.errors.length}`);",
          "type": "log"
        },
        {
          "line_number": 934,
          "content": "console.log(`\\n\ud83c\udfc6 FINAL ASSESSMENT: ${implementationStatus}`);",
          "type": "log"
        },
        {
          "line_number": 935,
          "content": "console.log('==========================================================\\n');",
          "type": "log"
        },
        {
          "line_number": 1086,
          "content": "console.log('\ud83d\udcc4 Enhanced reports saved:');",
          "type": "log"
        },
        {
          "line_number": 1087,
          "content": "console.log(`   JSON: ${jsonReportPath}`);",
          "type": "log"
        },
        {
          "line_number": 1088,
          "content": "console.log(`   HTML: ${htmlReportPath}`);",
          "type": "log"
        },
        {
          "line_number": 1089,
          "content": "console.log(`   Screenshots: ${screenshotDir}`);",
          "type": "log"
        },
        {
          "line_number": 1094,
          "content": "console.error('\u274c Analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 1102,
          "content": "analyzeAuthentication().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "utils-architecture-demo.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/utils-architecture-demo.js",
      "console_count": 60,
      "console_lines": [
        {
          "line_number": 13,
          "content": "console.log('\ud83d\ude80 Utils Progressive Architecture Activation Demo');",
          "type": "log"
        },
        {
          "line_number": 14,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 15,
          "content": "console.log('Target: 26.71kB \u2192 3-12kB (58-88% reduction)');",
          "type": "log"
        },
        {
          "line_number": 16,
          "content": "console.log('Based on proven VixComposedChart and VixBarChart success patterns\\n');",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log('\ud83d\udce6 PHASE 1: Progressive Architecture Activation');",
          "type": "log"
        },
        {
          "line_number": 21,
          "content": "console.log('   \u2022 Initializing enhanced bundle configurations...');",
          "type": "log"
        },
        {
          "line_number": 22,
          "content": "console.log('   \u2022 Activating micro-chunking strategies...');",
          "type": "log"
        },
        {
          "line_number": 23,
          "content": "console.log('   \u2022 Coordinating cross-bundle dependencies...');",
          "type": "log"
        },
        {
          "line_number": 24,
          "content": "console.log('   \u2022 Deploying shared resource optimization...\\n');",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.log('\u2705 ACTIVATION RESULTS:');",
          "type": "log"
        },
        {
          "line_number": 41,
          "content": "console.log(`   \u2022 Success: ${activationResults.success}`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`   \u2022 Bundles Activated: ${activationResults.bundlesActivated.length}/4`);",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log(`   \u2022 Reduction Achieved: ${activationResults.reductionAchieved}`);",
          "type": "log"
        },
        {
          "line_number": 44,
          "content": "console.log(`   \u2022 Network Savings: ${activationResults.networkSavings}`);",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log(`   \u2022 Performance Score: ${activationResults.performanceScore}/100\\n`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log('\ud83c\udfaf PHASE 2: Intelligent Variant Optimization');",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log(`   \ud83d\udcca ${variant.name} Variant:`);",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log(`      \u2022 Size: ${variant.size} (${variant.reduction} reduction)`);",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log(`      \u2022 Use Case: ${variant.useCase}`);",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`      \u2022 Features: ${variant.features.join(', ')}\\n`);",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log('\ud83d\udd0d PHASE 3: Performance Validation');",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log('   \ud83d\udcc8 Bundle Size Metrics:');",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.log(`      \u2022 Original: ${performanceMetrics.bundleSize.original}`);",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log(`      \u2022 Current: ${performanceMetrics.bundleSize.current}`);",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log(`      \u2022 Reduction: ${performanceMetrics.bundleSize.reduction}`);",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`      \u2022 Savings: ${performanceMetrics.bundleSize.networkSavings}\\n`);",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log('   \u26a1 Performance Metrics:');",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.log(`      \u2022 Load Time: ${performanceMetrics.loadingPerformance.loadTime}`);",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "console.log(`      \u2022 Parse Time: ${performanceMetrics.loadingPerformance.parseTime}`);",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "console.log(`      \u2022 Memory Usage: ${performanceMetrics.loadingPerformance.memoryUsage}`);",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log(`      \u2022 Improvement: ${performanceMetrics.loadingPerformance.improvementVsOriginal}\\n`);",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.log('   \u2705 Validation Results:');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log(`      \u2022 Meets Minimum (58%): ${performanceMetrics.validation.meetsMinimumTarget ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.log(`      \u2022 Meets Optimal (75%): ${performanceMetrics.validation.meetsOptimalTarget ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log(`      \u2022 Performance Grade: ${performanceMetrics.validation.performanceGrade}`);",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log(`      \u2022 Overall Score: ${performanceMetrics.validation.overallScore}\\n`);",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log('\ud83d\udd17 PHASE 4: Cross-Bundle Optimization');",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log('   \ud83c\udfd7\ufe0f Shared Resource Optimization:');",
          "type": "log"
        },
        {
          "line_number": 149,
          "content": "console.log(`      \u2022 ${resource.name}: Used by ${resource.sharedBy} bundles, saves ${resource.savings}`);",
          "type": "log"
        },
        {
          "line_number": 152,
          "content": "console.log(`      \u2022 Total Shared Savings: ${totalSharedSavings.toFixed(1)}kB\\n`);",
          "type": "log"
        },
        {
          "line_number": 158,
          "content": "console.log('\ud83c\udf89 PROGRESSIVE ARCHITECTURE ACTIVATION SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log('\ud83c\udfaf TARGET ACHIEVEMENT:');",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log('   \u2022 Original Bundle: 26.71kB');",
          "type": "log"
        },
        {
          "line_number": 163,
          "content": "console.log('   \u2022 Target Range: 3-12kB (58-88% reduction)');",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log(`   \u2022 Achieved: ${performanceMetrics.bundleSize.current} (${performanceMetrics.bundleSize.reduction} reduction)`);",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log(`   \u2022 Status: ${performanceMetrics.validation.meetsMinimumTarget ? '\u2705 TARGET EXCEEDED' : '\u274c TARGET MISSED'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 167,
          "content": "console.log('\ud83d\udcca OPTIMIZATION RESULTS:');",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log(`   \u2022 Network Savings: ${performanceMetrics.bundleSize.networkSavings}`);",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "console.log(`   \u2022 Shared Resource Savings: ${crossBundleResults.totalSharedSavings.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log(`   \u2022 Performance Improvement: ${performanceMetrics.loadingPerformance.improvementVsOriginal}`);",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.log(`   \u2022 Overall Grade: ${performanceMetrics.validation.performanceGrade}\\n`);",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('\ud83d\ude80 PROGRESSIVE VARIANTS:');",
          "type": "log"
        },
        {
          "line_number": 176,
          "content": "console.log(`   \u2022 ${variant.name}: ${variant.size} (${variant.reduction}) ${meetsTarget ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log('\\n\ud83c\udf8a ARCHITECTURE ACTIVATION: SUCCESSFUL');",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log('\u2728 Progressive loading system ACTIVE and delivering projected reductions!');",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.error('\u274c Demonstration failed:', error);",
          "type": "error"
        },
        {
          "line_number": 212,
          "content": "console.log('\\n\ud83c\udfaf DEMONSTRATION COMPLETE: Architecture activation validated');",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.error('\\n\ud83d\udca5 DEMONSTRATION FAILED:', result.error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "analyze-analytics-bundle.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/analyze-analytics-bundle.js",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 19,
          "content": "info: (msg, data) => console.log(`[INFO] ${msg}`, data || ''),",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "warn: (msg, data) => console.warn(`[WARN] ${msg}`, data || ''),",
          "type": "warn"
        },
        {
          "line_number": 21,
          "content": "error: (msg, data) => console.error(`[ERROR] ${msg}`, data || ''),",
          "type": "error"
        },
        {
          "line_number": 22,
          "content": "success: (msg, data) => console.log(`[SUCCESS] ${msg}`, data || '')",
          "type": "log"
        },
        {
          "line_number": 506,
          "content": "console.log('\\n\ud83c\udfaf Analytics Dashboard Bundle Optimization Analysis Complete!');",
          "type": "log"
        },
        {
          "line_number": 510,
          "content": "console.error('\u274c Analysis failed:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.phase7-validation.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-validation.ts",
      "console_count": 10,
      "console_lines": [
        {
          "line_number": 42,
          "content": "console.warn(`\u26a0\ufe0f Phase 7 Warning: ${bundleName} (${(size/1024).toFixed(1)}kB) exceeds target ${config.target}`);",
          "type": "warn"
        },
        {
          "line_number": 44,
          "content": "console.log(`\u2705 Phase 7 Success: ${bundleName} (${(size/1024).toFixed(1)}kB) within target ${config.target}`);",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log(`\ud83d\ude80 Phase 7 BREAKTHROUGH: Total Phase 7 bundles ${(totalPhase7Size/1024).toFixed(1)}kB \u2264 ${phase7Target/1024}kB target`);",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log(`\ud83c\udfc6 Phase 7 Achievement Rate: ${achievementRate.toFixed(1)}% targets achieved`);",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.warn(`\ud83c\udfaf Phase 7 Progress: Total bundles ${(totalPhase7Size/1024).toFixed(1)}kB, target \u2264 ${phase7Target/1024}kB`);",
          "type": "warn"
        },
        {
          "line_number": 70,
          "content": "console.warn(`\ud83d\udcca Phase 7 Achievement: ${achievementRate.toFixed(1)}% targets achieved (need \u226580%)`);",
          "type": "warn"
        },
        {
          "line_number": 75,
          "content": "console.log(`\ud83c\udf1f Phase 7 EXCELLENCE: ${achievementRate.toFixed(1)}% achievement rate - BREAKTHROUGH SUCCESS`);",
          "type": "log"
        },
        {
          "line_number": 77,
          "content": "console.log(`\ud83c\udfaf Phase 7 SUCCESS: ${achievementRate.toFixed(1)}% achievement rate - TARGET ACHIEVED`);",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log(`\ud83d\udcc8 Phase 7 PROGRESS: ${achievementRate.toFixed(1)}% achievement rate - GOOD PROGRESS`);",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.warn(`\u26a0\ufe0f Phase 7 NEEDS ATTENTION: ${achievementRate.toFixed(1)}% achievement rate - OPTIMIZATION REQUIRED`);",
          "type": "warn"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "vite.config.phase7-micro-chunking.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-micro-chunking.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 109,
          "content": "['console.log', 'console.info', 'console.debug'] : []",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "bundle-size-analyzer.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/bundle-size-analyzer.js",
      "console_count": 50,
      "console_lines": [
        {
          "line_number": 12,
          "content": "console.log('\ud83c\udfaf Comprehensive Bundle Size Attribution Analysis');",
          "type": "log"
        },
        {
          "line_number": 13,
          "content": "console.log('================================================');",
          "type": "log"
        },
        {
          "line_number": 89,
          "content": "console.log('\ud83d\udcca Bundle Size Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 90,
          "content": "console.log(`  \ud83c\udfd7\ufe0f  Vendor Utils: ${(vendorUtilsAnalysis.totalSize / 1024).toFixed(2)}kB (${vendorUtilsAnalysis.numSources} sources)`);",
          "type": "log"
        },
        {
          "line_number": 91,
          "content": "console.log(`  \ud83d\udd27 Utils Main: ${(utilsMainAnalysis.totalSize / 1024).toFixed(2)}kB (${utilsMainAnalysis.numSources} sources)`);",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log(`  \ud83d\udce6 Total Combined: ${(totalBundleSize / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 93,
          "content": "console.log(`  \ud83c\udfaf Target: 29kB`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log(`  \ud83d\udd25 Reduction Needed: ${(totalBundleSize / 1024 - 29).toFixed(2)}kB (${(((totalBundleSize - 29*1024) / totalBundleSize) * 100).toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.log('\ud83c\udfc6 TOP 20 BUNDLE SIZE CONTRIBUTORS:');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('=====================================');",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log(`${String(index + 1).padStart(2)}. ${source}`);",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log(`    \ud83d\udccf Size: ${sizeKB}kB (${percentage}% of total)`);",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log(`    \ud83d\udcc1 Files: ${data.files.length}`);",
          "type": "log"
        },
        {
          "line_number": 135,
          "content": "console.log(`       \u2514\u2500 ${file}`);",
          "type": "log"
        },
        {
          "line_number": 139,
          "content": "console.log(`       \u2514\u2500 ${file}`);",
          "type": "log"
        },
        {
          "line_number": 141,
          "content": "console.log(`       \u2514\u2500 ... and ${data.files.length - 2} more`);",
          "type": "log"
        },
        {
          "line_number": 143,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "console.log('\ud83d\udca1 OPTIMIZATION POTENTIAL BY CATEGORY:');",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log('======================================');",
          "type": "log"
        },
        {
          "line_number": 187,
          "content": "console.log(`${category}:`);",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log(`  \ud83d\udccf Current Size: ${(totalCategorySize / 1024).toFixed(2)}kB (${percentage}%)`);",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log(`  \ud83d\udcc1 Files: ${categoryFiles}`);",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log(`  \ud83d\udcbe Potential Savings: ${(potentialSavings / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`  \ud83d\udd27 Strategy: ${optimizationStrategy}`);",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log('\ud83c\udfaf OPTIMIZATION FEASIBILITY ANALYSIS:');",
          "type": "log"
        },
        {
          "line_number": 234,
          "content": "console.log('====================================');",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.log(`Current Size: ${(totalBundleSize / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log(`Potential Savings: ${(totalPotentialSavings / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log(`Projected Optimized Size: ${(optimizedSize / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.log(`Target Size: 29kB`);",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.log('\u2705 TARGET ACHIEVABLE with proposed optimizations!');",
          "type": "log"
        },
        {
          "line_number": 242,
          "content": "console.log(`   Margin: ${(29 - optimizedSize / 1024).toFixed(2)}kB under target`);",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('\u26a0\ufe0f  Additional optimization needed');",
          "type": "log"
        },
        {
          "line_number": 245,
          "content": "console.log(`   Still over by: ${(optimizedSize / 1024 - 29).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 249,
          "content": "console.log('\ud83d\udd25 IMMEDIATE ACTION PLAN (Priority Order):');",
          "type": "log"
        },
        {
          "line_number": 250,
          "content": "console.log('==========================================');",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log('1. \ud83e\udd47 Replace date-fns with native Date utilities');",
          "type": "log"
        },
        {
          "line_number": 252,
          "content": "console.log('   Expected impact: 15-25kB reduction');",
          "type": "log"
        },
        {
          "line_number": 253,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.log('2. \ud83e\udd48 Replace lodash with native ES6+ methods');",
          "type": "log"
        },
        {
          "line_number": 255,
          "content": "console.log('   Expected impact: 8-15kB reduction');",
          "type": "log"
        },
        {
          "line_number": 256,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 257,
          "content": "console.log('3. \ud83e\udd49 Implement utils chunking and tree shaking');",
          "type": "log"
        },
        {
          "line_number": 258,
          "content": "console.log('   Expected impact: 5-10kB reduction');",
          "type": "log"
        },
        {
          "line_number": 259,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 260,
          "content": "console.log('Total expected reduction: 28-50kB');",
          "type": "log"
        },
        {
          "line_number": 261,
          "content": "console.log('\ud83c\udfaf This should easily achieve the 29kB target!');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.performance.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.performance.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 90,
          "content": "console.warn('\ud83d\udea8 Performance Warning: Large bundle detected', warning);",
          "type": "warn"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.phase7-chart-chunking.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-chart-chunking.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 191,
          "content": "console.debug(`Phase 7: ${id} \u2192 ${chunkName}`);",
          "type": "debug"
        },
        {
          "line_number": 215,
          "content": "console.warn(`\u26a0\ufe0f Phase 7 Warning: ${chunkName} (${sizeKB.toFixed(1)}kB) exceeds target ${target.targetSize}`);",
          "type": "warn"
        },
        {
          "line_number": 217,
          "content": "console.log(`\u2705 Phase 7 Success: ${chunkName} (${sizeKB.toFixed(1)}kB) within target ${target.targetSize}`);",
          "type": "log"
        },
        {
          "line_number": 230,
          "content": "console.log(`\ud83d\ude80 Phase 7 ACHIEVEMENT: Chart bundle reduction ${reductionPercentage.toFixed(1)}% (${(totalPhase7Size/1024).toFixed(1)}kB total)`);",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.warn(`\ud83c\udfaf Phase 7 Progress: Chart bundle reduction ${reductionPercentage.toFixed(1)}%, target \u226540%`);",
          "type": "warn"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "test-dynamic-import.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/test-dynamic-import.js",
      "console_count": 14,
      "console_lines": [
        {
          "line_number": 6,
          "content": "console.log('Testing dynamic import of OpenBBChart...');",
          "type": "log"
        },
        {
          "line_number": 10,
          "content": "console.log('Starting dynamic import test...');",
          "type": "log"
        },
        {
          "line_number": 17,
          "content": "console.log('\u2705 Dynamic import successful!');",
          "type": "log"
        },
        {
          "line_number": 18,
          "content": "console.log(`\u23f1\ufe0f  Load time: ${loadTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 19,
          "content": "console.log('\ud83d\udce6 Module exports:', Object.keys(module));",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log('\ud83c\udfaf Default export:', !!module.default);",
          "type": "log"
        },
        {
          "line_number": 24,
          "content": "console.log('\u274c Dynamic import failed!');",
          "type": "log"
        },
        {
          "line_number": 25,
          "content": "console.error('Error details:', error);",
          "type": "error"
        },
        {
          "line_number": 39,
          "content": "console.log('\\nTesting alternative import paths...');",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log(`Testing path: ${path}`);",
          "type": "log"
        },
        {
          "line_number": 47,
          "content": "console.log(`\u2705 Path ${path} works! Load time: ${loadTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 49,
          "content": "console.log(`\u274c Path ${path} failed: ${error.message}`);",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log('Test result:', result);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.error('Test suite failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "temp_add_scripts.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/temp_add_scripts.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 20,
          "content": "console.log('\u2705 Coverage scripts added to package.json');",
          "type": "log"
        }
      ],
      "category": "removable"
    },
    {
      "path": "update-localpoint-imports.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/update-localpoint-imports.js",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 58,
          "content": "console.log(`Processing: ${filePath}`);",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "console.log(`File not found: ${filePath}`);",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`\u2705 Updated: ${filePath}`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log(`\u23ed\ufe0f  No changes needed: ${filePath}`);",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log('\ud83d\ude80 Phase 3: LocalPoint Bundle Optimization');",
          "type": "log"
        },
        {
          "line_number": 93,
          "content": "console.log('Target: 67.11kB \u2192 15-25kB reduction\\n');",
          "type": "log"
        },
        {
          "line_number": 105,
          "content": "console.log(`\\n\ud83d\udcca Summary: ${updatedFiles}/${filesToUpdate.length} files updated`);",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log('\\n\ud83d\udd28 Next steps:');",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "console.log('1. Run npm run build to test bundle reduction');",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.log('2. Check for any TypeScript/compilation errors');",
          "type": "log"
        },
        {
          "line_number": 109,
          "content": "console.log('3. Verify chart functionality still works');",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log('\\n\ud83c\udfaf Expected result: LocalPoint bundle reduced to ~15-25kB');",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "vite.config.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 82,
          "content": "pure_funcs: ['console.log', 'console.info', 'console.debug'],",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "temp_check_tasks.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/temp_check_tasks.js",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 6,
          "content": "console.log(\"\ud83c\udd93 TRULY AVAILABLE TASKS (not claimed):\");",
          "type": "log"
        },
        {
          "line_number": 9,
          "content": "console.log(\"No unclaimed tasks available\");",
          "type": "log"
        },
        {
          "line_number": 14,
          "content": "console.log(`${i+1}. [${task.category}] ${task.title}`);",
          "type": "log"
        },
        {
          "line_number": 15,
          "content": "console.log(`   ID: ${task.id}`);",
          "type": "log"
        },
        {
          "line_number": 16,
          "content": "console.log(`   Priority: ${task.priority}`);",
          "type": "log"
        },
        {
          "line_number": 17,
          "content": "console.log(\"\");",
          "type": "log"
        }
      ],
      "category": "removable"
    },
    {
      "path": "lint-check.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/lint-check.js",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 8,
          "content": "console.log('\ud83d\udd0d Starting linter error count...');",
          "type": "log"
        },
        {
          "line_number": 39,
          "content": "console.log('\\n\ud83d\udcca LINTER VALIDATION RESULTS:');",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.log(`Total files checked: ${results.length}`);",
          "type": "log"
        },
        {
          "line_number": 41,
          "content": "console.log(`Files with errors: ${filesWithErrors}`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`Total errors: ${totalErrors}`);",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log(`Total warnings: ${totalWarnings}`);",
          "type": "log"
        },
        {
          "line_number": 46,
          "content": "console.log('\\n\u274c LINTER ERRORS STILL PRESENT');",
          "type": "log"
        },
        {
          "line_number": 47,
          "content": "console.log('\\nTop files with most errors:');",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log(`  ${item.file}: ${item.errors} errors, ${item.warnings} warnings`);",
          "type": "log"
        },
        {
          "line_number": 55,
          "content": "console.log('\\n\u2705 NO LINTER ERRORS FOUND');",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "console.error('Error running linter:', error);",
          "type": "error"
        },
        {
          "line_number": 71,
          "content": "console.error('Failed to check lint errors:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "vite.config.data-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.data-optimization.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 194,
          "content": "'console.log',",
          "type": "log"
        },
        {
          "line_number": 195,
          "content": "'console.warn',",
          "type": "warn"
        },
        {
          "line_number": 196,
          "content": "'console.error',",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "phase5-bundle-validator.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/phase5-bundle-validator.js",
      "console_count": 42,
      "console_lines": [
        {
          "line_number": 38,
          "content": "console.error('\u274c Failed to load Phase 5 baseline:', error.message);",
          "type": "error"
        },
        {
          "line_number": 63,
          "content": "console.error('\u274c Failed to analyze build output:', error.message);",
          "type": "error"
        },
        {
          "line_number": 85,
          "content": "console.log('\\n\ud83d\udd0d Phase 5 Bundle Size Validation');",
          "type": "log"
        },
        {
          "line_number": 86,
          "content": "console.log('=' .repeat(50));",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`\\n\ud83d\udce6 ${bundleName.toUpperCase()} Bundle:`);",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log(`   Current: ${result.currentSize} kB`);",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log(`   Target: ${result.targetSize} kB`);",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.log(`   Max Allowed: ${result.maxAllowed} kB`);",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "console.log(`   Reduction: ${result.reduction} kB (${result.percentageReduction}%)`);",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "console.log(`   Status: ${result.status}`);",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log(`\\n\ud83d\udce6 ${bundleName.toUpperCase()} Bundle: ${result.status}`);",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log('\\n\ud83d\udd04 Progressive Loading Validation');",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log('=' .repeat(50));",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log(`\\n\ud83d\udd04 ${result.test}:`);",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log(`   Status: ${result.status}`);",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.log(`   Details: ${result.details}`);",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log('\\n\u26a1 Build Performance Validation');",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log('=' .repeat(50));",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.log(`\\n\u26a1 ${result.test}:`);",
          "type": "log"
        },
        {
          "line_number": 255,
          "content": "console.log(`   Status: ${result.status}`);",
          "type": "log"
        },
        {
          "line_number": 256,
          "content": "console.log(`   Details: ${result.details}`);",
          "type": "log"
        },
        {
          "line_number": 268,
          "content": "console.log('\\n\ud83d\udcca PHASE 5 VALIDATION REPORT SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 269,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 283,
          "content": "console.log(`\\n\ud83c\udfaf Overall Phase 5 Validation Status: ${",
          "type": "log"
        },
        {
          "line_number": 289,
          "content": "console.log(`\\n\ud83d\udccb Validation Summary:`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log(`   Bundle Size Validation: ${this.validationResults.bundleSizes.status}`);",
          "type": "log"
        },
        {
          "line_number": 291,
          "content": "console.log(`   Progressive Loading: ${this.validationResults.progressiveLoading.status}`);",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log(`   Build Performance: ${this.validationResults.buildPerformance.status}`);",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log(`\\n\ud83d\udce6 Bundle Optimization Summary:`);",
          "type": "log"
        },
        {
          "line_number": 298,
          "content": "console.log(`   Total Bundles Analyzed: ${summary.totalBundles}`);",
          "type": "log"
        },
        {
          "line_number": 299,
          "content": "console.log(`   Meeting Targets: ${summary.meetingTargets}`);",
          "type": "log"
        },
        {
          "line_number": 300,
          "content": "console.log(`   Within Range: ${summary.withinRange}`);",
          "type": "log"
        },
        {
          "line_number": 301,
          "content": "console.log(`   Needing Optimization: ${summary.needingOptimization}`);",
          "type": "log"
        },
        {
          "line_number": 307,
          "content": "console.log(`\\n\ud83d\udcc1 Detailed report saved to: ${reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 313,
          "content": "console.log('\\n\ud83d\ude80 PHASE 5 COMPREHENSIVE BUNDLE VALIDATION');",
          "type": "log"
        },
        {
          "line_number": 314,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 315,
          "content": "console.log('Validator: Phase 5 Performance Validation Specialist #7');",
          "type": "log"
        },
        {
          "line_number": 316,
          "content": "console.log('Mission: Validate 116kB \u2192 40-60kB optimization targets');",
          "type": "log"
        },
        {
          "line_number": 317,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 328,
          "content": "console.log('\\n\u2705 Phase 5 validation framework execution completed successfully');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.error('\\n\u274c Phase 5 validation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 333,
          "content": "console.error(error.stack);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "chart-import-test.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/chart-import-test.js",
      "console_count": 23,
      "console_lines": [
        {
          "line_number": 6,
          "content": "console.log('\ud83e\uddea Testing Chart Imports - AdvancedChartLoadError Fix Validation');",
          "type": "log"
        },
        {
          "line_number": 9,
          "content": "console.log(`\\n\ud83d\udce6 Testing ${componentName}...`);",
          "type": "log"
        },
        {
          "line_number": 16,
          "content": "console.log(`\u2705 ${componentName} loaded successfully in ${loadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 17,
          "content": "console.log(`   - Default export: ${!!module.default}`);",
          "type": "log"
        },
        {
          "line_number": 18,
          "content": "console.log(`   - Named export: ${!!module[componentName]}`);",
          "type": "log"
        },
        {
          "line_number": 19,
          "content": "console.log(`   - All exports: ${Object.keys(module).join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 24,
          "content": "console.error(`\u274c ${componentName} failed to load after ${loadTime.toFixed(2)}ms`);",
          "type": "error"
        },
        {
          "line_number": 25,
          "content": "console.error(`   - Error: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 26,
          "content": "console.error(`   - Error type: ${error.name}`);",
          "type": "error"
        },
        {
          "line_number": 42,
          "content": "console.log(`\\n\ud83d\ude80 Running ${tests.length} import tests...`);",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log('\\n\ud83d\udcca TEST SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log('='.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`Total tests: ${results.length}`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`Successful: ${successful.length}`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log(`Failed: ${failed.length}`);",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "console.log(`Success rate: ${(successful.length / results.length * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log(`Total load time: ${totalTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log(`Average load time: ${(totalTime / results.length).toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log('\\n\u274c FAILED TESTS:');",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log(`   - ${f.name}: ${f.error}`);",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log('\\n\ud83c\udf89 ALL TESTS PASSED! AdvancedChartLoadError should be fixed.');",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log('\\n\u26a0\ufe0f Some tests failed. AdvancedChartLoadError may still occur.');",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "runAllTests().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "vite.config.phase7-dashboard-core.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/vite.config.phase7-dashboard-core.ts",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 190,
          "content": "console.debug(`Dashboard Bundle: ${id} \u2192 ${chunkName} (${target.targetSize})`);",
          "type": "debug"
        },
        {
          "line_number": 292,
          "content": "console.log(`${statusIcon} Dashboard Bundle: ${bundleName} (${sizeKB.toFixed(1)}kB) - Target: ${target.targetSize}`);",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log(`\ud83d\ude80 DASHBOARD OPTIMIZATION SUCCESS: ${totalReductionPercentage.toFixed(1)}% reduction achieved (Target: 65-75%)`);",
          "type": "log"
        },
        {
          "line_number": 303,
          "content": "console.log(`\ud83d\udcca Total Size: ${(totalDashboardSize/1024).toFixed(1)}kB (from 28.4kB baseline)`);",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.warn(`\ud83c\udfaf Dashboard Progress: ${totalReductionPercentage.toFixed(1)}% reduction, target: 65-75%`);",
          "type": "warn"
        },
        {
          "line_number": 416,
          "content": "console.log('\\\\n\ud83c\udfaf Phase 7 Dashboard Core Optimization Complete');",
          "type": "log"
        },
        {
          "line_number": 417,
          "content": "console.log('\ud83d\udcca Target: 65-75% reduction from 28.4kB baseline');",
          "type": "log"
        },
        {
          "line_number": 418,
          "content": "console.log('\ud83c\udfc6 Applying proven Phase 6 Standard Bundle patterns');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "dist-simple/assets/useFinancialData-DsTgv6zc.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/useFinancialData-DsTgv6zc.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{u as b}from\"./useQuery-CL--WJBR.js\";import{r as k,t as D,v as F,w as T,u as _}from\"./index-BKXu7Q-C.js\";import{r as y}from\"./visx-B2MmNCqL.js\";import{u as V}from\"./authStore-Bvy4jE74.js\";import{p as I}from\"./api-DwEF0gfm.js\";const C={MAX_CHANGE_PERCENT:.05,HALF:.5},v={RANDOM_SLICE_START:2,RANDOM_SLICE_END:11},N={MIN_REFRESH_INTERVAL:5e3},W={TOP_POSITIONS_LIMIT:5},p=(e,s=0)=>{const n=e.reduce((l,d)=>l+d.marketValue,0)+s,o=e.reduce((l,d)=>l+d.quantity*d.averageCost,0),t=n-o-s,r=o>0?t/o*100:0,a=e.reduce((l,d)=>l+d.dayChange,0),i=n>0?a/(n-a)*100:0,c=e.map(l=>l.allocation/100).reduce((l,d)=>l+d*d,0),m=Math.max(0,(1-c)*100);return{totalValue:n,totalCost:o,totalGainLoss:t,totalGainLossPercent:r,dayChange:a,dayChangePercent:i,cashBalance:s,positionCount:e.length,diversificationScore:m,lastUpdated:new Date().toISOString()}},P=k()(D(F((e,s)=>({positions:[],watchlist:[],summary:null,isLoading:!1,isLoadingPositions:!1,isLoadingWatchlist:!1,isUpdatingPrices:!1,error:null,positionsError:null,watchlistError:null,lastFullSync:null,autoRefreshEnabled:!0,refreshInterval:3e4,loadPositions:async()=>{e({isLoadingPositions:!0,positionsError:null});try{const o=[],t=p(o);e({positions:o,summary:t,isLoadingPositions:!1,lastFullSync:Date.now()})}catch(n){const o=n instanceof Error?n.message:\"Failed to load positions\";e({isLoadingPositions:!1,positionsError:o})}},loadWatchlist:async()=>{e({isLoadingWatchlist:!0,watchlistError:null});try{e({watchlist:[],isLoadingWatchlist:!1})}catch(n){const o=n instanceof Error?n.message:\"Failed to load watchlist\";e({isLoadingWatchlist:!1,watchlistError:o})}},refreshAllData:async()=>{e({isLoading:!0,error:null});try{await Promise.all([s().loadPositions(),s().loadWatchlist(),s().updatePrices()]),e({isLoading:!1})}catch(n){const o=n instanceof Error?n.message:\"Failed to refresh data\";e({isLoading:!1,error:o})}},updatePrices:async()=>{var o;const n=s();if(!(n.positions.length===0&&n.watchlist.length===0)){e({isUpdatingPrices:!0});try{const t=n.positions.map(c=>{const m=(Math.random()-C.HALF)*C.MAX_CHANGE_PERCENT,l=c.currentPrice*(1+m),d=c.quantity*l,h=d-c.quantity*c.averageCost,f=c.averageCost>0?h/(c.quantity*c.averageCost)*100:0,g=(l-c.currentPrice)*c.quantity,S=c.currentPrice>0?(l-c.currentPrice)/c.currentPrice*100:0;return{...c,currentPrice:l,marketValue:d,unrealizedGainLoss:h,unrealizedGainLossPercent:f,dayChange:g,dayChangePercent:S,lastUpdated:new Date().toISOString()}}),r=n.watchlist.map(c=>{const m=(Math.random()-C.HALF)*C.MAX_CHANGE_PERCENT,l=c.currentPrice*(1+m),d=l-c.currentPrice,h=c.currentPrice>0?d/c.currentPrice*100:0;return{...c,currentPrice:l,dayChange:d,dayChangePercent:h}}),a=t.reduce((c,m)=>c+m.marketValue,0),i=t.map(c=>({...c,allocation:a>0?c.marketValue/a*100:0})),u=p(i,((o=n.summary)==null?void 0:o.cashBalance)??0);e({positions:i,watchlist:r,summary:u,isUpdatingPrices:!1})}catch(t){e({isUpdatingPrices:!1}),console.error(\"Price update failed:\",t)}}},addPosition:async(n,o,t)=>{var r;try{const a={id:`pos_${Date.now()}_${Math.random().toString(36).slice(v.RANDOM_SLICE_START,v.RANDOM_SLICE_END)}`,security:n,quantity:o,averageCost:t,currentPrice:t,marketValue:o*t,unrealizedGainLoss:0,unrealizedGainLossPercent:0,dayChange:0,dayChangePercent:0,allocation:0,lastUpdated:new Date().toISOString()},u=[...s().positions,a],c=u.reduce((d,h)=>d+h.marketValue,0),m=u.map(d=>({...d,allocation:c>0?d.marketValue/c*100:0})),l=p(m,((r=s().summary)==null?void 0:r.cashBalance)??0);e({positions:m,summary:l})}catch(a){const i=a instanceof Error?a.message:\"Failed to add position\";throw e({error:i}),a}},updatePosition:async(n,o,t)=>{var r;try{const i=s().positions.map(l=>{if(l.id===n){const d=t??l.averageCost,h=o*l.currentPrice,f=h-o*d,g=d>0?f/(o*d)*100:0;return{...l,quantity:o,averageCost:d,marketValue:h,unrealizedGainLoss:f,unrealizedGainLossPercent:g,lastUpdated:new Date().toISOString()}}return l}),u=i.reduce((l,d)=>l+d.marketValue,0),c=i.map(l=>({...l,allocation:u>0?l.marketValue/u*100:0})),m=p(c,((r=s().summary)==null?void 0:r.cashBalance)??0);e({positions:c,summary:m})}catch(a){const i=a instanceof Error?a.message:\"Failed to update position\";throw e({error:i}),a}},removePosition:async n=>{var o;try{const r=s().positions.filter(c=>c.id!==n),a=r.reduce((c,m)=>c+m.marketValue,0),i=r.map(c=>({...c,allocation:a>0?c.marketValue/a*100:0})),u=p(i,((o=s().summary)==null?void 0:o.cashBalance)??0);e({positions:i,summary:u})}catch(t){const r=t instanceof Error?t.message:\"Failed to remove position\";throw e({error:r}),t}},addToWatchlist:async n=>{try{const o={id:`watch_${Date.now()}_${Math.random().toString(36).slice(v.RANDOM_SLICE_START,v.RANDOM_SLICE_END)}`,security:n,currentPrice:0,dayChange:0,dayChangePercent:0,addedAt:new Date().toISOString(),alerts:{enabled:!1}};e({watchlist:[...s().watchlist,o]}),await s().updatePrices()}catch(o){const t=o instanceof Error?o.message:\"Failed to add to watchlist\";throw e({error:t}),o}},removeFromWatchlist:async n=>{try{const t=s().watchlist.filter(r=>r.id!==n);e({watchlist:t})}catch(o){const t=o instanceof Error?o.message:\"Failed to remove from watchlist\";throw e({error:t}),o}},updateWatchlistAlerts:async(n,o)=>{try{const r=s().watchlist.map(a=>a.id===n?{...a,alerts:o}:a);e({watchlist:r})}catch(t){const r=t instanceof Error?t.message:\"Failed to update alerts\";throw e({error:r}),t}},setAutoRefresh:n=>{e({autoRefreshEnabled:n})},setRefreshInterval:n=>{e({refreshInterval:Math.max(N.MIN_REFRESH_INTERVAL,n)})},clearError:()=>{e({error:null,positionsError:null,watchlistError:null})},clearCache:()=>{e({positions:[],watchlist:[],summary:null,lastFullSync:null})},getPositionById:n=>s().positions.find(o=>o.id===n),getWatchlistItemById:n=>s().watchlist.find(o=>o.id===n),getTopPositions:(n=W.TOP_POSITIONS_LIMIT)=>s().positions.sort((o,t)=>t.marketValue-o.marketValue).slice(0,n),getPositionsByAllocation:()=>s().positions.sort((n,o)=>o.allocation-n.allocation),getTotalPortfolioValue:()=>{var n;return((n=s().summary)==null?void 0:n.totalValue)??0},getAssetAllocation:()=>{const n=s().positions,o={};return n.forEach(t=>{const r=t.security.sector??\"Unknown\";o[r]=(o[r]??0)+t.allocation}),o}}),{name:\"portfolio_store\",partialize:e=>({positions:e.positions,watchlist:e.watchlist,summary:e.summary,lastFullSync:e.lastFullSync,autoRefreshEnabled:e.autoRefreshEnabled,refreshInterval:e.refreshInterval}),version:1})));let M=null;P.subscribe(e=>({autoRefreshEnabled:e.autoRefreshEnabled,refreshInterval:e.refreshInterval}),({autoRefreshEnabled:e,refreshInterval:s})=>{M&&(clearInterval(M),M=null),e&&(M=setInterval(()=>{const n=P.getState();!n.isLoading&&!n.isUpdatingPrices&&n.updatePrices()},s))});const R=()=>P(e=>({positions:e.positions,watchlist:e.watchlist,summary:e.summary,isLoading:e.isLoading,error:e.error})),O=()=>P(e=>({loadPositions:e.loadPositions,loadWatchlist:e.loadWatchlist,refreshAllData:e.refreshAllData,addPosition:e.addPosition,updatePosition:e.updatePosition,removePosition:e.removePosition,addToWatchlist:e.addToWatchlist,removeFromWatchlist:e.removeFromWatchlist})),G=()=>P(e=>({autoRefreshEnabled:e.autoRefreshEnabled,refreshInterval:e.refreshInterval,setAutoRefresh:e.setAutoRefresh,setRefreshInterval:e.setRefreshInterval}));function A(){const e=R(),s=O(),n=G(),{isAuthenticated:o}=V();return y.useEffect(()=>{o&&e.positions.length===0&&!e.isLoading&&s.refreshAllData()},[o,e.positions.length,e.isLoading,s]),{...e,...s,settings:n}}function L(){const{locale:e,displayCurrency:s}=T(),n=y.useCallback((r,a)=>{const{numberFormat:i}=e,u=(a==null?void 0:a.showCents)??i.showCents,c=(a==null?void 0:a.compact)??!1;return new Intl.NumberFormat(`${e.language}-${e.region}`,{style:\"currency\",currency:i.currency,minimumFractionDigits:u?i.decimalPlaces:0,maximumFractionDigits:u?i.decimalPlaces:0,notation:c?\"compact\":\"standard\",compactDisplay:\"short\"}).format(r)},[e]),o=y.useCallback((r,a=2)=>new Intl.NumberFormat(`${e.language}-${e.region}`,{style:\"percent\",minimumFractionDigits:a,maximumFractionDigits:a}).format(r/100),[e]),t=y.useCallback((r,a)=>{const i=(a==null?void 0:a.decimals)??e.numberFormat.decimalPlaces,u=(a==null?void 0:a.compact)??!1;return new Intl.NumberFormat(`${e.language}-${e.region}`,{minimumFractionDigits:i,maximumFractionDigits:i,notation:u?\"compact\":\"standard\",compactDisplay:\"short\"}).format(r)},[e]);return{formatCurrency:n,formatPercentage:o,formatNumber:t,displayCurrency:s,locale:e}}function w(e){return e?e instanceof Error?e:new Error(String(e)):null}function $(e){const{data:s,isLoading:n,error:o,refetch:t}=b({queryKey:[\"financial-data\",e],queryFn:async()=>{if(!e)return null;const r=await I.getCurrent([e]);if(!r.length)throw new Error(\"No price data found\");const a=r[0];if(!a)throw new Error(\"No price data available\");return{currentPrice:a.close,dayChange:0,dayChangePercent:0,volume:a.volume,lastUpdated:new Date().toISOString()}},enabled:!!e,staleTime:3e4,refetchInterval:6e4});return{data:s??void 0,isLoading:n,error:w(o),refetch:t}}function B(){const e=A(),{formatCurrency:s,formatPercentage:n}=L(),o=y.useMemo(()=>{if(!(e!=null&&e.summary)||typeof e.summary!=\"object\")return null;const{summary:r}=e,a=typeof r.totalValue==\"number\"?r.totalValue:0,i=typeof r.totalGainLoss==\"number\"?r.totalGainLoss:0,u=typeof r.totalGainLossPercent==\"number\"?r.totalGainLossPercent:0,c=typeof r.dayChange==\"number\"?r.dayChange:0,m=typeof r.dayChangePercent==\"number\"?r.dayChangePercent:0,l=typeof r.positionCount==\"number\"?r.positionCount:0,d=typeof r.diversificationScore==\"number\"?r.diversificationScore:0;return{totalValue:s(a),totalGainLoss:s(i),totalGainLossPercent:n(u),dayChange:s(c),dayChangePercent:n(m),positionCount:l,diversificationScore:Math.round(d),isPositive:i>=0,isDayPositive:c>=0}},[e,s,n]),t=r=>r.map(a=>({symbol:a.security.symbol,name:a.security.name,quantity:a.quantity,current_price:a.currentPrice,market_value:a.marketValue,average_cost:a.averageCost,cost_basis:a.quantity*a.averageCost,unrealized_pnl:a.unrealizedGainLoss,unrealized_pnl_percent:a.unrealizedGainLossPercent,weight_percent:a.allocation,currency:\"USD\",...a.security.sector&&{sector:a.security.sector},...a.security.industry&&{industry:a.security.industry},...a.lastUpdated&&{last_updated:a.lastUpdated}}));return{performance:o,positions:Array.isArray(e==null?void 0:e.positions)?t(e.positions):[],isLoading:!!(e!=null&&e.isLoading),error:e!=null&&e.error?new Error(e.error):null}}function X(){const{data:e,isLoading:s,error:n}=b({queryKey:[\"market-data\"],queryFn:async()=>({totalMarketCap:456e11,dailyVolume:89e10,volumeToday:89e10,advancingStocks:1247,decliningStocks:892,gainersCount:1247,losersCount:892,vixValue:18.42}),staleTime:6e4,refetchInterval:12e4});return{marketSummary:y.useMemo(()=>{if(!e||typeof e!=\"object\")return;const t=typeof e.dailyVolume==\"number\"?e.dailyVolume:0,r=typeof e.advancingStocks==\"number\"?e.advancingStocks:0,a=typeof e.decliningStocks==\"number\"?e.decliningStocks:0;return{totalMarketCap:typeof e.totalMarketCap==\"number\"?e.totalMarketCap:0,dailyVolume:t,volumeToday:typeof e.volumeToday==\"number\"?e.volumeToday:t,advancingStocks:r,decliningStocks:a,gainersCount:typeof e.gainersCount==\"number\"?e.gainersCount:r,losersCount:typeof e.losersCount==\"number\"?e.losersCount:a,vixValue:typeof e.vixValue==\"number\"?e.vixValue:0}},[e]),isLoading:s,error:w(n)}}function j(e,s=\"1M\"){const n=_(),{data:o=[],isLoading:t,error:r}=b({queryKey:[\"price-history\",e,s],queryFn:async()=>{if(!e)return[];const i=new Date,u=new Date;switch(s){case\"1D\":u.setDate(i.getDate()-1);break;case\"1W\":u.setDate(i.getDate()-7);break;case\"1M\":u.setMonth(i.getMonth()-1);break;case\"3M\":u.setMonth(i.getMonth()-3);break;case\"6M\":u.setMonth(i.getMonth()-6);break;case\"1Y\":u.setFullYear(i.getFullYear()-1);break;case\"5Y\":u.setFullYear(i.getFullYear()-5);break;case\"MAX\":u.setFullYear(i.getFullYear()-10);break}try{return(await I.getHistorical({symbols:[e],start_date:u.toISOString(),end_date:i.toISOString(),interval:s===\"1D\"?\"1m\":s===\"1W\"?\"1h\":\"1d\"})).data.map(m=>({timestamp:new Date(m.timestamp).getTime(),value:m.close,open:m.open,high:m.high,low:m.low,close:m.close,volume:m.volume}))}catch{return x(s)}},enabled:!!e,staleTime:3e5}),a=y.useCallback(i=>{n.invalidateQueries({queryKey:[\"price-history\",e,i]})},[n,e]);return{priceHistory:o,isLoading:t,error:w(r),timeRange:s,setTimeRange:a}}function K(){const{data:e,isLoading:s,error:n}=b({queryKey:[\"top-movers\"],queryFn:async()=>{try{return{gainers:[{symbol:\"AAPL\",name:\"Apple Inc.\",price:175.43,change:8.92,changePercent:5.36},{symbol:\"MSFT\",name:\"Microsoft Corporation\",price:338.11,change:12.45,changePercent:3.82},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",price:142.87,change:4.23,changePercent:3.05}],losers:[{symbol:\"TSLA\",name:\"Tesla, Inc.\",price:248.42,change:-12.88,changePercent:-4.93},{symbol:\"NFLX\",name:\"Netflix, Inc.\",price:441.2,change:-15.67,changePercent:-3.43},{symbol:\"META\",name:\"Meta Platforms, Inc.\",price:307.94,change:-8.45,changePercent:-2.67}]}}catch{return{gainers:[{symbol:\"AAPL\",name:\"Apple Inc.\",price:175.43,change:8.92,changePercent:5.36},{symbol:\"MSFT\",name:\"Microsoft Corporation\",price:338.11,change:12.45,changePercent:3.82},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",price:142.87,change:4.23,changePercent:3.05}],losers:[{symbol:\"TSLA\",name:\"Tesla, Inc.\",price:248.42,change:-12.88,changePercent:-4.93},{symbol:\"NFLX\",name:\"Netflix, Inc.\",price:441.2,change:-15.67,changePercent:-3.43},{symbol:\"META\",name:\"Meta Platforms, Inc.\",price:307.94,change:-8.45,changePercent:-2.67}]}}},staleTime:3e5,refetchInterval:6e5}),o=y.useMemo(()=>Array.isArray(e==null?void 0:e.gainers)?e.gainers.filter(r=>r&&typeof r==\"object\"&&typeof r.symbol==\"string\"&&typeof r.price==\"number\"&&typeof r.changePercent==\"number\"):[],[e==null?void 0:e.gainers]),t=y.useMemo(()=>Array.isArray(e==null?void 0:e.losers)?e.losers.filter(r=>r&&typeof r==\"object\"&&typeof r.symbol==\"string\"&&typeof r.price==\"number\"&&typeof r.changePercent==\"number\"):[],[e==null?void 0:e.losers]);return{gainers:o,losers:t,isLoading:s,error:w(n)}}function Q(){const e=A(),{formatCurrency:s,formatPercentage:n}=L();return{watchlist:y.useMemo(()=>!e||!Array.isArray(e.watchlist)?[]:e.watchlist.filter(t=>t&&typeof t==\"object\").map(t=>{var u,c;const r=typeof t.currentPrice==\"number\"?t.currentPrice:0,a=typeof t.dayChange==\"number\"?t.dayChange:0,i=typeof t.dayChangePercent==\"number\"?t.dayChangePercent:0;return{...t,currentPrice:r,dayChange:a,dayChangePercent:i,formattedPrice:s(r),formattedChange:s(Math.abs(a)),formattedChangePercent:n(Math.abs(i)),isPositive:a>=0,security:{...t.security,symbol:((u=t.security)==null?void 0:u.symbol)??\"N/A\",name:((c=t.security)==null?void 0:c.name)??\"Unknown\"}}}),[e,s,n]),isLoading:!!(e!=null&&e.isLoading),error:e!=null&&e.error?new Error(e.error):null}}function J(){const{data:e,isLoading:s,error:n}=b({queryKey:[\"ai-insights\"],queryFn:async()=>[{id:\"1\",type:\"recommendation\",title:\"Strong Buy Signal for AAPL\",message:\"Technical indicators suggest a strong upward trend with RSI oversold conditions.\",confidence:.87,timestamp:new Date().toISOString(),actionable:!0},{id:\"2\",type:\"alert\",title:\"Portfolio Diversification Alert\",message:\"Your portfolio is heavily weighted in technology sector (68%). Consider diversification.\",confidence:.92,timestamp:new Date().toISOString(),actionable:!0},{id:\"3\",type:\"analysis\",title:\"Market Volatility Expected\",message:\"VIX levels indicate increased volatility expected in the next 5-7 trading days.\",confidence:.75,timestamp:new Date().toISOString(),actionable:!1}],staleTime:9e5,refetchInterval:18e5});return{insights:y.useMemo(()=>Array.isArray(e)?e.filter(t=>t&&typeof t==\"object\"&&typeof t.id==\"string\"&&typeof t.type==\"string\"&&typeof t.title==\"string\"&&typeof t.message==\"string\"&&typeof t.confidence==\"number\"&&t.confidence>=0&&t.confidence<=1).map(t=>({...t,confidence:Math.max(0,Math.min(1,t.confidence))})):[],[e]),isLoading:s,error:w(n)}}function x(e){const s=[],n=Date.now(),o=100+Math.random()*400;let t,r;switch(e){case\"1D\":t=78,r=300*1e3;break;case\"1W\":t=168,r=3600*1e3;break;case\"1M\":t=30,r=1440*60*1e3;break;case\"3M\":t=90,r=1440*60*1e3;break;case\"6M\":t=180,r=1440*60*1e3;break;case\"1Y\":t=365,r=1440*60*1e3;break;case\"5Y\":t=260,r=10080*60*1e3;break;default:t=500,r=10080*60*1e3}let a=o;for(let i=t;i>=0;i--){const u=n-i*r,m=(Math.random()-.5)*.02,l=a,d=a*m,h=Math.max(.01,a+d),f=Math.max(l,h)*(1+Math.random()*.01),g=Math.min(l,h)*(1-Math.random()*.01),E=Math.floor(1e6*(.5+Math.random()));s.push({timestamp:u,value:h,open:l,high:f,low:g,close:h,volume:E}),a=h}return s}export{X as a,J as b,K as c,Q as d,$ as e,L as f,j as g,B as u};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/ForecastingDashboard-6P-21tGS.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/ForecastingDashboard-6P-21tGS.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "var U=Object.defineProperty;var W=(N,e,t)=>e in N?U(N,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):N[e]=t;var z=(N,e,t)=>W(N,typeof e!=\"symbol\"?e+\"\":e,t);import{j as i}from\"./index-BKXu7Q-C.js\";import{r as P}from\"./visx-B2MmNCqL.js\";import{f as T,a as $,b as _}from\"./chartHelpers-BDovff1r.js\";import{BarChart as H}from\"./BarChart-C9oU_rZ3.js\";import{LineChart as G}from\"./LineChart-C2H06MQe.js\";import{ScatterPlot as Y}from\"./ScatterPlot-CLK-tc9f.js\";import{B as O}from\"./Button-RYSOAQ-7.js\";import{C as F}from\"./Card-Ct37lo0h.js\";import\"./vendor-Dvwkxfce.js\";import\"./index-BujWCjCM.js\";import\"./BaseChart-CSIGUgDd.js\";import\"./ParentSize-BHGwptsX.js\";import\"./VixBarChart-DvOh7NWf.js\";import\"./VixTooltip-DMJjobXz.js\";import\"./LinearGradient-CnvYkz-p.js\";import\"./monotone-KI2q-aQs.js\";class Z{constructor(e=.95,t=30){z(this,\"confidenceLevel\");z(this,\"defaultHorizon\");this.confidenceLevel=e,this.defaultHorizon=t}async generatePriceForecast(e,t={}){if(!e||e.length===0)throw new Error(\"Insufficient price data for forecasting\");this.validateForecastingOptions(t);const s={horizon:this.defaultHorizon,confidenceLevel:this.confidenceLevel,includeSeasonality:!0,ensembleMethods:[\"ARIMA\",\"TREND_ANALYSIS\",\"LINEAR_REGRESSION\"],backtestPeriods:10,...t};try{const a=e.some(c=>!c||isNaN(c.close)||!c.close||!isFinite(c.close)||c.close<=0);let n,r=\"success\";if(a){const c=this.validateAndCleanPriceData(e);if(n=c.cleanData,r=c.status,r===\"error\")return{data:null,metadata:{calculationTime:Date.now(),dataQuality:\"low\",warnings:[\"Insufficient valid data for forecasting\"],sources:[],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"error\"}}else this.validatePriceData(e),n=e;return{data:this.generateSimpleForecast(n,s),metadata:{calculationTime:Date.now(),dataQuality:this.assessDataQuality(n),warnings:this.generateWarnings(n,s),sources:[\"price_data\",\"technical_analysis\",\"time_series_models\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:r}}catch(a){const n=a instanceof Error?a.message:\"Unknown error\";throw n.includes(\"insufficient data\")||n.includes(\"Insufficient price data\")?new Error(\"Insufficient price data for forecasting\"):new Error(`Price forecasting failed: ${n}`)}}async generateEarningsForecast(e,t,s={}){const a={horizon:4,confidenceLevel:this.confidenceLevel,includeSeasonality:!0,ensembleMethods:[\"ARIMA\",\"TREND_ANALYSIS\"],backtestPeriods:8,...s};a.horizon=4;try{return{data:this.generateSimpleEarningsForecast(e,a),metadata:{calculationTime:Date.now(),dataQuality:this.assessEarningsDataQuality(e),warnings:this.generateEarningsWarnings(e),sources:[\"earnings_history\",\"financial_statements\",\"seasonal_models\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(n){throw new Error(`Earnings forecasting failed: ${n instanceof Error?n.message:\"Unknown error\"}`)}}async generateVolatilityForecast(e,t={}){const s={horizon:this.defaultHorizon,confidenceLevel:this.confidenceLevel,includeSeasonality:!1,ensembleMethods:[\"GARCH\"],backtestPeriods:20,...t};try{return{data:this.generateSimpleVolatilityForecast(e,s),metadata:{calculationTime:Date.now(),dataQuality:this.assessDataQuality(e),warnings:this.generateVolatilityWarnings(e),sources:[\"price_data\",\"volatility_models\",\"garch_analysis\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(a){throw new Error(`Volatility forecasting failed: ${a instanceof Error?a.message:\"Unknown error\"}`)}}generateSimpleForecast(e,t){var g,h,u;const s=e.map(f=>f.close),a=this.calculateReturns(e),n=this.generateEnsemblePredictions(s,a,t),r=this.calculatePredictionConfidenceIntervals(n.map(f=>f.predicted),a,t.confidenceLevel),o=n.map((f,M)=>({...f,confidenceInterval:{lower:r.lower[M]??f.predicted*.95,upper:r.upper[M]??f.predicted*1.05,confidence:t.confidenceLevel}})),c=this.performBacktesting(e,t),l=new Date;return{symbol:((g=e[0])==null?void 0:g.symbol)??\"UNKNOWN\",model:{name:\"Ensemble Forecast\",type:\"ENSEMBLE\",accuracy:c.accuracy.r2,parameters:{horizon:t.horizon,confidence_level:t.confidenceLevel,ensemble_methods:t.ensembleMethods,backtest_periods:t.backtestPeriods,...t.includeSeasonality&&{seasonality:t.includeSeasonality}}},predictions:o,accuracy:c.accuracy.r2,accuracy_metrics:{mae:c.accuracy.mae,rmse:Math.sqrt(c.accuracy.mse),mape:c.accuracy.mape,directional_accuracy:.6},model_parameters:{horizon:t.horizon,confidence_level:t.confidenceLevel,ensemble_methods:t.ensembleMethods.length,backtest_periods:t.backtestPeriods},training_period:{start_date:new Date(((h=e[0])==null?void 0:h.timestamp)||l.getTime()-365*24*60*60*1e3).toISOString(),end_date:new Date(((u=e[e.length-1])==null?void 0:u.timestamp)||l.getTime()).toISOString(),data_points:e.length},generated_at:l.toISOString(),valid_until:new Date(l.getTime()+1440*60*1e3).toISOString(),backtestResults:{period:`${t.backtestPeriods} periods`,accuracy:c.accuracy.r2,profitability:c.profitability}}}generateSimpleEarningsForecast(e,t){var r;const s=e.length>0&&((r=e[e.length-1])==null?void 0:r.actual)||2.5,a=Array.from({length:t.horizon},(o,c)=>({quarter:`${new Date().getFullYear()+Math.floor(c/4)}-Q${c%4+1}`,predictedEPS:s*(1+Math.random()*.1),confidenceInterval:{lower:s*.9,upper:s*1.1},seasonalAdjustment:Math.random()*.05,growthRate:Math.random()*.1})),n=Array.from({length:Math.min(t.backtestPeriods,e.length)},(o,c)=>({quarter:`Q${c%4+1}`,predicted:s,actual:s*(1+(Math.random()-.5)*.1),error:Math.random()*.1,absoluteError:Math.random()*.1}));return{model:{type:\"ARIMA\",parameters:{p:1,d:1,q:1},accuracy:{mse:.01,mae:.05,mape:.08,r2:.75}},predictions:a,accuracy:.85,backtestResults:n}}generateSimpleVolatilityForecast(e,t){const s=this.calculateReturns(e),a=this.estimateGARCHParameters(s),n=this.generateGARCHForecasts(s,a,t.horizon),r=this.calculateVolatilityConfidenceIntervals(n,s,t.confidenceLevel),o=n.map((g,h)=>{const u=Date.now()+(h+1)*24*60*60*1e3;return{timestamp:u,date:new Date(u).toISOString().split(\"T\")[0],predictedVolatility:g,volatility:g,confidenceInterval:{lower:r.lower[h]??g*.8,upper:r.upper[h]??g*1.2},garchParams:{alpha:a.alpha1,beta:a.beta1,omega:a.alpha0}}}),c=this.performVolatilityBacktesting(s,a,t.backtestPeriods),l=this.calculateVolatilityAccuracy(c),d=c.map((g,h)=>({period:`Period ${h+1}`,predictedVol:g.predicted,realizedVol:g.actual,error:Math.abs(g.actual-g.predicted)}));return{model:{type:\"GARCH\",parameters:{alpha0:a.alpha0,alpha1:a.alpha1,beta1:a.beta1,clustering:this.analyzeVolatilityClustering(s).clusteringCoefficient},accuracy:l},predictions:o,accuracy:l.r2,backtestResults:d}}calculateReturns(e){const t=e.map(a=>a.close),s=[];for(let a=1;a<t.length;a++){const n=t[a]??0,r=t[a-1]??0;r!==0&&s.push((n-r)/r)}return s}calculateVolatility(e){if(e.length===0)return .02;const t=e.reduce((n,r)=>n+r,0)/e.length,s=e.reduce((n,r)=>n+Math.pow(r-t,2),0)/e.length,a=Math.sqrt(s);return Math.max(a,.001)}assessDataQuality(e){return e.length>=252?\"high\":e.length>=100?\"medium\":\"low\"}assessEarningsDataQuality(e){return e.length>=20?\"high\":e.length>=12?\"medium\":\"low\"}generateWarnings(e,t){const s=[];return e.length<100&&s.push(\"Limited historical data may reduce forecast accuracy\"),t.horizon>60&&s.push(\"Long-term forecasts have higher uncertainty\"),s}generateEarningsWarnings(e){const t=[];return e.length<12&&t.push(\"Limited earnings history may reduce forecast accuracy\"),t}generateVolatilityWarnings(e){const t=[];return e.length<252&&t.push(\"Limited return data may affect volatility forecast quality\"),t}generateEnsemblePredictions(e,t,s){const a=[],n=e[e.length-1]??0,r=this.calculateVolatility(t);for(let o=0;o<s.horizon;o++){const c=Date.now()+(o+1)*24*60*60*1e3,l=new Date(c).toISOString().split(\"T\")[0]??new Date().toISOString().split(\"T\")[0],d=s.ensembleMethods.map(f=>{switch(f){case\"ARIMA\":return this.generateARIMAPrediction(e,o+1);case\"TREND_ANALYSIS\":return this.generateTrendPrediction(e,o+1);case\"LINEAR_REGRESSION\":return this.generateLinearRegressionPrediction(e,t,o+1);default:return n*(1+(Math.random()-.5)*.01)}}),g=this.calculateModelWeights(d.length),h=d.reduce((f,M,y)=>f+M*(g[y]??0),0),u=r*Math.sqrt(o+1);a.push({date:l,timestamp:c,predicted:h,predictedPrice:h,volatility:u})}return a}generateARIMAPrediction(e,t){const s=e.length;if(s<3)return e[s-1]??0;const a=e.slice(1).map((g,h)=>g-(e[h]??0)),n=a[a.length-1]??0,r=a[a.length-2]||0,o=.1,c=o*r+(1-o)*n,l=a.reduce((g,h)=>g+h,0)/a.length,d=(e[s-1]??0)+l+c*t;return Math.max(d,0)}generateTrendPrediction(e,t){const s=e.length;if(s<2)return e[s-1]??0;const a=Array.from({length:s},(f,M)=>M),n=e,r=a.reduce((f,M)=>f+M,0)/s,o=n.reduce((f,M)=>f+M,0)/s;let c=0,l=0;for(let f=0;f<s;f++)c+=((a[f]??0)-r)*((n[f]??0)-o),l+=((a[f]??0)-r)**2;const d=l>0?c/l:0,g=o-d*r,h=s-1+t,u=g+d*h;return Math.max(u,0)}generateLinearRegressionPrediction(e,t,s){const a=e.length;if(a<5)return e[a-1]??0;const n=t.slice(-10),r=n.reduce((h,u)=>h+u,0)/n.length,o=this.calculateVolatility(n),c=.1,l=t.reduce((h,u)=>h+u,0)/t.length,d=r*(1-c*s)+l*c*s+(Math.random()-.5)*o*.1,g=(e[a-1]??0)*Math.exp(d);return Math.max(g,0)}calculateModelWeights(e){const t=1/e;return Array(e).fill(t)}calculatePredictionConfidenceIntervals(e,t,s){const a=this.calculateVolatility(t),n=this.getZScore(s);return{lower:e.map((r,o)=>{const c=a*Math.sqrt((o+1)/30),l=r*(1-n*c);return Math.max(l,r*.8)}),upper:e.map((r,o)=>{const c=a*Math.sqrt((o+1)/30);return r*(1+n*c)})}}getZScore(e){return e>=.99?2.576:e>=.95?1.96:e>=.9?1.645:1.96}performBacktesting(e,t){const s=e.map(d=>d.close),a=s.length,n=Math.min(t.backtestPeriods,Math.floor(a*.3));if(n<5)return{accuracy:{mse:.01,mae:.05,mape:.08,r2:.75},profitability:.1};const r=[],o=[];for(let d=a-n;d<a-1;d++){const g=s.slice(0,d),h=this.calculateReturns(e.slice(0,d)),f=this.generateEnsemblePredictions(g,h,{...t,horizon:1})[0];f&&(r.push(f.predicted),o.push(s[d]??0))}const c=this.calculateAccuracyMetrics(o,r);let l=0;for(let d=1;d<r.length;d++){const g=(r[d]??0)>(o[d-1]??0),h=(o[d]??0)>(o[d-1]??0);g===h&&(l+=Math.abs((o[d]??0)-(o[d-1]??0))/(o[d-1]??1))}return l=l/r.length,{accuracy:c,profitability:l}}calculateAccuracyMetrics(e,t){const s=e.length,a=e.map((h,u)=>h-(t[u]??0)),n=a.reduce((h,u)=>h+(u??0)**2,0)/s,r=a.reduce((h,u)=>h+Math.abs(u??0),0)/s,o=e.reduce((h,u,f)=>u!==0?h+Math.abs((a[f]??0)/u):h,0)/s,c=e.reduce((h,u)=>h+u,0)/s,l=e.reduce((h,u)=>h+(u-c)**2,0),d=a.reduce((h,u)=>h+u**2,0),g=l>0?1-d/l:0;return{mse:n,mae:r,mape:o,r2:g}}estimateGARCHParameters(e){const t=e.reduce((o,c)=>o+c,0)/e.length,s=e.reduce((o,c)=>o+Math.pow(c-t,2),0)/e.length,a=Math.max(s*.2,s*.8),n=Math.min(.2,Math.max(.05,s*3)),r=Math.max(.6,.95-n);return{alpha0:a,alpha1:n,beta1:r}}generateGARCHForecasts(e,t,s){const a=[],n=e.slice(-10),r=n.reduce((l,d)=>l+d**2,0)/n.length,o=e.reduce((l,d)=>l+d**2,0)/e.length;let c=Math.max((e[e.length-1]??0)**2,r,o);for(let l=0;l<s;l++){const d=t.alpha0/(1-t.alpha1-t.beta1),g=t.alpha1+t.beta1;l===0?c=t.alpha0+t.alpha1*c+t.beta1*c:c=d+Math.pow(g,l)*(c-d);const h=Math.max(c,r*.9,o*.8);a.push(Math.sqrt(Math.max(h,0)))}return a}calculateVolatilityConfidenceIntervals(e,t,s){const a=Math.sqrt(t.reduce((c,l)=>c+l**2,0)/t.length)*.1,n=s===.95?1.96:2.576,r=e.map(c=>Math.max(0,c-n*a)),o=e.map(c=>c+n*a);return{lower:r,upper:o}}performVolatilityBacktesting(e,t,s=30){const a=[],n=Math.min(100,Math.floor(e.length*.8));for(let r=n;r<e.length-s;r+=s){const o=e.slice(r-n,r),c=e.slice(r,r+s),l=this.generateGARCHForecasts(o,t,1),d=Math.sqrt(c.reduce((g,h)=>g+h**2,0)/c.length);a.push({predicted:l[0]??0,actual:d,date:new Date(Date.now()-(e.length-r)*24*60*60*1e3)})}return a}calculateVolatilityAccuracy(e){if(e.length===0)return{mse:0,mae:0,rmse:0,mape:0,hitRate:0,r2:0};const t=e.map(y=>y.actual-y.predicted),s=t.map(y=>Math.abs(y)),a=t.map(y=>y**2),n=s.reduce((y,v)=>y+v,0)/s.length,r=a.reduce((y,v)=>y+v,0)/a.length,o=Math.sqrt(r),c=e.reduce((y,v)=>v.actual!==0?y+Math.abs((v.actual-v.predicted)/v.actual):y,0)/e.length,l=e.map(y=>y.actual),d=l.reduce((y,v)=>y+v,0)/l.length,g=l.reduce((y,v)=>y+(v-d)**2,0),h=a.reduce((y,v)=>y+v,0),u=g>0?1-h/g:0;let f=0;for(let y=1;y<e.length;y++){const v=e[y],C=e[y-1];if(v&&C){const k=v.actual>C.actual,x=v.predicted>C.predicted;k===x&&f++}}const M=e.length>1?f/(e.length-1):0;return{mse:r,mae:n,rmse:o,mape:c,hitRate:M,r2:u}}async generateIndividualModelForecasts(e,t){const s=[],a=e.map(r=>r.close),n=this.calculateReturns(e);for(const r of t.ensembleMethods)try{let o=[],c=.75;switch(r){case\"ARIMA\":o=this.generateARIMAForecastSeries(a,t.horizon),c=.78;break;case\"TREND_ANALYSIS\":o=this.generateTrendForecastSeries(a,t.horizon),c=.72;break;case\"LINEAR_REGRESSION\":o=this.generateLinearRegressionForecastSeries(a,n,t.horizon),c=.76;break;case\"GARCH\":{o=this.generateGARCHForecasts(n,this.estimateGARCHParameters(n),t.horizon).map(d=>(a[a.length-1]??0)*(1+d)),c=.74;break}default:o=this.generateTrendForecastSeries(a,t.horizon),c=.7}s.push({modelType:r,predictions:o,accuracy:c,metadata:{horizon:t.horizon,trainingDataPoints:a.length,generatedAt:new Date().toISOString()}})}catch(o){console.warn(`Failed to generate ${r} forecast:`,o)}return s}calculateOptimalWeights(e,t,s){if(e.length===0)return[];const n=e.map(l=>l.accuracy).map(l=>Math.exp(l*5)),r=n.reduce((l,d)=>l+d,0),o=n.map(l=>l/r),c=o.reduce((l,d)=>l+d,0);return o.map(l=>l/c)}combineModelPredictions(e,t,s){const a=s.horizon,n=[];for(let r=0;r<a;r++){const o=Date.now()+(r+1)*24*60*60*1e3;let c=0,l=0;e.forEach((y,v)=>{y.predictions[r]!==void 0&&t[v]!==void 0&&(c+=(y.predictions[r]??0)*(t[v]??0),l+=t[v])});const d=l>0?c/l:100,g=e.map(y=>y.predictions[r]).filter(y=>y!==void 0),h=this.calculateVariance(g),u=Math.sqrt(h),f=this.getZScore(s.confidenceLevel),M=Math.max(u,d*.02);n.push({timestamp:o,predicted:d,confidenceInterval:{lower:Math.max(d-f*M,d*.85),upper:d+f*M}})}return n}calculateVariance(e){if(e.length===0)return 0;const t=e.reduce((a,n)=>a+n,0)/e.length;return e.map(a=>Math.pow(a-t,2)).reduce((a,n)=>a+n,0)/e.length}performEnsembleBacktesting(e,t,s,a){const n=e.reduce((c,l,d)=>c+l.accuracy*(t[d]??0),0),r=Math.max(...e.map(c=>c.accuracy)),o=n-r;return{accuracy:n,outperformanceVsIndividual:Math.max(0,o)}}calculatePredictionUncertainty(e,t,s){const a=e.map(u=>u.predictions[t]).filter(u=>u!==void 0&&!isNaN(u));if(a.length===0)return .1;if(a.length===1)return Math.abs((a[0]??0)*.05);const n=(s??[]).slice(0,a.length),r=n.reduce((u,f)=>u+f,0),o=r>0?n.map(u=>u/r):a.map(()=>1/a.length),c=a.reduce((u,f,M)=>(u??0)+(f??0)*(o[M]??0),0)??0,l=a.reduce((u,f,M)=>(u??0)+Math.pow((f??0)-(c??0),2)*(o[M]??0),0)??0,d=Math.sqrt(l??0),g=Math.sqrt(t+1)*.001,h=Math.abs((c??0)*(.01+t*.002))+g;return Math.max(d+g,h)}generateARIMAForecastSeries(e,t){const s=[];for(let a=0;a<t;a++){const n=this.generateARIMAPrediction(e,a+1);s.push(n)}return s}generateTrendForecastSeries(e,t){const s=[];for(let a=0;a<t;a++){const n=this.generateTrendPrediction(e,a+1);s.push(n)}return s}generateLinearRegressionForecastSeries(e,t,s){const a=[];for(let n=0;n<s;n++){const r=this.generateLinearRegressionPrediction(e,t,n+1);a.push(r)}return a}performComprehensiveBacktesting(e,t,s){const a=t.map(b=>b.close),n=a.length,r=Math.min(s.backtestPeriods,Math.floor(n*.3));if(r<5)return{totalPeriods:r,overallAccuracy:.75,metrics:{mse:.01,mae:.05,mape:.08,rmse:Math.sqrt(.01),directionalAccuracy:.6},r2:.75,profitability:.05,sharpeRatio:1.2,maxDrawdown:-.1,bias:.02,stability:{variance:.001,coefficient:.2,consistencyScore:.8},periods:[]};const o=[],c=[],l=[];for(let b=0;b<r;b++){const w=n-r+b;if(w>=n)break;const j=a.slice(0,w);let A=j.length>0?j[j.length-1]:a[0];switch(e.type.toLowerCase()){case\"arima\":A=this.generateARIMAPrediction(j,1)??0;break;case\"trend\":A=this.generateTrendPrediction(j,1)??0;break;default:A=this.generateTrendPrediction(j,1)??0}const E=a[w]??0;o.push(A??0),c.push(E);const D=(E??0)-(A??0),L=j.length>0?j[j.length-1]??E??0:E??0,B=A>(L??0)?(E??0)>(L??0)?\"correct\":\"incorrect\":(E??0)<=(L??0)?\"correct\":\"incorrect\";l.push({period:`Period ${b+1}`,predicted:A,actual:E??0,error:D,direction:B})}const d=this.calculateAccuracyMetrics(c,o),g=c.map((b,w)=>{if(w===0)return 0;const j=b??0,A=c[w-1]??0;return A!==0?(j-A)/A:0});let h=0;for(let b=1;b<o.length;b++){const w=o[b]??0,j=c[b-1]??0,A=w>j,E=g[b]??0;A&&(E??0)>0?h+=E??0:!A&&(E??0)<0&&(h+=Math.abs(E??0))}h=h/o.length;const u=g.reduce((b,w)=>b+w,0)/g.length,f=Math.sqrt(g.reduce((b,w)=>b+Math.pow(w-u,2),0)/g.length),M=f>0?u/f:0;let y=0,v=c[0]??0;for(const b of c){const w=b??0;w>(v??0)&&(v=w);const j=(v??0)!==0?((v??0)-w)/(v??0):0;j>y&&(y=j)}y=-y;let C=0;for(let b=1;b<o.length;b++){const w=o[b]??0,j=c[b-1]??0,A=c[b]??0,E=w>j,D=A>j;E===D&&C++}const k=o.length>1?C/(o.length-1):0,x=c.length>0?c.reduce((b,w,j)=>b+((o[j]??0)-(w??0)),0)/c.length:0,m=c.map((b,w)=>Math.abs((o[w]??0)-(b??0))),p=m.reduce((b,w)=>b+w,0)/m.length,R=m.reduce((b,w)=>b+Math.pow(w-p,2),0)/m.length,I=p>0?Math.sqrt(R)/p:0,S=Math.max(0,1-I),V={variance:R,coefficient:I,consistencyScore:S};return{totalPeriods:r,overallAccuracy:Math.max(.1,Math.min(1,d.r2+.5)),metrics:{mse:d.mse,mae:d.mae,mape:d.mape,rmse:Math.sqrt(d.mse),directionalAccuracy:k},r2:Math.max(0,d.r2),profitability:h,sharpeRatio:M,maxDrawdown:y,bias:x,stability:V,periods:l}}validatePriceData(e){if(!e||e.length<30)throw new Error(\"Insufficient price data for forecasting (minimum 30 observations required)\");const t=e.filter(s=>!s.close||s.close<=0||!s.timestamp||isNaN(s.close));if(t.length>0)throw new Error(`Invalid price data found: ${t.length} observations with missing or invalid values`)}validateAndCleanPriceData(e){if(!e||e.length<30)return{cleanData:[],status:\"error\"};const t=e.filter(a=>a&&a.close&&a.close>0&&a.timestamp&&!isNaN(a.close)&&isFinite(a.close)&&typeof a.close==\"number\");return t.length<30?{cleanData:[],status:\"error\"}:(e.length-t.length)/e.length>.1?{cleanData:t,status:\"partial\"}:{cleanData:t,status:\"success\"}}validateForecastingOptions(e){if(e.horizon!==void 0){if(typeof e.horizon!=\"number\"||!isFinite(e.horizon)||e.horizon<=0)throw new Error(\"Forecast horizon must be a positive number\");if(e.horizon>365)throw new Error(\"Forecast horizon cannot exceed 365 days\")}if(e.confidenceLevel!==void 0&&(typeof e.confidenceLevel!=\"number\"||!isFinite(e.confidenceLevel)||e.confidenceLevel<=0||e.confidenceLevel>=1))throw new Error(\"Confidence level must be a number between 0 and 1 (exclusive)\");if(e.backtestPeriods!==void 0){if(typeof e.backtestPeriods!=\"number\"||!isFinite(e.backtestPeriods)||e.backtestPeriods<0)throw new Error(\"Backtest periods must be a non-negative number\");if(e.backtestPeriods>1e3)throw new Error(\"Backtest periods cannot exceed 1000\")}if(e.ensembleMethods!==void 0&&(!Array.isArray(e.ensembleMethods)||e.ensembleMethods.length===0))throw new Error(\"Ensemble methods must be a non-empty array\")}analyzeVolatilityClustering(e){const t=e.map(n=>n*n),s=this.calculateAutocorrelation(t,1),a=this.calculateAutocorrelation(t,5);return{ljungBoxStat:Math.abs(s)*10,clusteringCoefficient:s,persistenceIndex:(s+a)/2}}calculateAutocorrelation(e,t){if(e.length<=t)return 0;const s=e.reduce((r,o)=>r+o,0)/e.length,a=e.reduce((r,o)=>r+Math.pow(o-s,2),0)/e.length;if(a===0)return 0;let n=0;for(let r=t;r<e.length;r++){const o=e[r]??0,c=e[r-t]??0;n+=(o-s)*(c-s)}return n/=e.length-t,n/a}}class X{constructor(e=.05){z(this,\"validationThreshold\");this.validationThreshold=e}async validateModel(e,t,s,a){try{const n=this.calculatePerformanceMetrics(t,s),r=this.performCrossValidation(e,s),o=this.analyzeResiduals(a||this.calculateResiduals(t,s)),c=this.generateModelDiagnostics(n,r),l={modelType:e,performanceMetrics:n,crossValidationScores:r,residualAnalysis:o,modelDiagnostics:c};return{data:l,metadata:{calculationTime:Date.now(),dataQuality:this.assessValidationQuality(l),warnings:this.generateValidationWarnings(l),sources:[\"model_validation\",\"backtesting_data\",\"performance_metrics\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(n){throw new Error(`Model validation failed: ${n instanceof Error?n.message:\"Unknown error\"}`)}}async compareModels(e){var t;try{const a=(await Promise.all(e.map(l=>this.validateModel(l.modelType,l.predictions,l.actual)))).map(l=>l.data),n=this.rankModels(a),r=((t=n[0])==null?void 0:t.modelType)??\"LINEAR_REGRESSION\",o=this.generateModelRecommendations(a,n);return{data:{models:a,bestModel:r,rankings:n,recommendations:o},metadata:{calculationTime:Date.now(),dataQuality:\"high\",warnings:[],sources:[\"model_comparison\",\"performance_analysis\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(s){throw new Error(`Model comparison failed: ${s instanceof Error?s.message:\"Unknown error\"}`)}}async designEnsemble(e){try{const t=this.selectEnsembleModels(e),s=this.calculateOptimalWeights(t),a=this.selectEnsembleMethod(t),n=this.estimateEnsembleGain(t,s),r={baseModels:t.map(o=>o.modelType),weights:s,method:a,performanceGain:n};return{data:r,metadata:{calculationTime:Date.now(),dataQuality:\"high\",warnings:this.generateEnsembleWarnings(r),sources:[\"ensemble_modeling\",\"weighted_predictions\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(t){throw new Error(`Ensemble design failed: ${t instanceof Error?t.message:\"Unknown error\"}`)}}async performModelSelection(e,t=\"cv\"){try{switch(t){case\"aic\":return this.selectByAIC(e);case\"bic\":return this.selectByBIC(e);case\"cv\":return this.selectByCrossValidation(e);case\"information_theory\":return this.selectByInformationTheory(e);default:return this.selectByCrossValidation(e)}}catch(s){throw new Error(`Model selection failed: ${s instanceof Error?s.message:\"Unknown error\"}`)}}calculatePerformanceMetrics(e,t){const s=e.length,a=e.map((x,m)=>x-(t[m]??0)),n=a.map(x=>Math.abs(x)),r=a.map(x=>x*x),o=r.reduce((x,m)=>x+m,0)/s,c=n.reduce((x,m)=>x+m,0)/s,l=n.reduce((x,m,p)=>x+m/Math.max(.001,Math.abs(t[p]??1)),0)/s,d=t.reduce((x,m)=>x+m,0)/s,g=t.reduce((x,m)=>x+Math.pow(m-d,2),0),u=1-r.reduce((x,m)=>x+m,0)/g,f=e.map((x,m)=>{if(m===0)return!0;const p=(t[m]??0)>(t[m-1]??0),R=x>(e[m-1]??0);return p===R}).slice(1),M=f.filter(x=>x).length/f.length,y=M,v=M,C=2*(y*v)/(y+v),k=.5+M*.5;return{accuracy:M,precision:y,recall:v,f1Score:C,auc:k,mse:o,mae:c,mape:l,r2:u}}performCrossValidation(e,t){const a=[];for(let c=0;c<5;c++){const l=.7+Math.random()*.2,d=this.getModelBonus(e);a.push(Math.min(.95,l+d))}const n=a.reduce((c,l)=>c+l,0)/a.length,r=a.reduce((c,l)=>c+Math.pow(l-n,2),0)/a.length,o=Math.sqrt(r);return{mean:n,std:o,scores:a}}getModelBonus(e){return{ENSEMBLE:.1,ARIMA:.05,GARCH:.03,LINEAR_REGRESSION:.02,TREND_ANALYSIS:.01,SEASONAL_NAIVE:0}[e]||0}analyzeResiduals(e){const t=e.reduce((l,d)=>l+d,0)/e.length,s=e.reduce((l,d)=>l+Math.pow(d-t,2),0)/e.length,a=Math.random()*10,n=a<this.validationThreshold*100,r=Math.random()*5,o=r>this.validationThreshold*20,c=s>.1;return{isNormal:n,hasAutocorrelation:o,hasHeteroscedasticity:c,jarqueBeraTest:a,ljungBoxTest:r}}calculateResiduals(e,t){return e.map((s,a)=>(t[a]??0)-s)}generateModelDiagnostics(e,t){const s=e.r2>.9&&t.mean<.7,a=e.r2<.5&&t.mean<.6,n=t.std<.1,r=Math.max(0,1-t.std);return{overfitting:s,underfitting:a,convergence:n,stability:r}}rankModels(e){return e.map(t=>({modelType:t.modelType,rank:0,score:this.calculateCompositeScore(t)})).sort((t,s)=>s.score-t.score).map((t,s)=>({...t,rank:s+1}))}calculateCompositeScore(e){const t={r2:.3,crossValidation:.3,stability:.2,residualQuality:.2},s=e.residualAnalysis.isNormal?1:.5;return e.performanceMetrics.r2*t.r2+e.crossValidationScores.mean*t.crossValidation+e.modelDiagnostics.stability*t.stability+s*t.residualQuality}generateModelRecommendations(e,t){const s=[],a=t[0];return a?(a.score>.8?s.push(`${a.modelType} shows excellent performance and is recommended for production use`):a.score>.6?s.push(`${a.modelType} shows good performance but consider ensemble methods for improvement`):s.push(\"All models show limited performance. Consider additional feature engineering or data collection\"),e.filter(o=>o.modelDiagnostics.overfitting).length>0&&s.push(\"Some models show signs of overfitting. Consider regularization or more data\"),e.filter(o=>!o.residualAnalysis.isNormal).length>0&&s.push(\"Consider data transformation or non-linear models for better residual behavior\"),s):(s.push(\"No models available for comparison\"),s)}selectEnsembleModels(e){return e.filter(t=>!t.modelDiagnostics.overfitting&&t.performanceMetrics.r2>.5).sort((t,s)=>this.calculateCompositeScore(s)-this.calculateCompositeScore(t)).slice(0,3)}calculateOptimalWeights(e){const s=e.map(n=>n.performanceMetrics.mse).map(n=>1/(n+.001)),a=s.reduce((n,r)=>n+r,0);return s.map(n=>n/a)}selectEnsembleMethod(e){return\"weighted_average\"}estimateEnsembleGain(e,t){return .05+Math.random()*.1}generateEnsembleWarnings(e){const t=[];return e.baseModels.length<2&&t.push(\"Ensemble requires at least 2 base models for diversity\"),Math.max(...e.weights)>.7&&t.push(\"One model dominates the ensemble, reducing diversity benefits\"),t}selectByAIC(e){return e.reduce((t,s)=>s.performanceMetrics.mse<t.performanceMetrics.mse?s:t).modelType}selectByBIC(e){return e.reduce((t,s)=>{const a=s.performanceMetrics.mse*1.1,n=t.performanceMetrics.mse*1.1;return a<n?s:t}).modelType}selectByCrossValidation(e){return e.reduce((t,s)=>s.crossValidationScores.mean>t.crossValidationScores.mean?s:t).modelType}selectByInformationTheory(e){return e.reduce((t,s)=>{const a=this.calculateCompositeScore(s),n=this.calculateCompositeScore(t);return a>n?s:t}).modelType}assessValidationQuality(e){return e.performanceMetrics.r2>.8&&e.crossValidationScores.mean>.7?\"high\":e.performanceMetrics.r2>.5&&e.crossValidationScores.mean>.5?\"medium\":\"low\"}generateValidationWarnings(e){const t=[];return e.modelDiagnostics.overfitting&&t.push(\"Model shows signs of overfitting\"),e.modelDiagnostics.underfitting&&t.push(\"Model shows signs of underfitting\"),e.residualAnalysis.hasAutocorrelation&&t.push(\"Residuals show autocorrelation - model may be missing temporal patterns\"),e.residualAnalysis.isNormal||t.push(\"Residuals are not normally distributed\"),t}}const q=20;function fe({symbol:N,priceData:e,earningsHistory:t,financialStatements:s,className:a=\"\",onExport:n}){var x;const[r,o]=P.useState({loading:!1,error:null}),[c,l]=P.useState({horizon:30,confidenceLevel:.95,includeSeasonality:!0,ensembleMethods:[\"ARIMA\",\"TREND_ANALYSIS\",\"LINEAR_REGRESSION\"],backtestPeriods:20}),[d,g]=P.useState(\"price\"),h=P.useMemo(()=>new Z,[]),u=P.useMemo(()=>new X,[]),f=P.useCallback(async()=>{o(m=>({...m,loading:!0,error:null}));try{const m=await h.generatePriceForecast(e,c),p=await h.generateEarningsForecast(t,s,c),R=await h.generateVolatilityForecast(e,c),I=await Promise.all(c.ensembleMethods.map(async A=>{const E=e.at(-1),D=(E==null?void 0:E.close)??100,L=Array.from({length:q},()=>D*(1+(Math.random()-.5)*.1)),B=e.slice(-q).map(Q=>Q.close);return u.validateModel(A,L,B)})),S=e.at(-1),V=(S==null?void 0:S.close)??100,b=c.ensembleMethods.map((A,E)=>({modelType:A,predictions:Array.from({length:q},()=>V*(1+(Math.random()-.5)*.1)),actual:e.slice(-q).map(D=>D.close)})),w=await u.compareModels(b),j=await u.designEnsemble(I.map(A=>A.data));o({priceForecast:m,earningsForecast:p,volatilityForecast:R,modelValidation:I,modelComparison:w,ensembleConfig:j,loading:!1,error:null})}catch(m){o(p=>({...p,loading:!1,error:m instanceof Error?m.message:\"Unknown error occurred\"}))}},[e,t,s,c,h,u]);P.useEffect(()=>{e.length>0&&f()},[e,c,f]);const M=()=>{var m,p,R,I,S;if(n){const V={...((m=r.priceForecast)==null?void 0:m.data)&&{priceForecast:r.priceForecast.data},...((p=r.earningsForecast)==null?void 0:p.data)&&{earningsForecast:r.earningsForecast.data},...((R=r.volatilityForecast)==null?void 0:R.data)&&{volatilityForecast:r.volatilityForecast.data},...r.modelValidation&&{modelValidation:r.modelValidation.map(b=>b.data)},...((I=r.modelComparison)==null?void 0:I.data)&&{modelComparison:r.modelComparison.data},...((S=r.ensembleConfig)==null?void 0:S.data)&&{ensembleConfig:r.ensembleConfig.data}};n(V)}},y=P.useMemo(()=>{if(!r.priceForecast)return{type:\"line\",data:[],dimensions:{height:400}};const m=e.slice(-60).map(S=>({timestamp:S.timestamp,value:S.close,name:\"Historical Price\"})),p=r.priceForecast.data.predictions.map(S=>({timestamp:S.timestamp,value:S.predicted,name:\"Predicted Price\"})),R=r.priceForecast.data.predictions.map(S=>({timestamp:S.timestamp,value:S.confidenceInterval.upper,name:\"Upper Confidence\"})),I=r.priceForecast.data.predictions.map(S=>({timestamp:S.timestamp,value:S.confidenceInterval.lower,name:\"Lower Confidence\"}));return{type:\"line\",data:[...m,...p,...R,...I],dimensions:{height:400},title:`${N} Price Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:S=>$(Number(S),\"1M\")},yAxis:{enabled:!0,label:\"Price ($)\",tickFormatter:S=>T(Number(S))},colors:{primary:\"#3b82f6\",secondary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"},tooltip:{enabled:!0,formatter:(S,V)=>[T(Number(S)),V]},legend:{enabled:!0}}},[r.priceForecast,e,N]),v=P.useMemo(()=>r.earningsForecast?{type:\"bar\",data:r.earningsForecast.data.predictions.map(p=>({timestamp:Date.now(),value:p.predictedEPS,name:p.quarter,category:p.quarter})),dimensions:{height:300},title:`${N} Earnings Forecast`,xAxis:{enabled:!0,label:\"Quarter\",type:\"category\"},yAxis:{enabled:!0,label:\"EPS ($)\",tickFormatter:p=>T(Number(p))},colors:{primary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}:{type:\"bar\",data:[],dimensions:{height:300}},[r.earningsForecast,N]),C=P.useMemo(()=>r.volatilityForecast?{type:\"line\",data:r.volatilityForecast.data.predictions.map(p=>({timestamp:p.timestamp,value:p.predictedVolatility*100,name:\"Predicted Volatility\"})),dimensions:{height:300},title:`${N} Volatility Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:p=>$(Number(p),\"1M\")},yAxis:{enabled:!0,label:\"Volatility (%)\",tickFormatter:p=>_(Number(p)/100)},colors:{primary:\"#f59e0b\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}:{type:\"line\",data:[],dimensions:{height:300}},[r.volatilityForecast,N]),k=P.useMemo(()=>r.modelComparison?{type:\"scatter\",data:r.modelComparison.data.rankings.map(p=>({timestamp:p.rank,value:p.score*100,name:p.modelType,category:p.modelType})),dimensions:{height:350},title:\"Model Performance Comparison\",xAxis:{enabled:!0,label:\"Rank\",type:\"number\"},yAxis:{enabled:!0,label:\"Score (%)\",tickFormatter:p=>_(Number(p)/100)},colors:{primary:\"#8b5cf6\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}:{type:\"scatter\",data:[],dimensions:{height:350}},[r.modelComparison]);return r.loading?i.jsx(F,{className:`forecasting-dashboard ${a}`,children:i.jsxs(\"div\",{className:\"forecasting-dashboard__loading\",children:[i.jsx(\"div\",{className:\"loading-spinner\"}),i.jsx(\"p\",{children:\"Generating forecasts...\"})]})}):r.error?i.jsx(F,{className:`forecasting-dashboard ${a}`,children:i.jsxs(\"div\",{className:\"forecasting-dashboard__error\",children:[i.jsx(\"h3\",{children:\"Error generating forecasts\"}),i.jsx(\"p\",{children:r.error}),i.jsx(O,{onClick:f,children:\"Retry\"})]})}):i.jsxs(\"div\",{className:`forecasting-dashboard ${a}`,children:[i.jsxs(F,{className:\"forecasting-dashboard__header\",children:[i.jsxs(\"div\",{className:\"forecasting-dashboard__title\",children:[i.jsxs(\"h2\",{children:[\"Forecasting Dashboard - \",N]}),i.jsxs(\"div\",{className:\"forecasting-dashboard__actions\",children:[i.jsx(O,{onClick:f,disabled:r.loading,children:\"Refresh Forecasts\"}),n&&i.jsx(O,{onClick:M,variant:\"secondary\",children:\"Export Data\"})]})]}),i.jsxs(\"div\",{className:\"forecasting-dashboard__options\",children:[i.jsxs(\"div\",{className:\"option-group\",children:[i.jsx(\"label\",{htmlFor:\"forecast-horizon\",children:\"Forecast Horizon (days)\"}),i.jsx(\"input\",{id:\"forecast-horizon\",type:\"number\",value:c.horizon,onChange:m=>l(p=>({...p,horizon:Number.parseInt(m.target.value)})),min:\"1\",max:\"365\"})]}),i.jsxs(\"div\",{className:\"option-group\",children:[i.jsx(\"label\",{htmlFor:\"confidence-level\",children:\"Confidence Level\"}),i.jsxs(\"select\",{id:\"confidence-level\",value:c.confidenceLevel,onChange:m=>l(p=>({...p,confidenceLevel:Number.parseFloat(m.target.value)})),children:[i.jsx(\"option\",{value:.9,children:\"90%\"}),i.jsx(\"option\",{value:.95,children:\"95%\"}),i.jsx(\"option\",{value:.99,children:\"99%\"})]})]}),i.jsxs(\"div\",{className:\"option-group\",children:[i.jsx(\"label\",{htmlFor:\"include-seasonality\",children:\"Include Seasonality\"}),i.jsx(\"input\",{id:\"include-seasonality\",type:\"checkbox\",checked:c.includeSeasonality,onChange:m=>l(p=>({...p,includeSeasonality:m.target.checked}))})]})]})]}),i.jsxs(\"div\",{className:\"forecasting-dashboard__tabs\",children:[i.jsx(\"button\",{className:`tab ${d===\"price\"?\"active\":\"\"}`,onClick:()=>g(\"price\"),children:\"Price Forecast\"}),i.jsx(\"button\",{className:`tab ${d===\"earnings\"?\"active\":\"\"}`,onClick:()=>g(\"earnings\"),children:\"Earnings Forecast\"}),i.jsx(\"button\",{className:`tab ${d===\"volatility\"?\"active\":\"\"}`,onClick:()=>g(\"volatility\"),children:\"Volatility Forecast\"}),i.jsx(\"button\",{className:`tab ${d===\"validation\"?\"active\":\"\"}`,onClick:()=>g(\"validation\"),children:\"Model Validation\"})]}),i.jsxs(\"div\",{className:\"forecasting-dashboard__content\",children:[d===\"price\"&&r.priceForecast&&i.jsxs(\"div\",{className:\"forecast-section\",children:[i.jsx(F,{className:\"chart-container\",children:i.jsx(G,{config:y})}),i.jsxs(\"div\",{className:\"forecast-metrics\",children:[i.jsxs(F,{className:\"metric-card\",children:[i.jsx(\"h4\",{children:\"Model Performance\"}),i.jsxs(\"div\",{className:\"metrics\",children:[i.jsxs(\"div\",{className:\"metric\",children:[i.jsx(\"span\",{children:\"Accuracy:\"}),i.jsx(\"span\",{children:_(r.priceForecast.data.accuracy)})]}),i.jsxs(\"div\",{className:\"metric\",children:[i.jsx(\"span\",{children:\"R\u00b2:\"}),i.jsx(\"span\",{children:r.priceForecast.data.accuracy_metrics.rmse.toFixed(3)})]}),i.jsxs(\"div\",{className:\"metric\",children:[i.jsx(\"span\",{children:\"MAPE:\"}),i.jsx(\"span\",{children:_(r.priceForecast.data.accuracy_metrics.mape)})]})]})]}),i.jsxs(F,{className:\"backtest-results\",children:[i.jsx(\"h4\",{children:\"Backtest Results\"}),i.jsxs(\"div\",{className:\"metrics\",children:[i.jsxs(\"div\",{className:\"metric\",children:[i.jsx(\"span\",{children:\"Period:\"}),i.jsx(\"span\",{children:r.priceForecast.data.backtestResults.period})]}),i.jsxs(\"div\",{className:\"metric\",children:[i.jsx(\"span\",{children:\"Accuracy:\"}),i.jsx(\"span\",{children:_(r.priceForecast.data.backtestResults.accuracy)})]}),i.jsxs(\"div\",{className:\"metric\",children:[i.jsx(\"span\",{children:\"Profitability:\"}),i.jsx(\"span\",{children:_(r.priceForecast.data.backtestResults.profitability)})]})]})]})]})]}),d===\"earnings\"&&r.earningsForecast&&i.jsxs(\"div\",{className:\"forecast-section\",children:[i.jsx(F,{className:\"chart-container\",children:i.jsx(H,{config:v})}),i.jsxs(F,{className:\"earnings-table\",children:[i.jsx(\"h4\",{children:\"Earnings Predictions\"}),i.jsxs(\"table\",{children:[i.jsx(\"thead\",{children:i.jsxs(\"tr\",{children:[i.jsx(\"th\",{children:\"Quarter\"}),i.jsx(\"th\",{children:\"Predicted EPS\"}),i.jsx(\"th\",{children:\"Confidence Interval\"}),i.jsx(\"th\",{children:\"Growth Rate\"})]})}),i.jsx(\"tbody\",{children:r.earningsForecast.data.predictions.map((m,p)=>i.jsxs(\"tr\",{children:[i.jsx(\"td\",{children:m.quarter}),i.jsx(\"td\",{children:T(m.predictedEPS)}),i.jsxs(\"td\",{children:[T(m.confidenceInterval.lower),\" -\",\" \",T(m.confidenceInterval.upper)]}),i.jsx(\"td\",{children:_(m.growthRate)})]},m.quarter||`pred-${p}`))})]})]})]}),d===\"volatility\"&&r.volatilityForecast&&i.jsxs(\"div\",{className:\"forecast-section\",children:[i.jsx(F,{className:\"chart-container\",children:i.jsx(G,{config:C})}),i.jsxs(F,{className:\"garch-params\",children:[i.jsx(\"h4\",{children:\"GARCH Model Parameters\"}),i.jsx(\"div\",{className:\"params\",children:r.volatilityForecast.data.predictions[0]&&i.jsxs(i.Fragment,{children:[i.jsxs(\"div\",{className:\"param\",children:[i.jsx(\"span\",{children:\"Alpha (\u03b1):\"}),i.jsx(\"span\",{children:r.volatilityForecast.data.predictions[0].garchParams.alpha.toFixed(4)})]}),i.jsxs(\"div\",{className:\"param\",children:[i.jsx(\"span\",{children:\"Beta (\u03b2):\"}),i.jsx(\"span\",{children:r.volatilityForecast.data.predictions[0].garchParams.beta.toFixed(4)})]}),i.jsxs(\"div\",{className:\"param\",children:[i.jsx(\"span\",{children:\"Omega (\u03c9):\"}),i.jsx(\"span\",{children:r.volatilityForecast.data.predictions[0].garchParams.omega.toFixed(6)})]})]})})]})]}),d===\"validation\"&&r.modelComparison&&i.jsxs(\"div\",{className:\"validation-section\",children:[i.jsx(F,{className:\"chart-container\",children:i.jsx(Y,{config:k})}),i.jsxs(\"div\",{className:\"validation-results\",children:[i.jsxs(F,{className:\"model-rankings\",children:[i.jsx(\"h4\",{children:\"Model Rankings\"}),i.jsxs(\"table\",{children:[i.jsx(\"thead\",{children:i.jsxs(\"tr\",{children:[i.jsx(\"th\",{children:\"Rank\"}),i.jsx(\"th\",{children:\"Model\"}),i.jsx(\"th\",{children:\"Score\"})]})}),i.jsx(\"tbody\",{children:r.modelComparison.data.rankings.map((m,p)=>i.jsxs(\"tr\",{children:[i.jsx(\"td\",{children:m.rank}),i.jsx(\"td\",{children:m.modelType}),i.jsx(\"td\",{children:_(m.score)})]},m.modelType||`ranking-${p}`))})]})]}),i.jsxs(F,{className:\"recommendations\",children:[i.jsx(\"h4\",{children:\"Recommendations\"}),i.jsx(\"ul\",{children:r.modelComparison.data.recommendations.map((m,p)=>i.jsx(\"li\",{children:m},m))})]}),r.ensembleConfig&&i.jsxs(F,{className:\"ensemble-config\",children:[i.jsx(\"h4\",{children:\"Ensemble Configuration\"}),i.jsxs(\"div\",{className:\"ensemble-details\",children:[i.jsxs(\"div\",{className:\"ensemble-method\",children:[i.jsx(\"span\",{children:\"Method:\"}),i.jsx(\"span\",{children:r.ensembleConfig.data.method})]}),i.jsxs(\"div\",{className:\"performance-gain\",children:[i.jsx(\"span\",{children:\"Expected Performance Gain:\"}),i.jsx(\"span\",{children:_(r.ensembleConfig.data.performanceGain)})]}),i.jsxs(\"div\",{className:\"model-weights\",children:[i.jsx(\"h5\",{children:\"Model Weights:\"}),(x=r.ensembleConfig)==null?void 0:x.data.baseModels.map((m,p)=>{var R;return i.jsxs(\"div\",{className:\"weight-item\",children:[i.jsxs(\"span\",{children:[m,\":\"]}),i.jsx(\"span\",{children:_(((R=r.ensembleConfig)==null?void 0:R.data.weights[p])??0)})]},m)})]})]})]})]})]})]})]})}export{fe as ForecastingDashboard,fe as default};",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/vendor-Dvwkxfce.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/vendor-Dvwkxfce.js",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 17,
          "content": "*/var Sa;function Cc(){return Sa||(Sa=1,(function(R){function b(S,T){var C=S.length;S.push(T);e:for(;0<C;){var f=C-1>>>1,h=S[f];if(0<Fe(h,T))S[f]=T,S[C]=h,C=f;else break e}}function m(S){return S.length===0?null:S[0]}function dt(S){if(S.length===0)return null;var T=S[0],C=S.pop();if(C!==T){S[0]=C;e:for(var f=0,h=S.length,M=h>>>1;f<M;){var O=2*(f+1)-1,F=S[O],j=O+1,H=S[j];if(0>Fe(F,C))j<h&&0>Fe(H,F)?(S[f]=H,S[j]=C,f=j):(S[f]=F,S[O]=C,f=O);else if(j<h&&0>Fe(H,C))S[f]=H,S[j]=C,f=j;else break e}}return T}function Fe(S,T){var C=S.sortIndex-T.sortIndex;return C!==0?C:S.id-T.id}if(typeof performance==\"object\"&&typeof performance.now==\"function\"){var Ke=performance;R.unstable_now=function(){return Ke.now()}}else{var Ye=Date,Te=Ye.now();R.unstable_now=function(){return Ye.now()-Te}}var de=[],je=[],ln=1,ie=null,ne=3,pt=!1,Ue=!1,K=!1,B=typeof setTimeout==\"function\"?setTimeout:null,mt=typeof clearTimeout==\"function\"?clearTimeout:null,lt=typeof setImmediate<\"u\"?setImmediate:null;typeof navigator<\"u\"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function Xe(S){for(var T=m(je);T!==null;){if(T.callback===null)dt(je);else if(T.startTime<=S)dt(je),T.sortIndex=T.expirationTime,b(de,T);else break;T=m(je)}}function pe(S){if(K=!1,Xe(S),!Ue)if(m(de)!==null)Ue=!0,Ee(Ge);else{var T=m(je);T!==null&&J(pe,T.startTime-S)}}function Ge(S,T){Ue=!1,K&&(K=!1,mt(Ve),Ve=-1),pt=!0;var C=ne;try{for(Xe(T),ie=m(de);ie!==null&&(!(ie.expirationTime>T)||S&&!$t());){var f=ie.callback;if(typeof f==\"function\"){ie.callback=null,ne=ie.priorityLevel;var h=f(ie.expirationTime<=T);T=R.unstable_now(),typeof h==\"function\"?ie.callback=h:ie===m(de)&&dt(de),Xe(T)}else dt(de);ie=m(de)}if(ie!==null)var M=!0;else{var O=m(je);O!==null&&J(pe,O.startTime-T),M=!1}return M}finally{ie=null,ne=C,pt=!1}}var ge=!1,ke=null,Ve=-1,_t=5,vt=-1;function $t(){return!(R.unstable_now()-vt<_t)}function ut(){if(ke!==null){var S=R.unstable_now();vt=S;var T=!0;try{T=ke(!0,S)}finally{T?Le():(ge=!1,ke=null)}}else ge=!1}var Le;if(typeof lt==\"function\")Le=function(){lt(ut)};else if(typeof MessageChannel<\"u\"){var Ze=new MessageChannel,it=Ze.port2;Ze.port1.onmessage=ut,Le=function(){it.postMessage(null)}}else Le=function(){B(ut,0)};function Ee(S){ke=S,ge||(ge=!0,Le())}function J(S,T){Ve=B(function(){S(R.unstable_now())},T)}R.unstable_IdlePriority=5,R.unstable_ImmediatePriority=1,R.unstable_LowPriority=4,R.unstable_NormalPriority=3,R.unstable_Profiling=null,R.unstable_UserBlockingPriority=2,R.unstable_cancelCallback=function(S){S.callback=null},R.unstable_continueExecution=function(){Ue||pt||(Ue=!0,Ee(Ge))},R.unstable_forceFrameRate=function(S){0>S||125<S?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):_t=0<S?Math.floor(1e3/S):5},R.unstable_getCurrentPriorityLevel=function(){return ne},R.unstable_getFirstCallbackNode=function(){return m(de)},R.unstable_next=function(S){switch(ne){case 1:case 2:case 3:var T=3;break;default:T=ne}var C=ne;ne=T;try{return S()}finally{ne=C}},R.unstable_pauseExecution=function(){},R.unstable_requestPaint=function(){},R.unstable_runWithPriority=function(S,T){switch(S){case 1:case 2:case 3:case 4:case 5:break;default:S=3}var C=ne;ne=S;try{return T()}finally{ne=C}},R.unstable_scheduleCallback=function(S,T,C){var f=R.unstable_now();switch(typeof C==\"object\"&&C!==null?(C=C.delay,C=typeof C==\"number\"&&0<C?f+C:f):C=f,S){case 1:var h=-1;break;case 2:h=250;break;case 5:h=1073741823;break;case 4:h=1e4;break;default:h=5e3}return h=C+h,S={id:ln++,callback:T,priorityLevel:S,startTime:C,expirationTime:h,sortIndex:-1},C>f?(S.sortIndex=C,b(je,S),m(de)===null&&S===m(je)&&(K?(mt(Ve),Ve=-1):K=!0,J(pe,C-f))):(S.sortIndex=h,b(de,S),Ue||pt||(Ue=!0,Ee(Ge))),S},R.unstable_shouldYield=$t,R.unstable_wrapCallback=function(S){var T=ne;return function(){var C=ne;ne=T;try{return S.apply(this,arguments)}finally{ne=C}}}})(Ei)),Ei}var ka;function _c(){return ka||(ka=1,ki.exports=Cc()),ki.exports}/**",
          "type": "error"
        },
        {
          "line_number": 32,
          "content": "`+u.stack}return{value:e,source:t,stack:l,digest:null}}function Wu(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function $u(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var Gf=typeof WeakMap==\"function\"?WeakMap:Map;function Ns(e,t,n){n=kt(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){dl||(dl=!0,ui=r),$u(e,t)},n}function zs(e,t,n){n=kt(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r==\"function\"){var l=t.value;n.payload=function(){return r(l)},n.callback=function(){$u(e,t)}}var u=e.stateNode;return u!==null&&typeof u.componentDidCatch==\"function\"&&(n.callback=function(){$u(e,t),typeof r!=\"function\"&&(Ut===null?Ut=new Set([this]):Ut.add(this));var i=t.stack;this.componentDidCatch(t.value,{componentStack:i!==null?i:\"\"})}),n}function Ts(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new Gf;var l=new Set;r.set(t,l)}else l=r.get(t),l===void 0&&(l=new Set,r.set(t,l));l.has(n)||(l.add(n),e=ac.bind(null,e,t,n),t.then(e,e))}function Ls(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function Rs(e,t,n,r,l){return(e.mode&1)===0?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=kt(-1,1),t.tag=2,Ft(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=l,e)}var Zf=pe.ReactCurrentOwner,xe=!1;function we(e,t,n,r){t.child=e===null?Jo(t,null,n,r):En(t,e.child,n,r)}function Ms(e,t,n,r,l){n=n.render;var u=t.ref;return _n(t,l),r=Iu(e,t,n,r,u,l),n=Fu(),e!==null&&!xe?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Et(e,t,l)):(X&&n&&gu(t),t.flags|=1,we(e,t,r,l),t.child)}function Ds(e,t,n,r,l){if(e===null){var u=n.type;return typeof u==\"function\"&&!di(u)&&u.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=u,Os(e,t,u,r,l)):(e=gl(n.type,null,r,t,t.mode,l),e.ref=t.ref,e.return=t,t.child=e)}if(u=e.child,(e.lanes&l)===0){var i=u.memoizedProps;if(n=n.compare,n=n!==null?n:Gn,n(i,r)&&e.ref===t.ref)return Et(e,t,l)}return t.flags|=1,e=Ht(u,r),e.ref=t.ref,e.return=t,t.child=e}function Os(e,t,n,r,l){if(e!==null){var u=e.memoizedProps;if(Gn(u,r)&&e.ref===t.ref)if(xe=!1,t.pendingProps=r=u,(e.lanes&l)!==0)(e.flags&131072)!==0&&(xe=!0);else return t.lanes=e.lanes,Et(e,t,l)}return Qu(e,t,n,r,l)}function Is(e,t,n){var r=t.pendingProps,l=r.children,u=e!==null?e.memoizedState:null;if(r.mode===\"hidden\")if((t.mode&1)===0)t.memoizedState={baseLanes:0,cachePool:null,transitions:null},W(zn,Ie),Ie|=n;else{if((n&1073741824)===0)return e=u!==null?u.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,W(zn,Ie),Ie|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=u!==null?u.baseLanes:n,W(zn,Ie),Ie|=r}else u!==null?(r=u.baseLanes|n,t.memoizedState=null):r=n,W(zn,Ie),Ie|=r;return we(e,t,l,n),t.child}function Fs(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Qu(e,t,n,r,l){var u=_e(n)?Yt:me.current;return u=gn(t,u),_n(t,l),n=Iu(e,t,n,r,u,l),r=Fu(),e!==null&&!xe?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Et(e,t,l)):(X&&r&&gu(t),t.flags|=1,we(e,t,n,l),t.child)}function js(e,t,n,r,l){if(_e(n)){var u=!0;Wr(t)}else u=!1;if(_n(t,l),t.stateNode===null)ol(e,t),xs(t,n,r),Hu(t,n,r,l),r=!0;else if(e===null){var i=t.stateNode,o=t.memoizedProps;i.props=o;var s=i.context,p=n.contextType;typeof p==\"object\"&&p!==null?p=He(p):(p=_e(n)?Yt:me.current,p=gn(t,p));var y=n.getDerivedStateFromProps,g=typeof y==\"function\"||typeof i.getSnapshotBeforeUpdate==\"function\";g||typeof i.UNSAFE_componentWillReceiveProps!=\"function\"&&typeof i.componentWillReceiveProps!=\"function\"||(o!==r||s!==p)&&Ps(t,i,r,p),It=!1;var v=t.memoizedState;i.state=v,qr(t,r,i,l),s=t.memoizedState,o!==r||v!==s||Ce.current||It?(typeof y==\"function\"&&(Bu(t,n,y,r),s=t.memoizedState),(o=It||_s(t,n,o,r,v,s,p))?(g||typeof i.UNSAFE_componentWillMount!=\"function\"&&typeof i.componentWillMount!=\"function\"||(typeof i.componentWillMount==\"function\"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount==\"function\"&&i.UNSAFE_componentWillMount()),typeof i.componentDidMount==\"function\"&&(t.flags|=4194308)):(typeof i.componentDidMount==\"function\"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=s),i.props=r,i.state=s,i.context=p,r=o):(typeof i.componentDidMount==\"function\"&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,bo(e,t),o=t.memoizedProps,p=t.type===t.elementType?o:et(t.type,o),i.props=p,g=t.pendingProps,v=i.context,s=n.contextType,typeof s==\"object\"&&s!==null?s=He(s):(s=_e(n)?Yt:me.current,s=gn(t,s));var k=n.getDerivedStateFromProps;(y=typeof k==\"function\"||typeof i.getSnapshotBeforeUpdate==\"function\")||typeof i.UNSAFE_componentWillReceiveProps!=\"function\"&&typeof i.componentWillReceiveProps!=\"function\"||(o!==g||v!==s)&&Ps(t,i,r,s),It=!1,v=t.memoizedState,i.state=v,qr(t,r,i,l);var _=t.memoizedState;o!==g||v!==_||Ce.current||It?(typeof k==\"function\"&&(Bu(t,n,k,r),_=t.memoizedState),(p=It||_s(t,n,p,r,v,_,s)||!1)?(y||typeof i.UNSAFE_componentWillUpdate!=\"function\"&&typeof i.componentWillUpdate!=\"function\"||(typeof i.componentWillUpdate==\"function\"&&i.componentWillUpdate(r,_,s),typeof i.UNSAFE_componentWillUpdate==\"function\"&&i.UNSAFE_componentWillUpdate(r,_,s)),typeof i.componentDidUpdate==\"function\"&&(t.flags|=4),typeof i.getSnapshotBeforeUpdate==\"function\"&&(t.flags|=1024)):(typeof i.componentDidUpdate!=\"function\"||o===e.memoizedProps&&v===e.memoizedState||(t.flags|=4),typeof i.getSnapshotBeforeUpdate!=\"function\"||o===e.memoizedProps&&v===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=_),i.props=r,i.state=_,i.context=s,r=p):(typeof i.componentDidUpdate!=\"function\"||o===e.memoizedProps&&v===e.memoizedState||(t.flags|=4),typeof i.getSnapshotBeforeUpdate!=\"function\"||o===e.memoizedProps&&v===e.memoizedState||(t.flags|=1024),r=!1)}return Ku(e,t,n,r,u,l)}function Ku(e,t,n,r,l,u){Fs(e,t);var i=(t.flags&128)!==0;if(!r&&!i)return l&&Ho(t,n,!1),Et(e,t,u);r=t.stateNode,Zf.current=t;var o=i&&typeof n.getDerivedStateFromError!=\"function\"?null:r.render();return t.flags|=1,e!==null&&i?(t.child=En(t,e.child,null,u),t.child=En(t,null,o,u)):we(e,t,o,u),t.memoizedState=r.state,l&&Ho(t,n,!0),t.child}function Us(e){var t=e.stateNode;t.pendingContext?Ao(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Ao(e,t.context,!1),Tu(e,t.containerInfo)}function Vs(e,t,n,r,l){return kn(),Eu(l),t.flags|=256,we(e,t,n,r),t.child}var Yu={dehydrated:null,treeContext:null,retryLane:0};function Xu(e){return{baseLanes:e,cachePool:null,transitions:null}}function As(e,t,n){var r=t.pendingProps,l=G.current,u=!1,i=(t.flags&128)!==0,o;if((o=i)||(o=e!==null&&e.memoizedState===null?!1:(l&2)!==0),o?(u=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(l|=1),W(G,l&1),e===null)return ku(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?((t.mode&1)===0?t.lanes=1:e.data===\"$!\"?t.lanes=8:t.lanes=1073741824,null):(i=r.children,e=r.fallback,u?(r=t.mode,u=t.child,i={mode:\"hidden\",children:i},(r&1)===0&&u!==null?(u.childLanes=0,u.pendingProps=i):u=wl(i,r,0,null),e=rn(e,r,n,null),u.return=t,e.return=t,u.sibling=e,t.child=u,t.child.memoizedState=Xu(n),t.memoizedState=Yu,e):Gu(t,i));if(l=e.memoizedState,l!==null&&(o=l.dehydrated,o!==null))return Jf(e,t,i,r,o,l,n);if(u){u=r.fallback,i=t.mode,l=e.child,o=l.sibling;var s={mode:\"hidden\",children:r.children};return(i&1)===0&&t.child!==l?(r=t.child,r.childLanes=0,r.pendingProps=s,t.deletions=null):(r=Ht(l,s),r.subtreeFlags=l.subtreeFlags&14680064),o!==null?u=Ht(o,u):(u=rn(u,i,n,null),u.flags|=2),u.return=t,r.return=t,r.sibling=u,t.child=r,r=u,u=t.child,i=e.child.memoizedState,i=i===null?Xu(n):{baseLanes:i.baseLanes|n,cachePool:null,transitions:i.transitions},u.memoizedState=i,u.childLanes=e.childLanes&~n,t.memoizedState=Yu,r}return u=e.child,e=u.sibling,r=Ht(u,{mode:\"visible\",children:r.children}),(t.mode&1)===0&&(r.lanes=n),r.return=t,r.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Gu(e,t){return t=wl({mode:\"visible\",children:t},e.mode,0,null),t.return=e,e.child=t}function il(e,t,n,r){return r!==null&&Eu(r),En(t,e.child,null,n),e=Gu(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function Jf(e,t,n,r,l,u,i){if(n)return t.flags&256?(t.flags&=-257,r=Wu(Error(m(422))),il(e,t,i,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(u=r.fallback,l=t.mode,r=wl({mode:\"visible\",children:r.children},l,0,null),u=rn(u,l,i,null),u.flags|=2,r.return=t,u.return=t,r.sibling=u,t.child=r,(t.mode&1)!==0&&En(t,e.child,null,i),t.child.memoizedState=Xu(i),t.memoizedState=Yu,u);if((t.mode&1)===0)return il(e,t,i,null);if(l.data===\"$!\"){if(r=l.nextSibling&&l.nextSibling.dataset,r)var o=r.dgst;return r=o,u=Error(m(419)),r=Wu(u,r,void 0),il(e,t,i,r)}if(o=(i&e.childLanes)!==0,xe||o){if(r=se,r!==null){switch(i&-i){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}l=(l&(r.suspendedLanes|i))!==0?0:l,l!==0&&l!==u.retryLane&&(u.retryLane=l,St(e,l),rt(r,e,l,-1))}return ci(),r=Wu(Error(m(421))),il(e,t,i,r)}return l.data===\"$?\"?(t.flags|=128,t.child=e.child,t=fc.bind(null,e),l._reactRetry=t,null):(e=u.treeContext,Oe=Rt(l.nextSibling),De=t,X=!0,be=null,e!==null&&(Ae[Be++]=gt,Ae[Be++]=wt,Ae[Be++]=Xt,gt=e.id,wt=e.overflow,Xt=t),t=Gu(t,r.children),t.flags|=4096,t)}function Bs(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),Pu(e.return,t,n)}function Zu(e,t,n,r,l){var u=e.memoizedState;u===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:l}:(u.isBackwards=t,u.rendering=null,u.renderingStartTime=0,u.last=r,u.tail=n,u.tailMode=l)}function Hs(e,t,n){var r=t.pendingProps,l=r.revealOrder,u=r.tail;if(we(e,t,r.children,n),r=G.current,(r&2)!==0)r=r&1|2,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Bs(e,n,t);else if(e.tag===19)Bs(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(W(G,r),(t.mode&1)===0)t.memoizedState=null;else switch(l){case\"forwards\":for(n=t.child,l=null;n!==null;)e=n.alternate,e!==null&&br(e)===null&&(l=n),n=n.sibling;n=l,n===null?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),Zu(t,!1,l,n,u);break;case\"backwards\":for(n=null,l=t.child,t.child=null;l!==null;){if(e=l.alternate,e!==null&&br(e)===null){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}Zu(t,!0,n,null,u);break;case\"together\":Zu(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function ol(e,t){(t.mode&1)===0&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Et(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),bt|=t.lanes,(n&t.childLanes)===0)return null;if(e!==null&&t.child!==e.child)throw Error(m(153));if(t.child!==null){for(e=t.child,n=Ht(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=Ht(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function qf(e,t,n){switch(t.tag){case 3:Us(t),kn();break;case 5:ns(t);break;case 1:_e(t.type)&&Wr(t);break;case 4:Tu(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,l=t.memoizedProps.value;W(Gr,r._currentValue),r._currentValue=l;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(W(G,G.current&1),t.flags|=128,null):(n&t.child.childLanes)!==0?As(e,t,n):(W(G,G.current&1),e=Et(e,t,n),e!==null?e.sibling:null);W(G,G.current&1);break;case 19:if(r=(n&t.childLanes)!==0,(e.flags&128)!==0){if(r)return Hs(e,t,n);t.flags|=128}if(l=t.memoizedState,l!==null&&(l.rendering=null,l.tail=null,l.lastEffect=null),W(G,G.current),r)break;return null;case 22:case 23:return t.lanes=0,Is(e,t,n)}return Et(e,t,n)}var Ws,Ju,$s,Qs;Ws=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ju=function(){},$s=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,Jt(at.current);var u=null;switch(n){case\"input\":l=Pl(e,l),r=Pl(e,r),u=[];break;case\"select\":l=C({},l,{value:void 0}),r=C({},r,{value:void 0}),u=[];break;case\"textarea\":l=Tl(e,l),r=Tl(e,r),u=[];break;default:typeof l.onClick!=\"function\"&&typeof r.onClick==\"function\"&&(e.onclick=Ar)}Rl(n,r);var i;n=null;for(p in l)if(!r.hasOwnProperty(p)&&l.hasOwnProperty(p)&&l[p]!=null)if(p===\"style\"){var o=l[p];for(i in o)o.hasOwnProperty(i)&&(n||(n={}),n[i]=\"\")}else p!==\"dangerouslySetInnerHTML\"&&p!==\"children\"&&p!==\"suppressContentEditableWarning\"&&p!==\"suppressHydrationWarning\"&&p!==\"autoFocus\"&&(Fe.hasOwnProperty(p)?u||(u=[]):(u=u||[]).push(p,null));for(p in r){var s=r[p];if(o=l!=null?l[p]:void 0,r.hasOwnProperty(p)&&s!==o&&(s!=null||o!=null))if(p===\"style\")if(o){for(i in o)!o.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(n||(n={}),n[i]=\"\");for(i in s)s.hasOwnProperty(i)&&o[i]!==s[i]&&(n||(n={}),n[i]=s[i])}else n||(u||(u=[]),u.push(p,n)),n=s;else p===\"dangerouslySetInnerHTML\"?(s=s?s.__html:void 0,o=o?o.__html:void 0,s!=null&&o!==s&&(u=u||[]).push(p,s)):p===\"children\"?typeof s!=\"string\"&&typeof s!=\"number\"||(u=u||[]).push(p,\"\"+s):p!==\"suppressContentEditableWarning\"&&p!==\"suppressHydrationWarning\"&&(Fe.hasOwnProperty(p)?(s!=null&&p===\"onScroll\"&&$(\"scroll\",e),u||o===s||(u=[])):(u=u||[]).push(p,s))}n&&(u=u||[]).push(\"style\",n);var p=u;(t.updateQueue=p)&&(t.flags|=4)}},Qs=function(e,t,n,r){n!==r&&(t.flags|=4)};function fr(e,t){if(!X)switch(e.tailMode){case\"hidden\":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case\"collapsed\":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function he(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var l=e.child;l!==null;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags&14680064,r|=l.flags&14680064,l.return=e,l=l.sibling;else for(l=e.child;l!==null;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags,r|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function bf(e,t,n){var r=t.pendingProps;switch(wu(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return he(t),null;case 1:return _e(t.type)&&Hr(),he(t),null;case 3:return r=t.stateNode,xn(),Q(Ce),Q(me),Mu(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(Yr(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,be!==null&&(si(be),be=null))),Ju(e,t),he(t),null;case 5:Lu(t);var l=Jt(ur.current);if(n=t.type,e!==null&&t.stateNode!=null)$s(e,t,n,r,l),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(m(166));return he(t),null}if(e=Jt(at.current),Yr(t)){r=t.stateNode,n=t.type;var u=t.memoizedProps;switch(r[st]=t,r[er]=u,e=(t.mode&1)!==0,n){case\"dialog\":$(\"cancel\",r),$(\"close\",r);break;case\"iframe\":case\"object\":case\"embed\":$(\"load\",r);break;case\"video\":case\"audio\":for(l=0;l<Jn.length;l++)$(Jn[l],r);break;case\"source\":$(\"error\",r);break;case\"img\":case\"image\":case\"link\":$(\"error\",r),$(\"load\",r);break;case\"details\":$(\"toggle\",r);break;case\"input\":_i(r,u),$(\"invalid\",r);break;case\"select\":r._wrapperState={wasMultiple:!!u.multiple},$(\"invalid\",r);break;case\"textarea\":Ni(r,u),$(\"invalid\",r)}Rl(n,u),l=null;for(var i in u)if(u.hasOwnProperty(i)){var o=u[i];i===\"children\"?typeof o==\"string\"?r.textContent!==o&&(u.suppressHydrationWarning!==!0&&Vr(r.textContent,o,e),l=[\"children\",o]):typeof o==\"number\"&&r.textContent!==\"\"+o&&(u.suppressHydrationWarning!==!0&&Vr(r.textContent,o,e),l=[\"children\",\"\"+o]):Fe.hasOwnProperty(i)&&o!=null&&i===\"onScroll\"&&$(\"scroll\",r)}switch(n){case\"input\":hr(r),Pi(r,u,!0);break;case\"textarea\":hr(r),Ti(r);break;case\"select\":case\"option\":break;default:typeof u.onClick==\"function\"&&(r.onclick=Ar)}r=l,t.updateQueue=r,r!==null&&(t.flags|=4)}else{i=l.nodeType===9?l:l.ownerDocument,e===\"http://www.w3.org/1999/xhtml\"&&(e=Li(n)),e===\"http://www.w3.org/1999/xhtml\"?n===\"script\"?(e=i.createElement(\"div\"),e.innerHTML=\"<script><\\/script>\",e=e.removeChild(e.firstChild)):typeof r.is==\"string\"?e=i.createElement(n,{is:r.is}):(e=i.createElement(n),n===\"select\"&&(i=e,r.multiple?i.multiple=!0:r.size&&(i.size=r.size))):e=i.createElementNS(e,n),e[st]=t,e[er]=r,Ws(e,t,!1,!1),t.stateNode=e;e:{switch(i=Ml(n,r),n){case\"dialog\":$(\"cancel\",e),$(\"close\",e),l=r;break;case\"iframe\":case\"object\":case\"embed\":$(\"load\",e),l=r;break;case\"video\":case\"audio\":for(l=0;l<Jn.length;l++)$(Jn[l],e);l=r;break;case\"source\":$(\"error\",e),l=r;break;case\"img\":case\"image\":case\"link\":$(\"error\",e),$(\"load\",e),l=r;break;case\"details\":$(\"toggle\",e),l=r;break;case\"input\":_i(e,r),l=Pl(e,r),$(\"invalid\",e);break;case\"option\":l=r;break;case\"select\":e._wrapperState={wasMultiple:!!r.multiple},l=C({},r,{value:void 0}),$(\"invalid\",e);break;case\"textarea\":Ni(e,r),l=Tl(e,r),$(\"invalid\",e);break;default:l=r}Rl(n,l),o=l;for(u in o)if(o.hasOwnProperty(u)){var s=o[u];u===\"style\"?Di(e,s):u===\"dangerouslySetInnerHTML\"?(s=s?s.__html:void 0,s!=null&&Ri(e,s)):u===\"children\"?typeof s==\"string\"?(n!==\"textarea\"||s!==\"\")&&Mn(e,s):typeof s==\"number\"&&Mn(e,\"\"+s):u!==\"suppressContentEditableWarning\"&&u!==\"suppressHydrationWarning\"&&u!==\"autoFocus\"&&(Fe.hasOwnProperty(u)?s!=null&&u===\"onScroll\"&&$(\"scroll\",e):s!=null&&Xe(e,u,s,i))}switch(n){case\"input\":hr(e),Pi(e,r,!1);break;case\"textarea\":hr(e),Ti(e);break;case\"option\":r.value!=null&&e.setAttribute(\"value\",\"\"+V(r.value));break;case\"select\":e.multiple=!!r.multiple,u=r.value,u!=null?un(e,!!r.multiple,u,!1):r.defaultValue!=null&&un(e,!!r.multiple,r.defaultValue,!0);break;default:typeof l.onClick==\"function\"&&(e.onclick=Ar)}switch(n){case\"button\":case\"input\":case\"select\":case\"textarea\":r=!!r.autoFocus;break e;case\"img\":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return he(t),null;case 6:if(e&&t.stateNode!=null)Qs(e,t,e.memoizedProps,r);else{if(typeof r!=\"string\"&&t.stateNode===null)throw Error(m(166));if(n=Jt(ur.current),Jt(at.current),Yr(t)){if(r=t.stateNode,n=t.memoizedProps,r[st]=t,(u=r.nodeValue!==n)&&(e=De,e!==null))switch(e.tag){case 3:Vr(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Vr(r.nodeValue,n,(e.mode&1)!==0)}u&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[st]=t,t.stateNode=r}return he(t),null;case 13:if(Q(G),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(X&&Oe!==null&&(t.mode&1)!==0&&(t.flags&128)===0)Xo(),kn(),t.flags|=98560,u=!1;else if(u=Yr(t),r!==null&&r.dehydrated!==null){if(e===null){if(!u)throw Error(m(318));if(u=t.memoizedState,u=u!==null?u.dehydrated:null,!u)throw Error(m(317));u[st]=t}else kn(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4;he(t),u=!1}else be!==null&&(si(be),be=null),u=!0;if(!u)return t.flags&65536?t:null}return(t.flags&128)!==0?(t.lanes=n,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,(t.mode&1)!==0&&(e===null||(G.current&1)!==0?ue===0&&(ue=3):ci())),t.updateQueue!==null&&(t.flags|=4),he(t),null);case 4:return xn(),Ju(e,t),e===null&&qn(t.stateNode.containerInfo),he(t),null;case 10:return xu(t.type._context),he(t),null;case 17:return _e(t.type)&&Hr(),he(t),null;case 19:if(Q(G),u=t.memoizedState,u===null)return he(t),null;if(r=(t.flags&128)!==0,i=u.rendering,i===null)if(r)fr(u,!1);else{if(ue!==0||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(i=br(e),i!==null){for(t.flags|=128,fr(u,!1),r=i.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)u=n,e=r,u.flags&=14680066,i=u.alternate,i===null?(u.childLanes=0,u.lanes=e,u.child=null,u.subtreeFlags=0,u.memoizedProps=null,u.memoizedState=null,u.updateQueue=null,u.dependencies=null,u.stateNode=null):(u.childLanes=i.childLanes,u.lanes=i.lanes,u.child=i.child,u.subtreeFlags=0,u.deletions=null,u.memoizedProps=i.memoizedProps,u.memoizedState=i.memoizedState,u.updateQueue=i.updateQueue,u.type=i.type,e=i.dependencies,u.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return W(G,G.current&1|2),t.child}e=e.sibling}u.tail!==null&&ee()>Tn&&(t.flags|=128,r=!0,fr(u,!1),t.lanes=4194304)}else{if(!r)if(e=br(i),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),fr(u,!0),u.tail===null&&u.tailMode===\"hidden\"&&!i.alternate&&!X)return he(t),null}else 2*ee()-u.renderingStartTime>Tn&&n!==1073741824&&(t.flags|=128,r=!0,fr(u,!1),t.lanes=4194304);u.isBackwards?(i.sibling=t.child,t.child=i):(n=u.last,n!==null?n.sibling=i:t.child=i,u.last=i)}return u.tail!==null?(t=u.tail,u.rendering=t,u.tail=t.sibling,u.renderingStartTime=ee(),t.sibling=null,n=G.current,W(G,r?n&1|2:n&1),t):(he(t),null);case 22:case 23:return fi(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&(t.mode&1)!==0?(Ie&1073741824)!==0&&(he(t),t.subtreeFlags&6&&(t.flags|=8192)):he(t),null;case 24:return null;case 25:return null}throw Error(m(156,t.tag))}function ec(e,t){switch(wu(t),t.tag){case 1:return _e(t.type)&&Hr(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return xn(),Q(Ce),Q(me),Mu(),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 5:return Lu(t),null;case 13:if(Q(G),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(m(340));kn()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return Q(G),null;case 4:return xn(),null;case 10:return xu(t.type._context),null;case 22:case 23:return fi(),null;case 24:return null;default:return null}}var sl=!1,ye=!1,tc=typeof WeakSet==\"function\"?WeakSet:Set,E=null;function Nn(e,t){var n=e.ref;if(n!==null)if(typeof n==\"function\")try{n(null)}catch(r){q(e,t,r)}else n.current=null}function qu(e,t,n){try{n()}catch(r){q(e,t,r)}}var Ks=!1;function nc(e,t){if(fu=zr,e=_o(),nu(e)){if(\"selectionStart\"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var l=r.anchorOffset,u=r.focusNode;r=r.focusOffset;try{n.nodeType,u.nodeType}catch{n=null;break e}var i=0,o=-1,s=-1,p=0,y=0,g=e,v=null;t:for(;;){for(var k;g!==n||l!==0&&g.nodeType!==3||(o=i+l),g!==u||r!==0&&g.nodeType!==3||(s=i+r),g.nodeType===3&&(i+=g.nodeValue.length),(k=g.firstChild)!==null;)v=g,g=k;for(;;){if(g===e)break t;if(v===n&&++p===l&&(o=i),v===u&&++y===r&&(s=i),(k=g.nextSibling)!==null)break;g=v,v=g.parentNode}g=k}n=o===-1||s===-1?null:{start:o,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(cu={focusedElem:e,selectionRange:n},zr=!1,E=t;E!==null;)if(t=E,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,E=e;else for(;E!==null;){t=E;try{var _=t.alternate;if((t.flags&1024)!==0)switch(t.tag){case 0:case 11:case 15:break;case 1:if(_!==null){var x=_.memoizedProps,te=_.memoizedState,c=t.stateNode,a=c.getSnapshotBeforeUpdate(t.elementType===t.type?x:et(t.type,x),te);c.__reactInternalSnapshotBeforeUpdate=a}break;case 3:var d=t.stateNode.containerInfo;d.nodeType===1?d.textContent=\"\":d.nodeType===9&&d.documentElement&&d.removeChild(d.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(m(163))}}catch(w){q(t,t.return,w)}if(e=t.sibling,e!==null){e.return=t.return,E=e;break}E=t.return}return _=Ks,Ks=!1,_}function cr(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var l=r=r.next;do{if((l.tag&e)===e){var u=l.destroy;l.destroy=void 0,u!==void 0&&qu(t,n,u)}l=l.next}while(l!==r)}}function al(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function bu(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t==\"function\"?t(e):t.current=e}}function Ys(e){var t=e.alternate;t!==null&&(e.alternate=null,Ys(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[st],delete t[er],delete t[vu],delete t[Uf],delete t[Vf])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Xs(e){return e.tag===5||e.tag===3||e.tag===4}function Gs(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Xs(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function ei(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=Ar));else if(r!==4&&(e=e.child,e!==null))for(ei(e,t,n),e=e.sibling;e!==null;)ei(e,t,n),e=e.sibling}function ti(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(ti(e,t,n),e=e.sibling;e!==null;)ti(e,t,n),e=e.sibling}var fe=null,tt=!1;function jt(e,t,n){for(n=n.child;n!==null;)Zs(e,t,n),n=n.sibling}function Zs(e,t,n){if(ot&&typeof ot.onCommitFiberUnmount==\"function\")try{ot.onCommitFiberUnmount(Er,n)}catch{}switch(n.tag){case 5:ye||Nn(n,t);case 6:var r=fe,l=tt;fe=null,jt(e,t,n),fe=r,tt=l,fe!==null&&(tt?(e=fe,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):fe.removeChild(n.stateNode));break;case 18:fe!==null&&(tt?(e=fe,n=n.stateNode,e.nodeType===8?mu(e.parentNode,n):e.nodeType===1&&mu(e,n),Wn(e)):mu(fe,n.stateNode));break;case 4:r=fe,l=tt,fe=n.stateNode.containerInfo,tt=!0,jt(e,t,n),fe=r,tt=l;break;case 0:case 11:case 14:case 15:if(!ye&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){l=r=r.next;do{var u=l,i=u.destroy;u=u.tag,i!==void 0&&((u&2)!==0||(u&4)!==0)&&qu(n,t,i),l=l.next}while(l!==r)}jt(e,t,n);break;case 1:if(!ye&&(Nn(n,t),r=n.stateNode,typeof r.componentWillUnmount==\"function\"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(o){q(n,t,o)}jt(e,t,n);break;case 21:jt(e,t,n);break;case 22:n.mode&1?(ye=(r=ye)||n.memoizedState!==null,jt(e,t,n),ye=r):jt(e,t,n);break;default:jt(e,t,n)}}function Js(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new tc),t.forEach(function(r){var l=cc.bind(null,e,r);n.has(r)||(n.add(r),r.then(l,l))})}}function nt(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var l=n[r];try{var u=e,i=t,o=i;e:for(;o!==null;){switch(o.tag){case 5:fe=o.stateNode,tt=!1;break e;case 3:fe=o.stateNode.containerInfo,tt=!0;break e;case 4:fe=o.stateNode.containerInfo,tt=!0;break e}o=o.return}if(fe===null)throw Error(m(160));Zs(u,i,l),fe=null,tt=!1;var s=l.alternate;s!==null&&(s.return=null),l.return=null}catch(p){q(l,t,p)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)qs(t,e),t=t.sibling}function qs(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(nt(t,e),ct(e),r&4){try{cr(3,e,e.return),al(3,e)}catch(x){q(e,e.return,x)}try{cr(5,e,e.return)}catch(x){q(e,e.return,x)}}break;case 1:nt(t,e),ct(e),r&512&&n!==null&&Nn(n,n.return);break;case 5:if(nt(t,e),ct(e),r&512&&n!==null&&Nn(n,n.return),e.flags&32){var l=e.stateNode;try{Mn(l,\"\")}catch(x){q(e,e.return,x)}}if(r&4&&(l=e.stateNode,l!=null)){var u=e.memoizedProps,i=n!==null?n.memoizedProps:u,o=e.type,s=e.updateQueue;if(e.updateQueue=null,s!==null)try{o===\"input\"&&u.type===\"radio\"&&u.name!=null&&xi(l,u),Ml(o,i);var p=Ml(o,u);for(i=0;i<s.length;i+=2){var y=s[i],g=s[i+1];y===\"style\"?Di(l,g):y===\"dangerouslySetInnerHTML\"?Ri(l,g):y===\"children\"?Mn(l,g):Xe(l,y,g,p)}switch(o){case\"input\":Nl(l,u);break;case\"textarea\":zi(l,u);break;case\"select\":var v=l._wrapperState.wasMultiple;l._wrapperState.wasMultiple=!!u.multiple;var k=u.value;k!=null?un(l,!!u.multiple,k,!1):v!==!!u.multiple&&(u.defaultValue!=null?un(l,!!u.multiple,u.defaultValue,!0):un(l,!!u.multiple,u.multiple?[]:\"\",!1))}l[er]=u}catch(x){q(e,e.return,x)}}break;case 6:if(nt(t,e),ct(e),r&4){if(e.stateNode===null)throw Error(m(162));l=e.stateNode,u=e.memoizedProps;try{l.nodeValue=u}catch(x){q(e,e.return,x)}}break;case 3:if(nt(t,e),ct(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{Wn(t.containerInfo)}catch(x){q(e,e.return,x)}break;case 4:nt(t,e),ct(e);break;case 13:nt(t,e),ct(e),l=e.child,l.flags&8192&&(u=l.memoizedState!==null,l.stateNode.isHidden=u,!u||l.alternate!==null&&l.alternate.memoizedState!==null||(li=ee())),r&4&&Js(e);break;case 22:if(y=n!==null&&n.memoizedState!==null,e.mode&1?(ye=(p=ye)||y,nt(t,e),ye=p):nt(t,e),ct(e),r&8192){if(p=e.memoizedState!==null,(e.stateNode.isHidden=p)&&!y&&(e.mode&1)!==0)for(E=e,y=e.child;y!==null;){for(g=E=y;E!==null;){switch(v=E,k=v.child,v.tag){case 0:case 11:case 14:case 15:cr(4,v,v.return);break;case 1:Nn(v,v.return);var _=v.stateNode;if(typeof _.componentWillUnmount==\"function\"){r=v,n=v.return;try{t=r,_.props=t.memoizedProps,_.state=t.memoizedState,_.componentWillUnmount()}catch(x){q(r,n,x)}}break;case 5:Nn(v,v.return);break;case 22:if(v.memoizedState!==null){ta(g);continue}}k!==null?(k.return=v,E=k):ta(g)}y=y.sibling}e:for(y=null,g=e;;){if(g.tag===5){if(y===null){y=g;try{l=g.stateNode,p?(u=l.style,typeof u.setProperty==\"function\"?u.setProperty(\"display\",\"none\",\"important\"):u.display=\"none\"):(o=g.stateNode,s=g.memoizedProps.style,i=s!=null&&s.hasOwnProperty(\"display\")?s.display:null,o.style.display=Mi(\"display\",i))}catch(x){q(e,e.return,x)}}}else if(g.tag===6){if(y===null)try{g.stateNode.nodeValue=p?\"\":g.memoizedProps}catch(x){q(e,e.return,x)}}else if((g.tag!==22&&g.tag!==23||g.memoizedState===null||g===e)&&g.child!==null){g.child.return=g,g=g.child;continue}if(g===e)break e;for(;g.sibling===null;){if(g.return===null||g.return===e)break e;y===g&&(y=null),g=g.return}y===g&&(y=null),g.sibling.return=g.return,g=g.sibling}}break;case 19:nt(t,e),ct(e),r&4&&Js(e);break;case 21:break;default:nt(t,e),ct(e)}}function ct(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(Xs(n)){var r=n;break e}n=n.return}throw Error(m(160))}switch(r.tag){case 5:var l=r.stateNode;r.flags&32&&(Mn(l,\"\"),r.flags&=-33);var u=Gs(e);ti(e,u,l);break;case 3:case 4:var i=r.stateNode.containerInfo,o=Gs(e);ei(e,o,i);break;default:throw Error(m(161))}}catch(s){q(e,e.return,s)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function rc(e,t,n){E=e,bs(e)}function bs(e,t,n){for(var r=(e.mode&1)!==0;E!==null;){var l=E,u=l.child;if(l.tag===22&&r){var i=l.memoizedState!==null||sl;if(!i){var o=l.alternate,s=o!==null&&o.memoizedState!==null||ye;o=sl;var p=ye;if(sl=i,(ye=s)&&!p)for(E=l;E!==null;)i=E,s=i.child,i.tag===22&&i.memoizedState!==null?na(l):s!==null?(s.return=i,E=s):na(l);for(;u!==null;)E=u,bs(u),u=u.sibling;E=l,sl=o,ye=p}ea(e)}else(l.subtreeFlags&8772)!==0&&u!==null?(u.return=l,E=u):ea(e)}}function ea(e){for(;E!==null;){var t=E;if((t.flags&8772)!==0){var n=t.alternate;try{if((t.flags&8772)!==0)switch(t.tag){case 0:case 11:case 15:ye||al(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!ye)if(n===null)r.componentDidMount();else{var l=t.elementType===t.type?n.memoizedProps:et(t.type,n.memoizedProps);r.componentDidUpdate(l,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var u=t.updateQueue;u!==null&&ts(t,u,r);break;case 3:var i=t.updateQueue;if(i!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}ts(t,i,n)}break;case 5:var o=t.stateNode;if(n===null&&t.flags&4){n=o;var s=t.memoizedProps;switch(t.type){case\"button\":case\"input\":case\"select\":case\"textarea\":s.autoFocus&&n.focus();break;case\"img\":s.src&&(n.src=s.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var p=t.alternate;if(p!==null){var y=p.memoizedState;if(y!==null){var g=y.dehydrated;g!==null&&Wn(g)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(m(163))}ye||t.flags&512&&bu(t)}catch(v){q(t,t.return,v)}}if(t===e){E=null;break}if(n=t.sibling,n!==null){n.return=t.return,E=n;break}E=t.return}}function ta(e){for(;E!==null;){var t=E;if(t===e){E=null;break}var n=t.sibling;if(n!==null){n.return=t.return,E=n;break}E=t.return}}function na(e){for(;E!==null;){var t=E;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{al(4,t)}catch(s){q(t,n,s)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount==\"function\"){var l=t.return;try{r.componentDidMount()}catch(s){q(t,l,s)}}var u=t.return;try{bu(t)}catch(s){q(t,u,s)}break;case 5:var i=t.return;try{bu(t)}catch(s){q(t,i,s)}}}catch(s){q(t,t.return,s)}if(t===e){E=null;break}var o=t.sibling;if(o!==null){o.return=t.return,E=o;break}E=t.return}}var lc=Math.ceil,fl=pe.ReactCurrentDispatcher,ni=pe.ReactCurrentOwner,$e=pe.ReactCurrentBatchConfig,I=0,se=null,re=null,ce=0,Ie=0,zn=Mt(0),ue=0,dr=null,bt=0,cl=0,ri=0,pr=null,Pe=null,li=0,Tn=1/0,Ct=null,dl=!1,ui=null,Ut=null,pl=!1,Vt=null,ml=0,mr=0,ii=null,vl=-1,hl=0;function Se(){return(I&6)!==0?ee():vl!==-1?vl:vl=ee()}function At(e){return(e.mode&1)===0?1:(I&2)!==0&&ce!==0?ce&-ce:Bf.transition!==null?(hl===0&&(hl=Xi()),hl):(e=A,e!==0||(e=window.event,e=e===void 0?16:ro(e.type)),e)}function rt(e,t,n,r){if(50<mr)throw mr=0,ii=null,Error(m(185));Un(e,n,r),((I&2)===0||e!==se)&&(e===se&&((I&2)===0&&(cl|=n),ue===4&&Bt(e,ce)),Ne(e,r),n===1&&I===0&&(t.mode&1)===0&&(Tn=ee()+500,$r&&Ot()))}function Ne(e,t){var n=e.callbackNode;Aa(e,t);var r=xr(e,e===se?ce:0);if(r===0)n!==null&&Qi(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&Qi(n),t===1)e.tag===0?Af(la.bind(null,e)):Wo(la.bind(null,e)),Ff(function(){(I&6)===0&&Ot()}),n=null;else{switch(Gi(r)){case 1:n=Vl;break;case 4:n=Ki;break;case 16:n=kr;break;case 536870912:n=Yi;break;default:n=kr}n=da(n,ra.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ra(e,t){if(vl=-1,hl=0,(I&6)!==0)throw Error(m(327));var n=e.callbackNode;if(Ln()&&e.callbackNode!==n)return null;var r=xr(e,e===se?ce:0);if(r===0)return null;if((r&30)!==0||(r&e.expiredLanes)!==0||t)t=yl(e,r);else{t=r;var l=I;I|=2;var u=ia();(se!==e||ce!==t)&&(Ct=null,Tn=ee()+500,tn(e,t));do try{oc();break}catch(o){ua(e,o)}while(!0);_u(),fl.current=u,I=l,re!==null?t=0:(se=null,ce=0,t=ue)}if(t!==0){if(t===2&&(l=Al(e),l!==0&&(r=l,t=oi(e,l))),t===1)throw n=dr,tn(e,0),Bt(e,r),Ne(e,ee()),n;if(t===6)Bt(e,r);else{if(l=e.current.alternate,(r&30)===0&&!uc(l)&&(t=yl(e,r),t===2&&(u=Al(e),u!==0&&(r=u,t=oi(e,u))),t===1))throw n=dr,tn(e,0),Bt(e,r),Ne(e,ee()),n;switch(e.finishedWork=l,e.finishedLanes=r,t){case 0:case 1:throw Error(m(345));case 2:nn(e,Pe,Ct);break;case 3:if(Bt(e,r),(r&130023424)===r&&(t=li+500-ee(),10<t)){if(xr(e,0)!==0)break;if(l=e.suspendedLanes,(l&r)!==r){Se(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=pu(nn.bind(null,e,Pe,Ct),t);break}nn(e,Pe,Ct);break;case 4:if(Bt(e,r),(r&4194240)===r)break;for(t=e.eventTimes,l=-1;0<r;){var i=31-Je(r);u=1<<i,i=t[i],i>l&&(l=i),r&=~u}if(r=l,r=ee()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*lc(r/1960))-r,10<r){e.timeoutHandle=pu(nn.bind(null,e,Pe,Ct),r);break}nn(e,Pe,Ct);break;case 5:nn(e,Pe,Ct);break;default:throw Error(m(329))}}}return Ne(e,ee()),e.callbackNode===n?ra.bind(null,e):null}function oi(e,t){var n=pr;return e.current.memoizedState.isDehydrated&&(tn(e,t).flags|=256),e=yl(e,t),e!==2&&(t=Pe,Pe=n,t!==null&&si(t)),e}function si(e){Pe===null?Pe=e:Pe.push.apply(Pe,e)}function uc(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var l=n[r],u=l.getSnapshot;l=l.value;try{if(!qe(u(),l))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Bt(e,t){for(t&=~ri,t&=~cl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Je(t),r=1<<n;e[n]=-1,t&=~r}}function la(e){if((I&6)!==0)throw Error(m(327));Ln();var t=xr(e,0);if((t&1)===0)return Ne(e,ee()),null;var n=yl(e,t);if(e.tag!==0&&n===2){var r=Al(e);r!==0&&(t=r,n=oi(e,r))}if(n===1)throw n=dr,tn(e,0),Bt(e,t),Ne(e,ee()),n;if(n===6)throw Error(m(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,nn(e,Pe,Ct),Ne(e,ee()),null}function ai(e,t){var n=I;I|=1;try{return e(t)}finally{I=n,I===0&&(Tn=ee()+500,$r&&Ot())}}function en(e){Vt!==null&&Vt.tag===0&&(I&6)===0&&Ln();var t=I;I|=1;var n=$e.transition,r=A;try{if($e.transition=null,A=1,e)return e()}finally{A=r,$e.transition=n,I=t,(I&6)===0&&Ot()}}function fi(){Ie=zn.current,Q(zn)}function tn(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,If(n)),re!==null)for(n=re.return;n!==null;){var r=n;switch(wu(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&Hr();break;case 3:xn(),Q(Ce),Q(me),Mu();break;case 5:Lu(r);break;case 4:xn();break;case 13:Q(G);break;case 19:Q(G);break;case 10:xu(r.type._context);break;case 22:case 23:fi()}n=n.return}if(se=e,re=e=Ht(e.current,null),ce=Ie=t,ue=0,dr=null,ri=cl=bt=0,Pe=pr=null,Zt!==null){for(t=0;t<Zt.length;t++)if(n=Zt[t],r=n.interleaved,r!==null){n.interleaved=null;var l=r.next,u=n.pending;if(u!==null){var i=u.next;u.next=l,r.next=i}n.pending=r}Zt=null}return e}function ua(e,t){do{var n=re;try{if(_u(),el.current=ll,tl){for(var r=Z.memoizedState;r!==null;){var l=r.queue;l!==null&&(l.pending=null),r=r.next}tl=!1}if(qt=0,oe=le=Z=null,ir=!1,or=0,ni.current=null,n===null||n.return===null){ue=1,dr=t,re=null;break}e:{var u=e,i=n.return,o=n,s=t;if(t=ce,o.flags|=32768,s!==null&&typeof s==\"object\"&&typeof s.then==\"function\"){var p=s,y=o,g=y.tag;if((y.mode&1)===0&&(g===0||g===11||g===15)){var v=y.alternate;v?(y.updateQueue=v.updateQueue,y.memoizedState=v.memoizedState,y.lanes=v.lanes):(y.updateQueue=null,y.memoizedState=null)}var k=Ls(i);if(k!==null){k.flags&=-257,Rs(k,i,o,u,t),k.mode&1&&Ts(u,p,t),t=k,s=p;var _=t.updateQueue;if(_===null){var x=new Set;x.add(s),t.updateQueue=x}else _.add(s);break e}else{if((t&1)===0){Ts(u,p,t),ci();break e}s=Error(m(426))}}else if(X&&o.mode&1){var te=Ls(i);if(te!==null){(te.flags&65536)===0&&(te.flags|=256),Rs(te,i,o,u,t),Eu(Pn(s,o));break e}}u=s=Pn(s,o),ue!==4&&(ue=2),pr===null?pr=[u]:pr.push(u),u=i;do{switch(u.tag){case 3:u.flags|=65536,t&=-t,u.lanes|=t;var c=Ns(u,s,t);es(u,c);break e;case 1:o=s;var a=u.type,d=u.stateNode;if((u.flags&128)===0&&(typeof a.getDerivedStateFromError==\"function\"||d!==null&&typeof d.componentDidCatch==\"function\"&&(Ut===null||!Ut.has(d)))){u.flags|=65536,t&=-t,u.lanes|=t;var w=zs(u,o,t);es(u,w);break e}}u=u.return}while(u!==null)}sa(n)}catch(P){t=P,re===n&&n!==null&&(re=n=n.return);continue}break}while(!0)}function ia(){var e=fl.current;return fl.current=ll,e===null?ll:e}function ci(){(ue===0||ue===3||ue===2)&&(ue=4),se===null||(bt&268435455)===0&&(cl&268435455)===0||Bt(se,ce)}function yl(e,t){var n=I;I|=2;var r=ia();(se!==e||ce!==t)&&(Ct=null,tn(e,t));do try{ic();break}catch(l){ua(e,l)}while(!0);if(_u(),I=n,fl.current=r,re!==null)throw Error(m(261));return se=null,ce=0,ue}function ic(){for(;re!==null;)oa(re)}function oc(){for(;re!==null&&!Ra();)oa(re)}function oa(e){var t=ca(e.alternate,e,Ie);e.memoizedProps=e.pendingProps,t===null?sa(e):re=t,ni.current=null}function sa(e){var t=e;do{var n=t.alternate;if(e=t.return,(t.flags&32768)===0){if(n=bf(n,t,Ie),n!==null){re=n;return}}else{if(n=ec(n,t),n!==null){n.flags&=32767,re=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{ue=6,re=null;return}}if(t=t.sibling,t!==null){re=t;return}re=t=e}while(t!==null);ue===0&&(ue=5)}function nn(e,t,n){var r=A,l=$e.transition;try{$e.transition=null,A=1,sc(e,t,n,r)}finally{$e.transition=l,A=r}return null}function sc(e,t,n,r){do Ln();while(Vt!==null);if((I&6)!==0)throw Error(m(327));n=e.finishedWork;var l=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(m(177));e.callbackNode=null,e.callbackPriority=0;var u=n.lanes|n.childLanes;if(Ba(e,u),e===se&&(re=se=null,ce=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||pl||(pl=!0,da(kr,function(){return Ln(),null})),u=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||u){u=$e.transition,$e.transition=null;var i=A;A=1;var o=I;I|=4,ni.current=null,nc(e,n),qs(n,e),zf(cu),zr=!!fu,cu=fu=null,e.current=n,rc(n),Ma(),I=o,A=i,$e.transition=u}else e.current=n;if(pl&&(pl=!1,Vt=e,ml=l),u=e.pendingLanes,u===0&&(Ut=null),Ia(n.stateNode),Ne(e,ee()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)l=t[n],r(l.value,{componentStack:l.stack,digest:l.digest});if(dl)throw dl=!1,e=ui,ui=null,e;return(ml&1)!==0&&e.tag!==0&&Ln(),u=e.pendingLanes,(u&1)!==0?e===ii?mr++:(mr=0,ii=e):mr=0,Ot(),null}function Ln(){if(Vt!==null){var e=Gi(ml),t=$e.transition,n=A;try{if($e.transition=null,A=16>e?16:e,Vt===null)var r=!1;else{if(e=Vt,Vt=null,ml=0,(I&6)!==0)throw Error(m(331));var l=I;for(I|=4,E=e.current;E!==null;){var u=E,i=u.child;if((E.flags&16)!==0){var o=u.deletions;if(o!==null){for(var s=0;s<o.length;s++){var p=o[s];for(E=p;E!==null;){var y=E;switch(y.tag){case 0:case 11:case 15:cr(8,y,u)}var g=y.child;if(g!==null)g.return=y,E=g;else for(;E!==null;){y=E;var v=y.sibling,k=y.return;if(Ys(y),y===p){E=null;break}if(v!==null){v.return=k,E=v;break}E=k}}}var _=u.alternate;if(_!==null){var x=_.child;if(x!==null){_.child=null;do{var te=x.sibling;x.sibling=null,x=te}while(x!==null)}}E=u}}if((u.subtreeFlags&2064)!==0&&i!==null)i.return=u,E=i;else e:for(;E!==null;){if(u=E,(u.flags&2048)!==0)switch(u.tag){case 0:case 11:case 15:cr(9,u,u.return)}var c=u.sibling;if(c!==null){c.return=u.return,E=c;break e}E=u.return}}var a=e.current;for(E=a;E!==null;){i=E;var d=i.child;if((i.subtreeFlags&2064)!==0&&d!==null)d.return=i,E=d;else e:for(i=a;E!==null;){if(o=E,(o.flags&2048)!==0)try{switch(o.tag){case 0:case 11:case 15:al(9,o)}}catch(P){q(o,o.return,P)}if(o===i){E=null;break e}var w=o.sibling;if(w!==null){w.return=o.return,E=w;break e}E=o.return}}if(I=l,Ot(),ot&&typeof ot.onPostCommitFiberRoot==\"function\")try{ot.onPostCommitFiberRoot(Er,e)}catch{}r=!0}return r}finally{A=n,$e.transition=t}}return!1}function aa(e,t,n){t=Pn(n,t),t=Ns(e,t,1),e=Ft(e,t,1),t=Se(),e!==null&&(Un(e,1,t),Ne(e,t))}function q(e,t,n){if(e.tag===3)aa(e,e,n);else for(;t!==null;){if(t.tag===3){aa(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError==\"function\"||typeof r.componentDidCatch==\"function\"&&(Ut===null||!Ut.has(r))){e=Pn(n,e),e=zs(t,e,1),t=Ft(t,e,1),e=Se(),t!==null&&(Un(t,1,e),Ne(t,e));break}}t=t.return}}function ac(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=Se(),e.pingedLanes|=e.suspendedLanes&n,se===e&&(ce&n)===n&&(ue===4||ue===3&&(ce&130023424)===ce&&500>ee()-li?tn(e,0):ri|=n),Ne(e,t)}function fa(e,t){t===0&&((e.mode&1)===0?t=1:(t=_r,_r<<=1,(_r&130023424)===0&&(_r=4194304)));var n=Se();e=St(e,t),e!==null&&(Un(e,t,n),Ne(e,n))}function fc(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),fa(e,n)}function cc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,l=e.memoizedState;l!==null&&(n=l.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(m(314))}r!==null&&r.delete(t),fa(e,n)}var ca;ca=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Ce.current)xe=!0;else{if((e.lanes&n)===0&&(t.flags&128)===0)return xe=!1,qf(e,t,n);xe=(e.flags&131072)!==0}else xe=!1,X&&(t.flags&1048576)!==0&&$o(t,Kr,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;ol(e,t),e=t.pendingProps;var l=gn(t,me.current);_n(t,n),l=Iu(null,t,r,e,l,n);var u=Fu();return t.flags|=1,typeof l==\"object\"&&l!==null&&typeof l.render==\"function\"&&l.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,_e(r)?(u=!0,Wr(t)):u=!1,t.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,zu(t),l.updater=ul,t.stateNode=l,l._reactInternals=t,Hu(t,r,e,n),t=Ku(null,t,r,!0,u,n)):(t.tag=0,X&&u&&gu(t),we(null,t,l,n),t=t.child),t;case 16:r=t.elementType;e:{switch(ol(e,t),e=t.pendingProps,l=r._init,r=l(r._payload),t.type=r,l=t.tag=pc(r),e=et(r,e),l){case 0:t=Qu(null,t,r,e,n);break e;case 1:t=js(null,t,r,e,n);break e;case 11:t=Ms(null,t,r,e,n);break e;case 14:t=Ds(null,t,r,et(r.type,e),n);break e}throw Error(m(306,r,\"\"))}return t;case 0:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:et(r,l),Qu(e,t,r,l,n);case 1:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:et(r,l),js(e,t,r,l,n);case 3:e:{if(Us(t),e===null)throw Error(m(387));r=t.pendingProps,u=t.memoizedState,l=u.element,bo(e,t),qr(t,r,null,n);var i=t.memoizedState;if(r=i.element,u.isDehydrated)if(u={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=u,t.memoizedState=u,t.flags&256){l=Pn(Error(m(423)),t),t=Vs(e,t,r,n,l);break e}else if(r!==l){l=Pn(Error(m(424)),t),t=Vs(e,t,r,n,l);break e}else for(Oe=Rt(t.stateNode.containerInfo.firstChild),De=t,X=!0,be=null,n=Jo(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(kn(),r===l){t=Et(e,t,n);break e}we(e,t,r,n)}t=t.child}return t;case 5:return ns(t),e===null&&ku(t),r=t.type,l=t.pendingProps,u=e!==null?e.memoizedProps:null,i=l.children,du(r,l)?i=null:u!==null&&du(r,u)&&(t.flags|=32),Fs(e,t),we(e,t,i,n),t.child;case 6:return e===null&&ku(t),null;case 13:return As(e,t,n);case 4:return Tu(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=En(t,null,r,n):we(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:et(r,l),Ms(e,t,r,l,n);case 7:return we(e,t,t.pendingProps,n),t.child;case 8:return we(e,t,t.pendingProps.children,n),t.child;case 12:return we(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,l=t.pendingProps,u=t.memoizedProps,i=l.value,W(Gr,r._currentValue),r._currentValue=i,u!==null)if(qe(u.value,i)){if(u.children===l.children&&!Ce.current){t=Et(e,t,n);break e}}else for(u=t.child,u!==null&&(u.return=t);u!==null;){var o=u.dependencies;if(o!==null){i=u.child;for(var s=o.firstContext;s!==null;){if(s.context===r){if(u.tag===1){s=kt(-1,n&-n),s.tag=2;var p=u.updateQueue;if(p!==null){p=p.shared;var y=p.pending;y===null?s.next=s:(s.next=y.next,y.next=s),p.pending=s}}u.lanes|=n,s=u.alternate,s!==null&&(s.lanes|=n),Pu(u.return,n,t),o.lanes|=n;break}s=s.next}}else if(u.tag===10)i=u.type===t.type?null:u.child;else if(u.tag===18){if(i=u.return,i===null)throw Error(m(341));i.lanes|=n,o=i.alternate,o!==null&&(o.lanes|=n),Pu(i,n,t),i=u.sibling}else i=u.child;if(i!==null)i.return=u;else for(i=u;i!==null;){if(i===t){i=null;break}if(u=i.sibling,u!==null){u.return=i.return,i=u;break}i=i.return}u=i}we(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=t.pendingProps.children,_n(t,n),l=He(l),r=r(l),t.flags|=1,we(e,t,r,n),t.child;case 14:return r=t.type,l=et(r,t.pendingProps),l=et(r.type,l),Ds(e,t,r,l,n);case 15:return Os(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:et(r,l),ol(e,t),t.tag=1,_e(r)?(e=!0,Wr(t)):e=!1,_n(t,n),xs(t,r,l),Hu(t,r,l,n),Ku(null,t,r,!0,e,n);case 19:return Hs(e,t,n);case 22:return Is(e,t,n)}throw Error(m(156,t.tag))};function da(e,t){return $i(e,t)}function dc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Qe(e,t,n,r){return new dc(e,t,n,r)}function di(e){return e=e.prototype,!(!e||!e.isReactComponent)}function pc(e){if(typeof e==\"function\")return di(e)?1:0;if(e!=null){if(e=e.$$typeof,e===ut)return 11;if(e===it)return 14}return 2}function Ht(e,t){var n=e.alternate;return n===null?(n=Qe(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function gl(e,t,n,r,l,u){var i=2;if(r=e,typeof e==\"function\")di(e)&&(i=1);else if(typeof e==\"string\")i=5;else e:switch(e){case ke:return rn(n.children,l,u,t);case Ve:i=8,l|=8;break;case _t:return e=Qe(12,n,t,l|2),e.elementType=_t,e.lanes=u,e;case Le:return e=Qe(13,n,t,l),e.elementType=Le,e.lanes=u,e;case Ze:return e=Qe(19,n,t,l),e.elementType=Ze,e.lanes=u,e;case J:return wl(n,l,u,t);default:if(typeof e==\"object\"&&e!==null)switch(e.$$typeof){case vt:i=10;break e;case $t:i=9;break e;case ut:i=11;break e;case it:i=14;break e;case Ee:i=16,r=null;break e}throw Error(m(130,e==null?e:typeof e,\"\"))}return t=Qe(i,n,t,l),t.elementType=e,t.type=r,t.lanes=u,t}function rn(e,t,n,r){return e=Qe(7,e,r,t),e.lanes=n,e}function wl(e,t,n,r){return e=Qe(22,e,r,t),e.elementType=J,e.lanes=n,e.stateNode={isHidden:!1},e}function pi(e,t,n){return e=Qe(6,e,null,t),e.lanes=n,e}function mi(e,t,n){return t=Qe(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function mc(e,t,n,r,l){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Bl(0),this.expirationTimes=Bl(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bl(0),this.identifierPrefix=r,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function vi(e,t,n,r,l,u,i,o,s){return e=new mc(e,t,n,o,s),t===1?(t=1,u===!0&&(t|=8)):t=0,u=Qe(3,null,null,t),e.current=u,u.stateNode=e,u.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},zu(u),e}function vc(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:ge,key:r==null?null:\"\"+r,children:e,containerInfo:t,implementation:n}}function pa(e){if(!e)return Dt;e=e._reactInternals;e:{if(Qt(e)!==e||e.tag!==1)throw Error(m(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(_e(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(m(171))}if(e.tag===1){var n=e.type;if(_e(n))return Bo(e,n,t)}return t}function ma(e,t,n,r,l,u,i,o,s){return e=vi(n,r,!0,e,l,u,i,o,s),e.context=pa(null),n=e.current,r=Se(),l=At(n),u=kt(r,l),u.callback=t??null,Ft(n,u,l),e.current.lanes=l,Un(e,l,r),Ne(e,r),e}function Sl(e,t,n,r){var l=t.current,u=Se(),i=At(l);return n=pa(n),t.context===null?t.context=n:t.pendingContext=n,t=kt(u,i),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=Ft(l,t,i),e!==null&&(rt(e,l,i,u),Jr(e,l,i)),i}function kl(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function va(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function hi(e,t){va(e,t),(e=e.alternate)&&va(e,t)}function hc(){return null}var ha=typeof reportError==\"function\"?reportError:function(e){console.error(e)};function yi(e){this._internalRoot=e}El.prototype.render=yi.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(m(409));Sl(e,t,null,null)},El.prototype.unmount=yi.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;en(function(){Sl(null,e,null,null)}),t[ht]=null}};function El(e){this._internalRoot=e}El.prototype.unstable_scheduleHydration=function(e){if(e){var t=qi();e={blockedOn:null,target:e,priority:t};for(var n=0;n<zt.length&&t!==0&&t<zt[n].priority;n++);zt.splice(n,0,e),n===0&&to(e)}};function gi(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function Cl(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==\" react-mount-point-unstable \"))}function ya(){}function yc(e,t,n,r,l){if(l){if(typeof r==\"function\"){var u=r;r=function(){var p=kl(i);u.call(p)}}var i=ma(t,r,e,0,null,!1,!1,\"\",ya);return e._reactRootContainer=i,e[ht]=i.current,qn(e.nodeType===8?e.parentNode:e),en(),i}for(;l=e.lastChild;)e.removeChild(l);if(typeof r==\"function\"){var o=r;r=function(){var p=kl(s);o.call(p)}}var s=vi(e,0,!1,null,null,!1,!1,\"\",ya);return e._reactRootContainer=s,e[ht]=s.current,qn(e.nodeType===8?e.parentNode:e),en(function(){Sl(t,s,n,r)}),s}function _l(e,t,n,r,l){var u=n._reactRootContainer;if(u){var i=u;if(typeof l==\"function\"){var o=l;l=function(){var s=kl(i);o.call(s)}}Sl(t,i,e,l)}else i=yc(n,t,e,l,r);return kl(i)}Zi=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=jn(t.pendingLanes);n!==0&&(Hl(t,n|1),Ne(t,ee()),(I&6)===0&&(Tn=ee()+500,Ot()))}break;case 13:en(function(){var r=St(e,1);if(r!==null){var l=Se();rt(r,e,1,l)}}),hi(e,1)}},Wl=function(e){if(e.tag===13){var t=St(e,134217728);if(t!==null){var n=Se();rt(t,e,134217728,n)}hi(e,134217728)}},Ji=function(e){if(e.tag===13){var t=At(e),n=St(e,t);if(n!==null){var r=Se();rt(n,e,t,r)}hi(e,t)}},qi=function(){return A},bi=function(e,t){var n=A;try{return A=e,t()}finally{A=n}},Il=function(e,t,n){switch(t){case\"input\":if(Nl(e,n),t=n.name,n.type===\"radio\"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+t)+'][type=\"radio\"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var l=Br(r);if(!l)throw Error(m(90));Ci(r),Nl(r,l)}}}break;case\"textarea\":zi(e,n);break;case\"select\":t=n.value,t!=null&&un(e,!!n.multiple,t,!1)}},ji=ai,Ui=en;var gc={usingClientEntryPoint:!1,Events:[tr,hn,Br,Ii,Fi,ai]},vr={findFiberByHostInstance:Kt,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"},wc={bundleType:vr.bundleType,version:vr.version,rendererPackageName:vr.rendererPackageName,rendererConfig:vr.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:pe.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Hi(e),e===null?null:e.stateNode},findFiberByHostInstance:vr.findFiberByHostInstance||hc,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\"){var xl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!xl.isDisabled&&xl.supportsFiber)try{Er=xl.inject(wc),ot=xl}catch{}}return ze.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=gc,ze.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!gi(t))throw Error(m(200));return vc(e,t,null,n)},ze.createRoot=function(e,t){if(!gi(e))throw Error(m(299));var n=!1,r=\"\",l=ha;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(l=t.onRecoverableError)),t=vi(e,1,!1,null,null,n,!1,r,l),e[ht]=t.current,qn(e.nodeType===8?e.parentNode:e),new yi(t)},ze.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render==\"function\"?Error(m(188)):(e=Object.keys(e).join(\",\"),Error(m(268,e)));return e=Hi(t),e=e===null?null:e.stateNode,e},ze.flushSync=function(e){return en(e)},ze.hydrate=function(e,t,n){if(!Cl(t))throw Error(m(200));return _l(null,e,t,!0,n)},ze.hydrateRoot=function(e,t,n){if(!gi(e))throw Error(m(405));var r=n!=null&&n.hydratedSources||null,l=!1,u=\"\",i=ha;if(n!=null&&(n.unstable_strictMode===!0&&(l=!0),n.identifierPrefix!==void 0&&(u=n.identifierPrefix),n.onRecoverableError!==void 0&&(i=n.onRecoverableError)),t=ma(t,null,e,1,n??null,l,!1,u,i),e[ht]=t.current,qn(e),r)for(e=0;e<r.length;e++)n=r[e],l=n._getVersion,l=l(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,l]:t.mutableSourceEagerHydrationData.push(n,l);return new El(t)},ze.render=function(e,t,n){if(!Cl(t))throw Error(m(200));return _l(null,e,t,!1,n)},ze.unmountComponentAtNode=function(e){if(!Cl(e))throw Error(m(40));return e._reactRootContainer?(en(function(){_l(null,null,e,!1,function(){e._reactRootContainer=null,e[ht]=null})}),!0):!1},ze.unstable_batchedUpdates=ai,ze.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Cl(n))throw Error(m(200));if(e==null||e._reactInternals===void 0)throw Error(m(38));return _l(e,t,n,!1,r)},ze.version=\"18.3.1-next-f1338f8080-20240426\",ze}var Ca;function zc(){if(Ca)return Si.exports;Ca=1;function R(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>\"u\"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!=\"function\"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(R)}catch(b){console.error(b)}}return R(),Si.exports=xc(),Si.exports}export{zc as a,Pc as c,Nc as g,Ec as r};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/Analysis-DUN-9keO.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/Analysis-DUN-9keO.js",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{j as s,S as C,B as _,T as k}from\"./index-BKXu7Q-C.js\";import{r as t}from\"./visx-B2MmNCqL.js\";import{O as w}from\"./OptimizedComparisonDashboard-BGVjHLH7.js\";import{B as p}from\"./Button-RYSOAQ-7.js\";import{C as m}from\"./Card-Ct37lo0h.js\";import{I as L}from\"./Input-DPGRcZ7k.js\";import{u as R}from\"./useComparativeAnalysis-BL2UHmK9.js\";import{D as B}from\"./download-lM8Gle9j.js\";import{P as E}from\"./pie-chart-zkyf_yA9.js\";import\"./vendor-Dvwkxfce.js\";import\"./Modal-C6wrMskg.js\";import\"./VirtualizedTable-Vrto2PTf.js\";import\"./useQuery-CL--WJBR.js\";import\"./api-DwEF0gfm.js\";import\"./messages-DkI0amMe.js\";import\"./http-client-CwHweUYk.js\";const h=[{id:\"peer\",label:\"Peer Comparison\",icon:_,description:\"Compare against similar companies\"},{id:\"sector\",label:\"Sector Benchmark\",icon:k,description:\"Benchmark against sector performance\"},{id:\"portfolio\",label:\"Portfolio Analysis\",icon:E,description:\"Analyze portfolio composition and risk\"}],G=()=>{var d;const[n,y]=t.useState(\"AAPL\"),[i,x]=t.useState(\"peer\"),[b,u]=t.useState(\"\"),j=t.useMemo(()=>({includePeerAnalysis:i===\"peer\",includeSectorBenchmark:i===\"sector\",includePortfolioAnalysis:i===\"portfolio\",peerSelectionCriteria:{sectorMatch:!0,industryMatch:!0,marketCapRange:{minRatio:.5,maxRatio:2}}}),[i]),{comparativeAnalysis:g,sectorAnalysis:N,portfolioAnalysis:f,isLoading:l,error:c,exportAnalysisData:v}=R({symbol:n,...j}),A=e=>{const a=e.target.value.toUpperCase();u(a),a.length>=3&&a.length<=5&&/^[A-Z]+$/.test(a)&&y(a)},S=async()=>{try{const e=await v();if(e){const a=new Blob([JSON.stringify(e,null,2)],{type:\"application/json\"}),r=URL.createObjectURL(a),o=document.createElement(\"a\");o.href=r,o.download=`analysis-${n}-${new Date().toISOString().split(\"T\")[0]}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(r)}}catch(e){console.error(\"Export failed:\",e)}};return s.jsxs(\"div\",{className:\"analysis-page\",children:[s.jsxs(\"div\",{className:\"analysis-page__header\",children:[s.jsxs(\"div\",{className:\"analysis-page__title-section\",children:[s.jsx(\"h1\",{className:\"analysis-page__title\",children:\"Comparative Analysis\"}),s.jsx(\"p\",{className:\"analysis-page__description\",children:\"Comprehensive analysis tools for peer comparison, sector benchmarking, and portfolio analysis\"})]}),s.jsxs(\"div\",{className:\"analysis-page__controls\",children:[s.jsxs(\"div\",{className:\"analysis-page__search\",children:[s.jsxs(\"div\",{className:\"search-input-wrapper\",children:[s.jsx(C,{className:\"search-input-icon\"}),s.jsx(L,{type:\"text\",placeholder:\"Enter symbol (e.g., AAPL)\",value:b,onChange:A,className:\"search-input\",\"aria-label\":\"Search for stock symbol\"})]}),n&&s.jsxs(\"span\",{className:\"analysis-page__selected-symbol\",children:[\"Analyzing: \",s.jsx(\"strong\",{children:n})]})]}),s.jsxs(p,{variant:\"outline\",onClick:S,disabled:l||!g&&!N&&!f,className:\"analysis-page__export-btn\",children:[s.jsx(B,{className:\"btn-icon\"}),\"Export Data\"]})]})]}),s.jsx(\"div\",{className:\"analysis-page__tabs\",children:s.jsx(\"div\",{className:\"tab-list\",role:\"tablist\",children:h.map(e=>{const a=e.icon;return s.jsxs(\"button\",{id:`${e.id}-tab`,role:\"tab\",\"aria-selected\":i===e.id,\"aria-controls\":`${e.id}-panel`,className:`tab-button ${i===e.id?\"tab-button--active\":\"\"}`,onClick:()=>x(e.id),children:[s.jsx(a,{className:\"tab-icon\"}),s.jsxs(\"div\",{className:\"tab-content\",children:[s.jsx(\"span\",{className:\"tab-label\",children:e.label}),s.jsx(\"span\",{className:\"tab-description\",children:e.description})]})]},e.id)})})}),s.jsxs(\"div\",{className:\"analysis-page__content\",children:[c&&s.jsx(m,{className:\"error-card\",children:s.jsxs(\"div\",{className:\"error-content\",children:[s.jsx(\"h3\",{children:\"Analysis Error\"}),s.jsx(\"p\",{children:c.message??\"Failed to load analysis data\"}),s.jsx(p,{onClick:()=>window.location.reload(),variant:\"outline\",children:\"Retry Analysis\"})]})}),l&&s.jsx(m,{className:\"loading-card\",children:s.jsxs(\"div\",{className:\"loading-content\",children:[s.jsx(\"div\",{className:\"loading-spinner\",children:s.jsx(\"div\",{className:\"spinner\"})}),s.jsxs(\"p\",{children:[\"Loading\",\" \",(d=h.find(e=>e.id===i))==null?void 0:d.label.toLowerCase(),\"...\"]})]})}),!l&&!c&&s.jsx(w,{symbol:n,showPeerComparison:i===\"peer\",showSectorBenchmark:i===\"sector\",showPortfolioAnalysis:i===\"portfolio\",className:\"analysis-dashboard\",onExport:e=>{const a=new Blob([JSON.stringify(e,null,2)],{type:\"application/json\"}),r=URL.createObjectURL(a),o=document.createElement(\"a\");o.href=r,o.download=`analysis-${n}-${new Date().toISOString().split(\"T\")[0]}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(r)},onError:e=>{console.error(\"Analysis dashboard error:\",e)},enableVirtualization:!0,pageSize:50})]})]})};export{G as default};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/visx-B2MmNCqL.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/visx-B2MmNCqL.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 5,
          "content": "*/var aa;function qi(){return aa||(aa=1,(function(e){(function(){var t={}.hasOwnProperty;function n(){for(var i=\"\",o=0;o<arguments.length;o++){var u=arguments[o];u&&(i=a(i,r(u)))}return i}function r(i){if(typeof i==\"string\"||typeof i==\"number\")return i;if(typeof i!=\"object\")return\"\";if(Array.isArray(i))return n.apply(null,i);if(i.toString!==Object.prototype.toString&&!i.toString.toString().includes(\"[native code]\"))return i.toString();var o=\"\";for(var u in i)t.call(i,u)&&i[u]&&(o=a(o,u));return o}function a(i,o){return o?i?i+\" \"+o:i+o:i}e.exports?(n.default=n,e.exports=n):window.classNames=n})()})(en)),en.exports}var Wo=qi();const Q=$e(Wo);var zo=[\"top\",\"left\",\"transform\",\"className\",\"children\",\"innerRef\"];function ir(){return ir=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ir.apply(this,arguments)}function Yo(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function ze(e){var t=e.top,n=t===void 0?0:t,r=e.left,a=r===void 0?0:r,i=e.transform,o=e.className,u=e.children,s=e.innerRef,l=Yo(e,zo);return $.createElement(\"g\",ir({ref:s,className:Q(\"visx-group\",o),transform:i||\"translate(\"+a+\", \"+n+\")\"},l),u)}ze.propTypes={top:W.number,left:W.number,transform:W.string,className:W.string,children:W.node,innerRef:W.oneOfType([W.string,W.func,W.object])};var or=Math.PI,ur=2*or,Oe=1e-6,Vo=ur-Oe;function sr(){this._x0=this._y0=this._x1=this._y1=null,this._=\"\"}function $t(){return new sr}sr.prototype=$t.prototype={constructor:sr,moveTo:function(e,t){this._+=\"M\"+(this._x0=this._x1=+e)+\",\"+(this._y0=this._y1=+t)},closePath:function(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+=\"Z\")},lineTo:function(e,t){this._+=\"L\"+(this._x1=+e)+\",\"+(this._y1=+t)},quadraticCurveTo:function(e,t,n,r){this._+=\"Q\"+ +e+\",\"+ +t+\",\"+(this._x1=+n)+\",\"+(this._y1=+r)},bezierCurveTo:function(e,t,n,r,a,i){this._+=\"C\"+ +e+\",\"+ +t+\",\"+ +n+\",\"+ +r+\",\"+(this._x1=+a)+\",\"+(this._y1=+i)},arcTo:function(e,t,n,r,a){e=+e,t=+t,n=+n,r=+r,a=+a;var i=this._x1,o=this._y1,u=n-e,s=r-t,l=i-e,c=o-t,f=l*l+c*c;if(a<0)throw new Error(\"negative radius: \"+a);if(this._x1===null)this._+=\"M\"+(this._x1=e)+\",\"+(this._y1=t);else if(f>Oe)if(!(Math.abs(c*u-s*l)>Oe)||!a)this._+=\"L\"+(this._x1=e)+\",\"+(this._y1=t);else{var h=n-i,p=r-o,y=u*u+s*s,M=h*h+p*p,x=Math.sqrt(y),k=Math.sqrt(f),v=a*Math.tan((or-Math.acos((y+f-M)/(2*x*k)))/2),m=v/k,g=v/x;Math.abs(m-1)>Oe&&(this._+=\"L\"+(e+m*l)+\",\"+(t+m*c)),this._+=\"A\"+a+\",\"+a+\",0,0,\"+ +(c*h>l*p)+\",\"+(this._x1=e+g*u)+\",\"+(this._y1=t+g*s)}},arc:function(e,t,n,r,a,i){e=+e,t=+t,n=+n,i=!!i;var o=n*Math.cos(r),u=n*Math.sin(r),s=e+o,l=t+u,c=1^i,f=i?r-a:a-r;if(n<0)throw new Error(\"negative radius: \"+n);this._x1===null?this._+=\"M\"+s+\",\"+l:(Math.abs(this._x1-s)>Oe||Math.abs(this._y1-l)>Oe)&&(this._+=\"L\"+s+\",\"+l),n&&(f<0&&(f=f%ur+ur),f>Vo?this._+=\"A\"+n+\",\"+n+\",0,1,\"+c+\",\"+(e-o)+\",\"+(t-u)+\"A\"+n+\",\"+n+\",0,1,\"+c+\",\"+(this._x1=s)+\",\"+(this._y1=l):f>Oe&&(this._+=\"A\"+n+\",\"+n+\",0,\"+ +(f>=or)+\",\"+c+\",\"+(this._x1=e+n*Math.cos(a))+\",\"+(this._y1=t+n*Math.sin(a))))},rect:function(e,t,n,r){this._+=\"M\"+(this._x0=this._x1=+e)+\",\"+(this._y0=this._y1=+t)+\"h\"+ +n+\"v\"+ +r+\"h\"+-n+\"Z\"},toString:function(){return this._}};function F(e){return function(){return e}}var ia=Math.abs,ee=Math.atan2,Ce=Math.cos,Go=Math.max,tn=Math.min,le=Math.sin,Ee=Math.sqrt,re=1e-12,tt=Math.PI,vt=tt/2,dt=2*tt;function Bo(e){return e>1?0:e<-1?tt:Math.acos(e)}function oa(e){return e>=1?vt:e<=-1?-vt:Math.asin(e)}function Ko(e){return e.innerRadius}function Zo(e){return e.outerRadius}function Xo(e){return e.startAngle}function Jo(e){return e.endAngle}function Qo(e){return e&&e.padAngle}function eu(e,t,n,r,a,i,o,u){var s=n-e,l=r-t,c=o-a,f=u-i,h=f*s-c*l;if(!(h*h<re))return h=(c*(t-i)-f*(e-a))/h,[e+h*s,t+h*l]}function st(e,t,n,r,a,i,o){var u=e-n,s=t-r,l=(o?i:-i)/Ee(u*u+s*s),c=l*s,f=-l*u,h=e+c,p=t+f,y=n+c,M=r+f,x=(h+y)/2,k=(p+M)/2,v=y-h,m=M-p,g=v*v+m*m,b=a-i,d=h*M-y*p,C=(m<0?-1:1)*Ee(Go(0,b*b*g-d*d)),_=(d*m-v*C)/g,R=(-d*v-m*C)/g,P=(d*m+v*C)/g,O=(-d*v+m*C)/g,T=_-x,S=R-k,L=P-x,z=O-k;return T*T+S*S>L*L+z*z&&(_=P,R=O),{cx:_,cy:R,x01:-c,y01:-f,x11:_*(a/b-1),y11:R*(a/b-1)}}function tu(){var e=Ko,t=Zo,n=F(0),r=null,a=Xo,i=Jo,o=Qo,u=null;function s(){var l,c,f=+e.apply(this,arguments),h=+t.apply(this,arguments),p=a.apply(this,arguments)-vt,y=i.apply(this,arguments)-vt,M=ia(y-p),x=y>p;if(u||(u=l=$t()),h<f&&(c=h,h=f,f=c),!(h>re))u.moveTo(0,0);else if(M>dt-re)u.moveTo(h*Ce(p),h*le(p)),u.arc(0,0,h,p,y,!x),f>re&&(u.moveTo(f*Ce(y),f*le(y)),u.arc(0,0,f,y,p,x));else{var k=p,v=y,m=p,g=y,b=M,d=M,C=o.apply(this,arguments)/2,_=C>re&&(r?+r.apply(this,arguments):Ee(f*f+h*h)),R=tn(ia(h-f)/2,+n.apply(this,arguments)),P=R,O=R,T,S;if(_>re){var L=oa(_/f*le(C)),z=oa(_/h*le(C));(b-=L*2)>re?(L*=x?1:-1,m+=L,g-=L):(b=0,m=g=(p+y)/2),(d-=z*2)>re?(z*=x?1:-1,k+=z,v-=z):(d=0,k=v=(p+y)/2)}var A=h*Ce(k),U=h*le(k),G=f*Ce(g),H=f*le(g);if(R>re){var q=h*Ce(v),Y=h*le(v),de=f*Ce(m),te=f*le(m),J;if(M<tt&&(J=eu(A,U,de,te,q,Y,G,H))){var xe=A-J[0],be=U-J[1],Ge=q-J[0],Be=Y-J[1],N=1/le(Bo((xe*Ge+be*Be)/(Ee(xe*xe+be*be)*Ee(Ge*Ge+Be*Be)))/2),j=Ee(J[0]*J[0]+J[1]*J[1]);P=tn(R,(f-j)/(N-1)),O=tn(R,(h-j)/(N+1))}}d>re?O>re?(T=st(de,te,A,U,h,O,x),S=st(q,Y,G,H,h,O,x),u.moveTo(T.cx+T.x01,T.cy+T.y01),O<R?u.arc(T.cx,T.cy,O,ee(T.y01,T.x01),ee(S.y01,S.x01),!x):(u.arc(T.cx,T.cy,O,ee(T.y01,T.x01),ee(T.y11,T.x11),!x),u.arc(0,0,h,ee(T.cy+T.y11,T.cx+T.x11),ee(S.cy+S.y11,S.cx+S.x11),!x),u.arc(S.cx,S.cy,O,ee(S.y11,S.x11),ee(S.y01,S.x01),!x))):(u.moveTo(A,U),u.arc(0,0,h,k,v,!x)):u.moveTo(A,U),!(f>re)||!(b>re)?u.lineTo(G,H):P>re?(T=st(G,H,q,Y,f,-P,x),S=st(A,U,de,te,f,-P,x),u.lineTo(T.cx+T.x01,T.cy+T.y01),P<R?u.arc(T.cx,T.cy,P,ee(T.y01,T.x01),ee(S.y01,S.x01),!x):(u.arc(T.cx,T.cy,P,ee(T.y01,T.x01),ee(T.y11,T.x11),!x),u.arc(0,0,f,ee(T.cy+T.y11,T.cx+T.x11),ee(S.cy+S.y11,S.cx+S.x11),x),u.arc(S.cx,S.cy,P,ee(S.y11,S.x11),ee(S.y01,S.x01),!x))):u.arc(0,0,f,g,m,x)}if(u.closePath(),l)return u=null,l+\"\"||null}return s.centroid=function(){var l=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,c=(+a.apply(this,arguments)+ +i.apply(this,arguments))/2-tt/2;return[Ce(c)*l,le(c)*l]},s.innerRadius=function(l){return arguments.length?(e=typeof l==\"function\"?l:F(+l),s):e},s.outerRadius=function(l){return arguments.length?(t=typeof l==\"function\"?l:F(+l),s):t},s.cornerRadius=function(l){return arguments.length?(n=typeof l==\"function\"?l:F(+l),s):n},s.padRadius=function(l){return arguments.length?(r=l==null?null:typeof l==\"function\"?l:F(+l),s):r},s.startAngle=function(l){return arguments.length?(a=typeof l==\"function\"?l:F(+l),s):a},s.endAngle=function(l){return arguments.length?(i=typeof l==\"function\"?l:F(+l),s):i},s.padAngle=function(l){return arguments.length?(o=typeof l==\"function\"?l:F(+l),s):o},s.context=function(l){return arguments.length?(u=l??null,s):u},s}function Fi(e){this._context=e}Fi.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t);break}}};function Ui(e){return new Fi(e)}function Hi(e){return e[0]}function Ii(e){return e[1]}function Wi(){var e=Hi,t=Ii,n=F(!0),r=null,a=Ui,i=null;function o(u){var s,l=u.length,c,f=!1,h;for(r==null&&(i=a(h=$t())),s=0;s<=l;++s)!(s<l&&n(c=u[s],s,u))===f&&((f=!f)?i.lineStart():i.lineEnd()),f&&i.point(+e(c,s,u),+t(c,s,u));if(h)return i=null,h+\"\"||null}return o.x=function(u){return arguments.length?(e=typeof u==\"function\"?u:F(+u),o):e},o.y=function(u){return arguments.length?(t=typeof u==\"function\"?u:F(+u),o):t},o.defined=function(u){return arguments.length?(n=typeof u==\"function\"?u:F(!!u),o):n},o.curve=function(u){return arguments.length?(a=u,r!=null&&(i=a(r)),o):a},o.context=function(u){return arguments.length?(u==null?r=i=null:i=a(r=u),o):r},o}function nu(){var e=Hi,t=null,n=F(0),r=Ii,a=F(!0),i=null,o=Ui,u=null;function s(c){var f,h,p,y=c.length,M,x=!1,k,v=new Array(y),m=new Array(y);for(i==null&&(u=o(k=$t())),f=0;f<=y;++f){if(!(f<y&&a(M=c[f],f,c))===x)if(x=!x)h=f,u.areaStart(),u.lineStart();else{for(u.lineEnd(),u.lineStart(),p=f-1;p>=h;--p)u.point(v[p],m[p]);u.lineEnd(),u.areaEnd()}x&&(v[f]=+e(M,f,c),m[f]=+n(M,f,c),u.point(t?+t(M,f,c):v[f],r?+r(M,f,c):m[f]))}if(k)return u=null,k+\"\"||null}function l(){return Wi().defined(a).curve(o).context(i)}return s.x=function(c){return arguments.length?(e=typeof c==\"function\"?c:F(+c),t=null,s):e},s.x0=function(c){return arguments.length?(e=typeof c==\"function\"?c:F(+c),s):e},s.x1=function(c){return arguments.length?(t=c==null?null:typeof c==\"function\"?c:F(+c),s):t},s.y=function(c){return arguments.length?(n=typeof c==\"function\"?c:F(+c),r=null,s):n},s.y0=function(c){return arguments.length?(n=typeof c==\"function\"?c:F(+c),s):n},s.y1=function(c){return arguments.length?(r=c==null?null:typeof c==\"function\"?c:F(+c),s):r},s.lineX0=s.lineY0=function(){return l().x(e).y(n)},s.lineY1=function(){return l().x(e).y(r)},s.lineX1=function(){return l().x(t).y(n)},s.defined=function(c){return arguments.length?(a=typeof c==\"function\"?c:F(!!c),s):a},s.curve=function(c){return arguments.length?(o=c,i!=null&&(u=o(i)),s):o},s.context=function(c){return arguments.length?(c==null?i=u=null:u=o(i=c),s):i},s}function ru(e,t){return t<e?-1:t>e?1:t>=e?0:NaN}function au(e){return e}function iu(){var e=au,t=ru,n=null,r=F(0),a=F(dt),i=F(0);function o(u){var s,l=u.length,c,f,h=0,p=new Array(l),y=new Array(l),M=+r.apply(this,arguments),x=Math.min(dt,Math.max(-dt,a.apply(this,arguments)-M)),k,v=Math.min(Math.abs(x)/l,i.apply(this,arguments)),m=v*(x<0?-1:1),g;for(s=0;s<l;++s)(g=y[p[s]=s]=+e(u[s],s,u))>0&&(h+=g);for(t!=null?p.sort(function(b,d){return t(y[b],y[d])}):n!=null&&p.sort(function(b,d){return n(u[b],u[d])}),s=0,f=h?(x-l*m)/h:0;s<l;++s,M=k)c=p[s],g=y[c],k=M+(g>0?g*f:0)+m,y[c]={data:u[c],index:s,value:g,startAngle:M,endAngle:k,padAngle:v};return y}return o.value=function(u){return arguments.length?(e=typeof u==\"function\"?u:F(+u),o):e},o.sortValues=function(u){return arguments.length?(t=u,n=null,o):t},o.sort=function(u){return arguments.length?(n=u,t=null,o):n},o.startAngle=function(u){return arguments.length?(r=typeof u==\"function\"?u:F(+u),o):r},o.endAngle=function(u){return arguments.length?(a=typeof u==\"function\"?u:F(+u),o):a},o.padAngle=function(u){return arguments.length?(i=typeof u==\"function\"?u:F(+u),o):i},o}function V(e,t){e(t)}function ou(e){var t=e===void 0?{}:e,n=t.innerRadius,r=t.outerRadius,a=t.cornerRadius,i=t.startAngle,o=t.endAngle,u=t.padAngle,s=t.padRadius,l=tu();return n!=null&&V(l.innerRadius,n),r!=null&&V(l.outerRadius,r),a!=null&&V(l.cornerRadius,a),i!=null&&V(l.startAngle,i),o!=null&&V(l.endAngle,o),u!=null&&V(l.padAngle,u),s!=null&&V(l.padRadius,s),l}function uu(e){var t=e===void 0?{}:e,n=t.x,r=t.x0,a=t.x1,i=t.y,o=t.y0,u=t.y1,s=t.defined,l=t.curve,c=nu();return n&&V(c.x,n),r&&V(c.x0,r),a&&V(c.x1,a),i&&V(c.y,i),o&&V(c.y0,o),u&&V(c.y1,u),s&&c.defined(s),l&&c.curve(l),c}function su(e){var t=e===void 0?{}:e,n=t.x,r=t.y,a=t.defined,i=t.curve,o=Wi();return n&&V(o.x,n),r&&V(o.y,r),a&&o.defined(a),i&&o.curve(i),o}function lu(e){var t=e===void 0?{}:e,n=t.startAngle,r=t.endAngle,a=t.padAngle,i=t.value,o=t.sort,u=t.sortValues,s=iu();return(o===null||o!=null)&&s.sort(o),(u===null||u!=null)&&s.sortValues(u),i!=null&&s.value(i),a!=null&&V(s.padAngle,a),n!=null&&V(s.startAngle,n),r!=null&&V(s.endAngle,r),s}var cu=[\"className\",\"top\",\"left\",\"data\",\"centroid\",\"innerRadius\",\"outerRadius\",\"cornerRadius\",\"startAngle\",\"endAngle\",\"padAngle\",\"padRadius\",\"pieSort\",\"pieSortValues\",\"pieValue\",\"children\",\"fill\"];function lr(){return lr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},lr.apply(this,arguments)}function fu(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function rh(e){var t=e.className,n=e.top,r=e.left,a=e.data,i=a===void 0?[]:a,o=e.centroid,u=e.innerRadius,s=u===void 0?0:u,l=e.outerRadius,c=e.cornerRadius,f=e.startAngle,h=e.endAngle,p=e.padAngle,y=e.padRadius,M=e.pieSort,x=e.pieSortValues,k=e.pieValue,v=e.children,m=e.fill,g=m===void 0?\"\":m,b=fu(e,cu),d=ou({innerRadius:s,outerRadius:l,cornerRadius:c,padRadius:y}),C=lu({startAngle:f,endAngle:h,padAngle:p,value:k,sort:M,sortValues:x}),_=C(i);return v?$.createElement($.Fragment,null,v({arcs:_,path:d,pie:C})):$.createElement(ze,{className:\"visx-pie-arcs-group\",top:n,left:r},_.map(function(R,P){return $.createElement(\"g\",{key:\"pie-arc-\"+P},$.createElement(\"path\",lr({className:Q(\"visx-pie-arc\",t),d:d(R)||\"\",fill:g==null||typeof g==\"string\"?g:g(R)},b)),o==null?void 0:o(d.centroid(R),R))}))}var hu=[\"from\",\"to\",\"fill\",\"className\",\"innerRef\"];function cr(){return cr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},cr.apply(this,arguments)}function pu(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function zi(e){var t=e.from,n=t===void 0?{x:0,y:0}:t,r=e.to,a=r===void 0?{x:1,y:1}:r,i=e.fill,o=i===void 0?\"transparent\":i,u=e.className,s=e.innerRef,l=pu(e,hu),c=n.x===a.x||n.y===a.y;return $.createElement(\"line\",cr({ref:s,className:Q(\"visx-line\",u),x1:n.x,y1:n.y,x2:a.x,y2:a.y,fill:o,shapeRendering:c?\"crispEdges\":\"auto\"},l))}var du=[\"children\",\"data\",\"x\",\"y\",\"fill\",\"className\",\"curve\",\"innerRef\",\"defined\"];function fr(){return fr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},fr.apply(this,arguments)}function gu(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function ah(e){var t=e.children,n=e.data,r=n===void 0?[]:n,a=e.x,i=e.y,o=e.fill,u=o===void 0?\"transparent\":o,s=e.className,l=e.curve,c=e.innerRef,f=e.defined,h=f===void 0?function(){return!0}:f,p=gu(e,du),y=su({x:a,y:i,defined:h,curve:l});return t?$.createElement($.Fragment,null,t({path:y})):$.createElement(\"path\",fr({ref:c,className:Q(\"visx-linepath\",s),d:y(r)||\"\",fill:u,strokeLinecap:\"round\"},p))}var vu=[\"x\",\"x0\",\"x1\",\"y\",\"y1\",\"y0\",\"yScale\",\"data\",\"defined\",\"className\",\"curve\",\"innerRef\",\"children\"];function hr(){return hr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},hr.apply(this,arguments)}function mu(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function ih(e){var t=e.x,n=e.x0,r=e.x1,a=e.y,i=e.y1,o=e.y0,u=e.yScale,s=e.data,l=s===void 0?[]:s,c=e.defined,f=c===void 0?function(){return!0}:c,h=e.className,p=e.curve,y=e.innerRef,M=e.children,x=mu(e,vu),k=uu({x:t,x0:n,x1:r,defined:f,curve:p});return o==null?k.y0(u.range()[0]):V(k.y0,o),a&&!i&&V(k.y1,a),i&&!a&&V(k.y1,i),M?$.createElement($.Fragment,null,M({path:k})):$.createElement(\"path\",hr({ref:y,className:Q(\"visx-area-closed\",h),d:k(l)||\"\"},x))}var yu=[\"className\",\"innerRef\"];function pr(){return pr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pr.apply(this,arguments)}function xu(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function oh(e){var t=e.className,n=e.innerRef,r=xu(e,yu);return $.createElement(\"rect\",pr({ref:n,className:Q(\"visx-bar\",t)},r))}var bu=[\"className\",\"innerRef\"];function dr(){return dr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},dr.apply(this,arguments)}function wu(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function uh(e){var t=e.className,n=e.innerRef,r=wu(e,bu);return $.createElement(\"circle\",dr({ref:n,className:Q(\"visx-circle\",t)},r))}function gt(e,t){return e==null||t==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function Mu(e,t){return e==null||t==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function Lr(e){let t,n,r;e.length!==2?(t=gt,n=(u,s)=>gt(e(u),s),r=(u,s)=>e(u)-s):(t=e===gt||e===Mu?e:ku,n=e,r=e);function a(u,s,l=0,c=u.length){if(l<c){if(t(s,s)!==0)return c;do{const f=l+c>>>1;n(u[f],s)<0?l=f+1:c=f}while(l<c)}return l}function i(u,s,l=0,c=u.length){if(l<c){if(t(s,s)!==0)return c;do{const f=l+c>>>1;n(u[f],s)<=0?l=f+1:c=f}while(l<c)}return l}function o(u,s,l=0,c=u.length){const f=a(u,s,l,c-1);return f>l&&r(u[f-1],s)>-r(u[f],s)?f-1:f}return{left:a,center:o,right:i}}function ku(){return 0}function Tu(e){return e===null?NaN:+e}const Cu=Lr(gt),Ou=Cu.right;Lr(Tu).center;class ua extends Map{constructor(t,n=Nu){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),t!=null)for(const[r,a]of t)this.set(r,a)}get(t){return super.get(sa(this,t))}has(t){return super.has(sa(this,t))}set(t,n){return super.set(Ru(this,t),n)}delete(t){return super.delete(Su(this,t))}}function sa({_intern:e,_key:t},n){const r=t(n);return e.has(r)?e.get(r):n}function Ru({_intern:e,_key:t},n){const r=t(n);return e.has(r)?e.get(r):(e.set(r,n),n)}function Su({_intern:e,_key:t},n){const r=t(n);return e.has(r)&&(n=e.get(r),e.delete(r)),n}function Nu(e){return e!==null&&typeof e==\"object\"?e.valueOf():e}const _u=Math.sqrt(50),Pu=Math.sqrt(10),$u=Math.sqrt(2);function mt(e,t,n){const r=(t-e)/Math.max(0,n),a=Math.floor(Math.log10(r)),i=r/Math.pow(10,a),o=i>=_u?10:i>=Pu?5:i>=$u?2:1;let u,s,l;return a<0?(l=Math.pow(10,-a)/o,u=Math.round(e*l),s=Math.round(t*l),u/l<e&&++u,s/l>t&&--s,l=-l):(l=Math.pow(10,a)*o,u=Math.round(e/l),s=Math.round(t/l),u*l<e&&++u,s*l>t&&--s),s<u&&.5<=n&&n<2?mt(e,t,n*2):[u,s,l]}function Lu(e,t,n){if(t=+t,e=+e,n=+n,!(n>0))return[];if(e===t)return[e];const r=t<e,[a,i,o]=r?mt(t,e,n):mt(e,t,n);if(!(i>=a))return[];const u=i-a+1,s=new Array(u);if(r)if(o<0)for(let l=0;l<u;++l)s[l]=(i-l)/-o;else for(let l=0;l<u;++l)s[l]=(i-l)*o;else if(o<0)for(let l=0;l<u;++l)s[l]=(a+l)/-o;else for(let l=0;l<u;++l)s[l]=(a+l)*o;return s}function gr(e,t,n){return t=+t,e=+e,n=+n,mt(e,t,n)[2]}function vr(e,t,n){t=+t,e=+e,n=+n;const r=t<e,a=r?gr(t,e,n):gr(e,t,n);return(r?-1:1)*(a<0?1/-a:a)}function Au(e,t,n){e=+e,t=+t,n=(a=arguments.length)<2?(t=e,e=0,1):a<3?1:+n;for(var r=-1,a=Math.max(0,Math.ceil((t-e)/n))|0,i=new Array(a);++r<a;)i[r]=e+r*n;return i}function Lt(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e);break}return this}const la=Symbol(\"implicit\");function Ar(){var e=new ua,t=[],n=[],r=la;function a(i){let o=e.get(i);if(o===void 0){if(r!==la)return r;e.set(i,o=t.push(i)-1)}return n[o%n.length]}return a.domain=function(i){if(!arguments.length)return t.slice();t=[],e=new ua;for(const o of i)e.has(o)||e.set(o,t.push(o)-1);return a},a.range=function(i){return arguments.length?(n=Array.from(i),a):n.slice()},a.unknown=function(i){return arguments.length?(r=i,a):r},a.copy=function(){return Ar(t,n).unknown(r)},Lt.apply(a,arguments),a}function Yi(){var e=Ar().unknown(void 0),t=e.domain,n=e.range,r=0,a=1,i,o,u=!1,s=0,l=0,c=.5;delete e.unknown;function f(){var h=t().length,p=a<r,y=p?a:r,M=p?r:a;i=(M-y)/Math.max(1,h-s+l*2),u&&(i=Math.floor(i)),y+=(M-y-i*(h-s))*c,o=i*(1-s),u&&(y=Math.round(y),o=Math.round(o));var x=Au(h).map(function(k){return y+i*k});return n(p?x.reverse():x)}return e.domain=function(h){return arguments.length?(t(h),f()):t()},e.range=function(h){return arguments.length?([r,a]=h,r=+r,a=+a,f()):[r,a]},e.rangeRound=function(h){return[r,a]=h,r=+r,a=+a,u=!0,f()},e.bandwidth=function(){return o},e.step=function(){return i},e.round=function(h){return arguments.length?(u=!!h,f()):u},e.padding=function(h){return arguments.length?(s=Math.min(1,l=+h),f()):s},e.paddingInner=function(h){return arguments.length?(s=Math.min(1,h),f()):s},e.paddingOuter=function(h){return arguments.length?(l=+h,f()):l},e.align=function(h){return arguments.length?(c=Math.max(0,Math.min(1,h)),f()):c},e.copy=function(){return Yi(t(),[r,a]).round(u).paddingInner(s).paddingOuter(l).align(c)},Lt.apply(f(),arguments)}function Ye(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function it(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function ke(){}var _e=.7,Ue=1/_e,qe=\"\\\\s*([+-]?\\\\d+)\\\\s*\",nt=\"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",fe=\"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",ju=/^#([0-9a-f]{3,8})$/,Eu=new RegExp(`^rgb\\\\(${qe},${qe},${qe}\\\\)$`),Du=new RegExp(`^rgb\\\\(${fe},${fe},${fe}\\\\)$`),qu=new RegExp(`^rgba\\\\(${qe},${qe},${qe},${nt}\\\\)$`),Fu=new RegExp(`^rgba\\\\(${fe},${fe},${fe},${nt}\\\\)$`),Uu=new RegExp(`^hsl\\\\(${nt},${fe},${fe}\\\\)$`),Hu=new RegExp(`^hsla\\\\(${nt},${fe},${fe},${nt}\\\\)$`),ca={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Ye(ke,rt,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:fa,formatHex:fa,formatHex8:Iu,formatHsl:Wu,formatRgb:ha,toString:ha});function fa(){return this.rgb().formatHex()}function Iu(){return this.rgb().formatHex8()}function Wu(){return Vi(this).formatHsl()}function ha(){return this.rgb().formatRgb()}function rt(e){var t,n;return e=(e+\"\").trim().toLowerCase(),(t=ju.exec(e))?(n=t[1].length,t=parseInt(t[1],16),n===6?pa(t):n===3?new K(t>>8&15|t>>4&240,t>>4&15|t&240,(t&15)<<4|t&15,1):n===8?lt(t>>24&255,t>>16&255,t>>8&255,(t&255)/255):n===4?lt(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|t&240,((t&15)<<4|t&15)/255):null):(t=Eu.exec(e))?new K(t[1],t[2],t[3],1):(t=Du.exec(e))?new K(t[1]*255/100,t[2]*255/100,t[3]*255/100,1):(t=qu.exec(e))?lt(t[1],t[2],t[3],t[4]):(t=Fu.exec(e))?lt(t[1]*255/100,t[2]*255/100,t[3]*255/100,t[4]):(t=Uu.exec(e))?va(t[1],t[2]/100,t[3]/100,1):(t=Hu.exec(e))?va(t[1],t[2]/100,t[3]/100,t[4]):ca.hasOwnProperty(e)?pa(ca[e]):e===\"transparent\"?new K(NaN,NaN,NaN,0):null}function pa(e){return new K(e>>16&255,e>>8&255,e&255,1)}function lt(e,t,n,r){return r<=0&&(e=t=n=NaN),new K(e,t,n,r)}function jr(e){return e instanceof ke||(e=rt(e)),e?(e=e.rgb(),new K(e.r,e.g,e.b,e.opacity)):new K}function mr(e,t,n,r){return arguments.length===1?jr(e):new K(e,t,n,r??1)}function K(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}Ye(K,mr,it(ke,{brighter(e){return e=e==null?Ue:Math.pow(Ue,e),new K(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=e==null?_e:Math.pow(_e,e),new K(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new K(Se(this.r),Se(this.g),Se(this.b),yt(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:da,formatHex:da,formatHex8:zu,formatRgb:ga,toString:ga}));function da(){return`#${Re(this.r)}${Re(this.g)}${Re(this.b)}`}function zu(){return`#${Re(this.r)}${Re(this.g)}${Re(this.b)}${Re((isNaN(this.opacity)?1:this.opacity)*255)}`}function ga(){const e=yt(this.opacity);return`${e===1?\"rgb(\":\"rgba(\"}${Se(this.r)}, ${Se(this.g)}, ${Se(this.b)}${e===1?\")\":`, ${e})`}`}function yt(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Se(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function Re(e){return e=Se(e),(e<16?\"0\":\"\")+e.toString(16)}function va(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new se(e,t,n,r)}function Vi(e){if(e instanceof se)return new se(e.h,e.s,e.l,e.opacity);if(e instanceof ke||(e=rt(e)),!e)return new se;if(e instanceof se)return e;e=e.rgb();var t=e.r/255,n=e.g/255,r=e.b/255,a=Math.min(t,n,r),i=Math.max(t,n,r),o=NaN,u=i-a,s=(i+a)/2;return u?(t===i?o=(n-r)/u+(n<r)*6:n===i?o=(r-t)/u+2:o=(t-n)/u+4,u/=s<.5?i+a:2-i-a,o*=60):u=s>0&&s<1?0:o,new se(o,u,s,e.opacity)}function yr(e,t,n,r){return arguments.length===1?Vi(e):new se(e,t,n,r??1)}function se(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}Ye(se,yr,it(ke,{brighter(e){return e=e==null?Ue:Math.pow(Ue,e),new se(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?_e:Math.pow(_e,e),new se(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,a=2*n-r;return new K(nn(e>=240?e-240:e+120,a,r),nn(e,a,r),nn(e<120?e+240:e-120,a,r),this.opacity)},clamp(){return new se(ma(this.h),ct(this.s),ct(this.l),yt(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=yt(this.opacity);return`${e===1?\"hsl(\":\"hsla(\"}${ma(this.h)}, ${ct(this.s)*100}%, ${ct(this.l)*100}%${e===1?\")\":`, ${e})`}`}}));function ma(e){return e=(e||0)%360,e<0?e+360:e}function ct(e){return Math.max(0,Math.min(1,e||0))}function nn(e,t,n){return(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)*255}const Gi=Math.PI/180,Bi=180/Math.PI,xt=18,Ki=.96422,Zi=1,Xi=.82521,Ji=4/29,Fe=6/29,Qi=3*Fe*Fe,Yu=Fe*Fe*Fe;function eo(e){if(e instanceof he)return new he(e.l,e.a,e.b,e.opacity);if(e instanceof ge)return to(e);e instanceof K||(e=jr(e));var t=un(e.r),n=un(e.g),r=un(e.b),a=rn((.2225045*t+.7168786*n+.0606169*r)/Zi),i,o;return t===n&&n===r?i=o=a:(i=rn((.4360747*t+.3850649*n+.1430804*r)/Ki),o=rn((.0139322*t+.0971045*n+.7141733*r)/Xi)),new he(116*a-16,500*(i-a),200*(a-o),e.opacity)}function xr(e,t,n,r){return arguments.length===1?eo(e):new he(e,t,n,r??1)}function he(e,t,n,r){this.l=+e,this.a=+t,this.b=+n,this.opacity=+r}Ye(he,xr,it(ke,{brighter(e){return new he(this.l+xt*(e??1),this.a,this.b,this.opacity)},darker(e){return new he(this.l-xt*(e??1),this.a,this.b,this.opacity)},rgb(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return t=Ki*an(t),e=Zi*an(e),n=Xi*an(n),new K(on(3.1338561*t-1.6168667*e-.4906146*n),on(-.9787684*t+1.9161415*e+.033454*n),on(.0719453*t-.2289914*e+1.4052427*n),this.opacity)}}));function rn(e){return e>Yu?Math.pow(e,1/3):e/Qi+Ji}function an(e){return e>Fe?e*e*e:Qi*(e-Ji)}function on(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function un(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function Vu(e){if(e instanceof ge)return new ge(e.h,e.c,e.l,e.opacity);if(e instanceof he||(e=eo(e)),e.a===0&&e.b===0)return new ge(NaN,0<e.l&&e.l<100?0:NaN,e.l,e.opacity);var t=Math.atan2(e.b,e.a)*Bi;return new ge(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function br(e,t,n,r){return arguments.length===1?Vu(e):new ge(e,t,n,r??1)}function ge(e,t,n,r){this.h=+e,this.c=+t,this.l=+n,this.opacity=+r}function to(e){if(isNaN(e.h))return new he(e.l,0,0,e.opacity);var t=e.h*Gi;return new he(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}Ye(ge,br,it(ke,{brighter(e){return new ge(this.h,this.c,this.l+xt*(e??1),this.opacity)},darker(e){return new ge(this.h,this.c,this.l-xt*(e??1),this.opacity)},rgb(){return to(this).rgb()}}));var no=-.14861,Er=1.78277,Dr=-.29227,At=-.90649,at=1.97294,ya=at*At,xa=at*Er,ba=Er*Dr-At*no;function Gu(e){if(e instanceof Ne)return new Ne(e.h,e.s,e.l,e.opacity);e instanceof K||(e=jr(e));var t=e.r/255,n=e.g/255,r=e.b/255,a=(ba*r+ya*t-xa*n)/(ba+ya-xa),i=r-a,o=(at*(n-a)-Dr*i)/At,u=Math.sqrt(o*o+i*i)/(at*a*(1-a)),s=u?Math.atan2(o,i)*Bi-120:NaN;return new Ne(s<0?s+360:s,u,a,e.opacity)}function wr(e,t,n,r){return arguments.length===1?Gu(e):new Ne(e,t,n,r??1)}function Ne(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}Ye(Ne,wr,it(ke,{brighter(e){return e=e==null?Ue:Math.pow(Ue,e),new Ne(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?_e:Math.pow(_e,e),new Ne(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=isNaN(this.h)?0:(this.h+120)*Gi,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(e),a=Math.sin(e);return new K(255*(t+n*(no*r+Er*a)),255*(t+n*(Dr*r+At*a)),255*(t+n*(at*r)),this.opacity)}}));const jt=e=>()=>e;function ro(e,t){return function(n){return e+n*t}}function Bu(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}function qr(e,t){var n=t-e;return n?ro(e,n>180||n<-180?n-360*Math.round(n/360):n):jt(isNaN(e)?t:e)}function Ku(e){return(e=+e)==1?Z:function(t,n){return n-t?Bu(t,n,e):jt(isNaN(t)?n:t)}}function Z(e,t){var n=t-e;return n?ro(e,n):jt(isNaN(e)?t:e)}const Mr=(function e(t){var n=Ku(t);function r(a,i){var o=n((a=mr(a)).r,(i=mr(i)).r),u=n(a.g,i.g),s=n(a.b,i.b),l=Z(a.opacity,i.opacity);return function(c){return a.r=o(c),a.g=u(c),a.b=s(c),a.opacity=l(c),a+\"\"}}return r.gamma=e,r})(1);function Zu(e,t){t||(t=[]);var n=e?Math.min(t.length,e.length):0,r=t.slice(),a;return function(i){for(a=0;a<n;++a)r[a]=e[a]*(1-i)+t[a]*i;return r}}function Xu(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function Ju(e,t){var n=t?t.length:0,r=e?Math.min(n,e.length):0,a=new Array(r),i=new Array(n),o;for(o=0;o<r;++o)a[o]=Fr(e[o],t[o]);for(;o<n;++o)i[o]=t[o];return function(u){for(o=0;o<r;++o)i[o]=a[o](u);return i}}function Qu(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}function bt(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function es(e,t){var n={},r={},a;(e===null||typeof e!=\"object\")&&(e={}),(t===null||typeof t!=\"object\")&&(t={});for(a in t)a in e?n[a]=Fr(e[a],t[a]):r[a]=t[a];return function(i){for(a in n)r[a]=n[a](i);return r}}var kr=/[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,sn=new RegExp(kr.source,\"g\");function ts(e){return function(){return e}}function ns(e){return function(t){return e(t)+\"\"}}function rs(e,t){var n=kr.lastIndex=sn.lastIndex=0,r,a,i,o=-1,u=[],s=[];for(e=e+\"\",t=t+\"\";(r=kr.exec(e))&&(a=sn.exec(t));)(i=a.index)>n&&(i=t.slice(n,i),u[o]?u[o]+=i:u[++o]=i),(r=r[0])===(a=a[0])?u[o]?u[o]+=a:u[++o]=a:(u[++o]=null,s.push({i:o,x:bt(r,a)})),n=sn.lastIndex;return n<t.length&&(i=t.slice(n),u[o]?u[o]+=i:u[++o]=i),u.length<2?s[0]?ns(s[0].x):ts(t):(t=s.length,function(l){for(var c=0,f;c<t;++c)u[(f=s[c]).i]=f.x(l);return u.join(\"\")})}function Fr(e,t){var n=typeof t,r;return t==null||n===\"boolean\"?jt(t):(n===\"number\"?bt:n===\"string\"?(r=rt(t))?(t=r,Mr):rs:t instanceof rt?Mr:t instanceof Date?Qu:Xu(t)?Zu:Array.isArray(t)?Ju:typeof t.valueOf!=\"function\"&&typeof t.toString!=\"function\"||isNaN(t)?es:bt)(e,t)}function ao(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}function io(e){return function(t,n){var r=e((t=yr(t)).h,(n=yr(n)).h),a=Z(t.s,n.s),i=Z(t.l,n.l),o=Z(t.opacity,n.opacity);return function(u){return t.h=r(u),t.s=a(u),t.l=i(u),t.opacity=o(u),t+\"\"}}}const as=io(qr);var is=io(Z);function os(e,t){var n=Z((e=xr(e)).l,(t=xr(t)).l),r=Z(e.a,t.a),a=Z(e.b,t.b),i=Z(e.opacity,t.opacity);return function(o){return e.l=n(o),e.a=r(o),e.b=a(o),e.opacity=i(o),e+\"\"}}function oo(e){return function(t,n){var r=e((t=br(t)).h,(n=br(n)).h),a=Z(t.c,n.c),i=Z(t.l,n.l),o=Z(t.opacity,n.opacity);return function(u){return t.h=r(u),t.c=a(u),t.l=i(u),t.opacity=o(u),t+\"\"}}}const us=oo(qr);var ss=oo(Z);function uo(e){return(function t(n){n=+n;function r(a,i){var o=e((a=wr(a)).h,(i=wr(i)).h),u=Z(a.s,i.s),s=Z(a.l,i.l),l=Z(a.opacity,i.opacity);return function(c){return a.h=o(c),a.s=u(c),a.l=s(Math.pow(c,n)),a.opacity=l(c),a+\"\"}}return r.gamma=t,r})(1)}const ls=uo(qr);var cs=uo(Z);function fs(e){return function(){return e}}function hs(e){return+e}var wa=[0,1];function De(e){return e}function Tr(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:fs(isNaN(t)?NaN:.5)}function ps(e,t){var n;return e>t&&(n=e,e=t,t=n),function(r){return Math.max(e,Math.min(t,r))}}function ds(e,t,n){var r=e[0],a=e[1],i=t[0],o=t[1];return a<r?(r=Tr(a,r),i=n(o,i)):(r=Tr(r,a),i=n(i,o)),function(u){return i(r(u))}}function gs(e,t,n){var r=Math.min(e.length,t.length)-1,a=new Array(r),i=new Array(r),o=-1;for(e[r]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++o<r;)a[o]=Tr(e[o],e[o+1]),i[o]=n(t[o],t[o+1]);return function(u){var s=Ou(e,u,1,r)-1;return i[s](a[s](u))}}function so(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function vs(){var e=wa,t=wa,n=Fr,r,a,i,o=De,u,s,l;function c(){var h=Math.min(e.length,t.length);return o!==De&&(o=ps(e[0],e[h-1])),u=h>2?gs:ds,s=l=null,f}function f(h){return h==null||isNaN(h=+h)?i:(s||(s=u(e.map(r),t,n)))(r(o(h)))}return f.invert=function(h){return o(a((l||(l=u(t,e.map(r),bt)))(h)))},f.domain=function(h){return arguments.length?(e=Array.from(h,hs),c()):e.slice()},f.range=function(h){return arguments.length?(t=Array.from(h),c()):t.slice()},f.rangeRound=function(h){return t=Array.from(h),n=ao,c()},f.clamp=function(h){return arguments.length?(o=h?!0:De,c()):o!==De},f.interpolate=function(h){return arguments.length?(n=h,c()):n},f.unknown=function(h){return arguments.length?(i=h,f):i},function(h,p){return r=h,a=p,c()}}function lo(){return vs()(De,De)}function ms(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString(\"en\").replace(/,/g,\"\"):e.toString(10)}function wt(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf(\"e\"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}function He(e){return e=wt(Math.abs(e)),e?e[1]:NaN}function ys(e,t){return function(n,r){for(var a=n.length,i=[],o=0,u=e[0],s=0;a>0&&u>0&&(s+u+1>r&&(u=Math.max(1,r-s)),i.push(n.substring(a-=u,a+u)),!((s+=u+1)>r));)u=e[o=(o+1)%e.length];return i.reverse().join(t)}}function xs(e){return function(t){return t.replace(/[0-9]/g,function(n){return e[+n]})}}var bs=/^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;function Mt(e){if(!(t=bs.exec(e)))throw new Error(\"invalid format: \"+e);var t;return new Ur({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}Mt.prototype=Ur.prototype;function Ur(e){this.fill=e.fill===void 0?\" \":e.fill+\"\",this.align=e.align===void 0?\">\":e.align+\"\",this.sign=e.sign===void 0?\"-\":e.sign+\"\",this.symbol=e.symbol===void 0?\"\":e.symbol+\"\",this.zero=!!e.zero,this.width=e.width===void 0?void 0:+e.width,this.comma=!!e.comma,this.precision=e.precision===void 0?void 0:+e.precision,this.trim=!!e.trim,this.type=e.type===void 0?\"\":e.type+\"\"}Ur.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?\"0\":\"\")+(this.width===void 0?\"\":Math.max(1,this.width|0))+(this.comma?\",\":\"\")+(this.precision===void 0?\"\":\".\"+Math.max(0,this.precision|0))+(this.trim?\"~\":\"\")+this.type};function ws(e){e:for(var t=e.length,n=1,r=-1,a;n<t;++n)switch(e[n]){case\".\":r=a=n;break;case\"0\":r===0&&(r=n),a=n;break;default:if(!+e[n])break e;r>0&&(r=0);break}return r>0?e.slice(0,r)+e.slice(a+1):e}var co;function Ms(e,t){var n=wt(e,t);if(!n)return e+\"\";var r=n[0],a=n[1],i=a-(co=Math.max(-8,Math.min(8,Math.floor(a/3)))*3)+1,o=r.length;return i===o?r:i>o?r+new Array(i-o+1).join(\"0\"):i>0?r.slice(0,i)+\".\"+r.slice(i):\"0.\"+new Array(1-i).join(\"0\")+wt(e,Math.max(0,t+i-1))[0]}function Ma(e,t){var n=wt(e,t);if(!n)return e+\"\";var r=n[0],a=n[1];return a<0?\"0.\"+new Array(-a).join(\"0\")+r:r.length>a+1?r.slice(0,a+1)+\".\"+r.slice(a+1):r+new Array(a-r.length+2).join(\"0\")}const ka={\"%\":(e,t)=>(e*100).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+\"\",d:ms,e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>Ma(e*100,t),r:Ma,s:Ms,X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function Ta(e){return e}var Ca=Array.prototype.map,Oa=[\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\u00b5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];function ks(e){var t=e.grouping===void 0||e.thousands===void 0?Ta:ys(Ca.call(e.grouping,Number),e.thousands+\"\"),n=e.currency===void 0?\"\":e.currency[0]+\"\",r=e.currency===void 0?\"\":e.currency[1]+\"\",a=e.decimal===void 0?\".\":e.decimal+\"\",i=e.numerals===void 0?Ta:xs(Ca.call(e.numerals,String)),o=e.percent===void 0?\"%\":e.percent+\"\",u=e.minus===void 0?\"\u2212\":e.minus+\"\",s=e.nan===void 0?\"NaN\":e.nan+\"\";function l(f){f=Mt(f);var h=f.fill,p=f.align,y=f.sign,M=f.symbol,x=f.zero,k=f.width,v=f.comma,m=f.precision,g=f.trim,b=f.type;b===\"n\"?(v=!0,b=\"g\"):ka[b]||(m===void 0&&(m=12),g=!0,b=\"g\"),(x||h===\"0\"&&p===\"=\")&&(x=!0,h=\"0\",p=\"=\");var d=M===\"$\"?n:M===\"#\"&&/[boxX]/.test(b)?\"0\"+b.toLowerCase():\"\",C=M===\"$\"?r:/[%p]/.test(b)?o:\"\",_=ka[b],R=/[defgprs%]/.test(b);m=m===void 0?6:/[gprs]/.test(b)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m));function P(O){var T=d,S=C,L,z,A;if(b===\"c\")S=_(O)+S,O=\"\";else{O=+O;var U=O<0||1/O<0;if(O=isNaN(O)?s:_(Math.abs(O),m),g&&(O=ws(O)),U&&+O==0&&y!==\"+\"&&(U=!1),T=(U?y===\"(\"?y:u:y===\"-\"||y===\"(\"?\"\":y)+T,S=(b===\"s\"?Oa[8+co/3]:\"\")+S+(U&&y===\"(\"?\")\":\"\"),R){for(L=-1,z=O.length;++L<z;)if(A=O.charCodeAt(L),48>A||A>57){S=(A===46?a+O.slice(L+1):O.slice(L))+S,O=O.slice(0,L);break}}}v&&!x&&(O=t(O,1/0));var G=T.length+O.length+S.length,H=G<k?new Array(k-G+1).join(h):\"\";switch(v&&x&&(O=t(H+O,H.length?k-S.length:1/0),H=\"\"),p){case\"<\":O=T+O+S+H;break;case\"=\":O=T+H+O+S;break;case\"^\":O=H.slice(0,G=H.length>>1)+T+O+S+H.slice(G);break;default:O=H+T+O+S;break}return i(O)}return P.toString=function(){return f+\"\"},P}function c(f,h){var p=l((f=Mt(f),f.type=\"f\",f)),y=Math.max(-8,Math.min(8,Math.floor(He(h)/3)))*3,M=Math.pow(10,-y),x=Oa[8+y/3];return function(k){return p(M*k)+x}}return{format:l,formatPrefix:c}}var ft,fo,ho;Ts({thousands:\",\",grouping:[3],currency:[\"$\",\"\"]});function Ts(e){return ft=ks(e),fo=ft.format,ho=ft.formatPrefix,ft}function Cs(e){return Math.max(0,-He(Math.abs(e)))}function Os(e,t){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(He(t)/3)))*3-He(Math.abs(e)))}function Rs(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,He(t)-He(e))+1}function Ss(e,t,n,r){var a=vr(e,t,n),i;switch(r=Mt(r??\",f\"),r.type){case\"s\":{var o=Math.max(Math.abs(e),Math.abs(t));return r.precision==null&&!isNaN(i=Os(a,o))&&(r.precision=i),ho(r,o)}case\"\":case\"e\":case\"g\":case\"p\":case\"r\":{r.precision==null&&!isNaN(i=Rs(a,Math.max(Math.abs(e),Math.abs(t))))&&(r.precision=i-(r.type===\"e\"));break}case\"f\":case\"%\":{r.precision==null&&!isNaN(i=Cs(a))&&(r.precision=i-(r.type===\"%\")*2);break}}return fo(r)}function Ns(e){var t=e.domain;return e.ticks=function(n){var r=t();return Lu(r[0],r[r.length-1],n??10)},e.tickFormat=function(n,r){var a=t();return Ss(a[0],a[a.length-1],n??10,r)},e.nice=function(n){n==null&&(n=10);var r=t(),a=0,i=r.length-1,o=r[a],u=r[i],s,l,c=10;for(u<o&&(l=o,o=u,u=l,l=a,a=i,i=l);c-- >0;){if(l=gr(o,u,n),l===s)return r[a]=o,r[i]=u,t(r);if(l>0)o=Math.floor(o/l)*l,u=Math.ceil(u/l)*l;else if(l<0)o=Math.ceil(o*l)/l,u=Math.floor(u*l)/l;else break;s=l}return e},e}function po(){var e=lo();return e.copy=function(){return so(e,po())},Lt.apply(e,arguments),Ns(e)}function _s(e,t){e=e.slice();var n=0,r=e.length-1,a=e[n],i=e[r],o;return i<a&&(o=n,n=r,r=o,o=a,a=i,i=o),e[n]=t.floor(a),e[r]=t.ceil(i),e}const ln=new Date,cn=new Date;function B(e,t,n,r){function a(i){return e(i=arguments.length===0?new Date:new Date(+i)),i}return a.floor=i=>(e(i=new Date(+i)),i),a.ceil=i=>(e(i=new Date(i-1)),t(i,1),e(i),i),a.round=i=>{const o=a(i),u=a.ceil(i);return i-o<u-i?o:u},a.offset=(i,o)=>(t(i=new Date(+i),o==null?1:Math.floor(o)),i),a.range=(i,o,u)=>{const s=[];if(i=a.ceil(i),u=u==null?1:Math.floor(u),!(i<o)||!(u>0))return s;let l;do s.push(l=new Date(+i)),t(i,u),e(i);while(l<i&&i<o);return s},a.filter=i=>B(o=>{if(o>=o)for(;e(o),!i(o);)o.setTime(o-1)},(o,u)=>{if(o>=o)if(u<0)for(;++u<=0;)for(;t(o,-1),!i(o););else for(;--u>=0;)for(;t(o,1),!i(o););}),n&&(a.count=(i,o)=>(ln.setTime(+i),cn.setTime(+o),e(ln),e(cn),Math.floor(n(ln,cn))),a.every=i=>(i=Math.floor(i),!isFinite(i)||!(i>0)?null:i>1?a.filter(r?o=>r(o)%i===0:o=>a.count(0,o)%i===0):a)),a}const kt=B(()=>{},(e,t)=>{e.setTime(+e+t)},(e,t)=>t-e);kt.every=e=>(e=Math.floor(e),!isFinite(e)||!(e>0)?null:e>1?B(t=>{t.setTime(Math.floor(t/e)*e)},(t,n)=>{t.setTime(+t+n*e)},(t,n)=>(n-t)/e):kt);kt.range;const ve=1e3,ue=ve*60,me=ue*60,ye=me*24,Hr=ye*7,Ra=ye*30,fn=ye*365,we=B(e=>{e.setTime(e-e.getMilliseconds())},(e,t)=>{e.setTime(+e+t*ve)},(e,t)=>(t-e)/ve,e=>e.getUTCSeconds());we.range;const Et=B(e=>{e.setTime(e-e.getMilliseconds()-e.getSeconds()*ve)},(e,t)=>{e.setTime(+e+t*ue)},(e,t)=>(t-e)/ue,e=>e.getMinutes());Et.range;const go=B(e=>{e.setUTCSeconds(0,0)},(e,t)=>{e.setTime(+e+t*ue)},(e,t)=>(t-e)/ue,e=>e.getUTCMinutes());go.range;const Dt=B(e=>{e.setTime(e-e.getMilliseconds()-e.getSeconds()*ve-e.getMinutes()*ue)},(e,t)=>{e.setTime(+e+t*me)},(e,t)=>(t-e)/me,e=>e.getHours());Dt.range;const vo=B(e=>{e.setUTCMinutes(0,0,0)},(e,t)=>{e.setTime(+e+t*me)},(e,t)=>(t-e)/me,e=>e.getUTCHours());vo.range;const Ve=B(e=>e.setHours(0,0,0,0),(e,t)=>e.setDate(e.getDate()+t),(e,t)=>(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*ue)/ye,e=>e.getDate()-1);Ve.range;const qt=B(e=>{e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCDate(e.getUTCDate()+t)},(e,t)=>(t-e)/ye,e=>e.getUTCDate()-1);qt.range;const Ps=B(e=>{e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCDate(e.getUTCDate()+t)},(e,t)=>(t-e)/ye,e=>Math.floor(e/ye));Ps.range;function Le(e){return B(t=>{t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},(t,n)=>{t.setDate(t.getDate()+n*7)},(t,n)=>(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*ue)/Hr)}const ot=Le(0),Tt=Le(1),$s=Le(2),Ls=Le(3),Ie=Le(4),As=Le(5),js=Le(6);ot.range;Tt.range;$s.range;Ls.range;Ie.range;As.range;js.range;function Ae(e){return B(t=>{t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},(t,n)=>{t.setUTCDate(t.getUTCDate()+n*7)},(t,n)=>(n-t)/Hr)}const Ir=Ae(0),Ct=Ae(1),Es=Ae(2),Ds=Ae(3),We=Ae(4),qs=Ae(5),Fs=Ae(6);Ir.range;Ct.range;Es.range;Ds.range;We.range;qs.range;Fs.range;const Ft=B(e=>{e.setDate(1),e.setHours(0,0,0,0)},(e,t)=>{e.setMonth(e.getMonth()+t)},(e,t)=>t.getMonth()-e.getMonth()+(t.getFullYear()-e.getFullYear())*12,e=>e.getMonth());Ft.range;const mo=B(e=>{e.setUTCDate(1),e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCMonth(e.getUTCMonth()+t)},(e,t)=>t.getUTCMonth()-e.getUTCMonth()+(t.getUTCFullYear()-e.getUTCFullYear())*12,e=>e.getUTCMonth());mo.range;const pe=B(e=>{e.setMonth(0,1),e.setHours(0,0,0,0)},(e,t)=>{e.setFullYear(e.getFullYear()+t)},(e,t)=>t.getFullYear()-e.getFullYear(),e=>e.getFullYear());pe.every=e=>!isFinite(e=Math.floor(e))||!(e>0)?null:B(t=>{t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},(t,n)=>{t.setFullYear(t.getFullYear()+n*e)});pe.range;const Me=B(e=>{e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCFullYear(e.getUTCFullYear()+t)},(e,t)=>t.getUTCFullYear()-e.getUTCFullYear(),e=>e.getUTCFullYear());Me.every=e=>!isFinite(e=Math.floor(e))||!(e>0)?null:B(t=>{t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},(t,n)=>{t.setUTCFullYear(t.getUTCFullYear()+n*e)});Me.range;function Us(e,t,n,r,a,i){const o=[[we,1,ve],[we,5,5*ve],[we,15,15*ve],[we,30,30*ve],[i,1,ue],[i,5,5*ue],[i,15,15*ue],[i,30,30*ue],[a,1,me],[a,3,3*me],[a,6,6*me],[a,12,12*me],[r,1,ye],[r,2,2*ye],[n,1,Hr],[t,1,Ra],[t,3,3*Ra],[e,1,fn]];function u(l,c,f){const h=c<l;h&&([l,c]=[c,l]);const p=f&&typeof f.range==\"function\"?f:s(l,c,f),y=p?p.range(l,+c+1):[];return h?y.reverse():y}function s(l,c,f){const h=Math.abs(c-l)/f,p=Lr(([,,x])=>x).right(o,h);if(p===o.length)return e.every(vr(l/fn,c/fn,f));if(p===0)return kt.every(Math.max(vr(l,c,f),1));const[y,M]=o[h/o[p-1][2]<o[p][2]/h?p-1:p];return y.every(M)}return[u,s]}const[Hs,Is]=Us(pe,Ft,ot,Ve,Dt,Et);function hn(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function pn(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function Ke(e,t,n){return{y:e,m:t,d:n,H:0,M:0,S:0,L:0}}function Ws(e){var t=e.dateTime,n=e.date,r=e.time,a=e.periods,i=e.days,o=e.shortDays,u=e.months,s=e.shortMonths,l=Ze(a),c=Xe(a),f=Ze(i),h=Xe(i),p=Ze(o),y=Xe(o),M=Ze(u),x=Xe(u),k=Ze(s),v=Xe(s),m={a:U,A:G,b:H,B:q,c:null,d:La,e:La,f:hl,g:Ml,G:Tl,H:ll,I:cl,j:fl,L:yo,m:pl,M:dl,p:Y,q:de,Q:Ea,s:Da,S:gl,u:vl,U:ml,V:yl,w:xl,W:bl,x:null,X:null,y:wl,Y:kl,Z:Cl,\"%\":ja},g={a:te,A:J,b:xe,B:be,c:null,d:Aa,e:Aa,f:Nl,g:Fl,G:Hl,H:Ol,I:Rl,j:Sl,L:bo,m:_l,M:Pl,p:Ge,q:Be,Q:Ea,s:Da,S:$l,u:Ll,U:Al,V:jl,w:El,W:Dl,x:null,X:null,y:ql,Y:Ul,Z:Il,\"%\":ja},b={a:P,A:O,b:T,B:S,c:L,d:Pa,e:Pa,f:il,g:_a,G:Na,H:$a,I:$a,j:tl,L:al,m:el,M:nl,p:R,q:Qs,Q:ul,s:sl,S:rl,u:Bs,U:Ks,V:Zs,w:Gs,W:Xs,x:z,X:A,y:_a,Y:Na,Z:Js,\"%\":ol};m.x=d(n,m),m.X=d(r,m),m.c=d(t,m),g.x=d(n,g),g.X=d(r,g),g.c=d(t,g);function d(N,j){return function(E){var w=[],ne=-1,I=0,ie=N.length,oe,Te,Gr;for(E instanceof Date||(E=new Date(+E));++ne<ie;)N.charCodeAt(ne)===37&&(w.push(N.slice(I,ne)),(Te=Sa[oe=N.charAt(++ne)])!=null?oe=N.charAt(++ne):Te=oe===\"e\"?\" \":\"0\",(Gr=j[oe])&&(oe=Gr(E,Te)),w.push(oe),I=ne+1);return w.push(N.slice(I,ne)),w.join(\"\")}}function C(N,j){return function(E){var w=Ke(1900,void 0,1),ne=_(w,N,E+=\"\",0),I,ie;if(ne!=E.length)return null;if(\"Q\"in w)return new Date(w.Q);if(\"s\"in w)return new Date(w.s*1e3+(\"L\"in w?w.L:0));if(j&&!(\"Z\"in w)&&(w.Z=0),\"p\"in w&&(w.H=w.H%12+w.p*12),w.m===void 0&&(w.m=\"q\"in w?w.q:0),\"V\"in w){if(w.V<1||w.V>53)return null;\"w\"in w||(w.w=1),\"Z\"in w?(I=pn(Ke(w.y,0,1)),ie=I.getUTCDay(),I=ie>4||ie===0?Ct.ceil(I):Ct(I),I=qt.offset(I,(w.V-1)*7),w.y=I.getUTCFullYear(),w.m=I.getUTCMonth(),w.d=I.getUTCDate()+(w.w+6)%7):(I=hn(Ke(w.y,0,1)),ie=I.getDay(),I=ie>4||ie===0?Tt.ceil(I):Tt(I),I=Ve.offset(I,(w.V-1)*7),w.y=I.getFullYear(),w.m=I.getMonth(),w.d=I.getDate()+(w.w+6)%7)}else(\"W\"in w||\"U\"in w)&&(\"w\"in w||(w.w=\"u\"in w?w.u%7:\"W\"in w?1:0),ie=\"Z\"in w?pn(Ke(w.y,0,1)).getUTCDay():hn(Ke(w.y,0,1)).getDay(),w.m=0,w.d=\"W\"in w?(w.w+6)%7+w.W*7-(ie+5)%7:w.w+w.U*7-(ie+6)%7);return\"Z\"in w?(w.H+=w.Z/100|0,w.M+=w.Z%100,pn(w)):hn(w)}}function _(N,j,E,w){for(var ne=0,I=j.length,ie=E.length,oe,Te;ne<I;){if(w>=ie)return-1;if(oe=j.charCodeAt(ne++),oe===37){if(oe=j.charAt(ne++),Te=b[oe in Sa?j.charAt(ne++):oe],!Te||(w=Te(N,E,w))<0)return-1}else if(oe!=E.charCodeAt(w++))return-1}return w}function R(N,j,E){var w=l.exec(j.slice(E));return w?(N.p=c.get(w[0].toLowerCase()),E+w[0].length):-1}function P(N,j,E){var w=p.exec(j.slice(E));return w?(N.w=y.get(w[0].toLowerCase()),E+w[0].length):-1}function O(N,j,E){var w=f.exec(j.slice(E));return w?(N.w=h.get(w[0].toLowerCase()),E+w[0].length):-1}function T(N,j,E){var w=k.exec(j.slice(E));return w?(N.m=v.get(w[0].toLowerCase()),E+w[0].length):-1}function S(N,j,E){var w=M.exec(j.slice(E));return w?(N.m=x.get(w[0].toLowerCase()),E+w[0].length):-1}function L(N,j,E){return _(N,t,j,E)}function z(N,j,E){return _(N,n,j,E)}function A(N,j,E){return _(N,r,j,E)}function U(N){return o[N.getDay()]}function G(N){return i[N.getDay()]}function H(N){return s[N.getMonth()]}function q(N){return u[N.getMonth()]}function Y(N){return a[+(N.getHours()>=12)]}function de(N){return 1+~~(N.getMonth()/3)}function te(N){return o[N.getUTCDay()]}function J(N){return i[N.getUTCDay()]}function xe(N){return s[N.getUTCMonth()]}function be(N){return u[N.getUTCMonth()]}function Ge(N){return a[+(N.getUTCHours()>=12)]}function Be(N){return 1+~~(N.getUTCMonth()/3)}return{format:function(N){var j=d(N+=\"\",m);return j.toString=function(){return N},j},parse:function(N){var j=C(N+=\"\",!1);return j.toString=function(){return N},j},utcFormat:function(N){var j=d(N+=\"\",g);return j.toString=function(){return N},j},utcParse:function(N){var j=C(N+=\"\",!0);return j.toString=function(){return N},j}}}var Sa={\"-\":\"\",_:\" \",0:\"0\"},X=/^\\s*\\d+/,zs=/^%/,Ys=/[\\\\^$*+?|[\\]().{}]/g;function D(e,t,n){var r=e<0?\"-\":\"\",a=(r?-e:e)+\"\",i=a.length;return r+(i<n?new Array(n-i+1).join(t)+a:a)}function Vs(e){return e.replace(Ys,\"\\\\$&\")}function Ze(e){return new RegExp(\"^(?:\"+e.map(Vs).join(\"|\")+\")\",\"i\")}function Xe(e){return new Map(e.map((t,n)=>[t.toLowerCase(),n]))}function Gs(e,t,n){var r=X.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function Bs(e,t,n){var r=X.exec(t.slice(n,n+1));return r?(e.u=+r[0],n+r[0].length):-1}function Ks(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.U=+r[0],n+r[0].length):-1}function Zs(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.V=+r[0],n+r[0].length):-1}function Xs(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.W=+r[0],n+r[0].length):-1}function Na(e,t,n){var r=X.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function _a(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function Js(e,t,n){var r=/^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(t.slice(n,n+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||\"00\")),n+r[0].length):-1}function Qs(e,t,n){var r=X.exec(t.slice(n,n+1));return r?(e.q=r[0]*3-3,n+r[0].length):-1}function el(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function Pa(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function tl(e,t,n){var r=X.exec(t.slice(n,n+3));return r?(e.m=0,e.d=+r[0],n+r[0].length):-1}function $a(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function nl(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function rl(e,t,n){var r=X.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function al(e,t,n){var r=X.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function il(e,t,n){var r=X.exec(t.slice(n,n+6));return r?(e.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function ol(e,t,n){var r=zs.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function ul(e,t,n){var r=X.exec(t.slice(n));return r?(e.Q=+r[0],n+r[0].length):-1}function sl(e,t,n){var r=X.exec(t.slice(n));return r?(e.s=+r[0],n+r[0].length):-1}function La(e,t){return D(e.getDate(),t,2)}function ll(e,t){return D(e.getHours(),t,2)}function cl(e,t){return D(e.getHours()%12||12,t,2)}function fl(e,t){return D(1+Ve.count(pe(e),e),t,3)}function yo(e,t){return D(e.getMilliseconds(),t,3)}function hl(e,t){return yo(e,t)+\"000\"}function pl(e,t){return D(e.getMonth()+1,t,2)}function dl(e,t){return D(e.getMinutes(),t,2)}function gl(e,t){return D(e.getSeconds(),t,2)}function vl(e){var t=e.getDay();return t===0?7:t}function ml(e,t){return D(ot.count(pe(e)-1,e),t,2)}function xo(e){var t=e.getDay();return t>=4||t===0?Ie(e):Ie.ceil(e)}function yl(e,t){return e=xo(e),D(Ie.count(pe(e),e)+(pe(e).getDay()===4),t,2)}function xl(e){return e.getDay()}function bl(e,t){return D(Tt.count(pe(e)-1,e),t,2)}function wl(e,t){return D(e.getFullYear()%100,t,2)}function Ml(e,t){return e=xo(e),D(e.getFullYear()%100,t,2)}function kl(e,t){return D(e.getFullYear()%1e4,t,4)}function Tl(e,t){var n=e.getDay();return e=n>=4||n===0?Ie(e):Ie.ceil(e),D(e.getFullYear()%1e4,t,4)}function Cl(e){var t=e.getTimezoneOffset();return(t>0?\"-\":(t*=-1,\"+\"))+D(t/60|0,\"0\",2)+D(t%60,\"0\",2)}function Aa(e,t){return D(e.getUTCDate(),t,2)}function Ol(e,t){return D(e.getUTCHours(),t,2)}function Rl(e,t){return D(e.getUTCHours()%12||12,t,2)}function Sl(e,t){return D(1+qt.count(Me(e),e),t,3)}function bo(e,t){return D(e.getUTCMilliseconds(),t,3)}function Nl(e,t){return bo(e,t)+\"000\"}function _l(e,t){return D(e.getUTCMonth()+1,t,2)}function Pl(e,t){return D(e.getUTCMinutes(),t,2)}function $l(e,t){return D(e.getUTCSeconds(),t,2)}function Ll(e){var t=e.getUTCDay();return t===0?7:t}function Al(e,t){return D(Ir.count(Me(e)-1,e),t,2)}function wo(e){var t=e.getUTCDay();return t>=4||t===0?We(e):We.ceil(e)}function jl(e,t){return e=wo(e),D(We.count(Me(e),e)+(Me(e).getUTCDay()===4),t,2)}function El(e){return e.getUTCDay()}function Dl(e,t){return D(Ct.count(Me(e)-1,e),t,2)}function ql(e,t){return D(e.getUTCFullYear()%100,t,2)}function Fl(e,t){return e=wo(e),D(e.getUTCFullYear()%100,t,2)}function Ul(e,t){return D(e.getUTCFullYear()%1e4,t,4)}function Hl(e,t){var n=e.getUTCDay();return e=n>=4||n===0?We(e):We.ceil(e),D(e.getUTCFullYear()%1e4,t,4)}function Il(){return\"+0000\"}function ja(){return\"%\"}function Ea(e){return+e}function Da(e){return Math.floor(+e/1e3)}var je,Mo;Wl({dateTime:\"%x, %X\",date:\"%-m/%-d/%Y\",time:\"%-I:%M:%S %p\",periods:[\"AM\",\"PM\"],days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],shortDays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],shortMonths:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]});function Wl(e){return je=Ws(e),Mo=je.format,je.parse,je.utcFormat,je.utcParse,je}function zl(e){return new Date(e)}function Yl(e){return e instanceof Date?+e:+new Date(+e)}function ko(e,t,n,r,a,i,o,u,s,l){var c=lo(),f=c.invert,h=c.domain,p=l(\".%L\"),y=l(\":%S\"),M=l(\"%I:%M\"),x=l(\"%I %p\"),k=l(\"%a %d\"),v=l(\"%b %d\"),m=l(\"%B\"),g=l(\"%Y\");function b(d){return(s(d)<d?p:u(d)<d?y:o(d)<d?M:i(d)<d?x:r(d)<d?a(d)<d?k:v:n(d)<d?m:g)(d)}return c.invert=function(d){return new Date(f(d))},c.domain=function(d){return arguments.length?h(Array.from(d,Yl)):h().map(zl)},c.ticks=function(d){var C=h();return e(C[0],C[C.length-1],d??10)},c.tickFormat=function(d,C){return C==null?b:l(C)},c.nice=function(d){var C=h();return(!d||typeof d.range!=\"function\")&&(d=t(C[0],C[C.length-1],d??10)),d?h(_s(C,d)):c},c.copy=function(){return so(c,ko(e,t,n,r,a,i,o,u,s,l))},c}function Vl(){return Lt.apply(ko(Hs,Is,pe,Ft,ot,Ve,Dt,Et,we,Mo).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)}function Gl(e,t){t.domain&&(\"nice\"in e||\"quantiles\"in e||\"padding\"in e,e.domain(t.domain))}function Bl(e,t){t.range&&(\"padding\"in e,e.range(t.range))}function Kl(e,t){\"align\"in e&&\"align\"in t&&typeof t.align<\"u\"&&e.align(t.align)}function Zl(e,t){\"base\"in e&&\"base\"in t&&typeof t.base<\"u\"&&e.base(t.base)}function Xl(e,t){\"clamp\"in e&&\"clamp\"in t&&typeof t.clamp<\"u\"&&e.clamp(t.clamp)}function Jl(e,t){\"constant\"in e&&\"constant\"in t&&typeof t.constant<\"u\"&&e.constant(t.constant)}function Ql(e,t){\"exponent\"in e&&\"exponent\"in t&&typeof t.exponent<\"u\"&&e.exponent(t.exponent)}var qa={lab:os,hcl:us,\"hcl-long\":ss,hsl:as,\"hsl-long\":is,cubehelix:ls,\"cubehelix-long\":cs,rgb:Mr};function ec(e){switch(e){case\"lab\":case\"hcl\":case\"hcl-long\":case\"hsl\":case\"hsl-long\":case\"cubehelix\":case\"cubehelix-long\":case\"rgb\":return qa[e]}var t=e.type,n=e.gamma,r=qa[t];return typeof n>\"u\"?r:r.gamma(n)}function tc(e,t){if(\"interpolate\"in t&&\"interpolate\"in e&&typeof t.interpolate<\"u\"){var n=ec(t.interpolate);e.interpolate(n)}}var nc=new Date(Date.UTC(2020,1,2,3,4,5)),rc=\"%Y-%m-%d %H:%M\";function ac(e){var t=e.tickFormat(1,rc)(nc);return t===\"2020-02-02 03:04\"}var Fa={day:Ve,hour:Dt,minute:Et,month:Ft,second:we,week:ot,year:pe},Ua={day:qt,hour:vo,minute:go,month:mo,second:we,week:Ir,year:Me};function ic(e,t){if(\"nice\"in t&&typeof t.nice<\"u\"&&\"nice\"in e){var n=t.nice;if(typeof n==\"boolean\")n&&e.nice();else if(typeof n==\"number\")e.nice(n);else{var r=e,a=ac(r);if(typeof n==\"string\")r.nice(a?Ua[n]:Fa[n]);else{var i=n.interval,o=n.step,u=(a?Ua[i]:Fa[i]).every(o);u!=null&&r.nice(u)}}}}function oc(e,t){\"padding\"in e&&\"padding\"in t&&typeof t.padding<\"u\"&&e.padding(t.padding),\"paddingInner\"in e&&\"paddingInner\"in t&&typeof t.paddingInner<\"u\"&&e.paddingInner(t.paddingInner),\"paddingOuter\"in e&&\"paddingOuter\"in t&&typeof t.paddingOuter<\"u\"&&e.paddingOuter(t.paddingOuter)}function uc(e,t){if(t.reverse){var n=e.range().slice().reverse();\"padding\"in e,e.range(n)}}function sc(e,t){\"round\"in t&&typeof t.round<\"u\"&&(t.round&&\"interpolate\"in t&&typeof t.interpolate<\"u\"?console.warn(\"[visx/scale/applyRound] ignoring round: scale config contains round and interpolate. only applying interpolate. config:\",t):\"round\"in e?e.round(t.round):\"interpolate\"in e&&t.round&&e.interpolate(ao))}function lc(e,t){\"unknown\"in e&&\"unknown\"in t&&typeof t.unknown<\"u\"&&e.unknown(t.unknown)}function cc(e,t){if(\"zero\"in t&&t.zero===!0){var n=e.domain(),r=n[0],a=n[1],i=a<r,o=i?[a,r]:[r,a],u=o[0],s=o[1],l=[Math.min(0,u),Math.max(0,s)];e.domain(i?l.reverse():l)}}var fc=[\"domain\",\"nice\",\"zero\",\"interpolate\",\"round\",\"range\",\"reverse\",\"align\",\"base\",\"clamp\",\"constant\",\"exponent\",\"padding\",\"unknown\"],hc={domain:Gl,nice:ic,zero:cc,interpolate:tc,round:sc,align:Kl,base:Zl,clamp:Xl,constant:Jl,exponent:Ql,padding:oc,range:Bl,reverse:uc,unknown:lc};function Ut(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=new Set(t),a=fc.filter(function(i){return r.has(i)});return function(o,u){return typeof u<\"u\"&&a.forEach(function(s){hc[s](o,u)}),o}}var pc=Ut(\"domain\",\"range\",\"reverse\",\"align\",\"padding\",\"round\");function sh(e){return pc(Yi(),e)}var dc=Ut(\"domain\",\"range\",\"reverse\",\"clamp\",\"interpolate\",\"nice\",\"round\",\"zero\");function lh(e){return dc(po(),e)}var gc=Ut(\"domain\",\"range\",\"reverse\",\"clamp\",\"interpolate\",\"nice\",\"round\");function ch(e){return gc(Vl(),e)}var vc=Ut(\"domain\",\"range\",\"reverse\",\"unknown\");function fh(e){return vc(Ar(),e)}function Wr(e){if((typeof e==\"function\"||typeof e==\"object\"&&e)&&\"valueOf\"in e){var t=e.valueOf();if(typeof t==\"number\")return t}return e}function zr(e,t){var n=e;return\"ticks\"in n?n.ticks(t):n.domain().filter(function(r,a,i){return t==null||i.length<=t||a%Math.round((i.length-1)/t)===0})}function mc(e){return e==null?void 0:e.toString()}var dn,Ha;function yc(){if(Ha)return dn;Ha=1,dn=e;function e(r,a,i){r instanceof RegExp&&(r=t(r,i)),a instanceof RegExp&&(a=t(a,i));var o=n(r,a,i);return o&&{start:o[0],end:o[1],pre:i.slice(0,o[0]),body:i.slice(o[0]+r.length,o[1]),post:i.slice(o[1]+a.length)}}function t(r,a){var i=a.match(r);return i?i[0]:null}e.range=n;function n(r,a,i){var o,u,s,l,c,f=i.indexOf(r),h=i.indexOf(a,f+1),p=f;if(f>=0&&h>0){for(o=[],s=i.length;p>=0&&!c;)p==f?(o.push(p),f=i.indexOf(r,p+1)):o.length==1?c=[o.pop(),h]:(u=o.pop(),u<s&&(s=u,l=h),h=i.indexOf(a,p+1)),p=f<h&&f>=0?f:h;o.length&&(c=[s,l])}return c}return dn}var gn,Ia;function xc(){if(Ia)return gn;Ia=1,gn=e;function e(r,a,i){r instanceof RegExp&&(r=t(r,i)),a instanceof RegExp&&(a=t(a,i));var o=n(r,a,i);return o&&{start:o[0],end:o[1],pre:i.slice(0,o[0]),body:i.slice(o[0]+r.length,o[1]),post:i.slice(o[1]+a.length)}}function t(r,a){var i=a.match(r);return i?i[0]:null}e.range=n;function n(r,a,i){var o,u,s,l,c,f=i.indexOf(r),h=i.indexOf(a,f+1),p=f;if(f>=0&&h>0){if(r===a)return[f,h];for(o=[],s=i.length;p>=0&&!c;)p==f?(o.push(p),f=i.indexOf(r,p+1)):o.length==1?c=[o.pop(),h]:(u=o.pop(),u<s&&(s=u,l=h),h=i.indexOf(a,p+1)),p=f<h&&f>=0?f:h;o.length&&(c=[s,l])}return c}return gn}var vn,Wa;function bc(){if(Wa)return vn;Wa=1;var e=xc();vn=t;function t(a,i,o){var u=a;return n(a,i).reduce(function(s,l){return s.replace(l.functionIdentifier+\"(\"+l.matches.body+\")\",r(l.matches.body,l.functionIdentifier,o,u,i))},a)}function n(a,i){var o=[],u=typeof i==\"string\"?new RegExp(\"\\\\b(\"+i+\")\\\\(\"):i;do{var s=u.exec(a);if(!s)return o;if(s[1]===void 0)throw new Error(\"Missing the first couple of parenthesis to get the function identifier in \"+i);var l=s[1],c=s.index,f=e(\"(\",\")\",a.substring(c));if(!f||f.start!==s[0].length-1)throw new SyntaxError(l+\"(): missing closing ')' in the value '\"+a+\"'\");o.push({matches:f,functionIdentifier:l}),a=f.post}while(u.test(a));return o}function r(a,i,o,u,s){return o(t(a,s,o),i,u)}return vn}var mn,za;function wc(){if(za)return mn;za=1;var e=function(t){this.value=t};return e.math={isDegree:!0,acos:function(t){return e.math.isDegree?180/Math.PI*Math.acos(t):Math.acos(t)},add:function(t,n){return t+n},asin:function(t){return e.math.isDegree?180/Math.PI*Math.asin(t):Math.asin(t)},atan:function(t){return e.math.isDegree?180/Math.PI*Math.atan(t):Math.atan(t)},acosh:function(t){return Math.log(t+Math.sqrt(t*t-1))},asinh:function(t){return Math.log(t+Math.sqrt(t*t+1))},atanh:function(t){return Math.log((1+t)/(1-t))},C:function(t,n){var r=1,a=t-n,i=n;i<a&&(i=a,a=n);for(var o=i+1;o<=t;o++)r*=o;return r/e.math.fact(a)},changeSign:function(t){return-t},cos:function(t){return e.math.isDegree&&(t=e.math.toRadian(t)),Math.cos(t)},cosh:function(t){return(Math.pow(Math.E,t)+Math.pow(Math.E,-1*t))/2},div:function(t,n){return t/n},fact:function(t){if(t%1!==0)return\"NaN\";for(var n=1,r=2;r<=t;r++)n*=r;return n},inverse:function(t){return 1/t},log:function(t){return Math.log(t)/Math.log(10)},mod:function(t,n){return t%n},mul:function(t,n){return t*n},P:function(t,n){for(var r=1,a=Math.floor(t)-Math.floor(n)+1;a<=Math.floor(t);a++)r*=a;return r},Pi:function(t,n,r){for(var a=1,i=t;i<=n;i++)a*=Number(r.postfixEval({n:i}));return a},pow10x:function(t){for(var n=1;t--;)n*=10;return n},sigma:function(t,n,r){for(var a=0,i=t;i<=n;i++)a+=Number(r.postfixEval({n:i}));return a},sin:function(t){return e.math.isDegree&&(t=e.math.toRadian(t)),Math.sin(t)},sinh:function(t){return(Math.pow(Math.E,t)-Math.pow(Math.E,-1*t))/2},sub:function(t,n){return t-n},tan:function(t){return e.math.isDegree&&(t=e.math.toRadian(t)),Math.tan(t)},tanh:function(t){return e.sinha(t)/e.cosha(t)},toRadian:function(t){return t*Math.PI/180},and:function(t,n){return t&n}},e.Exception=function(t){this.message=t},mn=e,mn}var yn,Ya;function Mc(){if(Ya)return yn;Ya=1;var e=wc();function t(v,m){for(var g=0;g<v.length;g++)v[g]+=m;return v}for(var n=[{token:\"sin\",show:\"sin\",type:0,value:e.math.sin},{token:\"cos\",show:\"cos\",type:0,value:e.math.cos},{token:\"tan\",show:\"tan\",type:0,value:e.math.tan},{token:\"pi\",show:\"&pi;\",type:3,value:\"PI\"},{token:\"(\",show:\"(\",type:4,value:\"(\"},{token:\")\",show:\")\",type:5,value:\")\"},{token:\"P\",show:\"P\",type:10,value:e.math.P},{token:\"C\",show:\"C\",type:10,value:e.math.C},{token:\" \",show:\" \",type:14,value:\" \".anchor},{token:\"asin\",show:\"asin\",type:0,value:e.math.asin},{token:\"acos\",show:\"acos\",type:0,value:e.math.acos},{token:\"atan\",show:\"atan\",type:0,value:e.math.atan},{token:\"7\",show:\"7\",type:1,value:\"7\"},{token:\"8\",show:\"8\",type:1,value:\"8\"},{token:\"9\",show:\"9\",type:1,value:\"9\"},{token:\"int\",show:\"Int\",type:0,value:Math.floor},{token:\"cosh\",show:\"cosh\",type:0,value:e.math.cosh},{token:\"acosh\",show:\"acosh\",type:0,value:e.math.acosh},{token:\"ln\",show:\" ln\",type:0,value:Math.log},{token:\"^\",show:\"^\",type:10,value:Math.pow},{token:\"root\",show:\"root\",type:0,value:Math.sqrt},{token:\"4\",show:\"4\",type:1,value:\"4\"},{token:\"5\",show:\"5\",type:1,value:\"5\"},{token:\"6\",show:\"6\",type:1,value:\"6\"},{token:\"/\",show:\"&divide;\",type:2,value:e.math.div},{token:\"!\",show:\"!\",type:7,value:e.math.fact},{token:\"tanh\",show:\"tanh\",type:0,value:e.math.tanh},{token:\"atanh\",show:\"atanh\",type:0,value:e.math.atanh},{token:\"Mod\",show:\" Mod \",type:2,value:e.math.mod},{token:\"1\",show:\"1\",type:1,value:\"1\"},{token:\"2\",show:\"2\",type:1,value:\"2\"},{token:\"3\",show:\"3\",type:1,value:\"3\"},{token:\"*\",show:\"&times;\",type:2,value:e.math.mul},{token:\"sinh\",show:\"sinh\",type:0,value:e.math.sinh},{token:\"asinh\",show:\"asinh\",type:0,value:e.math.asinh},{token:\"e\",show:\"e\",type:3,value:\"E\"},{token:\"log\",show:\" log\",type:0,value:e.math.log},{token:\"0\",show:\"0\",type:1,value:\"0\"},{token:\".\",show:\".\",type:6,value:\".\"},{token:\"+\",show:\"+\",type:9,value:e.math.add},{token:\"-\",show:\"-\",type:9,value:e.math.sub},{token:\",\",show:\",\",type:11,value:\",\"},{token:\"Sigma\",show:\"&Sigma;\",type:12,value:e.math.sigma},{token:\"n\",show:\"n\",type:13,value:\"n\"},{token:\"Pi\",show:\"&Pi;\",type:12,value:e.math.Pi},{token:\"pow\",show:\"pow\",type:8,value:Math.pow,numberOfArguments:2},{token:\"&\",show:\"&\",type:9,value:e.math.and}],r={0:11,1:0,2:3,3:0,4:0,5:0,6:0,7:11,8:11,9:1,10:10,11:0,12:11,13:0,14:-1,15:11},a=0;a<n.length;a++)n[a].precedence=r[n[a].type];var i={0:!0,1:!0,3:!0,4:!0,6:!0,8:!0,9:!0,12:!0,13:!0,14:!0,15:!0},o={0:!0,1:!0,2:!0,3:!0,4:!0,5:!0,6:!0,7:!0,8:!0,9:!0,10:!0,11:!0,12:!0,13:!0,15:!0},u={0:!0,3:!0,4:!0,8:!0,12:!0,13:!0,15:!0},s={},l={0:!0,1:!0,3:!0,4:!0,6:!0,8:!0,12:!0,13:!0,15:!0},c={1:!0},f=[[],[\"1\",\"2\",\"3\",\"7\",\"8\",\"9\",\"4\",\"5\",\"6\",\"+\",\"-\",\"*\",\"/\",\"(\",\")\",\"^\",\"!\",\"P\",\"C\",\"e\",\"0\",\".\",\",\",\"n\",\" \",\"&\"],[\"pi\",\"ln\",\"Pi\"],[\"sin\",\"cos\",\"tan\",\"Del\",\"int\",\"Mod\",\"log\",\"pow\"],[\"asin\",\"acos\",\"atan\",\"cosh\",\"root\",\"tanh\",\"sinh\"],[\"acosh\",\"atanh\",\"asinh\",\"Sigma\"]];function h(v,m,g,b){for(var d=0;d<b;d++)if(v[g+d]!==m[d])return!1;return!0}e.tokenTypes={FUNCTION_WITH_ONE_ARG:0,NUMBER:1,BINARY_OPERATOR_HIGH_PRECENDENCE:2,CONSTANT:3,OPENING_PARENTHESIS:4,CLOSING_PARENTHESIS:5,DECIMAL:6,POSTFIX_FUNCTION_WITH_ONE_ARG:7,FUNCTION_WITH_N_ARGS:8,BINARY_OPERATOR_LOW_PRECENDENCE:9,BINARY_OPERATOR_PERMUTATION:10,COMMA:11,EVALUATED_FUNCTION:12,EVALUATED_FUNCTION_PARAMETER:13,SPACE:14},e.addToken=function(v){for(var m=0;m<v.length;m++){var g=v[m].token.length,b=-1;v[m].type===e.tokenTypes.FUNCTION_WITH_N_ARGS&&v[m].numberOfArguments===void 0&&(v[m].numberOfArguments=2),f[g]=f[g]||[];for(var d=0;d<f[g].length;d++)if(v[m].token===f[g][d]){b=p(f[g][d],n);break}b===-1?(n.push(v[m]),v[m].precedence=r[v[m].type],f.length<=v[m].token.length&&(f[v[m].token.length]=[]),f[v[m].token.length].push(v[m].token)):(n[b]=v[m],v[m].precedence=r[v[m].type])}};function p(v,m){for(var g=0;g<m.length;g++)if(m[g].token===v)return g;return-1}function y(v){for(var m=[],g=v.length,b,d,C,_=0;_<g;_++)if(!(_<g-1&&v[_]===\" \"&&v[_+1]===\" \")){for(b=\"\",d=v.length-_>f.length-2?f.length-1:v.length-_;d>0;d--)if(f[d]!==void 0)for(C=0;C<f[d].length;C++)h(v,f[d][C],_,d)&&(b=f[d][C],C=f[d].length,d=0);if(_+=b.length-1,b===\"\")throw new e.Exception(\"Can't understand after \"+v.slice(_));m.push(n[p(b,n)])}return m}var M={value:e.math.changeSign,type:0,pre:21,show:\"-\"},x={value:\")\",show:\")\",type:5,pre:0},k={value:\"(\",type:4,pre:0,show:\"(\"};return e.lex=function(v,m){var g=[k],b=[],d=v,C=i,_=0,R=s,P=\"\",O;typeof m<\"u\"&&e.addToken(m);var T={},S=y(d);for(O=0;O<S.length;O++){var L=S[O];if(L.type===14){if(O>0&&O<S.length-1&&S[O+1].type===1&&(S[O-1].type===1||S[O-1].type===6))throw new e.Exception(\"Unexpected Space\");continue}var z=L.token,A=L.type,U=L.value,G=L.precedence,H=L.show,q=g[g.length-1],Y;for(Y=b.length;Y--&&b[Y]===0;)if([0,2,3,4,5,9,11,12,13].indexOf(A)!==-1){if(C[A]!==!0)throw new e.Exception(z+\" is not allowed after \"+P);g.push(x),C=o,R=l,b.pop()}if(C[A]!==!0)throw new e.Exception(z+\" is not allowed after \"+P);if(R[A]===!0&&(A=2,U=e.math.mul,H=\"&times;\",G=3,O=O-1),T={value:U,type:A,pre:G,show:H,numberOfArguments:L.numberOfArguments},A===0)C=i,R=s,t(b,2),g.push(T),S[O+1].type!==4&&(g.push(k),b.push(2));else if(A===1)q.type===1?(q.value+=U,t(b,1)):g.push(T),C=o,R=u;else if(A===2)C=i,R=s,t(b,2),g.push(T);else if(A===3)g.push(T),C=o,R=l;else if(A===4)t(b,1),_++,C=i,R=s,g.push(T);else if(A===5){if(!_)throw new e.Exception(\"Closing parenthesis are more than opening one, wait What!!!\");_--,C=o,R=l,g.push(T),t(b,1)}else if(A===6){if(q.hasDec)throw new e.Exception(\"Two decimals are not allowed in one number\");q.type!==1&&(q={value:0,type:1,pre:0},g.push(q)),C=c,t(b,1),R=s,q.value+=U,q.hasDec=!0}else A===7&&(C=o,R=l,t(b,1),g.push(T));A===8?(C=i,R=s,t(b,L.numberOfArguments+2),g.push(T),S[O+1].type!==4&&(g.push(k),b.push(L.numberOfArguments+2))):A===9?(q.type===9?q.value===e.math.add?(q.value=U,q.show=H,t(b,1)):q.value===e.math.sub&&H===\"-\"&&(q.value=e.math.add,q.show=\"+\",t(b,1)):q.type!==5&&q.type!==7&&q.type!==1&&q.type!==3&&q.type!==13?z===\"-\"&&(C=i,R=s,t(b,2).push(2),g.push(M),g.push(k)):(g.push(T),t(b,2)),C=i,R=s):A===10?(C=i,R=s,t(b,2),g.push(T)):A===11?(C=i,R=s,g.push(T)):A===12?(C=i,R=s,t(b,6),g.push(T),S[O+1].type!==4&&(g.push(k),b.push(6))):A===13&&(C=o,R=l,g.push(T)),t(b,-1),P=z}for(Y=b.length;Y--;)g.push(x);if(C[5]!==!0)throw new e.Exception(\"complete the expression\");for(;_--;)g.push(x);return g.push(x),new e(g)},yn=e,yn}var xn,Va;function kc(){if(Va)return xn;Va=1;var e=Mc();return e.prototype.toPostfix=function(){for(var t=[],n,r,a,i,o,u=[{value:\"(\",type:4,pre:0}],s=this.value,l=1;l<s.length;l++)if(s[l].type===1||s[l].type===3||s[l].type===13)s[l].type===1&&(s[l].value=Number(s[l].value)),t.push(s[l]);else if(s[l].type===4)u.push(s[l]);else if(s[l].type===5)for(;(r=u.pop()).type!==4;)t.push(r);else if(s[l].type===11){for(;(r=u.pop()).type!==4;)t.push(r);u.push(r)}else{n=s[l],i=n.pre,o=u[u.length-1],a=o.pre;var c=o.value==\"Math.pow\"&&n.value==\"Math.pow\";if(i>a)u.push(n);else{for(;a>=i&&!c||c&&i<a;)r=u.pop(),o=u[u.length-1],t.push(r),a=o.pre,c=n.value==\"Math.pow\"&&o.value==\"Math.pow\";u.push(n)}}return new e(t)},xn=e,xn}var bn,Ga;function Tc(){if(Ga)return bn;Ga=1;var e=kc();return e.prototype.postfixEval=function(t){t=t||{},t.PI=Math.PI,t.E=Math.E;for(var n=[],r,a,i,o=this.value,u=typeof t.n<\"u\",s=0;s<o.length;s++)if(o[s].type===1)n.push({value:o[s].value,type:1});else if(o[s].type===3)n.push({value:t[o[s].value],type:1});else if(o[s].type===0)typeof n[n.length-1].type>\"u\"?n[n.length-1].value.push(o[s]):n[n.length-1].value=o[s].value(n[n.length-1].value);else if(o[s].type===7)typeof n[n.length-1].type>\"u\"?n[n.length-1].value.push(o[s]):n[n.length-1].value=o[s].value(n[n.length-1].value);else if(o[s].type===8){for(var l=[],c=0;c<o[s].numberOfArguments;c++)l.push(n.pop().value);n.push({type:1,value:o[s].value.apply(o[s],l.reverse())})}else o[s].type===10?(r=n.pop(),a=n.pop(),typeof a.type>\"u\"?(a.value=a.concat(r),a.value.push(o[s]),n.push(a)):typeof r.type>\"u\"?(r.unshift(a),r.push(o[s]),n.push(r)):n.push({type:1,value:o[s].value(a.value,r.value)})):o[s].type===2||o[s].type===9?(r=n.pop(),a=n.pop(),typeof a.type>\"u\"?(a=a.concat(r),a.push(o[s]),n.push(a)):typeof r.type>\"u\"?(r.unshift(a),r.push(o[s]),n.push(r)):n.push({type:1,value:o[s].value(a.value,r.value)})):o[s].type===12?(r=n.pop(),typeof r.type<\"u\"&&(r=[r]),a=n.pop(),i=n.pop(),n.push({type:1,value:o[s].value(i.value,a.value,new e(r))})):o[s].type===13&&(u?n.push({value:t[o[s].value],type:3}):n.push([o[s]]));if(n.length>1)throw new e.Exception(\"Uncaught Syntax error\");return n[0].value>1e15?\"Infinity\":parseFloat(n[0].value.toFixed(15))},e.eval=function(t,n,r){return typeof n>\"u\"?this.lex(t).toPostfix().postfixEval():typeof r>\"u\"?typeof n.length<\"u\"?this.lex(t,n).toPostfix().postfixEval():this.lex(t).toPostfix().postfixEval(n):this.lex(t,n).toPostfix().postfixEval(r)},bn=e,bn}var wn,Ba;function Cc(){if(Ba)return wn;Ba=1;var e=Tc();return e.prototype.formulaEval=function(){for(var t,n,r,a=[],i=this.value,o=0;o<i.length;o++)i[o].type===1||i[o].type===3?a.push({value:i[o].type===3?i[o].show:i[o].value,type:1}):i[o].type===13?a.push({value:i[o].show,type:1}):i[o].type===0?a[a.length-1]={value:i[o].show+(i[o].show!=\"-\"?\"(\":\"\")+a[a.length-1].value+(i[o].show!=\"-\"?\")\":\"\"),type:0}:i[o].type===7?a[a.length-1]={value:(a[a.length-1].type!=1?\"(\":\"\")+a[a.length-1].value+(a[a.length-1].type!=1?\")\":\"\")+i[o].show,type:7}:i[o].type===10?(t=a.pop(),n=a.pop(),i[o].show===\"P\"||i[o].show===\"C\"?a.push({value:\"<sup>\"+n.value+\"</sup>\"+i[o].show+\"<sub>\"+t.value+\"</sub>\",type:10}):a.push({value:(n.type!=1?\"(\":\"\")+n.value+(n.type!=1?\")\":\"\")+\"<sup>\"+t.value+\"</sup>\",type:1})):i[o].type===2||i[o].type===9?(t=a.pop(),n=a.pop(),a.push({value:(n.type!=1?\"(\":\"\")+n.value+(n.type!=1?\")\":\"\")+i[o].show+(t.type!=1?\"(\":\"\")+t.value+(t.type!=1?\")\":\"\"),type:i[o].type})):i[o].type===12&&(t=a.pop(),n=a.pop(),r=a.pop(),a.push({value:i[o].show+\"(\"+r.value+\",\"+n.value+\",\"+t.value+\")\",type:12}));return a[0].value},wn=e,wn}var Mn,Ka;function Oc(){if(Ka)return Mn;Ka=1;var e=yc(),t=bc(),n=Cc(),r=100,a=/(\\+|\\-|\\*|\\\\|[^a-z]|)(\\s*)(\\()/g,i;Mn=o;function o(s,l){i=0,l=Math.pow(10,l===void 0?5:l),s=s.replace(/\\n+/g,\" \");function c(h,p,y){if(i++>r)throw i=0,new Error(\"Call stack overflow for \"+y);if(h===\"\")throw new Error(p+\"(): '\"+y+\"' must contain a non-whitespace string\");h=f(h,y);var M=u(h);if(M.length>1||h.indexOf(\"var(\")>-1)return p+\"(\"+h+\")\";var x=M[0]||\"\";x===\"%\"&&(h=h.replace(/\\b[0-9\\.]+%/g,function(m){return parseFloat(m.slice(0,-1))*.01}));var k=h.replace(new RegExp(x,\"gi\"),\"\"),v;try{v=n.eval(k)}catch{return p+\"(\"+h+\")\"}return x===\"%\"&&(v*=100),(p.length||x===\"%\")&&(v=Math.round(v*l)/l),v+=x,v}function f(h,p){h=h.replace(/((?:\\-[a-z]+\\-)?calc)/g,\"\");for(var y=\"\",M=h,x;x=a.exec(M);){x[0].index>0&&(y+=M.substring(0,x[0].index));var k=e(\"(\",\")\",M.substring([0].index));if(k.body===\"\")throw new Error(\"'\"+h+\"' must contain a non-whitespace string\");var v=c(k.body,\"\",p);y+=k.pre+v,M=k.post}return y+M}return t(s,/((?:\\-[a-z]+\\-)?calc)\\(/,c)}function u(s){for(var l=[],c=[],f=/[\\.0-9]([%a-z]+)/gi,h=f.exec(s);h;)!h||!h[1]||(c.indexOf(h[1].toLowerCase())===-1&&(l.push(h[1]),c.push(h[1].toLowerCase())),h=f.exec(s));return l}return Mn}var Rc=Oc();const kn=$e(Rc);var Tn,Za;function Sc(){if(Za)return Tn;Za=1;var e=Io(),t=Ei(),n=\"[object AsyncFunction]\",r=\"[object Function]\",a=\"[object GeneratorFunction]\",i=\"[object Proxy]\";function o(u){if(!t(u))return!1;var s=e(u);return s==r||s==a||s==n||s==i}return Tn=o,Tn}var Cn,Xa;function Nc(){if(Xa)return Cn;Xa=1;var e=$r(),t=e[\"__core-js_shared__\"];return Cn=t,Cn}var On,Ja;function _c(){if(Ja)return On;Ja=1;var e=Nc(),t=(function(){var r=/[^.]+$/.exec(e&&e.keys&&e.keys.IE_PROTO||\"\");return r?\"Symbol(src)_1.\"+r:\"\"})();function n(r){return!!t&&t in r}return On=n,On}var Rn,Qa;function Pc(){if(Qa)return Rn;Qa=1;var e=Function.prototype,t=e.toString;function n(r){if(r!=null){try{return t.call(r)}catch{}try{return r+\"\"}catch{}}return\"\"}return Rn=n,Rn}var Sn,ei;function $c(){if(ei)return Sn;ei=1;var e=Sc(),t=_c(),n=Ei(),r=Pc(),a=/[\\\\^$.*+?()[\\]{}|]/g,i=/^\\[object .+?Constructor\\]$/,o=Function.prototype,u=Object.prototype,s=o.toString,l=u.hasOwnProperty,c=RegExp(\"^\"+s.call(l).replace(a,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");function f(h){if(!n(h)||t(h))return!1;var p=e(h)?c:i;return p.test(r(h))}return Sn=f,Sn}var Nn,ti;function Lc(){if(ti)return Nn;ti=1;function e(t,n){return t==null?void 0:t[n]}return Nn=e,Nn}var _n,ni;function To(){if(ni)return _n;ni=1;var e=$c(),t=Lc();function n(r,a){var i=t(r,a);return e(i)?i:void 0}return _n=n,_n}var Pn,ri;function Ht(){if(ri)return Pn;ri=1;var e=To(),t=e(Object,\"create\");return Pn=t,Pn}var $n,ai;function Ac(){if(ai)return $n;ai=1;var e=Ht();function t(){this.__data__=e?e(null):{},this.size=0}return $n=t,$n}var Ln,ii;function jc(){if(ii)return Ln;ii=1;function e(t){var n=this.has(t)&&delete this.__data__[t];return this.size-=n?1:0,n}return Ln=e,Ln}var An,oi;function Ec(){if(oi)return An;oi=1;var e=Ht(),t=\"__lodash_hash_undefined__\",n=Object.prototype,r=n.hasOwnProperty;function a(i){var o=this.__data__;if(e){var u=o[i];return u===t?void 0:u}return r.call(o,i)?o[i]:void 0}return An=a,An}var jn,ui;function Dc(){if(ui)return jn;ui=1;var e=Ht(),t=Object.prototype,n=t.hasOwnProperty;function r(a){var i=this.__data__;return e?i[a]!==void 0:n.call(i,a)}return jn=r,jn}var En,si;function qc(){if(si)return En;si=1;var e=Ht(),t=\"__lodash_hash_undefined__\";function n(r,a){var i=this.__data__;return this.size+=this.has(r)?0:1,i[r]=e&&a===void 0?t:a,this}return En=n,En}var Dn,li;function Fc(){if(li)return Dn;li=1;var e=Ac(),t=jc(),n=Ec(),r=Dc(),a=qc();function i(o){var u=-1,s=o==null?0:o.length;for(this.clear();++u<s;){var l=o[u];this.set(l[0],l[1])}}return i.prototype.clear=e,i.prototype.delete=t,i.prototype.get=n,i.prototype.has=r,i.prototype.set=a,Dn=i,Dn}var qn,ci;function Uc(){if(ci)return qn;ci=1;function e(){this.__data__=[],this.size=0}return qn=e,qn}var Fn,fi;function Hc(){if(fi)return Fn;fi=1;function e(t,n){return t===n||t!==t&&n!==n}return Fn=e,Fn}var Un,hi;function It(){if(hi)return Un;hi=1;var e=Hc();function t(n,r){for(var a=n.length;a--;)if(e(n[a][0],r))return a;return-1}return Un=t,Un}var Hn,pi;function Ic(){if(pi)return Hn;pi=1;var e=It(),t=Array.prototype,n=t.splice;function r(a){var i=this.__data__,o=e(i,a);if(o<0)return!1;var u=i.length-1;return o==u?i.pop():n.call(i,o,1),--this.size,!0}return Hn=r,Hn}var In,di;function Wc(){if(di)return In;di=1;var e=It();function t(n){var r=this.__data__,a=e(r,n);return a<0?void 0:r[a][1]}return In=t,In}var Wn,gi;function zc(){if(gi)return Wn;gi=1;var e=It();function t(n){return e(this.__data__,n)>-1}return Wn=t,Wn}var zn,vi;function Yc(){if(vi)return zn;vi=1;var e=It();function t(n,r){var a=this.__data__,i=e(a,n);return i<0?(++this.size,a.push([n,r])):a[i][1]=r,this}return zn=t,zn}var Yn,mi;function Vc(){if(mi)return Yn;mi=1;var e=Uc(),t=Ic(),n=Wc(),r=zc(),a=Yc();function i(o){var u=-1,s=o==null?0:o.length;for(this.clear();++u<s;){var l=o[u];this.set(l[0],l[1])}}return i.prototype.clear=e,i.prototype.delete=t,i.prototype.get=n,i.prototype.has=r,i.prototype.set=a,Yn=i,Yn}var Vn,yi;function Gc(){if(yi)return Vn;yi=1;var e=To(),t=$r(),n=e(t,\"Map\");return Vn=n,Vn}var Gn,xi;function Bc(){if(xi)return Gn;xi=1;var e=Fc(),t=Vc(),n=Gc();function r(){this.size=0,this.__data__={hash:new e,map:new(n||t),string:new e}}return Gn=r,Gn}var Bn,bi;function Kc(){if(bi)return Bn;bi=1;function e(t){var n=typeof t;return n==\"string\"||n==\"number\"||n==\"symbol\"||n==\"boolean\"?t!==\"__proto__\":t===null}return Bn=e,Bn}var Kn,wi;function Wt(){if(wi)return Kn;wi=1;var e=Kc();function t(n,r){var a=n.__data__;return e(r)?a[typeof r==\"string\"?\"string\":\"hash\"]:a.map}return Kn=t,Kn}var Zn,Mi;function Zc(){if(Mi)return Zn;Mi=1;var e=Wt();function t(n){var r=e(this,n).delete(n);return this.size-=r?1:0,r}return Zn=t,Zn}var Xn,ki;function Xc(){if(ki)return Xn;ki=1;var e=Wt();function t(n){return e(this,n).get(n)}return Xn=t,Xn}var Jn,Ti;function Jc(){if(Ti)return Jn;Ti=1;var e=Wt();function t(n){return e(this,n).has(n)}return Jn=t,Jn}var Qn,Ci;function Qc(){if(Ci)return Qn;Ci=1;var e=Wt();function t(n,r){var a=e(this,n),i=a.size;return a.set(n,r),this.size+=a.size==i?0:1,this}return Qn=t,Qn}var er,Oi;function ef(){if(Oi)return er;Oi=1;var e=Bc(),t=Zc(),n=Xc(),r=Jc(),a=Qc();function i(o){var u=-1,s=o==null?0:o.length;for(this.clear();++u<s;){var l=o[u];this.set(l[0],l[1])}}return i.prototype.clear=e,i.prototype.delete=t,i.prototype.get=n,i.prototype.has=r,i.prototype.set=a,er=i,er}var tr,Ri;function tf(){if(Ri)return tr;Ri=1;var e=ef(),t=\"Expected a function\";function n(r,a){if(typeof r!=\"function\"||a!=null&&typeof a!=\"function\")throw new TypeError(t);var i=function(){var o=arguments,u=a?a.apply(this,o):o[0],s=i.cache;if(s.has(u))return s.get(u);var l=r.apply(this,o);return i.cache=s.set(u,l)||s,l};return i.cache=new(n.Cache||e),i}return n.Cache=e,tr=n,tr}var nf=tf();const rf=$e(nf);var Si=\"__react_svg_text_measurement_id\";function af(e,t){try{var n=document.getElementById(Si);if(!n){var r=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");r.setAttribute(\"aria-hidden\",\"true\"),r.style.width=\"0\",r.style.height=\"0\",r.style.position=\"absolute\",r.style.top=\"-100%\",r.style.left=\"-100%\",n=document.createElementNS(\"http://www.w3.org/2000/svg\",\"text\"),n.setAttribute(\"id\",Si),r.appendChild(n),document.body.appendChild(r)}return Object.assign(n.style,t),n.textContent=e,n.getComputedTextLength()}catch{return null}}const Ni=rf(af,function(e,t){return e+\"_\"+JSON.stringify(t)});var of=[\"verticalAnchor\",\"scaleToFit\",\"angle\",\"width\",\"lineHeight\",\"capHeight\",\"children\",\"style\"];function uf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function nr(e){return typeof e==\"number\"}function _i(e){return typeof e==\"number\"&&Number.isFinite(e)||typeof e==\"string\"}function sf(e){var t=e.verticalAnchor,n=t===void 0?\"end\":t,r=e.scaleToFit,a=r===void 0?!1:r,i=e.angle,o=e.width,u=e.lineHeight,s=u===void 0?\"1em\":u,l=e.capHeight,c=l===void 0?\"0.71em\":l,f=e.children,h=e.style,p=uf(e,of),y=p.x,M=y===void 0?0:y,x=p.y,k=x===void 0?0:x,v=!_i(M)||!_i(k),m=ce.useMemo(function(){var R=f==null?[]:f.toString().split(/(?:(?!\\u00A0+)\\s+)/);return{wordsWithWidth:R.map(function(P){return{word:P,wordWidth:Ni(P,h)||0}}),spaceWidth:Ni(\"\u00a0\",h)||0}},[f,h]),g=m.wordsWithWidth,b=m.spaceWidth,d=ce.useMemo(function(){return v?[]:o||a?g.reduce(function(R,P){var O=P.word,T=P.wordWidth,S=R[R.length-1];if(S&&(o==null||a||(S.width||0)+T+b<o))S.words.push(O),S.width=S.width||0,S.width+=T+b;else{var L={words:[O],width:T};R.push(L)}return R},[]):[{words:f==null?[]:f.toString().split(/(?:(?!\\u00A0+)\\s+)/)}]},[v,o,a,f,g,b]),C=ce.useMemo(function(){var R=v?\"\":kn(n===\"start\"?\"calc(\"+c+\")\":n===\"middle\"?\"calc(\"+(d.length-1)/2+\" * -\"+s+\" + (\"+c+\" / 2))\":\"calc(\"+(d.length-1)+\" * -\"+s+\")\");return R},[v,n,c,d.length,s]),_=ce.useMemo(function(){var R=[];if(v)return\"\";if(nr(M)&&nr(k)&&nr(o)&&a&&d.length>0){var P=d[0].width||1,O=a===\"shrink-only\"?Math.min(o/P,1):o/P,T=O,S=M-O*M,L=k-T*k;R.push(\"matrix(\"+O+\", 0, 0, \"+T+\", \"+S+\", \"+L+\")\")}return i&&R.push(\"rotate(\"+i+\", \"+M+\", \"+k+\")\"),R.length>0?R.join(\" \"):\"\"},[v,M,k,o,a,d,i]);return{wordsByLines:d,startDy:C,transform:_}}var lf=[\"dx\",\"dy\",\"textAnchor\",\"innerRef\",\"innerTextRef\",\"verticalAnchor\",\"angle\",\"lineHeight\",\"scaleToFit\",\"capHeight\",\"width\"];function Cr(){return Cr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Cr.apply(this,arguments)}function cf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}var ff={overflow:\"visible\"};function Co(e){var t=e.dx,n=t===void 0?0:t,r=e.dy,a=r===void 0?0:r,i=e.textAnchor,o=i===void 0?\"start\":i,u=e.innerRef,s=e.innerTextRef;e.verticalAnchor,e.angle;var l=e.lineHeight,c=l===void 0?\"1em\":l;e.scaleToFit,e.capHeight,e.width;var f=cf(e,lf),h=f.x,p=h===void 0?0:h,y=f.fontSize,M=sf(e),x=M.wordsByLines,k=M.startDy,v=M.transform;return $.createElement(\"svg\",{ref:u,x:n,y:a,fontSize:y,style:ff},x.length>0?$.createElement(\"text\",Cr({ref:s,transform:v},f,{textAnchor:o}),x.map(function(m,g){return $.createElement(\"tspan\",{key:g,x:p,dy:g===0?k:c},m.words.join(\" \"))})):null)}var ae={top:\"top\",left:\"left\",right:\"right\",bottom:\"bottom\"};function hf(e){var t=e.labelOffset,n=e.labelProps,r=e.orientation,a=e.range,i=e.tickLabelFontSize,o=e.tickLength,u=r===ae.left||r===ae.top?-1:1,s,l,c;if(r===ae.top||r===ae.bottom){var f=r===ae.bottom&&typeof n.fontSize==\"number\"?n.fontSize:0;s=(Number(a[0])+Number(a[a.length-1]))/2,l=u*(o+t+i+f)}else s=u*((Number(a[0])+Number(a[a.length-1]))/2),l=-(o+t),c=\"rotate(\"+u*90+\")\";return{x:s,y:l,transform:c}}function Je(){return Je=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Je.apply(this,arguments)}function pf(e){var t=e.hideTicks,n=e.horizontal,r=e.orientation,a=e.tickClassName,i=e.tickComponent,o=e.tickLabelProps,u=e.tickStroke,s=u===void 0?\"#222\":u,l=e.tickTransform,c=e.ticks,f=e.strokeWidth,h=e.tickLineProps;return c.map(function(p){var y,M=p.value,x=p.index,k=p.from,v=p.to,m=p.formattedValue,g=(y=o[x])!=null?y:{},b=Math.max(10,typeof g.fontSize==\"number\"&&g.fontSize||0),d=v.y+(n&&r!==ae.top?b:0);return $.createElement(ze,{key:\"visx-tick-\"+M+\"-\"+x,className:Q(\"visx-axis-tick\",a),transform:l},!t&&$.createElement(zi,Je({from:k,to:v,stroke:s,strokeWidth:f,strokeLinecap:\"square\"},h)),i?i(Je({},g,{x:v.x,y:d,formattedValue:m})):$.createElement(Co,Je({x:v.x,y:d},g),m))})}function Qe(){return Qe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Qe.apply(this,arguments)}var Pi={textAnchor:\"middle\",fontFamily:\"Arial\",fontSize:10,fill:\"#222\"};function df(e){var t=e.axisFromPoint,n=e.axisLineClassName,r=e.axisToPoint,a=e.hideAxisLine,i=e.hideTicks,o=e.horizontal,u=e.label,s=u===void 0?\"\":u,l=e.labelClassName,c=e.labelOffset,f=c===void 0?14:c,h=e.labelProps,p=e.orientation,y=p===void 0?ae.bottom:p,M=e.scale,x=e.stroke,k=x===void 0?\"#222\":x,v=e.strokeDasharray,m=e.strokeWidth,g=m===void 0?1:m,b=e.tickClassName,d=e.tickComponent,C=e.tickLineProps,_=e.tickLabelProps,R=e.tickLength,P=R===void 0?8:R,O=e.tickStroke,T=O===void 0?\"#222\":O,S=e.tickTransform,L=e.ticks,z=e.ticksComponent,A=z===void 0?pf:z,U=Qe({},Pi,h),G=Qe({},Pi,typeof _==\"object\"?_:null),H=L.map(function(Y){var de=Y.value,te=Y.index;return typeof _==\"function\"?_(de,te,L):G}),q=Math.max.apply(Math,[10].concat(H.map(function(Y){return typeof Y.fontSize==\"number\"?Y.fontSize:0})));return $.createElement($.Fragment,null,A({hideTicks:i,horizontal:o,orientation:y,scale:M,tickClassName:b,tickComponent:d,tickLabelProps:H,tickStroke:T,tickTransform:S,ticks:L,strokeWidth:g,tickLineProps:C}),!a&&$.createElement(zi,{className:Q(\"visx-axis-line\",n),from:t,to:r,stroke:k,strokeWidth:g,strokeDasharray:v}),s&&$.createElement(Co,Qe({className:Q(\"visx-axis-label\",l)},hf({labelOffset:f,labelProps:U,orientation:y,range:M.range(),tickLabelFontSize:q,tickLength:P}),U),s))}function gf(e,t){t===void 0&&(t=\"center\");var n=e;if(t!==\"start\"&&\"bandwidth\"in n){var r=n.bandwidth();return t===\"center\"&&(r/=2),n.round()&&(r=Math.round(r)),function(a){var i=n(a);return typeof i==\"number\"?i+r:i}}return e}function vf(e){var t=e;return\"tickFormat\"in t?t.tickFormat():mc}var Pe=(function(){function e(n){var r=n.x,a=r===void 0?0:r,i=n.y,o=i===void 0?0:i;this.x=0,this.y=0,this.x=a,this.y=o}var t=e.prototype;return t.value=function(){return{x:this.x,y:this.y}},t.toArray=function(){return[this.x,this.y]},e})();function ht(e,t){var n=e.x,r=e.y;return new Pe(t?{x:n,y:r}:{x:r,y:n})}function Or(){return Or=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Or.apply(this,arguments)}var rr=0;function mf(e){return e===void 0&&(e=rr),typeof e==\"number\"?{start:e,end:e}:Or({start:rr,end:rr},e)}var yf=[\"children\",\"axisClassName\",\"hideAxisLine\",\"hideTicks\",\"hideZero\",\"innerRef\",\"left\",\"numTicks\",\"orientation\",\"rangePadding\",\"scale\",\"tickFormat\",\"tickLength\",\"tickValues\",\"top\"];function Rr(){return Rr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Rr.apply(this,arguments)}function xf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function Yr(e){var t=e.children,n=t===void 0?df:t,r=e.axisClassName,a=e.hideAxisLine,i=a===void 0?!1:a,o=e.hideTicks,u=o===void 0?!1:o,s=e.hideZero,l=s===void 0?!1:s,c=e.innerRef,f=e.left,h=f===void 0?0:f,p=e.numTicks,y=p===void 0?10:p,M=e.orientation,x=M===void 0?ae.bottom:M,k=e.rangePadding,v=k===void 0?0:k,m=e.scale,g=e.tickFormat,b=e.tickLength,d=b===void 0?8:b,C=e.tickValues,_=e.top,R=_===void 0?0:_,P=xf(e,yf),O=g??vf(m),T=x===ae.left,S=x===ae.top,L=S||x===ae.bottom,z=gf(m),A=T||S?-1:1,U=m.range(),G=mf(v),H=ht({x:Number(U[0])+.5-G.start,y:0},L),q=ht({x:Number(U[U.length-1])+.5+G.end,y:0},L),Y=(C??zr(m,y)).filter(function(te){return!l||te!==0&&te!==\"0\"}).map(function(te,J){return{value:te,index:J}}),de=Y.map(function(te){var J=te.value,xe=te.index,be=Wr(z(J));return{value:J,index:xe,from:ht({x:be,y:0},L),to:ht({x:be,y:d*A},L),formattedValue:O(J,xe,Y)}});return $.createElement(ze,{className:Q(\"visx-axis\",r),innerRef:c,top:R,left:h},n(Rr({},P,{axisFromPoint:H,axisToPoint:q,hideAxisLine:i,hideTicks:u,hideZero:l,horizontal:L,numTicks:y,orientation:x,rangePadding:v,scale:m,tickFormat:O,tickLength:d,tickPosition:z,tickSign:A,ticks:de})))}var bf=[\"axisClassName\",\"labelOffset\",\"tickLength\",\"tickLabelProps\"];function Ot(){return Ot=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ot.apply(this,arguments)}function wf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}var Mf={dx:\"-0.25em\",dy:\"0.25em\",fill:\"#222\",fontFamily:\"Arial\",fontSize:10,textAnchor:\"end\"};function hh(e){var t=e.axisClassName,n=e.labelOffset,r=n===void 0?36:n,a=e.tickLength,i=a===void 0?8:a,o=e.tickLabelProps,u=wf(e,bf),s=typeof o==\"function\"?o:Ot({},Mf,o);return $.createElement(Yr,Ot({axisClassName:Q(\"visx-axis-left\",t),labelOffset:r,orientation:ae.left,tickLabelProps:s,tickLength:i},u))}var kf=[\"axisClassName\",\"labelOffset\",\"tickLength\",\"tickLabelProps\"];function Rt(){return Rt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Rt.apply(this,arguments)}function Tf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}var Cf={dx:\"0.25em\",dy:\"0.25em\",fill:\"#222\",fontFamily:\"Arial\",fontSize:10,textAnchor:\"start\"};function ph(e){var t=e.axisClassName,n=e.labelOffset,r=n===void 0?36:n,a=e.tickLength,i=a===void 0?8:a,o=e.tickLabelProps,u=Tf(e,kf),s=typeof o==\"function\"?o:Rt({},Cf,o);return $.createElement(Yr,Rt({axisClassName:Q(\"visx-axis-right\",t),labelOffset:r,orientation:ae.right,tickLabelProps:s,tickLength:i},u))}var Of=[\"axisClassName\",\"labelOffset\",\"tickLength\",\"tickLabelProps\"];function St(){return St=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},St.apply(this,arguments)}function Rf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}var Sf={dy:\"0.25em\",fill:\"#222\",fontFamily:\"Arial\",fontSize:10,textAnchor:\"middle\"};function dh(e){var t=e.axisClassName,n=e.labelOffset,r=n===void 0?8:n,a=e.tickLength,i=a===void 0?8:a,o=e.tickLabelProps,u=Rf(e,Of),s=typeof o==\"function\"?o:St({},Sf,o);return $.createElement(Yr,St({axisClassName:Q(\"visx-axis-bottom\",t),labelOffset:r,orientation:ae.bottom,tickLabelProps:s,tickLength:i},u))}var pt={},$i;function Nf(){if($i)return pt;$i=1,pt.__esModule=!0,pt.default=o;var e=r(ji()),t=r(qi()),n=[\"from\",\"to\",\"fill\",\"className\",\"innerRef\"];function r(u){return u&&u.__esModule?u:{default:u}}function a(){return a=Object.assign?Object.assign.bind():function(u){for(var s=1;s<arguments.length;s++){var l=arguments[s];for(var c in l)Object.prototype.hasOwnProperty.call(l,c)&&(u[c]=l[c])}return u},a.apply(this,arguments)}function i(u,s){if(u==null)return{};var l={},c=Object.keys(u),f,h;for(h=0;h<c.length;h++)f=c[h],!(s.indexOf(f)>=0)&&(l[f]=u[f]);return l}function o(u){var s=u.from,l=s===void 0?{x:0,y:0}:s,c=u.to,f=c===void 0?{x:1,y:1}:c,h=u.fill,p=h===void 0?\"transparent\":h,y=u.className,M=u.innerRef,x=i(u,n),k=l.x===f.x||l.y===f.y;return e.default.createElement(\"line\",a({ref:M,className:(0,t.default)(\"visx-line\",y),x1:l.x,y1:l.y,x2:f.x,y2:f.y,fill:p,shapeRendering:k?\"crispEdges\":\"auto\"},x))}return pt}var _f=Nf();const Oo=$e(_f);function Ro(e){return\"bandwidth\"in e?e.bandwidth():0}var Pf=[\"top\",\"left\",\"scale\",\"width\",\"stroke\",\"strokeWidth\",\"strokeDasharray\",\"className\",\"children\",\"numTicks\",\"lineStyle\",\"offset\",\"tickValues\"];function Sr(){return Sr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Sr.apply(this,arguments)}function $f(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function Lf(e){var t=e.top,n=t===void 0?0:t,r=e.left,a=r===void 0?0:r,i=e.scale,o=e.width,u=e.stroke,s=u===void 0?\"#eaf0f6\":u,l=e.strokeWidth,c=l===void 0?1:l,f=e.strokeDasharray,h=e.className,p=e.children,y=e.numTicks,M=y===void 0?10:y,x=e.lineStyle,k=e.offset,v=e.tickValues,m=$f(e,Pf),g=v??zr(i,M),b=(k??0)+Ro(i)/2,d=g.map(function(C,_){var R,P=((R=Wr(i(C)))!=null?R:0)+b;return{index:_,from:new Pe({x:0,y:P}),to:new Pe({x:o,y:P})}});return $.createElement(ze,{className:Q(\"visx-rows\",h),top:n,left:a},p?p({lines:d}):d.map(function(C){var _=C.from,R=C.to,P=C.index;return $.createElement(Oo,Sr({key:\"row-line-\"+P,from:_,to:R,stroke:s,strokeWidth:c,strokeDasharray:f,style:x},m))}))}Lf.propTypes={tickValues:W.array,width:W.number.isRequired};var Af=[\"top\",\"left\",\"scale\",\"height\",\"stroke\",\"strokeWidth\",\"strokeDasharray\",\"className\",\"numTicks\",\"lineStyle\",\"offset\",\"tickValues\",\"children\"];function Nr(){return Nr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Nr.apply(this,arguments)}function jf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function Ef(e){var t=e.top,n=t===void 0?0:t,r=e.left,a=r===void 0?0:r,i=e.scale,o=e.height,u=e.stroke,s=u===void 0?\"#eaf0f6\":u,l=e.strokeWidth,c=l===void 0?1:l,f=e.strokeDasharray,h=e.className,p=e.numTicks,y=p===void 0?10:p,M=e.lineStyle,x=e.offset,k=e.tickValues,v=e.children,m=jf(e,Af),g=k??zr(i,y),b=(x??0)+Ro(i)/2,d=g.map(function(C,_){var R,P=((R=Wr(i(C)))!=null?R:0)+b;return{index:_,from:new Pe({x:P,y:0}),to:new Pe({x:P,y:o})}});return $.createElement(ze,{className:Q(\"visx-columns\",h),top:n,left:a},v?v({lines:d}):d.map(function(C){var _=C.from,R=C.to,P=C.index;return $.createElement(Oo,Nr({key:\"column-line-\"+P,from:_,to:R,stroke:s,strokeWidth:c,strokeDasharray:f,style:M},m))}))}Ef.propTypes={tickValues:W.array,height:W.number.isRequired};function Df(e){return!!e&&e instanceof Element}function qf(e){return!!e&&(e instanceof SVGElement||\"ownerSVGElement\"in e)}function Ff(e){return!!e&&\"createSVGPoint\"in e}function Uf(e){return!!e&&\"getScreenCTM\"in e}function Hf(e){return!!e&&\"changedTouches\"in e}function If(e){return!!e&&\"clientX\"in e}function Wf(e){return!!e&&(e instanceof Event||\"nativeEvent\"in e&&e.nativeEvent instanceof Event)}function et(){return et=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},et.apply(this,arguments)}var ar={x:0,y:0};function zf(e){if(!e)return et({},ar);if(Hf(e))return e.changedTouches.length>0?{x:e.changedTouches[0].clientX,y:e.changedTouches[0].clientY}:et({},ar);if(If(e))return{x:e.clientX,y:e.clientY};var t=e==null?void 0:e.target,n=t&&\"getBoundingClientRect\"in t?t.getBoundingClientRect():null;return n?{x:n.x+n.width/2,y:n.y+n.height/2}:et({},ar)}function Li(e,t){if(!e||!t)return null;var n=zf(t),r=qf(e)?e.ownerSVGElement:e,a=Uf(r)?r.getScreenCTM():null;if(Ff(r)&&a){var i=r.createSVGPoint();return i.x=n.x,i.y=n.y,i=i.matrixTransform(a.inverse()),new Pe({x:i.x,y:i.y})}var o=e.getBoundingClientRect();return new Pe({x:n.x-o.left-e.clientLeft,y:n.y-o.top-e.clientTop})}function gh(e,t){if(Df(e)&&t)return Li(e,t);if(Wf(e)){var n=e,r=n.target;if(r)return Li(r,n)}return null}var Yf=[\"tooltipOpen\"];function Vf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function Nt(){return Nt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Nt.apply(this,arguments)}function vh(e){var t=ce.useState(Nt({tooltipOpen:!1},e)),n=t[0],r=t[1],a=ce.useCallback(function(o){return r(typeof o==\"function\"?function(u){u.tooltipOpen;var s=Vf(u,Yf);return Nt({},o(s),{tooltipOpen:!0})}:{tooltipOpen:!0,tooltipLeft:o.tooltipLeft,tooltipTop:o.tooltipTop,tooltipData:o.tooltipData})},[r]),i=ce.useCallback(function(){return r({tooltipOpen:!1,tooltipLeft:void 0,tooltipTop:void 0,tooltipData:void 0})},[r]);return{tooltipOpen:n.tooltipOpen,tooltipLeft:n.tooltipLeft,tooltipTop:n.tooltipTop,tooltipData:n.tooltipData,updateTooltip:r,showTooltip:a,hideTooltip:i}}var Gf=[\"className\",\"top\",\"left\",\"offsetLeft\",\"offsetTop\",\"style\",\"children\",\"unstyled\",\"applyPositionStyle\"];function _t(){return _t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_t.apply(this,arguments)}function Bf(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}var So={position:\"absolute\",backgroundColor:\"white\",color:\"#666666\",padding:\".3rem .5rem\",borderRadius:\"3px\",fontSize:\"14px\",boxShadow:\"0 1px 2px rgba(33,33,33,0.2)\",lineHeight:\"1em\",pointerEvents:\"none\"},Vr=$.forwardRef(function(e,t){var n=e.className,r=e.top,a=e.left,i=e.offsetLeft,o=i===void 0?10:i,u=e.offsetTop,s=u===void 0?10:u,l=e.style,c=l===void 0?So:l,f=e.children,h=e.unstyled,p=h===void 0?!1:h,y=e.applyPositionStyle,M=y===void 0?!1:y,x=Bf(e,Gf);return $.createElement(\"div\",_t({ref:t,className:Q(\"visx-tooltip\",n),style:_t({top:r==null||s==null?r:r+s,left:a==null||o==null?a:a+o},M&&{position:\"absolute\"},!p&&c)},x),f)});Vr.propTypes={children:W.node,className:W.string,left:W.number,offsetLeft:W.number,offsetTop:W.number,top:W.number,applyPositionStyle:W.bool,unstyled:W.bool};Vr.displayName=\"Tooltip\";function _r(){return _r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_r.apply(this,arguments)}function Kf(e){if(e===void 0)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function Zf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Pr(e,t)}function Pr(e,t){return Pr=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,a){return r.__proto__=a,r},Pr(e,t)}var Ai={top:0,right:0,bottom:0,left:0,width:0,height:0};function Xf(e){var t;return t=(function(n){Zf(r,n);function r(i){var o;return o=n.call(this,i)||this,o.state={rect:void 0,parentRect:void 0},o.nodeRef=$.createRef(),o.getRects=o.getRects.bind(Kf(o)),o}var a=r.prototype;return a.componentDidMount=function(){var o,u=this;this.node=(o=this.nodeRef)!=null&&o.current?this.nodeRef.current:Ao.findDOMNode(this),this.setState(function(){return u.getRects()})},a.getRects=function(){if(!this.node)return this.state;var o=this.node,u=o.parentNode,s=o.getBoundingClientRect?o.getBoundingClientRect():Ai,l=u!=null&&u.getBoundingClientRect?u.getBoundingClientRect():Ai;return{rect:s,parentRect:l}},a.render=function(){return $.createElement(e,_r({nodeRef:this.nodeRef,getRects:this.getRects},this.state,this.props))},r})($.PureComponent),t.displayName=\"withBoundingRects(\"+(e.displayName||\"\")+\")\",t}var No=ce.createContext({isFlippedVertically:!1,isFlippedHorizontally:!1}),Jf=No.Provider;No.Consumer;var Qf=[\"children\",\"getRects\",\"left\",\"offsetLeft\",\"offsetTop\",\"parentRect\",\"rect\",\"style\",\"top\",\"unstyled\",\"nodeRef\"];function Pt(){return Pt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Pt.apply(this,arguments)}function eh(e,t){if(e==null)return{};var n={},r=Object.keys(e),a,i;for(i=0;i<r.length;i++)a=r[i],!(t.indexOf(a)>=0)&&(n[a]=e[a]);return n}function _o(e){var t=e.children;e.getRects;var n=e.left,r=n===void 0?0:n,a=e.offsetLeft,i=a===void 0?10:a,o=e.offsetTop,u=o===void 0?10:o,s=e.parentRect,l=e.rect,c=e.style,f=c===void 0?So:c,h=e.top,p=h===void 0?0:h,y=e.unstyled,M=y===void 0?!1:y,x=e.nodeRef,k=eh(e,Qf),v,m=!1,g=!1;if(l&&s){var b=r,d=p;if(s.width){var C=b+i+l.width-s.width,_=l.width-b-i;m=C>0&&C>_}else{var R=b+i+l.width-window.innerWidth,P=l.width-b-i;m=R>0&&R>P}if(s.height){var O=d+u+l.height-s.height,T=l.height-d-u;g=O>0&&O>T}else g=d+u+l.height>window.innerHeight;b=m?b-l.width-i:b+i,d=g?d-l.height-u:d+u,b=Math.round(b),d=Math.round(d),v=\"translate(\"+b+\"px, \"+d+\"px)\"}return $.createElement(Vr,Pt({ref:x,style:Pt({left:0,top:0,transform:v},!M&&f)},k),$.createElement(Jf,{value:{isFlippedVertically:!g,isFlippedHorizontally:!m}},t))}_o.propTypes={nodeRef:W.oneOfType([W.string,W.func,W.object])};const mh=Xf(_o);export{hh as A,oh as B,uh as C,ze as G,ah as L,rh as P,nh as R,Vr as T,W as _,$ as a,Lf as b,Ef as c,dh as d,So as e,Lr as f,ih as g,ch as h,lh as i,Q as j,fh as k,gh as l,sh as m,ph as n,Lo as o,mh as p,$r as q,ce as r,Io as s,Ei as t,vh as u};",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/index-BKXu7Q-C.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/index-BKXu7Q-C.js",
      "console_count": 46,
      "console_lines": [
        {
          "line_number": 19,
          "content": "*/function Be(){return Be=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},Be.apply(this,arguments)}var ue;(function(t){t.Pop=\"POP\",t.Push=\"PUSH\",t.Replace=\"REPLACE\"})(ue||(ue={}));const rr=\"popstate\";function Qs(t){t===void 0&&(t={});function e(s,a){let{pathname:n,search:o,hash:c}=s.location;return Nt(\"\",{pathname:n,search:o,hash:c},a.state&&a.state.usr||null,a.state&&a.state.key||\"default\")}function r(s,a){return typeof a==\"string\"?a:dt(a)}return Ys(e,r,null,t)}function A(t,e){if(t===!1||t===null||typeof t>\"u\")throw new Error(e)}function Wr(t,e){if(!t){typeof console<\"u\"&&console.warn(e);try{throw new Error(e)}catch{}}}function Js(){return Math.random().toString(36).substr(2,8)}function sr(t,e){return{usr:t.state,key:t.key,idx:e}}function Nt(t,e,r,s){return r===void 0&&(r=null),Be({pathname:typeof t==\"string\"?t:t.pathname,search:\"\",hash:\"\"},typeof e==\"string\"?Ie(e):e,{state:r,key:e&&e.key||s||Js()})}function dt(t){let{pathname:e=\"/\",search:r=\"\",hash:s=\"\"}=t;return r&&r!==\"?\"&&(e+=r.charAt(0)===\"?\"?r:\"?\"+r),s&&s!==\"#\"&&(e+=s.charAt(0)===\"#\"?s:\"#\"+s),e}function Ie(t){let e={};if(t){let r=t.indexOf(\"#\");r>=0&&(e.hash=t.substr(r),t=t.substr(0,r));let s=t.indexOf(\"?\");s>=0&&(e.search=t.substr(s),t=t.substr(0,s)),t&&(e.pathname=t)}return e}function Ys(t,e,r,s){s===void 0&&(s={});let{window:a=document.defaultView,v5Compat:n=!1}=s,o=a.history,c=ue.Pop,l=null,d=m();d==null&&(d=0,o.replaceState(Be({},o.state,{idx:d}),\"\"));function m(){return(o.state||{idx:null}).idx}function u(){c=ue.Pop;let f=m(),g=f==null?null:f-d;d=f,l&&l({action:c,location:p.location,delta:g})}function b(f,g){c=ue.Push;let S=Nt(p.location,f,g);d=m()+1;let w=sr(S,d),E=p.createHref(S);try{o.pushState(w,\"\",E)}catch(P){if(P instanceof DOMException&&P.name===\"DataCloneError\")throw P;a.location.assign(E)}n&&l&&l({action:c,location:p.location,delta:1})}function v(f,g){c=ue.Replace;let S=Nt(p.location,f,g);d=m();let w=sr(S,d),E=p.createHref(S);o.replaceState(w,\"\",E),n&&l&&l({action:c,location:p.location,delta:0})}function x(f){let g=a.location.origin!==\"null\"?a.location.origin:a.location.href,S=typeof f==\"string\"?f:dt(f);return S=S.replace(/ $/,\"%20\"),A(g,\"No window.location.(origin|href) available to create URL for href: \"+S),new URL(S,g)}let p={get action(){return c},get location(){return t(a,o)},listen(f){if(l)throw new Error(\"A history only accepts one active listener\");return a.addEventListener(rr,u),l=f,()=>{a.removeEventListener(rr,u),l=null}},createHref(f){return e(a,f)},createURL:x,encodeLocation(f){let g=x(f);return{pathname:g.pathname,search:g.search,hash:g.hash}},push:b,replace:v,go(f){return o.go(f)}};return p}var ar;(function(t){t.data=\"data\",t.deferred=\"deferred\",t.redirect=\"redirect\",t.error=\"error\"})(ar||(ar={}));function Zs(t,e,r){return r===void 0&&(r=\"/\"),Xs(t,e,r)}function Xs(t,e,r,s){let a=typeof e==\"string\"?Ie(e):e,n=Vt(a.pathname||\"/\",r);if(n==null)return null;let o=Kr(t);ea(o);let c=null;for(let l=0;c==null&&l<o.length;++l){let d=ha(n);c=la(o[l],d)}return c}function Kr(t,e,r,s){e===void 0&&(e=[]),r===void 0&&(r=[]),s===void 0&&(s=\"\");let a=(n,o,c)=>{let l={relativePath:c===void 0?n.path||\"\":c,caseSensitive:n.caseSensitive===!0,childrenIndex:o,route:n};l.relativePath.startsWith(\"/\")&&(A(l.relativePath.startsWith(s),'Absolute route path \"'+l.relativePath+'\" nested under path '+('\"'+s+'\" is not valid. An absolute child route path ')+\"must start with the combined path of all its parent routes.\"),l.relativePath=l.relativePath.slice(s.length));let d=he([s,l.relativePath]),m=r.concat(l);n.children&&n.children.length>0&&(A(n.index!==!0,\"Index routes must not have child routes. Please remove \"+('all child routes from route path \"'+d+'\".')),Kr(n.children,e,m,d)),!(n.path==null&&!n.index)&&e.push({path:d,score:oa(d,n.index),routesMeta:m})};return t.forEach((n,o)=>{var c;if(n.path===\"\"||!((c=n.path)!=null&&c.includes(\"?\")))a(n,o);else for(let l of Gr(n.path))a(n,o,l)}),e}function Gr(t){let e=t.split(\"/\");if(e.length===0)return[];let[r,...s]=e,a=r.endsWith(\"?\"),n=r.replace(/\\?$/,\"\");if(s.length===0)return a?[n,\"\"]:[n];let o=Gr(s.join(\"/\")),c=[];return c.push(...o.map(l=>l===\"\"?n:[n,l].join(\"/\"))),a&&c.push(...o),c.map(l=>t.startsWith(\"/\")&&l===\"\"?\"/\":l)}function ea(t){t.sort((e,r)=>e.score!==r.score?r.score-e.score:ca(e.routesMeta.map(s=>s.childrenIndex),r.routesMeta.map(s=>s.childrenIndex)))}const ta=/^:[\\w-]+$/,ra=3,sa=2,aa=1,na=10,ia=-2,nr=t=>t===\"*\";function oa(t,e){let r=t.split(\"/\"),s=r.length;return r.some(nr)&&(s+=ia),e&&(s+=sa),r.filter(a=>!nr(a)).reduce((a,n)=>a+(ta.test(n)?ra:n===\"\"?aa:na),s)}function ca(t,e){return t.length===e.length&&t.slice(0,-1).every((s,a)=>s===e[a])?t[t.length-1]-e[e.length-1]:0}function la(t,e,r){let{routesMeta:s}=t,a={},n=\"/\",o=[];for(let c=0;c<s.length;++c){let l=s[c],d=c===s.length-1,m=n===\"/\"?e:e.slice(n.length)||\"/\",u=da({path:l.relativePath,caseSensitive:l.caseSensitive,end:d},m),b=l.route;if(!u)return null;Object.assign(a,u.params),o.push({params:a,pathname:he([n,u.pathname]),pathnameBase:ga(he([n,u.pathnameBase])),route:b}),u.pathnameBase!==\"/\"&&(n=he([n,u.pathnameBase]))}return o}function da(t,e){typeof t==\"string\"&&(t={path:t,caseSensitive:!1,end:!0});let[r,s]=ua(t.path,t.caseSensitive,t.end),a=e.match(r);if(!a)return null;let n=a[0],o=n.replace(/(.)\\/+$/,\"$1\"),c=a.slice(1);return{params:s.reduce((d,m,u)=>{let{paramName:b,isOptional:v}=m;if(b===\"*\"){let p=c[u]||\"\";o=n.slice(0,n.length-p.length).replace(/(.)\\/+$/,\"$1\")}const x=c[u];return v&&!x?d[b]=void 0:d[b]=(x||\"\").replace(/%2F/g,\"/\"),d},{}),pathname:n,pathnameBase:o,pattern:t}}function ua(t,e,r){e===void 0&&(e=!1),r===void 0&&(r=!0),Wr(t===\"*\"||!t.endsWith(\"*\")||t.endsWith(\"/*\"),'Route path \"'+t+'\" will be treated as if it were '+('\"'+t.replace(/\\*$/,\"/*\")+'\" because the `*` character must ')+\"always follow a `/` in the pattern. To get rid of this warning, \"+('please change the route path to \"'+t.replace(/\\*$/,\"/*\")+'\".'));let s=[],a=\"^\"+t.replace(/\\/*\\*?$/,\"\").replace(/^\\/*/,\"/\").replace(/[\\\\.*+^${}|()[\\]]/g,\"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g,(o,c,l)=>(s.push({paramName:c,isOptional:l!=null}),l?\"/?([^\\\\/]+)?\":\"/([^\\\\/]+)\"));return t.endsWith(\"*\")?(s.push({paramName:\"*\"}),a+=t===\"*\"||t===\"/*\"?\"(.*)$\":\"(?:\\\\/(.+)|\\\\/*)$\"):r?a+=\"\\\\/*$\":t!==\"\"&&t!==\"/\"&&(a+=\"(?:(?=\\\\/|$))\"),[new RegExp(a,e?void 0:\"i\"),s]}function ha(t){try{return t.split(\"/\").map(e=>decodeURIComponent(e).replace(/\\//g,\"%2F\")).join(\"/\")}catch(e){return Wr(!1,'The URL path \"'+t+'\" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+(\"encoding (\"+e+\").\")),t}}function Vt(t,e){if(e===\"/\")return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let r=e.endsWith(\"/\")?e.length-1:e.length,s=t.charAt(r);return s&&s!==\"/\"?null:t.slice(r)||\"/\"}function ma(t,e){e===void 0&&(e=\"/\");let{pathname:r,search:s=\"\",hash:a=\"\"}=typeof t==\"string\"?Ie(t):t;return{pathname:r?r.startsWith(\"/\")?r:fa(r,e):e,search:ya(s),hash:va(a)}}function fa(t,e){let r=e.replace(/\\/+$/,\"\").split(\"/\");return t.split(\"/\").forEach(a=>{a===\"..\"?r.length>1&&r.pop():a!==\".\"&&r.push(a)}),r.length>1?r.join(\"/\"):\"/\"}function wt(t,e,r,s){return\"Cannot include a '\"+t+\"' character in a manually specified \"+(\"`to.\"+e+\"` field [\"+JSON.stringify(s)+\"].  Please separate it out to the \")+(\"`to.\"+r+\"` field. Alternatively you may provide the full path as \")+'a string in <Link to=\"...\"> and the router will parse it for you.'}function pa(t){return t.filter((e,r)=>r===0||e.route.path&&e.route.path.length>0)}function qt(t,e){let r=pa(t);return e?r.map((s,a)=>a===r.length-1?s.pathname:s.pathnameBase):r.map(s=>s.pathnameBase)}function Ht(t,e,r,s){s===void 0&&(s=!1);let a;typeof t==\"string\"?a=Ie(t):(a=Be({},t),A(!a.pathname||!a.pathname.includes(\"?\"),wt(\"?\",\"pathname\",\"search\",a)),A(!a.pathname||!a.pathname.includes(\"#\"),wt(\"#\",\"pathname\",\"hash\",a)),A(!a.search||!a.search.includes(\"#\"),wt(\"#\",\"search\",\"hash\",a)));let n=t===\"\"||a.pathname===\"\",o=n?\"/\":a.pathname,c;if(o==null)c=r;else{let u=e.length-1;if(!s&&o.startsWith(\"..\")){let b=o.split(\"/\");for(;b[0]===\"..\";)b.shift(),u-=1;a.pathname=b.join(\"/\")}c=u>=0?e[u]:\"/\"}let l=ma(a,c),d=o&&o!==\"/\"&&o.endsWith(\"/\"),m=(n||o===\".\")&&r.endsWith(\"/\");return!l.pathname.endsWith(\"/\")&&(d||m)&&(l.pathname+=\"/\"),l}const he=t=>t.join(\"/\").replace(/\\/\\/+/g,\"/\"),ga=t=>t.replace(/\\/+$/,\"\").replace(/^\\/*/,\"/\"),ya=t=>!t||t===\"?\"?\"\":t.startsWith(\"?\")?t:\"?\"+t,va=t=>!t||t===\"#\"?\"\":t.startsWith(\"#\")?t:\"#\"+t;function ba(t){return t!=null&&typeof t.status==\"number\"&&typeof t.statusText==\"string\"&&typeof t.internal==\"boolean\"&&\"data\"in t}const Qr=[\"post\",\"put\",\"patch\",\"delete\"];new Set(Qr);const xa=[\"get\",...Qr];new Set(xa);/**",
          "type": "warn"
        },
        {
          "line_number": 28,
          "content": "*/function $e(){return $e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},$e.apply(this,arguments)}const Wt=h.createContext(null),Sa=h.createContext(null),me=h.createContext(null),ht=h.createContext(null),Z=h.createContext({outlet:null,matches:[],isDataRoute:!1}),Jr=h.createContext(null);function wa(t,e){let{relative:r}=e===void 0?{}:e;De()||A(!1);let{basename:s,navigator:a}=h.useContext(me),{hash:n,pathname:o,search:c}=Zr(t,{relative:r}),l=o;return s!==\"/\"&&(l=o===\"/\"?s:he([s,o])),a.createHref({pathname:l,search:c,hash:n})}function De(){return h.useContext(ht)!=null}function fe(){return De()||A(!1),h.useContext(ht).location}function Yr(t){h.useContext(me).static||h.useLayoutEffect(t)}function Kt(){let{isDataRoute:t}=h.useContext(Z);return t?za():Ea()}function Ea(){De()||A(!1);let t=h.useContext(Wt),{basename:e,future:r,navigator:s}=h.useContext(me),{matches:a}=h.useContext(Z),{pathname:n}=fe(),o=JSON.stringify(qt(a,r.v7_relativeSplatPath)),c=h.useRef(!1);return Yr(()=>{c.current=!0}),h.useCallback(function(d,m){if(m===void 0&&(m={}),!c.current)return;if(typeof d==\"number\"){s.go(d);return}let u=Ht(d,JSON.parse(o),n,m.relative===\"path\");t==null&&e!==\"/\"&&(u.pathname=u.pathname===\"/\"?e:he([e,u.pathname])),(m.replace?s.replace:s.push)(u,m.state,m)},[e,s,o,n,t])}const Ca=h.createContext(null);function Pa(t){let e=h.useContext(Z).outlet;return e&&h.createElement(Ca.Provider,{value:t},e)}function To(){let{matches:t}=h.useContext(Z),e=t[t.length-1];return e?e.params:{}}function Zr(t,e){let{relative:r}=e===void 0?{}:e,{future:s}=h.useContext(me),{matches:a}=h.useContext(Z),{pathname:n}=fe(),o=JSON.stringify(qt(a,s.v7_relativeSplatPath));return h.useMemo(()=>Ht(t,JSON.parse(o),n,r===\"path\"),[t,o,n,r])}function _a(t,e){return Ra(t,e)}function Ra(t,e,r,s){De()||A(!1);let{navigator:a}=h.useContext(me),{matches:n}=h.useContext(Z),o=n[n.length-1],c=o?o.params:{};o&&o.pathname;let l=o?o.pathnameBase:\"/\";o&&o.route;let d=fe(),m;if(e){var u;let f=typeof e==\"string\"?Ie(e):e;l===\"/\"||(u=f.pathname)!=null&&u.startsWith(l)||A(!1),m=f}else m=d;let b=m.pathname||\"/\",v=b;if(l!==\"/\"){let f=l.replace(/^\\//,\"\").split(\"/\");v=\"/\"+b.replace(/^\\//,\"\").split(\"/\").slice(f.length).join(\"/\")}let x=Zs(t,{pathname:v}),p=Oa(x&&x.map(f=>Object.assign({},f,{params:Object.assign({},c,f.params),pathname:he([l,a.encodeLocation?a.encodeLocation(f.pathname).pathname:f.pathname]),pathnameBase:f.pathnameBase===\"/\"?l:he([l,a.encodeLocation?a.encodeLocation(f.pathnameBase).pathname:f.pathnameBase])})),n,r,s);return e&&p?h.createElement(ht.Provider,{value:{location:$e({pathname:\"/\",search:\"\",hash:\"\",state:null,key:\"default\"},m),navigationType:ue.Pop}},p):p}function ja(){let t=Aa(),e=ba(t)?t.status+\" \"+t.statusText:t instanceof Error?t.message:JSON.stringify(t),r=t instanceof Error?t.stack:null,a={padding:\"0.5rem\",backgroundColor:\"rgba(200,200,200, 0.5)\"};return h.createElement(h.Fragment,null,h.createElement(\"h2\",null,\"Unexpected Application Error!\"),h.createElement(\"h3\",{style:{fontStyle:\"italic\"}},e),r?h.createElement(\"pre\",{style:a},r):null,null)}const Ta=h.createElement(ja,null);class ka extends h.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,r){return r.location!==e.location||r.revalidation!==\"idle\"&&e.revalidation===\"idle\"?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error!==void 0?e.error:r.error,location:r.location,revalidation:e.revalidation||r.revalidation}}componentDidCatch(e,r){console.error(\"React Router caught the following error during render\",e,r)}render(){return this.state.error!==void 0?h.createElement(Z.Provider,{value:this.props.routeContext},h.createElement(Jr.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function La(t){let{routeContext:e,match:r,children:s}=t,a=h.useContext(Wt);return a&&a.static&&a.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=r.route.id),h.createElement(Z.Provider,{value:e},s)}function Oa(t,e,r,s){var a;if(e===void 0&&(e=[]),r===void 0&&(r=null),s===void 0&&(s=null),t==null){var n;if(!r)return null;if(r.errors)t=r.matches;else if((n=s)!=null&&n.v7_partialHydration&&e.length===0&&!r.initialized&&r.matches.length>0)t=r.matches;else return null}let o=t,c=(a=r)==null?void 0:a.errors;if(c!=null){let m=o.findIndex(u=>u.route.id&&(c==null?void 0:c[u.route.id])!==void 0);m>=0||A(!1),o=o.slice(0,Math.min(o.length,m+1))}let l=!1,d=-1;if(r&&s&&s.v7_partialHydration)for(let m=0;m<o.length;m++){let u=o[m];if((u.route.HydrateFallback||u.route.hydrateFallbackElement)&&(d=m),u.route.id){let{loaderData:b,errors:v}=r,x=u.route.loader&&b[u.route.id]===void 0&&(!v||v[u.route.id]===void 0);if(u.route.lazy||x){l=!0,d>=0?o=o.slice(0,d+1):o=[o[0]];break}}}return o.reduceRight((m,u,b)=>{let v,x=!1,p=null,f=null;r&&(v=c&&u.route.id?c[u.route.id]:void 0,p=u.route.errorElement||Ta,l&&(d<0&&b===0?(Ma(\"route-fallback\"),x=!0,f=null):d===b&&(x=!0,f=u.route.hydrateFallbackElement||null)));let g=e.concat(o.slice(0,b+1)),S=()=>{let w;return v?w=p:x?w=f:u.route.Component?w=h.createElement(u.route.Component,null):u.route.element?w=u.route.element:w=m,h.createElement(La,{match:u,routeContext:{outlet:m,matches:g,isDataRoute:r!=null},children:w})};return r&&(u.route.ErrorBoundary||u.route.errorElement||b===0)?h.createElement(ka,{location:r.location,revalidation:r.revalidation,component:p,error:v,children:S(),routeContext:{outlet:null,matches:g,isDataRoute:!0}}):S()},null)}var Xr=(function(t){return t.UseBlocker=\"useBlocker\",t.UseRevalidator=\"useRevalidator\",t.UseNavigateStable=\"useNavigate\",t})(Xr||{}),es=(function(t){return t.UseBlocker=\"useBlocker\",t.UseLoaderData=\"useLoaderData\",t.UseActionData=\"useActionData\",t.UseRouteError=\"useRouteError\",t.UseNavigation=\"useNavigation\",t.UseRouteLoaderData=\"useRouteLoaderData\",t.UseMatches=\"useMatches\",t.UseRevalidator=\"useRevalidator\",t.UseNavigateStable=\"useNavigate\",t.UseRouteId=\"useRouteId\",t})(es||{});function Na(t){let e=h.useContext(Wt);return e||A(!1),e}function Ia(t){let e=h.useContext(Sa);return e||A(!1),e}function Da(t){let e=h.useContext(Z);return e||A(!1),e}function ts(t){let e=Da(),r=e.matches[e.matches.length-1];return r.route.id||A(!1),r.route.id}function Aa(){var t;let e=h.useContext(Jr),r=Ia(),s=ts();return e!==void 0?e:(t=r.errors)==null?void 0:t[s]}function za(){let{router:t}=Na(Xr.UseNavigateStable),e=ts(es.UseNavigateStable),r=h.useRef(!1);return Yr(()=>{r.current=!0}),h.useCallback(function(a,n){n===void 0&&(n={}),r.current&&(typeof a==\"number\"?t.navigate(a):t.navigate(a,$e({fromRouteId:e},n)))},[t,e])}const ir={};function Ma(t,e,r){ir[t]||(ir[t]=!0)}function Fa(t,e){t==null||t.v7_startTransition,t==null||t.v7_relativeSplatPath}function ko(t){let{to:e,replace:r,state:s,relative:a}=t;De()||A(!1);let{future:n,static:o}=h.useContext(me),{matches:c}=h.useContext(Z),{pathname:l}=fe(),d=Kt(),m=Ht(e,qt(c,n.v7_relativeSplatPath),l,a===\"path\"),u=JSON.stringify(m);return h.useEffect(()=>d(JSON.parse(u),{replace:r,state:s,relative:a}),[d,u,a,r,s]),null}function Ba(t){return Pa(t.context)}function D(t){A(!1)}function $a(t){let{basename:e=\"/\",children:r=null,location:s,navigationType:a=ue.Pop,navigator:n,static:o=!1,future:c}=t;De()&&A(!1);let l=e.replace(/^\\/*/,\"/\"),d=h.useMemo(()=>({basename:l,navigator:n,static:o,future:$e({v7_relativeSplatPath:!1},c)}),[l,c,n,o]);typeof s==\"string\"&&(s=Ie(s));let{pathname:m=\"/\",search:u=\"\",hash:b=\"\",state:v=null,key:x=\"default\"}=s,p=h.useMemo(()=>{let f=Vt(m,l);return f==null?null:{location:{pathname:f,search:u,hash:b,state:v,key:x},navigationType:a}},[l,m,u,b,v,x,a]);return p==null?null:h.createElement(me.Provider,{value:d},h.createElement(ht.Provider,{children:r,value:p}))}function Ua(t){let{children:e,location:r}=t;return _a(It(e),r)}new Promise(()=>{});function It(t,e){e===void 0&&(e=[]);let r=[];return h.Children.forEach(t,(s,a)=>{if(!h.isValidElement(s))return;let n=[...e,a];if(s.type===h.Fragment){r.push.apply(r,It(s.props.children,n));return}s.type!==D&&A(!1),!s.props.index||!s.props.children||A(!1);let o={id:s.props.id||n.join(\"-\"),caseSensitive:s.props.caseSensitive,element:s.props.element,Component:s.props.Component,index:s.props.index,path:s.props.path,loader:s.props.loader,action:s.props.action,errorElement:s.props.errorElement,ErrorBoundary:s.props.ErrorBoundary,hasErrorBoundary:s.props.ErrorBoundary!=null||s.props.errorElement!=null,shouldRevalidate:s.props.shouldRevalidate,handle:s.props.handle,lazy:s.props.lazy};s.props.children&&(o.children=It(s.props.children,n)),r.push(o)}),r}/**",
          "type": "error"
        },
        {
          "line_number": 37,
          "content": "*/function Dt(){return Dt=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},Dt.apply(this,arguments)}function Va(t,e){if(t==null)return{};var r={},s=Object.keys(t),a,n;for(n=0;n<s.length;n++)a=s[n],!(e.indexOf(a)>=0)&&(r[a]=t[a]);return r}function qa(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}function Ha(t,e){return t.button===0&&(!e||e===\"_self\")&&!qa(t)}function At(t){return t===void 0&&(t=\"\"),new URLSearchParams(typeof t==\"string\"||Array.isArray(t)||t instanceof URLSearchParams?t:Object.keys(t).reduce((e,r)=>{let s=t[r];return e.concat(Array.isArray(s)?s.map(a=>[r,a]):[[r,s]])},[]))}function Wa(t,e){let r=At(t);return e&&e.forEach((s,a)=>{r.has(a)||e.getAll(a).forEach(n=>{r.append(a,n)})}),r}const Ka=[\"onClick\",\"relative\",\"reloadDocument\",\"replace\",\"state\",\"target\",\"to\",\"preventScrollReset\",\"viewTransition\"],Ga=\"6\";try{window.__reactRouterVersion=Ga}catch{}const Qa=\"startTransition\",or=Vs[Qa];function Ja(t){let{basename:e,children:r,future:s,window:a}=t,n=h.useRef();n.current==null&&(n.current=Qs({window:a,v5Compat:!0}));let o=n.current,[c,l]=h.useState({action:o.action,location:o.location}),{v7_startTransition:d}=s||{},m=h.useCallback(u=>{d&&or?or(()=>l(u)):l(u)},[l,d]);return h.useLayoutEffect(()=>o.listen(m),[o,m]),h.useEffect(()=>Fa(s),[s]),h.createElement($a,{basename:e,children:r,location:c.location,navigationType:c.action,navigator:o,future:s})}const Ya=typeof window<\"u\"&&typeof window.document<\"u\"&&typeof window.document.createElement<\"u\",Za=/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i,Et=h.forwardRef(function(e,r){let{onClick:s,relative:a,reloadDocument:n,replace:o,state:c,target:l,to:d,preventScrollReset:m,viewTransition:u}=e,b=Va(e,Ka),{basename:v}=h.useContext(me),x,p=!1;if(typeof d==\"string\"&&Za.test(d)&&(x=d,Ya))try{let w=new URL(window.location.href),E=d.startsWith(\"//\")?new URL(w.protocol+d):new URL(d),P=Vt(E.pathname,v);E.origin===w.origin&&P!=null?d=P+E.search+E.hash:p=!0}catch{}let f=wa(d,{relative:a}),g=Xa(d,{replace:o,state:c,target:l,preventScrollReset:m,relative:a,viewTransition:u});function S(w){s&&s(w),w.defaultPrevented||g(w)}return h.createElement(\"a\",Dt({},b,{href:x||f,onClick:p||n?s:S,ref:r,target:l}))});var cr;(function(t){t.UseScrollRestoration=\"useScrollRestoration\",t.UseSubmit=\"useSubmit\",t.UseSubmitFetcher=\"useSubmitFetcher\",t.UseFetcher=\"useFetcher\",t.useViewTransitionState=\"useViewTransitionState\"})(cr||(cr={}));var lr;(function(t){t.UseFetcher=\"useFetcher\",t.UseFetchers=\"useFetchers\",t.UseScrollRestoration=\"useScrollRestoration\"})(lr||(lr={}));function Xa(t,e){let{target:r,replace:s,state:a,preventScrollReset:n,relative:o,viewTransition:c}=e===void 0?{}:e,l=Kt(),d=fe(),m=Zr(t,{relative:o});return h.useCallback(u=>{if(Ha(u,r)){u.preventDefault();let b=s!==void 0?s:dt(d)===dt(m);l(t,{replace:b,state:a,preventScrollReset:n,relative:o,viewTransition:c})}},[d,l,m,s,a,r,t,n,o,c])}function Lo(t){let e=h.useRef(At(t)),r=h.useRef(!1),s=fe(),a=h.useMemo(()=>Wa(s.search,r.current?null:e.current),[s.search]),n=Kt(),o=h.useCallback((c,l)=>{const d=At(typeof c==\"function\"?c(a):c);r.current=!0,n(\"?\"+d,l)},[n,a]);return[a,o]}const en=\"modulepreload\",tn=function(t){return\"/\"+t},dr={},T=function(e,r,s){let a=Promise.resolve();if(r&&r.length>0){let o=function(d){return Promise.all(d.map(m=>Promise.resolve(m).then(u=>({status:\"fulfilled\",value:u}),u=>({status:\"rejected\",reason:u}))))};document.getElementsByTagName(\"link\");const c=document.querySelector(\"meta[property=csp-nonce]\"),l=(c==null?void 0:c.nonce)||(c==null?void 0:c.getAttribute(\"nonce\"));a=o(r.map(d=>{if(d=tn(d),d in dr)return;dr[d]=!0;const m=d.endsWith(\".css\"),u=m?'[rel=\"stylesheet\"]':\"\";if(document.querySelector(`link[href=\"${d}\"]${u}`))return;const b=document.createElement(\"link\");if(b.rel=m?\"stylesheet\":en,m||(b.as=\"script\"),b.crossOrigin=\"\",b.href=d,l&&b.setAttribute(\"nonce\",l),document.head.appendChild(b),m)return new Promise((v,x)=>{b.addEventListener(\"load\",v),b.addEventListener(\"error\",()=>x(new Error(`Unable to preload CSS for ${d}`)))})}))}function n(o){const c=new Event(\"vite:preloadError\",{cancelable:!0});if(c.payload=o,window.dispatchEvent(c),!c.defaultPrevented)throw o}return a.then(o=>{for(const c of o||[])c.status===\"rejected\"&&n(c.reason);return e().catch(n)})},zt={BYTES_PER_KB:1024},Ee={LCP_GOOD:2500,LCP_NEEDS_IMPROVEMENT:4e3,FCP_GOOD:1800,FCP_NEEDS_IMPROVEMENT:3e3,TTFB_GOOD:800,TTFB_NEEDS_IMPROVEMENT:1800},rn={SHORT_UPDATE_INTERVAL:2e3},sn={DEFAULT_CACHE_TIMEOUT:15};function an(t){return t.entryType===\"resource\"}function nn(t){return t.entryType===\"largest-contentful-paint\"}function on(t){return t.entryType===\"layout-shift\"}function cn(t){return t.initiatorType===\"img\"}function ln(t){return t.initiatorType===\"font\"||t.name.includes(\"font\")||/\\.(woff2?|ttf|otf|eot)(\\?.*)?$/.test(t.name)}function dn(t){return t.initiatorType===\"css\"||t.name.includes(\".css\")}function Ct(t){const e=t.responseEnd-t.requestStart,r=t.encodedBodySize>0?(t.decodedBodySize-t.encodedBodySize)/t.decodedBodySize:0;return{loadTime:e,size:t.transferSize,compressionRatio:r,cacheHit:t.transferSize===0&&t.decodedBodySize>0}}function un(t){var e,r;return{element:(r=(e=t.element)==null?void 0:e.tagName)==null?void 0:r.toLowerCase(),loadTime:t.loadTime??t.renderTime,size:t.size,url:t.url}}const rs={criticalSelectors:[\"*\",\"html\",\"body\",\":root\",\".app\",\".layout\",\".container\",'[class*=\"navigation\"]','[class*=\"header\"]','[class*=\"nav\"]','[class*=\"sidebar\"]','[class*=\"menu\"]','[class*=\"loading\"]','[class*=\"spinner\"]','[class*=\"skeleton\"]',\".loading-container\",\".protected-route__loading\",'[class*=\"button\"]','[class*=\"btn\"]','[class*=\"input\"]','[class*=\"form\"]','[class*=\"card\"]','[class*=\"panel\"]','[class*=\"alert\"]','[class*=\"notification\"]',\".dashboard\",\".dashboard__header\",\".dashboard__title\",\".dashboard__grid\",\".dashboard__card\",\".dashboard__metric\",\".dashboard__metric-value\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"p\",\"span\",\"strong\",\"em\",\".auth\",'[class*=\"login\"]','[class*=\"register\"]',\".error\",\".not-found\",'[class*=\"error\"]','[class*=\"logo\"]','[class*=\"brand\"]',\"@media (max-width: 768px)\",\"@media (max-width: 480px)\"],deferredSelectors:['[class*=\"chart\"]','[class*=\"graph\"]','[class*=\"visualization\"]',\".recharts\",'[class*=\"recharts\"]','[class*=\"modal\"]','[class*=\"dialog\"]','[class*=\"overlay\"]','[class*=\"popup\"]','[class*=\"tooltip\"]','[class*=\"dropdown\"]','[class*=\"animation\"]','[class*=\"transition\"]','[class*=\"fade\"]','[class*=\"slide\"]','[class*=\"bounce\"]',\".settings\",\".ai-insights\",\".comparison\",\".securities\",\".portfolio__positions\",\".portfolio__details\",'[class*=\"table\"]','[class*=\"grid\"]','[class*=\"list\"]','[class*=\"performance\"]','[class*=\"debug\"]','[class*=\"monitor\"]',\"@media print\",\"@media (min-resolution: 2dppx)\",\"@media (-webkit-min-device-pixel-ratio: 2)\"],criticalMedia:[\"screen\",\"(max-width: 768px)\",\"(max-width: 480px)\",\"(prefers-reduced-motion: reduce)\",\"(prefers-color-scheme: dark)\"],maxInlineSize:14*1024,enableOptimization:!0,developmentMode:!1};class Mt{static async extractCriticalCSS(e){const r=performance.now(),s=JSON.stringify(e.criticalSelectors);if(this.cache.has(s))return this.cache.get(s);try{const a=[],n=[...document.styleSheets];for(const l of n)try{const d=[...l.cssRules??[]];for(const m of d)if(m.type===CSSRule.STYLE_RULE){const u=m;this.isCriticalSelector(u.selectorText,e)&&a.push(this.parseStyleRule(u))}else if(m.type===CSSRule.MEDIA_RULE){const u=m;if(this.isCriticalMedia(u.media.mediaText,e)){const b=[...u.cssRules];for(const v of b)if(v.type===CSSRule.STYLE_RULE){const x=v;if(this.isCriticalSelector(x.selectorText,e)){const p=this.parseStyleRule(x);p.media=u.media.mediaText,a.push(p)}}}}}catch(d){console.warn(\"Cannot access stylesheet:\",d)}const o=this.generateOptimizedCSS(a,e),c=performance.now()-r;return this.updateMetrics(o,a.length,c),this.cache.set(s,o),o}catch(a){return console.error(\"Critical CSS extraction failed:\",a),\"\"}}static isCriticalSelector(e,r){return r.criticalSelectors.some(s=>{if(e===s)return!0;if(s.includes(\"*\")){const a=s.replaceAll(\"*\",\".*\");return new RegExp(`^${a}$`).test(e)}if(s.startsWith(\"[class*=\")||s.startsWith(\"[id*=\")){const a=s.match(/\\*=\"([^\"]+)\"/);if(a!=null&&a[1])return e.includes(a[1])}return!1})}static isCriticalMedia(e,r){return r.criticalMedia.some(s=>e.includes(s))}static parseStyleRule(e){const r={};for(let s=0;s<e.style.length;s++){const a=e.style[s];a&&(r[a]=e.style.getPropertyValue(a))}return{selector:e.selectorText,properties:r,priority:this.calculateSelectorPriority(e.selectorText)}}static calculateSelectorPriority(e){let r=0;return r+=(e.match(/#/g)||[]).length*100,r+=(e.match(/\\.|:\\w+|\\[[^\\]]*\\]/g)||[]).length*10,r+=(e.match(/(?:^|\\s)[a-zA-Z]+/g)||[]).length*1,r}static generateOptimizedCSS(e,r){var c,l;const s=e.sort((d,m)=>m.priority-d.priority),a={},n=[];for(const d of s)(c=d.media)!=null&&c.trim()?(a[d.media]||(a[d.media]=[]),(l=a[d.media])==null||l.push(d)):n.push(d);let o=\"\";for(const d of n)o+=this.ruleToCSS(d,r);for(const[d,m]of Object.entries(a)){o+=`@media ${d} {`;for(const u of m)o+=this.ruleToCSS(u,r,!0);o+=\"}\"}return r.enableOptimization?this.optimizeCSS(o):o}static ruleToCSS(e,r,s=!1){const a=Object.entries(e.properties).map(([o,c])=>`${o}:${c}`).join(\";\");return`${r.enableOptimization?this.optimizeSelector(e.selector):e.selector}{${a};}`}static optimizeSelector(e){return e.replaceAll(/\\s+/g,\" \").replaceAll(/\\s*([>+~])\\s*/g,\"$1\").trim()}static optimizeCSS(e){return e.replaceAll(/\\/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*\\//g,\"\").replaceAll(/\\s+/g,\" \").replaceAll(/;\\s*}/g,\"}\").replaceAll(/\\s*{\\s*/g,\"{\").replaceAll(/;\\s*/g,\";\").replaceAll(/:\\s*/g,\":\").trim()}static updateMetrics(e,r,s){this.metrics={criticalSize:new Blob([e]).size,deferredSize:0,totalRules:r,criticalRules:r,deferredRules:0,extractionTime:s}}static getMetrics(){return{...this.metrics}}static clearCache(){this.cache.clear()}}L(Mt,\"cache\",new Map),L(Mt,\"metrics\",{criticalSize:0,deferredSize:0,totalRules:0,criticalRules:0,deferredRules:0,extractionTime:0});const hn=async(t=rs)=>{if(!(typeof document>\"u\"))try{const e=await Mt.extractCriticalCSS(t);if(e&&e.length>0&&e.length<=t.maxInlineSize){const r=document.createElement(\"style\");r.id=\"critical-css\",r.textContent=e;const s=document.head.firstChild;s?document.head.insertBefore(r,s):document.head.appendChild(r),console.log(\"Critical CSS inlined:\",{size:e.length,compressed:t.enableOptimization})}}catch(e){console.error(\"Failed to inline critical CSS:\",e)}},mn=(t,e=0)=>typeof document>\"u\"?Promise.resolve():new Promise(r=>{const s=a=>new Promise((n,o)=>{const c=document.createElement(\"link\");c.rel=\"stylesheet\",c.href=a,c.media=\"print\",c.onload=()=>{c.media=\"all\",n()},c.onerror=()=>o(new Error(`Failed to load stylesheet: ${a}`)),document.head.appendChild(c)});setTimeout(async()=>{try{await Promise.all(t.map(s)),r()}catch(a){console.warn(\"Some deferred stylesheets failed to load:\",a),r()}},e)}),fn=t=>{typeof document>\"u\"||t.forEach(e=>{const r=document.createElement(\"link\");r.rel=\"preload\",r.as=\"style\",r.href=e,document.head.appendChild(r)})},ur=({children:t,config:e=rs,deferredStylesheets:r=[],preloadStylesheets:s=[],deferDelay:a=1e3})=>{const[n,o]=h.useState(!1),[c,l]=h.useState(!1);return h.useEffect(()=>{(async()=>{s.length>0&&fn(s),await hn(e),o(!0),r.length>0?mn(r,a).then(()=>l(!0)):l(!0)})()},[e,r,s,a]),i.jsx(\"div\",{\"data-critical-loaded\":n,\"data-deferred-loaded\":c,children:t})},ss={preloadFonts:[\"Inter-Regular\",\"Inter-Medium\",\"Inter-Bold\"],fontDisplay:\"swap\",fallbackFonts:{Inter:[\"-apple-system\",\"BlinkMacSystemFont\",'\"Segoe UI\"',\"Roboto\",'\"Helvetica Neue\"',\"Arial\",\"sans-serif\"],\"JetBrains Mono\":[\"Monaco\",\"Menlo\",'\"Ubuntu Mono\"',\"Consolas\",'\"Courier New\"',\"monospace\"]},subsetUnicodeRanges:[\"U+0000-00FF\",\"U+0100-017F\",\"U+0180-024F\",\"U+0250-02AF\",\"U+2000-206F\",\"U+20A0-20CF\",\"U+2190-21FF\",\"U+2500-257F\"],enablePreconnect:!0,criticalFonts:[\"Inter-Regular\",\"Inter-Medium\"],deferredFonts:[\"Inter-Light\",\"Inter-ExtraBold\",\"JetBrains Mono\"]},as=[{family:\"Inter\",style:\"normal\",weight:400,display:\"swap\",sources:[{url:\"/fonts/inter/Inter-Regular.woff2\",format:\"woff2\"},{url:\"/fonts/inter/Inter-Regular.woff\",format:\"woff\"}]},{family:\"Inter\",style:\"normal\",weight:500,display:\"swap\",sources:[{url:\"/fonts/inter/Inter-Medium.woff2\",format:\"woff2\"},{url:\"/fonts/inter/Inter-Medium.woff\",format:\"woff\"}]},{family:\"Inter\",style:\"normal\",weight:700,display:\"swap\",sources:[{url:\"/fonts/inter/Inter-Bold.woff2\",format:\"woff2\"},{url:\"/fonts/inter/Inter-Bold.woff\",format:\"woff\"}]},{family:\"Inter\",style:\"normal\",weight:300,display:\"swap\",sources:[{url:\"/fonts/inter/Inter-Light.woff2\",format:\"woff2\"},{url:\"/fonts/inter/Inter-Light.woff\",format:\"woff\"}]},{family:\"JetBrains Mono\",style:\"normal\",weight:400,display:\"swap\",sources:[{url:\"/fonts/jetbrains-mono/JetBrainsMono-Regular.woff2\",format:\"woff2\"},{url:\"/fonts/jetbrains-mono/JetBrainsMono-Regular.woff\",format:\"woff\"}]}];class Fe{static initialize(){if(!(typeof window>\"u\")){if(\"PerformanceObserver\"in window){const e=new PerformanceObserver(r=>{r.getEntries().forEach(s=>{if(s.entryType===\"resource\"&&s.name.includes(\"font\")){const a=s;this.recordFontLoad(s.name,s.duration,a.transferSize)}})});e.observe({entryTypes:[\"resource\"]}),this.observers.push(e)}if(\"PerformanceObserver\"in window&&\"LayoutShift\"in window){const e=new PerformanceObserver(r=>{r.getEntries().forEach(s=>{if(on(s)){if(s.hadRecentInput)return;s.value>.1&&console.warn(\"Potential font-related layout shift detected:\",{value:s.value,sources:s.sources,timestamp:s.startTime})}})});try{e.observe({entryTypes:[\"layout-shift\"]}),this.observers.push(e)}catch{console.warn(\"Layout shift monitoring not supported\")}}}}static recordFontLoad(e,r,s){const a=this.extractFontName(e),n={family:a.family,weight:a.weight,style:a.style,loadTime:r,renderTime:performance.now(),fallbackUsed:!1,timestamp:Date.now()};this.metrics.push(n),this.metrics.length>this.maxMetrics&&(this.metrics=this.metrics.slice(-this.maxMetrics))}static extractFontName(e){const r=e.split(\"/\").pop()||\"\";let s=\"Unknown\";r.includes(\"Inter\")?s=\"Inter\":r.includes(\"JetBrains\")&&(s=\"JetBrains Mono\");let a=400;r.includes(\"Light\")?a=300:r.includes(\"Regular\")?a=400:r.includes(\"Medium\")?a=500:r.includes(\"Bold\")&&(a=700);const n=r.includes(\"Italic\")?\"italic\":\"normal\";return{family:s,weight:a,style:n}}static getMetrics(){return[...this.metrics]}static getAverageLoadTime(e){const r=e?this.metrics.filter(s=>s.family===e):this.metrics;return r.length===0?0:r.reduce((s,a)=>s+a.loadTime,0)/r.length}static cleanup(){this.observers.forEach(e=>e.disconnect()),this.observers=[]}}L(Fe,\"metrics\",[]),L(Fe,\"maxMetrics\",50),L(Fe,\"observers\",[]);const pn=(t=ss)=>{typeof document>\"u\"||t.preloadFonts.forEach(e=>{const r=as.find(s=>`${s.family}-${s.weight}`.replaceAll(/\\s+/g,\"\")===e.replaceAll(/\\s+/g,\"\"));if(r&&r.sources.length>0){const s=r.sources[0];if(!s)return;const a=document.createElement(\"link\");a.rel=\"preload\",a.as=\"font\",a.type=`font/${s.format}`,a.href=s.url,a.crossOrigin=\"anonymous\",document.head.appendChild(a)}})},gn=(t=[\"fonts.googleapis.com\",\"fonts.gstatic.com\"])=>{typeof document>\"u\"||t.forEach(e=>{const r=document.createElement(\"link\");r.rel=\"preconnect\",r.href=`https://${e}`,r.crossOrigin=\"anonymous\",document.head.appendChild(r)})},yn=(t=as)=>t.map(e=>{const r=e.sources.map(o=>`url('${o.url}') format('${o.format}')`).join(\", \"),s=e.unicodeRange?`unicode-range: ${e.unicodeRange};`:\"\",a=e.featureSettings?`font-feature-settings: ${e.featureSettings};`:\"\",n=e.variationSettings?`font-variation-settings: ${e.variationSettings};`:\"\";return`",
          "type": "warn"
        },
        {
          "line_number": 49,
          "content": "`),vn=({children:t,config:e=ss,enableTracking:r=!0})=>(h.useEffect(()=>{r&&Fe.initialize(),e.enablePreconnect&&gn(),pn(e);const s=document.createElement(\"style\");return s.textContent=yn(),document.head.appendChild(s),()=>{r&&Fe.cleanup(),s.parentNode&&s.parentNode.removeChild(s)}},[e,r]),i.jsx(i.Fragment,{children:t})),bn={enableInProduction:!1,enableConsoleInDevelopment:!0,maxLogEntries:1e3,enableRemoteLogging:!1};class Ge{constructor(e={}){L(this,\"config\");L(this,\"logEntries\",[]);L(this,\"isDevelopment\");this.config={...bn,...e},this.isDevelopment=!1}debug(e,r,s){!this.isDevelopment&&!this.config.enableInProduction||this.log(\"debug\",e,r,s)}info(e,r,s){this.log(\"info\",e,r,s)}warn(e,r,s){this.log(\"warn\",e,r,s)}error(e,r,s){this.log(\"error\",e,r,s)}log(e,r,s,a){const n={level:e,message:r,data:s,timestamp:new Date().toISOString(),context:a};this.storeLogEntry(n),this.shouldLogToConsole(e)&&this.logToConsole(n),this.config.enableRemoteLogging&&this.logToRemote(n)}shouldLogToConsole(e){return!!(e===\"error\"||this.isDevelopment&&this.config.enableConsoleInDevelopment||!this.isDevelopment&&this.config.enableInProduction)}logToConsole(e){const s=`${e.context?`[${e.context}]`:\"\"} ${e.message}`;switch(e.level){case\"debug\":console.debug(s,e.data);break;case\"info\":console.info(s,e.data);break;case\"warn\":console.warn(s,e.data);break;case\"error\":console.error(s,e.data);break}}storeLogEntry(e){this.logEntries.push(e),this.logEntries.length>this.config.maxLogEntries&&(this.logEntries=this.logEntries.slice(-this.config.maxLogEntries))}logToRemote(e){e.level===\"error\"&&typeof window<\"u\"}getLogs(){return[...this.logEntries]}clearLogs(){this.logEntries=[]}getLogsByLevel(e){return this.logEntries.filter(r=>r.level===e)}}const Oo=new Ge,ee=new Ge;new Ge;const No=new Ge;new Ge;const xn={enableImageOptimization:!0,enableFontOptimization:!0,enableCriticalCSS:!0,enablePerformanceMonitoring:!0,developmentMode:!1},hr=[\"/assets/styles/charts.css\",\"/assets/styles/animations.css\",\"/assets/styles/advanced-components.css\"],mr=[\"/assets/styles/critical.css\",\"/assets/styles/layout.css\"],Sn=({children:t,config:e={},onPerformanceUpdate:r})=>{const[s,a]=h.useState(!1),[n,o]=h.useState(null),c={...xn,...e};h.useEffect(()=>{(async()=>{try{if(c.enablePerformanceMonitoring&&l(),a(!0),ee.debug(\"\ud83d\ude80 Asset Optimization initialized\",c,\"AssetOptimization\"),c.enablePerformanceMonitoring){const p=setInterval(v,1e4);return()=>clearInterval(p)}return()=>{}}catch(p){return ee.error(\"Asset Optimization initialization failed\",p,\"AssetOptimization\"),()=>{}}})()},[c,v,l]);const l=h.useCallback(()=>{if(typeof window>\"u\"||!(\"PerformanceObserver\"in window))return;const x=new PerformanceObserver(f=>{f.getEntries().forEach(g=>{an(g)&&(cn(g)?d(g):ln(g)?m(g):dn(g)&&u(g))})});try{x.observe({entryTypes:[\"resource\"]})}catch(f){ee.warn(\"Resource performance monitoring not supported\",f,\"AssetOptimization\")}const p=new PerformanceObserver(f=>{f.getEntries().forEach(g=>{if(nn(g)){const S=un(g);ee.debug(\"LCP detected\",{element:S.element,loadTime:S.loadTime,size:S.size,url:S.url},\"LCP\")}})});try{p.observe({entryTypes:[\"largest-contentful-paint\"]})}catch(f){ee.warn(\"LCP monitoring not supported\",f,\"LCP\")}},[]),d=x=>{const p=b(x.name),f=p===\"avif\"||p===\"webp\",g=Ct(x);ee.debug(\"\ud83d\udcf8 Image loaded\",{name:x.name.split(\"/\").pop(),format:p,loadTime:g.loadTime,size:g.size,modern:f,cached:g.cacheHit,compression:`${(g.compressionRatio*100).toFixed(1)}%`},\"ImagePerformance\")},m=x=>{const p=Ct(x);ee.debug(\"\ud83d\udd24 Font loaded\",{name:x.name.split(\"/\").pop(),loadTime:p.loadTime,size:p.size,cached:p.cacheHit,compression:`${(p.compressionRatio*100).toFixed(1)}%`},\"FontPerformance\")},u=x=>{const p=x.name.includes(\"critical\")||x.name.includes(\"inline\"),f=Ct(x);ee.debug(\"\ud83c\udfa8 CSS loaded\",{name:x.name.split(\"/\").pop(),loadTime:f.loadTime,size:f.size,critical:p,cached:f.cacheHit,compression:`${(f.compressionRatio*100).toFixed(1)}%`},\"CSSPerformance\")},b=x=>x.includes(\".avif\")?\"avif\":x.includes(\".webp\")?\"webp\":x.includes(\".jpg\")||x.includes(\".jpeg\")?\"jpeg\":x.includes(\".png\")?\"png\":\"unknown\",v=h.useCallback(()=>{try{const x={imageMetrics:{totalImages:0,modernFormatUsage:0,averageLoadTime:0,compressionSavings:0},fontMetrics:{totalFonts:0,averageLoadTime:0,preloadedFonts:0},cssMetrics:{criticalSize:0,deferredSize:0,extractionTime:0},overallPerformanceScore:85};o(x),r==null||r(x)}catch(x){ee.error(\"Performance metrics collection failed\",x,\"PerformanceMetrics\")}},[r]);return!s&&c.enablePerformanceMonitoring?i.jsxs(\"div\",{className:\"asset-optimization-loading\",children:[i.jsx(\"div\",{className:\"loading-spinner\"}),i.jsx(\"p\",{children:\"Initializing asset optimization...\"}),i.jsx(\"style\",{children:`",
          "type": "debug"
        },
        {
          "line_number": 214,
          "content": "*/const In=G(\"X\",[[\"path\",{d:\"M18 6 6 18\",key:\"1bl5f8\"}],[\"path\",{d:\"m6 6 12 12\",key:\"d8bk6v\"}]]),Dn={},pr=t=>{let e;const r=new Set,s=(m,u)=>{const b=typeof m==\"function\"?m(e):m;if(!Object.is(b,e)){const v=e;e=u??(typeof b!=\"object\"||b===null)?b:Object.assign({},e,b),r.forEach(x=>x(e,v))}},a=()=>e,l={setState:s,getState:a,getInitialState:()=>d,subscribe:m=>(r.add(m),()=>r.delete(m)),destroy:()=>{(Dn?\"production\":void 0)!==\"production\"&&console.warn(\"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"),r.clear()}},d=e=t(s,a,l);return l},An=t=>t?pr(t):pr;var Pt={exports:{}},_t={},Rt={exports:{}},jt={};/**",
          "type": "warn"
        },
        {
          "line_number": 230,
          "content": "*/var vr;function Fn(){if(vr)return _t;vr=1;var t=Ut(),e=Mn();function r(d,m){return d===m&&(d!==0||1/d===1/m)||d!==d&&m!==m}var s=typeof Object.is==\"function\"?Object.is:r,a=e.useSyncExternalStore,n=t.useRef,o=t.useEffect,c=t.useMemo,l=t.useDebugValue;return _t.useSyncExternalStoreWithSelector=function(d,m,u,b,v){var x=n(null);if(x.current===null){var p={hasValue:!1,value:null};x.current=p}else p=x.current;x=c(function(){function g(O){if(!S){if(S=!0,w=O,O=b(O),v!==void 0&&p.hasValue){var k=p.value;if(v(k,O))return E=k}return E=O}if(k=E,s(w,O))return k;var X=b(O);return v!==void 0&&v(k,X)?(w=O,k):(w=O,E=X)}var S=!1,w,E,P=u===void 0?null:u;return[function(){return g(m())},P===null?void 0:function(){return g(P())}]},[m,u,b,v]);var f=a(d,x[0],x[1]);return o(function(){p.hasValue=!0,p.value=f},[f]),l(f),f},_t}var br;function Bn(){return br||(br=1,Pt.exports=Fn()),Pt.exports}var $n=Bn();const Un=Hr($n),ns={},{useDebugValue:Vn}=j,{useSyncExternalStoreWithSelector:qn}=Un;let xr=!1;const Hn=t=>t;function Wn(t,e=Hn,r){(ns?\"production\":void 0)!==\"production\"&&r&&!xr&&(console.warn(\"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"),xr=!0);const s=qn(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,r);return Vn(s),s}const Sr=t=>{(ns?\"production\":void 0)!==\"production\"&&typeof t!=\"function\"&&console.warn(\"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\");const e=typeof t==\"function\"?An(t):t,r=(s,a)=>Wn(e,s,a);return Object.assign(r,e),r},Kn=t=>t?Sr(t):Sr,Gn={},Qn=t=>(e,r,s)=>{const a=s.subscribe;return s.subscribe=(o,c,l)=>{let d=o;if(c){const m=(l==null?void 0:l.equalityFn)||Object.is;let u=o(s.getState());d=b=>{const v=o(b);if(!m(u,v)){const x=u;c(u=v,x)}},l!=null&&l.fireImmediately&&c(u,u)}return a(d)},t(e,r,s)},Jn=Qn;function Yn(t,e){let r;try{r=t()}catch{return}return{getItem:a=>{var n;const o=l=>l===null?null:JSON.parse(l,void 0),c=(n=r.getItem(a))!=null?n:null;return c instanceof Promise?c.then(o):o(c)},setItem:(a,n)=>r.setItem(a,JSON.stringify(n,void 0)),removeItem:a=>r.removeItem(a)}}const Ue=t=>e=>{try{const r=t(e);return r instanceof Promise?r:{then(s){return Ue(s)(r)},catch(s){return this}}}catch(r){return{then(s){return this},catch(s){return Ue(s)(r)}}}},Zn=(t,e)=>(r,s,a)=>{let n={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:f=>f,version:0,merge:(f,g)=>({...g,...f}),...e},o=!1;const c=new Set,l=new Set;let d;try{d=n.getStorage()}catch{}if(!d)return t((...f)=>{console.warn(`[zustand persist middleware] Unable to update item '${n.name}', the given storage is currently unavailable.`),r(...f)},s,a);const m=Ue(n.serialize),u=()=>{const f=n.partialize({...s()});let g;const S=m({state:f,version:n.version}).then(w=>d.setItem(n.name,w)).catch(w=>{g=w});if(g)throw g;return S},b=a.setState;a.setState=(f,g)=>{b(f,g),u()};const v=t((...f)=>{r(...f),u()},s,a);let x;const p=()=>{var f;if(!d)return;o=!1,c.forEach(S=>S(s()));const g=((f=n.onRehydrateStorage)==null?void 0:f.call(n,s()))||void 0;return Ue(d.getItem.bind(d))(n.name).then(S=>{if(S)return n.deserialize(S)}).then(S=>{if(S)if(typeof S.version==\"number\"&&S.version!==n.version){if(n.migrate)return n.migrate(S.state,S.version);console.error(\"State loaded from storage couldn't be migrated since no migrate function was provided\")}else return S.state}).then(S=>{var w;return x=n.merge(S,(w=s())!=null?w:v),r(x,!0),u()}).then(()=>{g==null||g(x,void 0),o=!0,l.forEach(S=>S(x))}).catch(S=>{g==null||g(void 0,S)})};return a.persist={setOptions:f=>{n={...n,...f},f.getStorage&&(d=f.getStorage())},clearStorage:()=>{d==null||d.removeItem(n.name)},getOptions:()=>n,rehydrate:()=>p(),hasHydrated:()=>o,onHydrate:f=>(c.add(f),()=>{c.delete(f)}),onFinishHydration:f=>(l.add(f),()=>{l.delete(f)})},p(),x||v},Xn=(t,e)=>(r,s,a)=>{let n={storage:Yn(()=>localStorage),partialize:p=>p,version:0,merge:(p,f)=>({...f,...p}),...e},o=!1;const c=new Set,l=new Set;let d=n.storage;if(!d)return t((...p)=>{console.warn(`[zustand persist middleware] Unable to update item '${n.name}', the given storage is currently unavailable.`),r(...p)},s,a);const m=()=>{const p=n.partialize({...s()});return d.setItem(n.name,{state:p,version:n.version})},u=a.setState;a.setState=(p,f)=>{u(p,f),m()};const b=t((...p)=>{r(...p),m()},s,a);a.getInitialState=()=>b;let v;const x=()=>{var p,f;if(!d)return;o=!1,c.forEach(S=>{var w;return S((w=s())!=null?w:b)});const g=((f=n.onRehydrateStorage)==null?void 0:f.call(n,(p=s())!=null?p:b))||void 0;return Ue(d.getItem.bind(d))(n.name).then(S=>{if(S)if(typeof S.version==\"number\"&&S.version!==n.version){if(n.migrate)return[!0,n.migrate(S.state,S.version)];console.error(\"State loaded from storage couldn't be migrated since no migrate function was provided\")}else return[!1,S.state];return[!1,void 0]}).then(S=>{var w;const[E,P]=S;if(v=n.merge(P,(w=s())!=null?w:b),r(v,!0),E)return m()}).then(()=>{g==null||g(v,void 0),v=s(),o=!0,l.forEach(S=>S(v))}).catch(S=>{g==null||g(void 0,S)})};return a.persist={setOptions:p=>{n={...n,...p},p.storage&&(d=p.storage)},clearStorage:()=>{d==null||d.removeItem(n.name)},getOptions:()=>n,rehydrate:()=>x(),hasHydrated:()=>o,onHydrate:p=>(c.add(p),()=>{c.delete(p)}),onFinishHydration:p=>(l.add(p),()=>{l.delete(p)})},n.skipHydration||x(),v||b},ei=(t,e)=>\"getStorage\"in e||\"serialize\"in e||\"deserialize\"in e?((Gn?\"production\":void 0)!==\"production\"&&console.warn(\"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"),Zn(t,e)):Xn(t,e),ti=ei,Tt=()=>({theme:{mode:\"system\",colorScheme:\"default\",customColors:{}},locale:{language:\"en\",region:\"US\",numberFormat:{currency:\"USD\",currencyDisplay:\"symbol\",decimalPlaces:2,thousandsSeparator:\",\",decimalSeparator:\".\",showCents:!0},dateTime:{dateFormat:\"MM/DD/YYYY\",timeFormat:\"12h\",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,showRelativeDates:!0}},dashboard:{layout:\"grid\",widgetOrder:[\"portfolio-summary\",\"watchlist\",\"news\",\"market-overview\"],hiddenWidgets:[],refreshInterval:3e4,autoRefresh:!0,compactMode:!1,showWelcomeMessage:!0},charts:{defaultChartType:\"line\",showVolume:!0,showMovingAverages:!1,movingAveragePeriods:[20,50,200],colorScheme:\"bullish-bearish\",animationsEnabled:!0,showTooltips:!0,showCrosshair:!0},notifications:{enabled:!0,priceAlerts:!0,portfolioUpdates:!0,newsAlerts:!1,systemNotifications:!0,emailNotifications:!1,pushNotifications:!1,soundEnabled:!0,quietHours:{enabled:!1,startTime:\"22:00\",endTime:\"08:00\"}},data:{defaultTimeframe:\"1D\",realTimeUpdates:!0,dataSource:\"best_available\",cacheTimeout:sn.DEFAULT_CACHE_TIMEOUT,compressionEnabled:!0,backgroundSync:!0},accessibility:{reduceMotion:!1,highContrast:!1,largeText:!1,screenReaderSupport:!1,keyboardNavigation:!0,focusIndicators:!0,announceChanges:!1},privacy:{analytics:!0,crashReporting:!0,personalization:!0,locationTracking:!1,cookieConsent:!1,dataRetention:\"1y\"},version:\"1.0.0\",lastUpdated:new Date().toISOString(),isLoaded:!1}),ri=()=>typeof window>\"u\"?\"light\":window.matchMedia(\"(prefers-color-scheme: dark)\").matches?\"dark\":\"light\",si=()=>typeof navigator>\"u\"?\"en\":navigator.language.split(\"-\")[0]??\"en\",ai=()=>{if(typeof navigator>\"u\")return\"US\";const t=navigator.language;return t.includes(\"-\")?t.split(\"-\")[1]??\"US\":\"US\"},Gt=Kn()(Jn(ti((t,e)=>({...Tt(),updateTheme:r=>{const a={...e().theme,...r};t({theme:a,lastUpdated:new Date().toISOString()})},updateLocale:r=>{const s=e().locale,a={...s,...r,numberFormat:r.numberFormat?{...s.numberFormat,...r.numberFormat}:s.numberFormat,dateTime:r.dateTime?{...s.dateTime,...r.dateTime}:s.dateTime};t({locale:a,lastUpdated:new Date().toISOString()})},updateDashboard:r=>{const a={...e().dashboard,...r};t({dashboard:a,lastUpdated:new Date().toISOString()})},updateCharts:r=>{const a={...e().charts,...r};t({charts:a,lastUpdated:new Date().toISOString()})},updateNotifications:r=>{const s=e().notifications,a={...s,...r,quietHours:r.quietHours?{...s.quietHours,...r.quietHours}:s.quietHours};t({notifications:a,lastUpdated:new Date().toISOString()})},updateData:r=>{const a={...e().data,...r};t({data:a,lastUpdated:new Date().toISOString()})},updateAccessibility:r=>{const a={...e().accessibility,...r};t({accessibility:a,lastUpdated:new Date().toISOString()})},updatePrivacy:r=>{const a={...e().privacy,...r};t({privacy:a,lastUpdated:new Date().toISOString()})},resetToDefaults:()=>{const r=Tt();t({...r,lastUpdated:new Date().toISOString()})},exportPreferences:()=>{const r=e(),s={theme:r.theme,locale:r.locale,dashboard:r.dashboard,charts:r.charts,notifications:r.notifications,data:r.data,accessibility:r.accessibility,privacy:r.privacy,version:r.version,exportedAt:new Date().toISOString()};return JSON.stringify(s,null,2)},importPreferences:async r=>{var s,a,n;try{const o=JSON.parse(r);if(!o||typeof o!=\"object\")throw new Error(\"Invalid preferences data format\");const c=e();t({theme:{...c.theme,...o.theme},locale:{...c.locale,...o.locale,numberFormat:{...c.locale.numberFormat,...(s=o.locale)==null?void 0:s.numberFormat},dateTime:{...c.locale.dateTime,...(a=o.locale)==null?void 0:a.dateTime}},dashboard:{...c.dashboard,...o.dashboard},charts:{...c.charts,...o.charts},notifications:{...c.notifications,...o.notifications,quietHours:{...c.notifications.quietHours,...(n=o.notifications)==null?void 0:n.quietHours}},data:{...c.data,...o.data},accessibility:{...c.accessibility,...o.accessibility},privacy:{...c.privacy,...o.privacy},lastUpdated:new Date().toISOString()})}catch{throw new Error(\"Failed to import preferences: Invalid data format\")}},applySystemDefaults:()=>{const r=si(),s=ai();t({theme:{...e().theme,mode:\"system\"},locale:{...e().locale,language:r,region:s},lastUpdated:new Date().toISOString()})},getDisplayCurrency:()=>{const{currency:r,currencyDisplay:s}=e().locale.numberFormat;return s===\"symbol\"?{USD:\"$\",EUR:\"\u20ac\",GBP:\"\u00a3\",JPY:\"\u00a5\",CNY:\"\u00a5\",CAD:\"C$\",AUD:\"A$\"}[r]??r:r},getDateFormat:()=>e().locale.dateTime.dateFormat,getEffectiveTheme:()=>{const{mode:r}=e().theme;return r===\"system\"?ri():r},isAccessibilityEnabled:()=>{const r=e().accessibility;return Object.values(r).includes(!0)}}),{name:\"preferences_store\",version:1,migrate:(t,e)=>e===0?{...Tt(),...t,version:\"1.0.0\"}:t,onRehydrateStorage:()=>(t,e)=>{t&&!e&&(t.isLoaded=!0)}})));typeof window<\"u\"&&window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\",()=>{const e=Gt.getState();e.theme.mode===\"system\"&&e.updateTheme({mode:\"system\"})});const is=()=>Gt(t=>({theme:t.theme,effectiveTheme:t.getEffectiveTheme(),updateTheme:t.updateTheme})),Io=()=>Gt(t=>({locale:t.locale,displayCurrency:t.getDisplayCurrency(),dateFormat:t.getDateFormat(),updateLocale:t.updateLocale})),wr=({size:t=\"md\",showLabel:e=!1,className:r=\"\"})=>{const{theme:s,effectiveTheme:a,updateTheme:n}=is(),o=()=>{n({mode:a===\"light\"?\"dark\":\"light\"})},c=s.mode===\"system\",l=a===\"dark\",m={sm:{button:\"h-8 w-8\",icon:\"h-4 w-4\",text:\"text-xs\"},md:{button:\"h-10 w-10\",icon:\"h-5 w-5\",text:\"text-sm\"},lg:{button:\"h-12 w-12\",icon:\"h-6 w-6\",text:\"text-base\"}}[t];return i.jsxs(\"div\",{className:`theme-toggle-container ${r}`,children:[i.jsxs(\"button\",{onClick:o,className:`",
          "type": "warn"
        },
        {
          "line_number": 255,
          "content": "`,children:[l?\"Dark\":\"Light\",\" Mode\",c&&i.jsx(\"span\",{className:\"text-green-500 ml-1 font-medium\",children:\"(Auto)\"})]})]})},ni=()=>{const t=fe(),[e,r]=h.useState(!1),s=[{path:\"/\",label:\"Dashboard\",icon:jn,description:\"Main overview and quick insights\",preloadKey:\"dashboard\"},{path:\"/securities\",label:\"Securities\",icon:Ln,description:\"Search and explore securities\",preloadKey:\"securities\"},{path:\"/portfolio\",label:\"Portfolio\",icon:fr,description:\"Portfolio management and tracking\",preloadKey:\"portfolio\"},{path:\"/analysis\",label:\"Analysis\",icon:Pn,description:\"Comparative analysis & benchmarking\",preloadKey:\"analysis\",subItems:[{label:\"Peer Comparison\",description:\"Compare against similar companies\"},{label:\"Sector Benchmark\",description:\"Industry performance analysis\"},{label:\"Portfolio Analysis\",description:\"Portfolio composition & risk\"}]},{path:\"/data-explorer\",label:\"Data Explorer\",icon:Rn,description:\"Comprehensive financial data visualization\",preloadKey:\"data-explorer\"},{path:\"/ai-insights\",label:\"AI Insights\",icon:_n,description:\"AI-powered market insights\",preloadKey:\"ai-insights\"},{path:\"/settings\",label:\"Settings\",icon:On,description:\"Application preferences\",preloadKey:\"settings\"}],a=o=>o===\"/\"?t.pathname===\"/\":t.pathname.startsWith(o),n=()=>{r(!e)};return i.jsxs(\"nav\",{className:\"navigation\",role:\"navigation\",\"aria-label\":\"Main navigation\",children:[i.jsxs(\"div\",{className:\"navigation__container\",\"data-testid\":\"navigation-container\",children:[i.jsxs(Et,{to:\"/\",className:\"navigation__brand\",children:[i.jsx(fr,{className:\"navigation__brand-icon\",\"data-testid\":\"navigation-brand-icon\"}),i.jsx(\"span\",{className:\"navigation__brand-text\",children:\"FinanceAI\"})]}),i.jsx(\"ul\",{className:\"navigation__menu navigation__menu--desktop\",\"data-testid\":\"navigation-desktop-menu\",children:s.map(o=>{const c=o.icon;return i.jsx(\"li\",{className:\"navigation__item\",\"data-testid\":`navigation-item-${o.path.slice(1)||\"home\"}`,children:i.jsxs(Et,{to:o.path,className:`navigation__link ${a(o.path)?\"navigation__link--active\":\"\"}`,\"aria-current\":a(o.path)?\"page\":void 0,title:o.description,\"aria-label\":`${o.label} - ${o.description}`,\"data-testid\":`navigation-link-${o.path.slice(1)||\"home\"}`,\"data-nav\":o.preloadKey,children:[i.jsx(c,{className:\"navigation__icon\",\"data-testid\":`navigation-icon-${o.path.slice(1)||\"home\"}`}),i.jsx(\"span\",{className:\"navigation__text\",children:o.label}),o.path===\"/analysis\"&&i.jsx(\"span\",{className:\"navigation__badge\",\"aria-label\":\"Includes comparison tools\",children:\"Compare\"})]})},o.path)})}),i.jsxs(\"div\",{className:\"navigation__actions\",\"data-testid\":\"navigation-actions\",children:[i.jsx(\"div\",{className:\"navigation__theme-toggle\",children:i.jsx(wr,{size:\"md\"})}),i.jsx(\"button\",{className:\"navigation__mobile-toggle\",onClick:n,\"aria-label\":e?\"Close menu\":\"Open menu\",\"aria-expanded\":e,type:\"button\",children:e?i.jsx(In,{className:\"navigation__toggle-icon\",\"data-testid\":\"navigation-toggle-icon\"}):i.jsx(Tn,{className:\"navigation__toggle-icon\",\"data-testid\":\"navigation-toggle-icon\"})})]})]}),e&&i.jsx(\"div\",{className:\"navigation__mobile-menu\",\"data-testid\":\"navigation-mobile-menu\",children:i.jsxs(\"ul\",{className:\"navigation__menu navigation__menu--mobile\",children:[s.map(o=>{const c=o.icon;return i.jsx(\"li\",{className:\"navigation__item\",\"data-testid\":`navigation-item-mobile-${o.path.slice(1)||\"home\"}`,children:i.jsxs(Et,{to:o.path,className:`navigation__link ${a(o.path)?\"navigation__link--active\":\"\"}`,onClick:()=>r(!1),\"aria-current\":a(o.path)?\"page\":void 0,title:o.description,\"aria-label\":`${o.label} - ${o.description}`,\"data-testid\":`navigation-link-mobile-${o.path.slice(1)||\"home\"}`,\"data-nav\":o.preloadKey,children:[i.jsx(c,{className:\"navigation__icon\",\"data-testid\":`navigation-icon-mobile-${o.path.slice(1)||\"home\"}`}),i.jsx(\"span\",{className:\"navigation__text\",children:o.label}),o.path===\"/analysis\"&&i.jsx(\"span\",{className:\"navigation__badge\",\"aria-label\":\"Includes comparison tools\",children:\"Compare\"})]})},o.path)}),i.jsx(\"li\",{className:\"navigation__item navigation__item--theme\",children:i.jsx(\"div\",{className:\"navigation__theme-mobile\",children:i.jsx(wr,{size:\"sm\",showLabel:!0})})})]})})]})},ii=({className:t=\"\",children:e})=>i.jsxs(\"div\",{className:`layout ${t}`.trim(),\"data-testid\":\"layout\",children:[i.jsx(\"header\",{className:\"layout__header\",\"data-testid\":\"layout-header\",children:i.jsx(ni,{})}),i.jsx(\"main\",{className:\"layout__main\",role:\"main\",\"data-testid\":\"layout-main\",children:i.jsx(\"div\",{className:\"layout__content\",\"data-testid\":\"layout-content\",children:e??i.jsx(Ba,{})})})]});var lt={};const kt={CLS:.1,FID:100,LCP:2500,FCP:1800,TTFB:800,INP:200,ROUTE_CHANGE:200,API_RESPONSE:1e3,CHUNK_LOAD:3e3,BUNDLE_SIZE:1e6,IMAGE_SIZE:5e5,FONT_LOAD:2e3,MAIN_BUNDLE:3e5,VENDOR_BUNDLE:2e5,CHARTS_BUNDLE:25e4,ANALYTICS_BUNDLE:2e5},oi={budgets:[{type:\"initial\",maximumWarning:\"500kb\",maximumError:\"1mb\"},{type:\"anyComponentStyle\",maximumWarning:\"20kb\",maximumError:\"50kb\"},{type:\"bundle\",name:\"main\",maximumWarning:\"300kb\",maximumError:\"500kb\"},{type:\"bundle\",name:\"vendor\",maximumWarning:\"200kb\",maximumError:\"300kb\"},{type:\"bundle\",name:\"charts\",maximumWarning:\"250kb\",maximumError:\"400kb\"},{type:\"bundle\",name:\"analytics\",maximumWarning:\"200kb\",maximumError:\"350kb\"},{type:\"webVitals\",metrics:{LCP:{warning:2500,error:4e3},FID:{warning:100,error:300},CLS:{warning:.1,error:.25},FCP:{warning:1800,error:3e3},TTFB:{warning:800,error:1800},INP:{warning:200,error:500}}}]};class os{constructor(){L(this,\"metrics\",[]);L(this,\"sessionId\");L(this,\"isEnabled\");L(this,\"observers\",new Map);this.sessionId=this.generateSessionId(),this.isEnabled=this.shouldEnableMonitoring(),this.isEnabled&&this.initializeMonitoring()}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}shouldEnableMonitoring(){return\"production\"===\"production\"}initializeMonitoring(){this.initializeWebVitals(),this.initializeNavigationTiming(),this.initializeResourceTiming(),this.initializeLongTasks(),this.initializeCustomMetrics(),this.setupUnloadHandler()}initializeWebVitals(){if(\"PerformanceObserver\"in window&&\"LayoutShift\"in window){const e=new PerformanceObserver(r=>{let s=0;for(const a of r.getEntries())a.hadRecentInput||(s+=a.value);this.recordMetric(\"CLS\",s)});e.observe({entryTypes:[\"layout-shift\"]}),this.observers.set(\"cls\",e)}if(\"PerformanceObserver\"in window){const e=new PerformanceObserver(r=>{for(const s of r.getEntries()){const a=s;this.recordMetric(\"FID\",a.processingStart-a.startTime)}});e.observe({entryTypes:[\"first-input\"]}),this.observers.set(\"fid\",e)}if(\"PerformanceObserver\"in window){const e=new PerformanceObserver(r=>{const a=r.getEntries().at(-1);a&&this.recordMetric(\"LCP\",a.startTime)});e.observe({entryTypes:[\"largest-contentful-paint\"]}),this.observers.set(\"lcp\",e)}if(\"PerformanceObserver\"in window){const e=new PerformanceObserver(r=>{for(const s of r.getEntries())s.name===\"first-contentful-paint\"&&this.recordMetric(\"FCP\",s.startTime)});e.observe({entryTypes:[\"paint\"]}),this.observers.set(\"fcp\",e)}}initializeNavigationTiming(){window.addEventListener(\"load\",()=>{setTimeout(()=>{const e=performance.getEntriesByType(\"navigation\")[0];if(e){const r=e.responseStart-e.requestStart;this.recordMetric(\"TTFB\",r);const s=e.domContentLoadedEventEnd-e.fetchStart;this.recordMetric(\"DOM_CONTENT_LOADED\",s);const a=e.loadEventEnd-e.fetchStart;this.recordMetric(\"LOAD_COMPLETE\",a);const n=e.domainLookupEnd-e.domainLookupStart;this.recordMetric(\"DNS_RESOLUTION\",n);const o=e.connectEnd-e.connectStart;this.recordMetric(\"TCP_CONNECTION\",o)}},0)})}initializeResourceTiming(){if(\"PerformanceObserver\"in window){const e=new PerformanceObserver(r=>{for(const s of r.getEntries()){const a=s,n=a.responseEnd-a.startTime;n>1e3&&this.recordMetric(\"SLOW_RESOURCE\",n,{resourceUrl:a.name,resourceType:this.getResourceType(a.name),transferSize:a.transferSize}),a.transferSize>kt.IMAGE_SIZE&&this.recordMetric(\"LARGE_RESOURCE\",a.transferSize,{resourceUrl:a.name,resourceType:this.getResourceType(a.name),loadTime:n})}});e.observe({entryTypes:[\"resource\"]}),this.observers.set(\"resource\",e)}}initializeLongTasks(){if(\"PerformanceObserver\"in window&&\"PerformanceLongTaskTiming\"in window){const e=new PerformanceObserver(r=>{for(const s of r.getEntries())this.recordMetric(\"LONG_TASK\",s.duration,{attribution:s.attribution})});e.observe({entryTypes:[\"longtask\"]}),this.observers.set(\"longtask\",e)}}initializeCustomMetrics(){this.trackRouteChanges(),this.trackAPIPerformance(),this.trackUserInteractions()}trackRouteChanges(){let e;window.addEventListener(\"beforeunload\",()=>{e=performance.now()}),window.addEventListener(\"popstate\",()=>{e=performance.now(),requestAnimationFrame(()=>{const r=performance.now()-e;this.recordMetric(\"ROUTE_CHANGE\",r)})})}trackAPIPerformance(){const e=window.fetch;window.fetch=async(...r)=>{var n;const s=performance.now(),a=r[0];try{const o=await e(...r),l=performance.now()-s;return this.recordMetric(\"API_CALL\",l,{url:a,status:o.status,method:((n=r[1])==null?void 0:n.method)||\"GET\",success:o.ok}),l>kt.API_RESPONSE&&this.recordMetric(\"SLOW_API_CALL\",l,{url:a,status:o.status}),o}catch(o){const l=performance.now()-s;throw this.recordMetric(\"API_ERROR\",l,{url:a,error:o.message}),o}}}trackUserInteractions(){[\"click\",\"keydown\",\"scroll\"].forEach(r=>{document.addEventListener(r,s=>{const a=performance.now();requestAnimationFrame(()=>{var c;const o=performance.now()-a;o>16&&this.recordMetric(\"USER_INTERACTION\",o,{type:r,target:(c=s.target)==null?void 0:c.tagName})})},{passive:!0})})}setupUnloadHandler(){const e=()=>{this.metrics.length>0&&this.sendMetricsToEndpoint()};window.addEventListener(\"beforeunload\",e),window.addEventListener(\"pagehide\",e),window.addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&e()})}recordMetric(e,r,s){if(!this.isEnabled)return;const a={name:e,value:r,timestamp:Date.now(),url:window.location.href,sessionId:this.sessionId,metadata:s};this.metrics.push(a),this.checkPerformanceBudget(e,r),this.metrics.length>=10&&this.sendMetricsToEndpoint()}checkPerformanceBudget(e,r){const s=kt[e];s&&r>s&&(console.warn(`Performance budget exceeded for ${e}: ${r}ms > ${s}ms`),this.recordMetric(\"BUDGET_VIOLATION\",r,{metricName:e,budget:s,violation:r-s}))}getResourceType(e){var s;const r=(s=e.split(\".\").pop())==null?void 0:s.toLowerCase();return[\"js\",\"jsx\",\"ts\",\"tsx\"].includes(r||\"\")?\"script\":[\"css\",\"scss\",\"sass\"].includes(r||\"\")?\"stylesheet\":[\"png\",\"jpg\",\"jpeg\",\"gif\",\"svg\",\"webp\"].includes(r||\"\")?\"image\":[\"woff\",\"woff2\",\"ttf\",\"otf\"].includes(r||\"\")?\"font\":[\"mp4\",\"webm\",\"ogg\"].includes(r||\"\")?\"video\":\"other\"}sendMetricsToEndpoint(){if(this.metrics.length===0)return;const e=[...this.metrics];this.metrics=[];const r=lt.VITE_PERFORMANCE_ENDPOINT||\"/api/analytics/performance\",s=JSON.stringify({metrics:e,userAgent:navigator.userAgent,timestamp:Date.now()});navigator.sendBeacon?navigator.sendBeacon(r,s):fetch(r,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:s,keepalive:!0}).catch(a=>{console.error(\"Failed to send performance metrics:\",a)})}getWebVitals(){const e={CLS:null,FID:null,FCP:null,LCP:null,TTFB:null};return this.metrics.forEach(r=>{r.name in e&&(e[r.name]=r.value)}),e}getPerformanceSummary(){const e={};return this.metrics.forEach(r=>{e[r.name],e[r.name]=r.value}),e}setEnabled(e){this.isEnabled=e,e?this.observers.size===0&&this.initializeMonitoring():(this.observers.forEach(r=>r.disconnect()),this.observers.clear())}clearMetrics(){this.metrics=[]}measureFunction(e,r){const s=performance.now();try{const a=r();if(a instanceof Promise)return a.then(n=>{const o=performance.now();return this.recordMetric(e,o-s),n});{const n=performance.now();return this.recordMetric(e,n-s),a}}catch(a){const n=performance.now();throw this.recordMetric(`${e}_ERROR`,n-s),a}}destroy(){this.observers.forEach(e=>e.disconnect()),this.observers.clear(),this.sendMetricsToEndpoint()}}const Ft=new os,ci={mark:t=>{performance.mark(`${t}-start`)},measure:t=>{var s;performance.mark(`${t}-end`),performance.measure(t,`${t}-start`,`${t}-end`);const r=((s=performance.getEntriesByName(t,\"measure\").at(-1))==null?void 0:s.duration)||0;return Ft.recordMetric(t,r),performance.clearMarks(`${t}-start`),performance.clearMarks(`${t}-end`),performance.clearMeasures(t),r},time:(t,e)=>Ft.measureFunction(t,e)};class li{constructor(){L(this,\"storageKey\",\"bundle-analysis-baseline\")}generateBundleAnalysis(){const e={},r=document.getElementsByTagName(\"script\");let s=0;return Array.from(r).forEach(a=>{if(a.src){const o=new URL(a.src).pathname.split(\"/\").pop()||\"unknown\";o.includes(\"vendor\")?e.vendor=25e4:o.includes(\"main\")?e.main=18e4:o.includes(\"charts\")?e.charts=22e4:o.includes(\"analytics\")&&(e.analytics=15e4)}}),s=Object.values(e).reduce((a,n)=>a+n,0),{totalSize:s,chunks:e,timestamp:new Date().toISOString(),gitCommit:lt.REACT_APP_GIT_COMMIT||\"unknown\",buildId:lt.REACT_APP_BUILD_ID||Date.now().toString(),version:lt.REACT_APP_VERSION||\"1.0.0\"}}detectRegressions(e,r){if(!r&&(r=this.getStoredBaseline(),!r))return[];const s=[],a=.05;return e.totalSize>r.totalSize*(1+a)&&s.push({chunk:\"total\",baseline:r.totalSize,current:e.totalSize,increase:e.totalSize-r.totalSize,percentage:(e.totalSize-r.totalSize)/r.totalSize*100,severity:this.getSeverity((e.totalSize-r.totalSize)/r.totalSize*100)}),Object.entries(e.chunks).forEach(([n,o])=>{const c=r.chunks[n]||0;c>0&&o>c*(1+a)&&s.push({chunk:n,baseline:c,current:o,increase:o-c,percentage:(o-c)/c*100,severity:this.getSeverity((o-c)/c*100)})}),s}getSeverity(e){return e>25?\"critical\":e>15?\"high\":e>10?\"medium\":\"low\"}storeBaseline(e){try{localStorage.setItem(this.storageKey,JSON.stringify(e))}catch(r){console.warn(\"[BundleAnalyzer] Failed to store baseline:\",r)}}getStoredBaseline(){try{const e=localStorage.getItem(this.storageKey);return e?JSON.parse(e):null}catch(e){return console.warn(\"[BundleAnalyzer] Failed to load baseline:\",e),null}}clearBaseline(){localStorage.removeItem(this.storageKey)}}class di{constructor(e=oi){L(this,\"budget\");this.budget=e}checkWebVitals(e){const r=[],s=this.budget.budgets.find(a=>a.type===\"webVitals\");return s!=null&&s.metrics&&Object.entries(e).forEach(([a,n])=>{var c;if(n==null)return;const o=(c=s.metrics)==null?void 0:c[a];o&&(n>o.error?r.push({type:\"error\",metric:a,value:n,threshold:o.error,severity:\"error\",description:`${a} exceeded error threshold: ${n} > ${o.error}`}):n>o.warning&&r.push({type:\"warning\",metric:a,value:n,threshold:o.warning,severity:\"warning\",description:`${a} exceeded warning threshold: ${n} > ${o.warning}`}))}),r}checkBundleSizes(e){const r=[];return this.budget.budgets.forEach(s=>{if(s.type===\"bundle\"&&s.name){const a=e.chunks[s.name]||0;s.maximumError&&a>this.parseSize(s.maximumError)?r.push({type:\"error\",chunk:s.name,size:a,threshold:this.parseSize(s.maximumError),severity:\"error\",description:`Bundle ${s.name} exceeds error threshold: ${this.formatSize(a)} > ${s.maximumError}`}):s.maximumWarning&&a>this.parseSize(s.maximumWarning)&&r.push({type:\"warning\",chunk:s.name,size:a,threshold:this.parseSize(s.maximumWarning),severity:\"warning\",description:`Bundle ${s.name} exceeds warning threshold: ${this.formatSize(a)} > ${s.maximumWarning}`})}}),r}parseSize(e){const r={b:1,kb:1024,mb:1048576,gb:1073741824},s=e.toLowerCase().match(/^(\\d+(?:\\.\\d+)?)(b|kb|mb|gb)$/);if(!s)return 0;const[,a,n]=s;return!a||!n?0:parseFloat(a)*(r[n]||0)}formatSize(e){const r=[\"B\",\"KB\",\"MB\",\"GB\"];let s=e,a=0;for(;s>=1024&&a<r.length-1;)s/=1024,a++;return`${s.toFixed(1)}${r[a]}`}}class ui extends os{constructor(){super();L(this,\"bundleAnalyzer\");L(this,\"budgetChecker\");L(this,\"webVitalsReports\",[]);L(this,\"budgetViolations\",[]);this.bundleAnalyzer=new li,this.budgetChecker=new di,this.initializePhase2DMonitoring()}initializePhase2DMonitoring(){this.initializeEnhancedWebVitals(),this.initializeBundleMonitoring(),this.initializeBudgetMonitoring()}initializeEnhancedWebVitals(){if(\"PerformanceObserver\"in window)try{new PerformanceObserver(s=>{for(const a of s.getEntries()){const n=a;n.interactionId&&this.recordWebVital(\"INP\",n.duration)}}).observe({entryTypes:[\"event\"]})}catch{console.warn(\"[Phase2DMonitor] INP monitoring not supported\")}}initializeBundleMonitoring(){window.addEventListener(\"load\",()=>{setTimeout(()=>{const r=this.bundleAnalyzer.generateBundleAnalysis(),s=this.budgetChecker.checkBundleSizes(r);s.length>0&&(this.budgetViolations.push(...s),s.forEach(o=>{this.recordMetric(\"BUNDLE_BUDGET_VIOLATION\",o.size,{chunk:o.chunk,threshold:o.threshold,severity:o.severity})}));const a=this.bundleAnalyzer.detectRegressions(r);a.length>0&&a.forEach(o=>{this.recordMetric(\"BUNDLE_REGRESSION\",o.percentage,{chunk:o.chunk,severity:o.severity,increase:o.increase})}),s.filter(o=>o.severity===\"error\").length===0&&this.bundleAnalyzer.storeBaseline(r)},1e3)})}initializeBudgetMonitoring(){setInterval(()=>{const r=this.getWebVitals();this.budgetChecker.checkWebVitals(r).forEach(a=>{this.budgetViolations.find(n=>n.metric===a.metric&&n.type===a.type)||(this.budgetViolations.push(a),this.recordMetric(\"WEB_VITALS_BUDGET_VIOLATION\",a.value,{metric:a.metric,threshold:a.threshold,severity:a.severity}))})},5e3)}recordWebVital(r,s){const a={name:r,value:s,rating:this.getWebVitalRating(r,s),timestamp:Date.now(),sessionId:this.sessionId,page:window.location.pathname,userAgent:navigator.userAgent};this.webVitalsReports.push(a),this.recordMetric(r,s)}getWebVitalRating(r,s){const n={CLS:{good:.1,poor:.25},FCP:{good:1800,poor:3e3},LCP:{good:2500,poor:4e3},TTFB:{good:800,poor:1800},FID:{good:100,poor:300},INP:{good:200,poor:500}}[r];return!n||s<=n.good?\"good\":s<=n.poor?\"needs-improvement\":\"poor\"}getWebVitalsReports(){return[...this.webVitalsReports]}getBundleAnalysis(){return this.bundleAnalyzer.generateBundleAnalysis()}getBudgetViolations(){return[...this.budgetViolations]}clearBudgetViolations(){this.budgetViolations=[]}runBundleRegression(){const r=this.bundleAnalyzer.generateBundleAnalysis();return this.bundleAnalyzer.detectRegressions(r)}}const te=new ui,hi=()=>({monitor:te,measurePerformance:ci,getWebVitals:()=>te.getWebVitals(),getWebVitalsReports:()=>te.getWebVitalsReports(),getBundleAnalysis:()=>te.getBundleAnalysis(),getBudgetViolations:()=>te.getBudgetViolations(),runBundleRegression:()=>te.runBundleRegression(),clearBudgetViolations:()=>te.clearBudgetViolations(),getSummary:()=>te.getPerformanceSummary()});typeof window<\"u\"&&window.addEventListener(\"beforeunload\",()=>{Ft.destroy(),te.destroy()});class B extends h.Component{constructor(r){super(r);L(this,\"retryTimeoutId\",null);L(this,\"handleRetry\",()=>{const{maxRetries:r=3,retryDelay:s=2e3,onRetry:a,chunkName:n}=this.props,{retryCount:o}=this.state;if(o>=r){console.warn(`Maximum retry attempts (${r}) reached for chunk: ${n}`);return}this.setState({isRetrying:!0}),a&&a(o+1,n),this.retryTimeoutId&&clearTimeout(this.retryTimeoutId);const c=s*Math.pow(2,o);this.retryTimeoutId=setTimeout(()=>{this.setState({hasError:!1,error:void 0,chunkName:void 0,retryCount:o+1,isRetrying:!1})},c)});this.state={hasError:!1,error:void 0,chunkName:void 0,retryCount:0,isRetrying:!1}}static getDerivedStateFromError(r){return r.name===\"ChunkLoadError\"||r.message.includes(\"Loading chunk\")||r.message.includes(\"Loading CSS chunk\")||r.message.includes(\"Failed to import\")?{hasError:!0,error:r,chunkName:B.extractChunkName(r)}:{hasError:!0,error:r}}static extractChunkName(r){const a=r.message.match(/chunk[s]?\\s+(\\w+)/i);return a?a[1]:void 0}componentDidCatch(r,s){const{chunkName:a,onError:n}=this.props;n&&n(r,s,a),this.reportError(r,s,a)}reportError(r,s,a){typeof window<\"u\"&&window.Sentry&&window.Sentry.captureException(r,{tags:{component:\"ChunkErrorBoundary\",chunkName:a},extra:{errorInfo:s,retryCount:this.state.retryCount}}),typeof window<\"u\"&&window.LogRocket&&window.LogRocket.captureException(r)}componentWillUnmount(){this.retryTimeoutId&&clearTimeout(this.retryTimeoutId)}render(){const{hasError:r,error:s,retryCount:a,isRetrying:n}=this.state,{children:o,chunkName:c,fallback:l,maxRetries:d=3,showErrorDetails:m=!1}=this.props;if(r){const u={error:s,chunkName:c,retryCount:a,retry:this.handleRetry,canRetry:a<d,isRetrying:n},b=l||mi;return i.jsx(b,{...u,showErrorDetails:m})}return o}}const mi=({error:t,chunkName:e,retryCount:r,retry:s,canRetry:a,isRetrying:n,showErrorDetails:o=!1})=>{const c=(t==null?void 0:t.name)===\"ChunkLoadError\"||(t==null?void 0:t.message.includes(\"chunk\"));return i.jsxs(\"div\",{className:\"chunk-error-boundary\",children:[i.jsxs(\"div\",{className:\"chunk-error-content\",children:[i.jsx(\"div\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),i.jsx(\"h3\",{className:\"error-title\",children:c?\"Loading Error\":\"Component Error\"}),i.jsx(\"p\",{className:\"error-description\",children:c?\"Failed to load this section of the application. This might be due to a network issue.\":\"An error occurred while loading this component.\"}),c&&i.jsxs(\"div\",{className:\"retry-section\",children:[a?i.jsx(\"button\",{className:\"retry-button\",onClick:s,disabled:n,children:n?i.jsxs(i.Fragment,{children:[i.jsx(\"span\",{className:\"retry-spinner\",children:\"\u27f3\"}),\"Retrying...\"]}):\"Try Again\"}):i.jsx(\"p\",{className:\"max-retries-message\",children:\"Please refresh the page or try again later.\"}),r>0&&i.jsxs(\"p\",{className:\"retry-count\",children:[\"Attempt \",r,\" of \",3]})]}),o&&t&&i.jsxs(\"details\",{className:\"error-details\",children:[i.jsx(\"summary\",{children:\"Technical Details\"}),i.jsxs(\"div\",{className:\"error-details-content\",children:[i.jsxs(\"p\",{children:[i.jsx(\"strong\",{children:\"Component:\"}),\" \",e]}),i.jsxs(\"p\",{children:[i.jsx(\"strong\",{children:\"Error:\"}),\" \",t.name]}),i.jsxs(\"p\",{children:[i.jsx(\"strong\",{children:\"Message:\"}),\" \",t.message]}),t.stack&&i.jsx(\"pre\",{className:\"error-stack\",children:t.stack})]})]})]}),i.jsx(\"style\",{children:`",
          "type": "warn"
        },
        {
          "line_number": 395,
          "content": "`})]})};class pe{static set(e,r){this.cache.set(e,r)}static get(e){return this.cache.get(e)}static has(e){return this.cache.has(e)}static delete(e){return this.cache.delete(e)}static clear(){this.cache.clear()}static size(){return this.cache.size}}L(pe,\"cache\",new Map);async function fi(t,e=3,r=1e3){let s;for(let a=0;a<=e;a++)try{return await t()}catch(n){if(s=n,a===e)break;await new Promise(o=>setTimeout(o,r*Math.pow(2,a)))}if(s&&(s.name===\"ChunkLoadError\"||s.message.includes(\"Loading chunk\"))){const a=new Error(`Failed to load component chunk after ${e+1} attempts: ${s.message}`);throw a.name=\"ChunkLoadError\",s.stack!==void 0&&(a.stack=s.stack),a}throw s||new Error(\"Component loading failed\")}function V(t,e={}){const{preload:r=!1,chunkName:s,retryAttempts:a=3,retryDelay:n=1e3}=e,o=()=>fi(t,a,n),c=h.lazy(o);return c.preload=()=>{if(!pe.has(t)){const l=o();return pe.set(t,l),l}return pe.get(t)},c.isPreloaded=()=>pe.has(t),c.clearPreload=()=>{pe.delete(t)},r&&setTimeout(()=>c.preload(),0),c}class pi{static onUserInteraction(e,r,s=[\"mouseenter\",\"focus\"]){const a=typeof e==\"string\"?document.querySelector(e):e;if(!a)return console.warn(\"Preloading target element not found:\",e),()=>{};const n=()=>{r.forEach(o=>{o.isPreloaded()||o.preload().catch(c=>{console.error(\"Failed to preload component:\",c)})})};return s.forEach(o=>{a.addEventListener(o,n)}),()=>{s.forEach(o=>{a.removeEventListener(o,n)})}}static onIdle(e,r=2e3){const s=setTimeout(()=>{e.forEach(a=>{a.isPreloaded()||a.preload().catch(n=>{console.error(\"Failed to preload component during idle time:\",n)})})},r);return()=>clearTimeout(s)}static onRouteChange(e){return r=>{e.forEach(({pattern:s,components:a})=>{r.includes(s)&&a.forEach(n=>{n.isPreloaded()||n.preload().catch(o=>{console.error(`Failed to preload component for route ${s}:`,o)})})})}}static onViewportIntersection(e,r,s){const a=typeof e==\"string\"?document.querySelector(e):e;if(!a)return console.warn(\"Intersection target element not found:\",e),()=>{};const n=new IntersectionObserver(o=>{o.forEach(c=>{c.isIntersecting&&r.forEach(l=>{l.isPreloaded()||l.preload().catch(d=>{console.error(\"Failed to preload component on intersection:\",d)})})})},s);return n.observe(a),()=>n.disconnect()}}class Ve{static recordLoadTime(e,r,s=0,a=!0){this.metrics.set(e,{loadTime:r,retryCount:s,success:a})}static getMetrics(e){return this.metrics.get(e)}static getAllMetrics(){return new Map(this.metrics)}static clearMetrics(){this.metrics.clear()}static getSummary(){const e=[...this.metrics.values()];if(e.length===0)return null;const r=e.filter(n=>n.success),s=e.reduce((n,o)=>n+o.retryCount,0),a=r.reduce((n,o)=>n+o.loadTime,0)/r.length;return{totalComponents:e.length,successRate:r.length/e.length*100,averageLoadTime:a,totalRetries:s,fastestLoad:Math.min(...r.map(n=>n.loadTime)),slowestLoad:Math.max(...r.map(n=>n.loadTime))}}}L(Ve,\"metrics\",new Map);function gi(){return{preloadCacheSize:pe.size(),performanceMetricsCount:Ve.getAllMetrics().size,performanceSummary:Ve.getSummary()}}const Se=({stages:t,componentName:e=\"Component\",showProgress:r=!0,showStageNames:s=!0,className:a=\"\",onComplete:n,onStageChange:o,autoAdvance:c=!0})=>{const[l,d]=h.useState(0),[m,u]=h.useState(0),[b]=h.useState(Date.now()),v=t[l],x=l===t.length-1,p=h.useMemo(()=>{if(t.length===0)return 100;let f=0,g=0;return t.forEach((S,w)=>{f+=S.duration,w<l?g+=S.duration:w===l&&(g+=Math.min(m,S.duration))}),f>0?Math.min(g/f*100,100):100},[t,l,m]);return h.useEffect(()=>{if(!c||!v)return;const f=setInterval(()=>{u(g=>g+100)},100);return()=>clearInterval(f)},[c,v]),h.useEffect(()=>{if(!v||m<v.duration)return;if(x){n&&n();return}const f=l+1;d(f),u(0),o&&t[f]&&o(t[f],f)},[v,m,x,l,t,n,o]),h.useEffect(()=>{},[x,m,v,b,e]),v?i.jsxs(\"div\",{className:`progressive-loading ${a}`,children:[i.jsxs(\"div\",{className:\"loading-content\",children:[i.jsx(\"div\",{className:\"loading-icon\",children:i.jsxs(\"div\",{className:\"loading-spinner\",children:[i.jsx(\"div\",{className:\"spinner-ring\"}),i.jsx(\"div\",{className:\"spinner-ring\"}),i.jsx(\"div\",{className:\"spinner-ring\"})]})}),i.jsxs(\"div\",{className:\"loading-message\",children:[i.jsxs(\"h3\",{className:\"loading-title\",children:[\"Loading \",e]}),i.jsx(\"p\",{className:\"stage-message\",children:v.message})]}),r&&i.jsxs(\"div\",{className:\"progress-section\",children:[i.jsxs(\"div\",{className:\"progress-container\",children:[i.jsx(\"div\",{className:\"progress-bar\",children:i.jsx(\"div\",{className:\"progress-fill\",style:{width:`${p}%`}})}),i.jsxs(\"span\",{className:\"progress-text\",children:[Math.round(p),\"%\"]})]}),s&&i.jsxs(\"div\",{className:\"stage-indicator\",children:[i.jsx(\"span\",{className:\"stage-name\",children:v.name}),i.jsxs(\"span\",{className:\"stage-progress\",children:[\"Step \",l+1,\" of \",t.length]})]})]}),i.jsx(\"div\",{className:\"stage-dots\",children:t.map((f,g)=>i.jsx(\"div\",{className:`stage-dot ${g<l?\"completed\":g===l?\"active\":\"pending\"}`,title:f.name},f.id))})]}),i.jsx(\"style\",{children:`",
          "type": "warn"
        },
        {
          "line_number": 609,
          "content": "`})]}):i.jsx(\"div\",{className:\"loading-error\",children:\"No loading stages configured\"})},we={analytics:[{id:\"init\",name:\"Initialize\",duration:600,message:\"Initializing analytics engine...\"},{id:\"data\",name:\"Data\",duration:1e3,message:\"Loading financial data...\"},{id:\"calculations\",name:\"Calculate\",duration:800,message:\"Computing analytics...\"},{id:\"charts\",name:\"Visualize\",duration:400,message:\"Preparing visualizations...\"}],charts:[{id:\"init\",name:\"Initialize\",duration:400,message:\"Setting up chart engine...\"},{id:\"data\",name:\"Data\",duration:600,message:\"Processing chart data...\"},{id:\"render\",name:\"Render\",duration:500,message:\"Rendering visualizations...\"}],comparison:[{id:\"init\",name:\"Initialize\",duration:500,message:\"Initializing comparison tools...\"},{id:\"fetch\",name:\"Fetch\",duration:1200,message:\"Fetching comparison data...\"},{id:\"analyze\",name:\"Analyze\",duration:800,message:\"Analyzing comparisons...\"},{id:\"render\",name:\"Render\",duration:400,message:\"Finalizing display...\"}],forecasting:[{id:\"init\",name:\"Initialize\",duration:700,message:\"Loading forecasting models...\"},{id:\"data\",name:\"Data\",duration:900,message:\"Gathering historical data...\"},{id:\"compute\",name:\"Compute\",duration:1100,message:\"Running predictions...\"},{id:\"validate\",name:\"Validate\",duration:500,message:\"Validating results...\"}],creditRisk:[{id:\"init\",name:\"Initialize\",duration:500,message:\"Initializing risk models...\"},{id:\"data\",name:\"Data\",duration:800,message:\"Loading credit data...\"},{id:\"score\",name:\"Score\",duration:1e3,message:\"Calculating risk scores...\"},{id:\"report\",name:\"Report\",duration:400,message:\"Generating risk report...\"}],minimal:[{id:\"loading\",name:\"Loading\",duration:1e3,message:\"Loading component...\"}]},Qe=V(()=>T(()=>import(\"./AnalyticsDashboard-uHFyu6dN.js\"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34])),{preload:!0,chunkName:\"analytics-dashboard\",retryAttempts:3,retryDelay:1500}),Je=V(()=>T(()=>import(\"./ComparisonDashboard-CiPiLu3X.js\"),__vite__mapDeps([3,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])),{preload:!1,chunkName:\"analytics-comparison\",retryAttempts:3,retryDelay:1500}),mt=V(()=>T(()=>import(\"./OptimizedComparisonDashboard-BGVjHLH7.js\").then(t=>t.a),__vite__mapDeps([35,1,2,4,5,6,7,8,16,17,18,19,20,21,36])),{preload:!1,chunkName:\"analytics-comparison-optimized\",retryAttempts:3,retryDelay:1500}),ft=V(()=>T(()=>import(\"./ForecastingDashboard-6P-21tGS.js\"),__vite__mapDeps([26,1,2,11,12,9,10,13,14,15,27,28,29,30,16,17,18,19,31])),{preload:!1,chunkName:\"analytics-forecasting\",retryAttempts:3,retryDelay:2e3}),Ye=V(()=>T(()=>import(\"./CreditRiskDashboard-CpZiWdD8.js\"),__vite__mapDeps([37,1,2,23,24,5,18,19,25,32,33,8,6,7])),{preload:!1,chunkName:\"analytics-credit-dashboard\",retryAttempts:3,retryDelay:2e3}),Ze=V(()=>T(()=>import(\"./CreditRiskCard-24KbwKoY.js\"),__vite__mapDeps([23,24,5,1,2,18,19])),{preload:!1,chunkName:\"analytics-credit-card\",retryAttempts:2,retryDelay:1e3}),Xe=V(()=>T(()=>import(\"./DistressScoreWidget-Cufv63EZ.js\"),__vite__mapDeps([25,24,5,1,2,18,19])),{preload:!1,chunkName:\"analytics-distress-score\",retryAttempts:2,retryDelay:1e3}),pt=V(()=>T(()=>import(\"./EventDashboard-DnM6CQ0Y.js\"),__vite__mapDeps([38,1,2,16,17,18,19,20,21,15,11,12,29])),{preload:!1,chunkName:\"analytics-events\",retryAttempts:3,retryDelay:1500}),yi=()=>i.jsx(Se,{stages:we.analytics,componentName:\"Analytics Dashboard\",showProgress:!0,showStageNames:!0}),cs=()=>i.jsx(Se,{stages:we.comparison,componentName:\"Comparison Dashboard\",showProgress:!0,showStageNames:!0}),vi=()=>i.jsx(Se,{stages:we.forecasting,componentName:\"Forecasting Dashboard\",showProgress:!0,showStageNames:!0}),bi=()=>i.jsx(Se,{stages:we.creditRisk,componentName:\"Credit Risk Analysis\",showProgress:!0,showStageNames:!0}),Qt=({componentName:t})=>i.jsx(Se,{stages:we.minimal,componentName:t,showProgress:!1,showStageNames:!1}),ls=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-dashboard\",maxRetries:3,retryDelay:2e3,onError:(r,s,a)=>{console.error(\"Analytics Dashboard loading failed:\",{error:r,errorInfo:s,chunkName:a})},children:i.jsx(h.Suspense,{fallback:i.jsx(yi,{}),children:i.jsx(Qe,{...t})})}));ls.displayName=\"AnalyticsDashboard\";const ds=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-comparison\",maxRetries:3,retryDelay:2e3,children:i.jsx(h.Suspense,{fallback:i.jsx(cs,{}),children:i.jsx(Je,{...t})})}));ds.displayName=\"ComparisonDashboard\";const us=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-comparison-optimized\",maxRetries:3,retryDelay:2e3,children:i.jsx(h.Suspense,{fallback:i.jsx(cs,{}),children:i.jsx(mt,{...t})})}));us.displayName=\"OptimizedComparisonDashboard\";const hs=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-forecasting\",maxRetries:3,retryDelay:3e3,children:i.jsx(h.Suspense,{fallback:i.jsx(vi,{}),children:i.jsx(ft,{...t})})}));hs.displayName=\"ForecastingDashboard\";const ms=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-credit-dashboard\",maxRetries:3,retryDelay:2500,children:i.jsx(h.Suspense,{fallback:i.jsx(bi,{}),children:i.jsx(Ye,{...t})})}));ms.displayName=\"CreditRiskDashboard\";const fs=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-credit-card\",maxRetries:2,retryDelay:1500,children:i.jsx(h.Suspense,{fallback:i.jsx(Qt,{componentName:\"Credit Risk Card\"}),children:i.jsx(Ze,{...t})})}));fs.displayName=\"CreditRiskCard\";const ps=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-distress-score\",maxRetries:2,retryDelay:1500,children:i.jsx(h.Suspense,{fallback:i.jsx(Qt,{componentName:\"Distress Score\"}),children:i.jsx(Xe,{...t})})}));ps.displayName=\"DistressScoreWidget\";const gs=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"analytics-events\",maxRetries:3,retryDelay:2e3,children:i.jsx(h.Suspense,{fallback:i.jsx(Qt,{componentName:\"Event Dashboard\"}),children:i.jsx(pt,{...t})})}));gs.displayName=\"EventDashboard\";const xi=async()=>{const t=[Qe.preload(),Je.preload(),mt.preload(),ft.preload(),Ye.preload(),Ze.preload(),Xe.preload(),pt.preload()].map(e=>e.catch(r=>{console.warn(\"Failed to preload analytics component:\",r)}));await Promise.all(t)},Si=async()=>{const t=[Qe.preload(),Je.preload()].map(e=>e.catch(r=>{console.warn(\"Failed to preload core analytics component:\",r)}));await Promise.all(t)},wi=async()=>{const t=[Ye.preload(),Ze.preload(),Xe.preload()].map(e=>e.catch(r=>{console.warn(\"Failed to preload credit risk component:\",r)}));await Promise.all(t)},Ei=()=>({analyticsDashboard:Qe.isPreloaded(),comparisonDashboard:Je.isPreloaded(),optimizedComparisonDashboard:mt.isPreloaded(),forecastingDashboard:ft.isPreloaded(),creditRiskDashboard:Ye.isPreloaded(),creditRiskCard:Ze.isPreloaded(),distressScoreWidget:Xe.isPreloaded(),eventDashboard:pt.isPreloaded()}),ze={AnalyticsDashboard:ls,ComparisonDashboard:ds,OptimizedComparisonDashboard:us,ForecastingDashboard:hs,CreditRiskDashboard:ms,CreditRiskCard:fs,DistressScoreWidget:ps,EventDashboard:gs,preloadAll:xi,preloadCore:Si,preloadCreditRisk:wi,getPreloadStatus:Ei,raw:{LazyAnalyticsDashboard:Qe,LazyComparisonDashboard:Je,LazyOptimizedComparisonDashboard:mt,LazyForecastingDashboard:ft,LazyCreditRiskDashboard:Ye,LazyCreditRiskCard:Ze,LazyDistressScoreWidget:Xe,LazyEventDashboard:pt}},et=V(()=>T(()=>import(\"./OpenBBChart-C3Cber92.js\").then(t=>t.a),__vite__mapDeps([39,12,1,2,34,5,8,16,17,18,19,40,41,42,43,44])),{preload:!0,chunkName:\"charts-openbb\",retryAttempts:3,retryDelay:1500}),tt=V(()=>T(()=>import(\"./PriceChart-DiG6qIJz.js\"),__vite__mapDeps([45,1,2,32,5,33,8,6,7,16,17,18,19,46,40,43])),{preload:!0,chunkName:\"charts-price\",retryAttempts:3,retryDelay:1500}),rt=V(()=>T(()=>import(\"./BaseChart-CSIGUgDd.js\").then(t=>t.a),__vite__mapDeps([10,1,2,11,12,13])),{preload:!1,chunkName:\"charts-base\",retryAttempts:3,retryDelay:1e3}),st=V(()=>T(()=>import(\"./LineChart-C2H06MQe.js\"),__vite__mapDeps([27,1,2,10,11,12,13,15,28,29])),{preload:!1,chunkName:\"charts-line\",retryAttempts:2,retryDelay:1e3}),at=V(()=>T(()=>import(\"./BarChart-C9oU_rZ3.js\"),__vite__mapDeps([9,10,1,2,11,12,13,14,15])),{preload:!1,chunkName:\"charts-bar\",retryAttempts:2,retryDelay:1e3}),nt=V(()=>T(()=>import(\"./ScatterPlot-CLK-tc9f.js\"),__vite__mapDeps([30,10,1,2,11,12,13,15])),{preload:!1,chunkName:\"charts-scatter\",retryAttempts:2,retryDelay:1e3}),ys=()=>i.jsx(Se,{stages:we.charts,componentName:\"Chart\",showProgress:!0,showStageNames:!0}),gt=({componentName:t})=>i.jsx(Se,{stages:we.minimal,componentName:t,showProgress:!1,showStageNames:!1}),vs=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"charts-openbb\",maxRetries:3,retryDelay:2e3,onError:(r,s,a)=>{console.error(\"OpenBB Chart loading failed:\",{error:r,errorInfo:s,chunkName:a})},children:i.jsx(h.Suspense,{fallback:i.jsx(ys,{}),children:i.jsx(et,{...t})})}));vs.displayName=\"OpenBBChart\";const bs=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"charts-price\",maxRetries:3,retryDelay:2e3,children:i.jsx(h.Suspense,{fallback:i.jsx(ys,{}),children:i.jsx(tt,{...t})})}));bs.displayName=\"PriceChart\";const xs=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"charts-base\",maxRetries:3,retryDelay:1500,children:i.jsx(h.Suspense,{fallback:i.jsx(gt,{componentName:\"Chart\"}),children:i.jsx(rt,{...t})})}));xs.displayName=\"BaseChart\";const Ss=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"charts-line\",maxRetries:2,retryDelay:1500,children:i.jsx(h.Suspense,{fallback:i.jsx(gt,{componentName:\"Line Chart\"}),children:i.jsx(st,{...t})})}));Ss.displayName=\"LineChart\";const ws=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"charts-bar\",maxRetries:2,retryDelay:1500,children:i.jsx(h.Suspense,{fallback:i.jsx(gt,{componentName:\"Bar Chart\"}),children:i.jsx(at,{...t})})}));ws.displayName=\"BarChart\";const Es=j.forwardRef((t,e)=>i.jsx(B,{chunkName:\"charts-scatter\",maxRetries:2,retryDelay:1500,children:i.jsx(h.Suspense,{fallback:i.jsx(gt,{componentName:\"Scatter Plot\"}),children:i.jsx(nt,{...t})})}));Es.displayName=\"ScatterPlot\";const Ci=async()=>{const t=[et.preload(),tt.preload(),rt.preload(),st.preload(),at.preload(),nt.preload()].map(e=>e.catch(r=>{console.warn(\"Failed to preload chart component:\",r)}));await Promise.all(t)},Pi=async()=>{const t=[et.preload(),tt.preload(),rt.preload()].map(e=>e.catch(r=>{console.warn(\"Failed to preload core chart component:\",r)}));await Promise.all(t)},_i=async()=>{const t=[st.preload(),at.preload(),nt.preload()].map(e=>e.catch(r=>{console.warn(\"Failed to preload basic chart component:\",r)}));await Promise.all(t)},Ri=()=>({openBBChart:et.isPreloaded(),priceChart:tt.isPreloaded(),baseChart:rt.isPreloaded(),lineChart:st.isPreloaded(),barChart:at.isPreloaded(),scatterPlot:nt.isPreloaded()}),Me={OpenBBChart:vs,PriceChart:bs,BaseChart:xs,LineChart:Ss,BarChart:ws,ScatterPlot:Es,preloadAll:Ci,preloadCore:Pi,preloadBasic:_i,getPreloadStatus:Ri,raw:{LazyOpenBBChart:et,LazyPriceChart:tt,LazyBaseChart:rt,LazyLineChart:st,LazyBarChart:at,LazyScatterPlot:nt}},Cs=h.createContext(null),ji=[{pattern:\"/dashboard\",components:{analytics:[\"LazyAnalyticsDashboard\"],charts:[\"LazyOpenBBChart\",\"LazyPriceChart\"],dataProcessing:[\"MathHelpers\",\"Formatters\"]}},{pattern:\"/securities\",components:{analytics:[\"LazyComparisonDashboard\"],charts:[\"LazyPriceChart\",\"LazyLineChart\",\"LazyBarChart\"],dataProcessing:[\"DataValidation\",\"Formatters\"]}},{pattern:\"/analysis\",components:{analytics:[\"LazyAnalyticsDashboard\",\"LazyComparisonDashboard\",\"LazyForecastingDashboard\"],charts:[\"LazyOpenBBChart\",\"LazyPriceChart\",\"LazyLineChart\"],dataProcessing:[\"MathHelpers\",\"RiskCalculations\",\"ComparativeAnalysis\"]}},{pattern:\"/portfolio\",components:{analytics:[\"LazyAnalyticsDashboard\",\"LazyCreditRiskDashboard\"],charts:[\"LazyPriceChart\",\"LazyBarChart\"],dataProcessing:[\"RiskCalculations\",\"PerformanceOptimization\"]}},{pattern:\"/ai-insights\",components:{analytics:[\"LazyForecastingDashboard\",\"LazyEventDashboard\"],charts:[\"LazyScatterPlot\",\"LazyLineChart\"],dataProcessing:[\"TextAnalysis\",\"ForecastingService\"]}}],Ti=[{selector:'[data-nav=\"dashboard\"]',events:[\"mouseenter\",\"focus\"],components:{analytics:[\"LazyAnalyticsDashboard\"],charts:[\"LazyOpenBBChart\",\"LazyPriceChart\"],dataProcessing:[\"MathHelpers\",\"Formatters\"]}},{selector:'[data-nav=\"portfolio\"]',events:[\"mouseenter\",\"focus\"],components:{analytics:[\"LazyCreditRiskDashboard\",\"LazyAnalyticsDashboard\"],charts:[\"LazyPriceChart\",\"LazyBarChart\"],dataProcessing:[\"RiskCalculations\",\"PerformanceOptimization\"]}},{selector:'[data-nav=\"securities\"]',events:[\"mouseenter\",\"focus\"],components:{analytics:[\"LazyComparisonDashboard\"],charts:[\"LazyPriceChart\",\"LazyLineChart\",\"LazyBarChart\"],dataProcessing:[\"DataValidation\",\"Formatters\"]}},{selector:'[data-nav=\"analysis\"]',events:[\"mouseenter\",\"focus\"],components:{analytics:[\"LazyForecastingDashboard\",\"LazyAnalyticsDashboard\",\"LazyComparisonDashboard\"],charts:[\"LazyOpenBBChart\",\"LazyScatterPlot\",\"LazyLineChart\"],dataProcessing:[\"MathHelpers\",\"RiskCalculations\",\"ComparativeAnalysis\"]}},{selector:'[data-nav=\"ai-insights\"]',events:[\"mouseenter\",\"focus\"],components:{analytics:[\"LazyForecastingDashboard\",\"LazyEventDashboard\"],charts:[\"LazyScatterPlot\",\"LazyLineChart\"],dataProcessing:[\"TextAnalysis\",\"ForecastingService\"]}}],ki=({children:t,enableIdlePreloading:e=!0,enableInteractionPreloading:r=!0,enableRoutePreloading:s=!0,idleDelay:a=3e3})=>{const n=fe(),[o,c]=h.useState({analytics:{},charts:{},dataProcessing:{}}),l=h.useRef([]),d=h.useRef(),m=h.useRef(new Set),u=h.useCallback(()=>{const g=ze.getPreloadStatus(),S=Me.getPreloadStatus();c({analytics:g,charts:S,dataProcessing:{}})},[]),b=async(g,S)=>{try{switch(g){case\"analytics\":const w=ze.raw[S];w&&typeof w.preload==\"function\"&&await w.preload();break;case\"charts\":const E=Me.raw[S];E&&typeof E.preload==\"function\"&&await E.preload();break;case\"dataProcessing\":break}u()}catch(w){console.warn(`Failed to preload ${g}/${S}:`,w)}},v=h.useCallback(async g=>{const S=ji.find(E=>g.includes(E.pattern));if(!S)return;const w=[];S.components.analytics&&S.components.analytics.forEach(E=>{w.push(b(\"analytics\",E))}),S.components.charts&&S.components.charts.forEach(E=>{w.push(b(\"charts\",E))}),S.components.dataProcessing&&S.components.dataProcessing.forEach(E=>{w.push(b(\"dataProcessing\",E))});try{await Promise.allSettled(w),console.log(`\ud83d\ude80 Route-based preloading completed for: ${g}`)}catch(E){console.warn(`Route-based preloading failed for ${g}:`,E)}},[b]),x=()=>{const g=[...Object.values(o.analytics),...Object.values(o.charts),...Object.values(o.dataProcessing)];return g.length===0?0:Math.round(g.filter(Boolean).length/g.length*100)},p=()=>{ze.raw.LazyAnalyticsDashboard.clearPreload(),ze.raw.LazyComparisonDashboard.clearPreload(),Me.raw.LazyOpenBBChart.clearPreload(),Me.raw.LazyPriceChart.clearPreload(),u(),console.log(\"\ud83e\uddf9 All preload caches cleared\")};h.useEffect(()=>{if(!s)return;const g=n.pathname;if(m.current.has(g))return;const S=setTimeout(()=>{v(g),m.current.add(g)},500);return()=>clearTimeout(S)},[n.pathname,s,v]),h.useEffect(()=>{if(!r)return;const S=setTimeout(()=>{l.current.forEach(w=>w()),l.current=[],Ti.forEach(w=>{const E=document.querySelector(w.selector);if(!E)return;const P=()=>{w.components.analytics&&w.components.analytics.forEach(k=>{b(\"analytics\",k)}),w.components.charts&&w.components.charts.forEach(k=>{b(\"charts\",k)}),w.components.dataProcessing&&w.components.dataProcessing.forEach(k=>{b(\"dataProcessing\",k)})};w.events.forEach(k=>{E.addEventListener(k,P)});const O=()=>{w.events.forEach(k=>{E.removeEventListener(k,P)})};l.current.push(O)})},100);return()=>{clearTimeout(S),l.current.forEach(w=>w())}},[n.pathname,r]),h.useEffect(()=>{if(!e)return;const g=()=>{const w=[ze.preloadCore(),Me.preloadCore()];Promise.allSettled(w).then(()=>{console.log(\"\ud83c\udfaf Core component idle preloading completed\"),u()})};d.current=pi.onIdle([],a);const S=setTimeout(g,a);return()=>{clearTimeout(S),d.current&&d.current()}},[e,a,u]),h.useEffect(()=>{u()},[u]);const f={preloadStatus:o,preloadComponent:b,preloadRoute:v,getOverallPreloadStatus:x,clearPreloadCaches:p};return i.jsx(Cs.Provider,{value:f,children:t})},Ps=()=>{const t=h.useContext(Cs);if(!t)throw new Error(\"usePreloading must be used within a PreloadingProvider\");return t},Li=()=>{const{preloadStatus:t,getOverallPreloadStatus:e}=Ps(),[r,s]=h.useState({totalComponents:0,preloadedComponents:0,overallProgress:0,categoryBreakdown:{analytics:{loaded:0,total:0},charts:{loaded:0,total:0},dataProcessing:{loaded:0,total:0}}});return h.useEffect(()=>{const a=Object.values(t.analytics),n=Object.values(t.charts),o=Object.values(t.dataProcessing),c=[...a,...n,...o],l=c.length,d=c.filter(Boolean).length;s({totalComponents:l,preloadedComponents:d,overallProgress:e(),categoryBreakdown:{analytics:{loaded:a.filter(Boolean).length,total:a.length},charts:{loaded:n.filter(Boolean).length,total:n.length},dataProcessing:{loaded:o.filter(Boolean).length,total:o.length}}})},[t,e]),r},Oi=({developmentOnly:t=!0,compact:e=!1,position:r=\"bottom-right\",autoHide:s=!1,autoHideDelay:a=1e4})=>{const{preloadStatus:n,clearPreloadCaches:o}=Ps(),c=Li(),l=hi(),[d,m]=h.useState(!0),[u,b]=h.useState(!1),[v,x]=h.useState(null),[p,f]=h.useState(null),[g,S]=h.useState(null),[w,E]=h.useState(null),[P,O]=h.useState([]);if(t)return null;h.useEffect(()=>{if(s&&a>0){const _=setTimeout(()=>{m(!1)},a);return()=>clearTimeout(_)}},[s,a]),h.useEffect(()=>{const _=()=>{const Ds=Ve.getSummary(),As=gi(),zs=l.getWebVitals(),Ms=l.getBundleAnalysis(),Fs=l.getBudgetViolations();x(Ds),f(As),S(zs),E(Ms),O(Fs)};_();const M=setInterval(_,rn.SHORT_UPDATE_INTERVAL);return()=>clearInterval(M)},[l]);const k=()=>{b(!u)},X=()=>{o(),Ve.clearMetrics(),l.clearBudgetViolations()},I=_=>_>=80?\"#10b981\":_>=60?\"#f59e0b\":_>=40?\"#f97316\":\"#ef4444\";return d?i.jsxs(\"div\",{className:`performance-monitor ${e?\"compact\":\"\"} ${r}`,style:{position:\"fixed\",[r.includes(\"bottom\")?\"bottom\":\"top\"]:\"10px\",[r.includes(\"right\")?\"right\":\"left\"]:\"10px\",zIndex:9999,maxWidth:u?\"400px\":\"250px\",transition:\"all 0.3s ease\"},children:[i.jsxs(\"div\",{className:\"monitor-header\",children:[i.jsxs(\"div\",{className:\"monitor-title\",children:[i.jsx(\"span\",{className:\"monitor-icon\",children:\"\ud83d\ude80\"}),i.jsx(\"span\",{children:\"Lazy Loading\"})]}),i.jsxs(\"div\",{className:\"monitor-actions\",children:[i.jsx(\"button\",{className:\"monitor-button\",onClick:k,title:u?\"Collapse\":\"Expand\",children:u?\"\ud83d\udcc9\":\"\ud83d\udcc8\"}),i.jsx(\"button\",{className:\"monitor-button\",onClick:X,title:\"Clear all caches\",children:\"\ud83e\uddf9\"}),i.jsx(\"button\",{className:\"monitor-button\",onClick:()=>m(!1),title:\"Hide monitor\",children:\"\u2715\"})]})]}),i.jsxs(\"div\",{className:\"monitor-content\",children:[i.jsxs(\"div\",{className:\"progress-section\",children:[i.jsxs(\"div\",{className:\"progress-label\",children:[i.jsx(\"span\",{children:\"Overall Progress\"}),i.jsxs(\"span\",{style:{color:I(c.overallProgress)},children:[c.overallProgress,\"%\"]})]}),i.jsx(\"div\",{className:\"progress-bar\",children:i.jsx(\"div\",{className:\"progress-fill\",style:{width:`${c.overallProgress}%`,backgroundColor:I(c.overallProgress)}})})]}),!e&&i.jsxs(\"div\",{className:\"breakdown-section\",children:[i.jsxs(\"div\",{className:\"breakdown-item\",children:[i.jsx(\"span\",{children:\"Analytics:\"}),i.jsxs(\"span\",{children:[c.categoryBreakdown.analytics.loaded,\"/\",c.categoryBreakdown.analytics.total]})]}),i.jsxs(\"div\",{className:\"breakdown-item\",children:[i.jsx(\"span\",{children:\"Charts:\"}),i.jsxs(\"span\",{children:[c.categoryBreakdown.charts.loaded,\"/\",c.categoryBreakdown.charts.total]})]}),i.jsxs(\"div\",{className:\"breakdown-item\",children:[i.jsx(\"span\",{children:\"Data:\"}),i.jsxs(\"span\",{children:[c.categoryBreakdown.dataProcessing.loaded,\"/\",c.categoryBreakdown.dataProcessing.total]})]})]}),u&&i.jsxs(\"div\",{className:\"expanded-details\",children:[v&&i.jsxs(\"div\",{className:\"performance-summary\",children:[i.jsx(\"h4\",{children:\"Performance Metrics\"}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Success Rate:\"}),i.jsxs(\"span\",{children:[v.successRate.toFixed(1),\"%\"]})]}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Avg Load Time:\"}),i.jsxs(\"span\",{children:[v.averageLoadTime.toFixed(0),\"ms\"]})]}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Total Retries:\"}),i.jsx(\"span\",{children:v.totalRetries})]})]}),p&&i.jsxs(\"div\",{className:\"cache-stats\",children:[i.jsx(\"h4\",{children:\"Cache Statistics\"}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Preload Cache:\"}),i.jsxs(\"span\",{children:[p.preloadCacheSize,\" items\"]})]}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Metrics Count:\"}),i.jsx(\"span\",{children:p.performanceMetricsCount})]})]}),g&&i.jsxs(\"div\",{className:\"web-vitals\",children:[i.jsx(\"h4\",{children:\"Web Vitals (Phase 2D)\"}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"LCP:\"}),i.jsx(\"span\",{style:{color:g.LCP&&g.LCP<=Ee.LCP_GOOD?\"#10b981\":g.LCP&&g.LCP<=Ee.LCP_NEEDS_IMPROVEMENT?\"#f59e0b\":\"#ef4444\"},children:g.LCP?`${Math.round(g.LCP)}ms`:\"N/A\"})]}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"FCP:\"}),i.jsx(\"span\",{style:{color:g.FCP&&g.FCP<=Ee.FCP_GOOD?\"#10b981\":g.FCP&&g.FCP<=Ee.FCP_NEEDS_IMPROVEMENT?\"#f59e0b\":\"#ef4444\"},children:g.FCP?`${Math.round(g.FCP)}ms`:\"N/A\"})]}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"CLS:\"}),i.jsx(\"span\",{style:{color:g.CLS&&g.CLS<=.1?\"#10b981\":g.CLS&&g.CLS<=.25?\"#f59e0b\":\"#ef4444\"},children:g.CLS?g.CLS.toFixed(3):\"N/A\"})]}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"TTFB:\"}),i.jsx(\"span\",{style:{color:g.TTFB&&g.TTFB<=Ee.TTFB_GOOD?\"#10b981\":g.TTFB&&g.TTFB<=Ee.TTFB_NEEDS_IMPROVEMENT?\"#f59e0b\":\"#ef4444\"},children:g.TTFB?`${Math.round(g.TTFB)}ms`:\"N/A\"})]})]}),w&&i.jsxs(\"div\",{className:\"bundle-analysis\",children:[i.jsx(\"h4\",{children:\"Bundle Analysis\"}),i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Total Size:\"}),i.jsxs(\"span\",{children:[Math.round(w.totalSize/zt.BYTES_PER_KB),\"KB\"]})]}),Object.entries(w.chunks).map(([_,M])=>i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsxs(\"span\",{children:[_,\":\"]}),i.jsxs(\"span\",{children:[Math.round(M/zt.BYTES_PER_KB),\"KB\"]})]},_))]}),P&&P.length>0&&i.jsxs(\"div\",{className:\"budget-violations\",children:[i.jsx(\"h4\",{children:\"Budget Violations \u26a0\ufe0f\"}),P.slice(0,3).map((_,M)=>i.jsxs(\"div\",{className:\"violation-item\",children:[i.jsx(\"span\",{className:`violation-severity ${_.severity}`,children:_.severity===\"error\"?\"\u274c\":\"\u26a0\ufe0f\"}),i.jsx(\"span\",{className:\"violation-text\",children:_.metric||_.chunk})]},M)),P.length>3&&i.jsxs(\"div\",{className:\"metric-item\",children:[i.jsx(\"span\",{children:\"Total Violations:\"}),i.jsx(\"span\",{children:P.length})]})]}),i.jsxs(\"div\",{className:\"component-status\",children:[i.jsx(\"h4\",{children:\"Component Status\"}),i.jsxs(\"div\",{className:\"status-category\",children:[i.jsx(\"h5\",{children:\"Analytics\"}),Object.entries(n.analytics).map(([_,M])=>i.jsxs(\"div\",{className:\"status-item\",children:[i.jsx(\"span\",{className:`status-indicator ${M?\"loaded\":\"pending\"}`,children:M?\"\u2705\":\"\u23f3\"}),i.jsx(\"span\",{className:\"component-name\",children:_})]},_))]}),i.jsxs(\"div\",{className:\"status-category\",children:[i.jsx(\"h5\",{children:\"Charts\"}),Object.entries(n.charts).map(([_,M])=>i.jsxs(\"div\",{className:\"status-item\",children:[i.jsx(\"span\",{className:`status-indicator ${M?\"loaded\":\"pending\"}`,children:M?\"\u2705\":\"\u23f3\"}),i.jsx(\"span\",{className:\"component-name\",children:_})]},_))]}),i.jsxs(\"div\",{className:\"status-category\",children:[i.jsx(\"h5\",{children:\"Data Processing\"}),Object.entries(n.dataProcessing).map(([_,M])=>i.jsxs(\"div\",{className:\"status-item\",children:[i.jsx(\"span\",{className:`status-indicator ${M?\"loaded\":\"pending\"}`,children:M?\"\u2705\":\"\u23f3\"}),i.jsx(\"span\",{className:\"component-name\",children:_})]},_))]})]})]})]}),i.jsx(\"style\",{children:`",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/Dashboard-JUufPYgE.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/Dashboard-JUufPYgE.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{j as e,a as oe,T as K,B as de}from\"./index-BKXu7Q-C.js\";import{a as ce,r as $}from\"./visx-B2MmNCqL.js\";import{u as q,C as le,N as he,B as me}from\"./ConnectionStatus-DtH8snSx.js\";import{PriceChart as pe}from\"./PriceChart-DiG6qIJz.js\";import{E as W,A as Q,C as Z}from\"./ErrorBoundary-BaibTRCn.js\";import{B as X}from\"./Button-RYSOAQ-7.js\";import{C as M,a as E,b as A}from\"./Card-Ct37lo0h.js\";import{w as xe,P as _e}from\"./PerformanceWidget-5bAEosM4.js\";import{u as ue,a as ge,c as be,b as je,d as ve}from\"./useFinancialData-DsTgv6zc.js\";import{v as Ne,D as fe,h as ye}from\"./dataValidation-1BGENSx1.js\";import{R as Pe}from\"./refresh-cw-DvVpeq2N.js\";import{A as F}from\"./activity-CXAwmOEX.js\";import{S as Se}from\"./star-Cg_NJ1E5.js\";import\"./vendor-Dvwkxfce.js\";import\"./alert-triangle-CT1ghmmp.js\";import\"./trending-down-DUeE9EvQ.js\";import\"./target-B5VQAciI.js\";import\"./useQuery-CL--WJBR.js\";import\"./authStore-Bvy4jE74.js\";import\"./http-client-CwHweUYk.js\";import\"./api-DwEF0gfm.js\";import\"./messages-DkI0amMe.js\";const ee=150,ae=50,se=10,re=n=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(n),Ce=n=>`${n>=0?\"+\":\"\"}${n.toFixed(2)}%`,ie=({symbol:n,showChange:_=!0,className:m=\"\"})=>{const{lastMessage:u,connectionState:R,error:D}=q({symbols:[n],autoConnect:!0}),d=ce.useMemo(()=>{var P;if(u&&u.symbol===n&&u.message_type===\"price_update\"&&((P=u.data)!=null&&P.price_data)){const w=u.data.price_data,f=w.price??ee+Math.random()*ae,T=w.change??(Math.random()-.5)*se,l=w.change_percent??T/f*100;return{price:f,change:T,changePercent:l,isPositive:T>=0,lastUpdate:new Date(u.timestamp).toISOString()}}const S=ee+Math.random()*ae,N=(Math.random()-.5)*se;return{price:S,change:N,changePercent:N/S*100,isPositive:N>=0,lastUpdate:new Date().toISOString()}},[u,n]),r=R===\"connected\",c=d.price>0;return e.jsxs(\"div\",{className:`live-price-display ${m} ${r?\"\":\"disconnected\"}`,\"data-testid\":\"live-price-element\",children:[e.jsxs(\"div\",{className:\"price-main\",children:[e.jsx(\"span\",{className:`live-price-value ${c?\"loaded\":\"loading\"}`,\"data-testid\":\"formatted-price\",children:c?re(d.price):\"--\"}),!r&&e.jsx(\"span\",{className:\"connection-indicator offline\",title:\"Disconnected\",children:\"\u26a1\"})]}),_&&c&&e.jsxs(\"div\",{className:\"price-change-section\",children:[e.jsxs(\"span\",{className:`live-price-change ${d.isPositive?\"positive\":\"negative\"}`,\"data-testid\":\"price-change-indicator\",children:[e.jsxs(\"span\",{className:\"change-amount\",children:[d.change>=0?\"+\":\"\",re(d.change)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",Ce(d.changePercent),\")\"]})]}),e.jsx(\"div\",{className:\"price-trend-arrow\",children:d.isPositive?\"\u2197\":\"\u2198\"})]}),D&&e.jsx(\"div\",{className:\"price-error\",title:D.message,children:\"\u26a0\ufe0f Error loading price\"}),e.jsx(\"div\",{className:\"last-update\",title:`Last updated: ${d.lastUpdate}`,children:e.jsx(\"span\",{className:`update-indicator ${r?\"live\":\"stale\"}`,children:r?\"\ud83d\udd34 LIVE\":\"\u23f8\ufe0f PAUSED\"})})]})},te={positions:[{symbol:\"AAPL\",shares:50,costBasis:150,currentPrice:175.5,marketValue:8775,unrealizedGain:1275,unrealizedGainPercent:17,dayChange:125.5,dayChangePercent:1.45},{symbol:\"MSFT\",shares:30,costBasis:280,currentPrice:295.75,marketValue:8872.5,unrealizedGain:472.5,unrealizedGainPercent:5.63,dayChange:89.25,dayChangePercent:1.02},{symbol:\"GOOGL\",shares:25,costBasis:2100,currentPrice:2250,marketValue:56250,unrealizedGain:3750,unrealizedGainPercent:7.14,dayChange:675,dayChangePercent:1.21}]},V=n=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(n),Y=n=>`${n>=0?\"+\":\"\"}${n.toFixed(2)}%`,De=({className:n=\"\"})=>{const _=te.positions.map(c=>c.symbol),{lastMessage:m,connectionState:u,error:R}=q({symbols:_,autoConnect:!0}),d=(()=>{const c=te.positions.map(l=>{var s;let i=l.currentPrice;m&&m.symbol===l.symbol&&m.message_type===\"price_update\"&&((s=m.data)!=null&&s.price_data)&&(i=m.data.price_data.price??l.currentPrice);const I=l.shares*i,z=I-l.shares*l.costBasis,G=z/(l.shares*l.costBasis)*100,U=(i-l.currentPrice)*l.shares,o=(i-l.currentPrice)/l.currentPrice*100;return{...l,currentPrice:i,marketValue:I,unrealizedGain:z,unrealizedGainPercent:G,dayChange:U,dayChangePercent:o}}),S=c.reduce((l,i)=>l+i.marketValue,0),N=c.reduce((l,i)=>l+i.shares*i.costBasis,0),P=S-N,w=P/N*100,f=c.reduce((l,i)=>l+i.dayChange,0),T=f/(S-f)*100;return{totalValue:S,totalCost:N,totalGain:P,totalGainPercent:w,dayChange:f,dayChangePercent:T,positions:c}})(),r=u===\"connected\";return e.jsxs(\"div\",{className:`live-portfolio-summary ${n} ${r?\"\":\"disconnected\"}`,\"data-testid\":\"portfolio-elements\",children:[e.jsxs(\"div\",{className:\"portfolio-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(\"div\",{className:`connection-status ${u}`,children:e.jsx(\"span\",{className:\"status-indicator\",children:r?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})})]}),e.jsxs(\"div\",{className:\"portfolio-totals\",\"data-testid\":\"live-data-elements\",children:[e.jsxs(\"div\",{className:\"total-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"value\",\"data-testid\":\"portfolio-total-value\",children:V(d.totalValue)})]}),e.jsxs(\"div\",{className:\"total-gain\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Gain/Loss\"}),e.jsxs(\"div\",{className:`gain-section ${d.totalGain>=0?\"positive\":\"negative\"}`,children:[e.jsx(\"span\",{className:\"gain-amount\",\"data-testid\":\"portfolio-total-gain\",children:V(d.totalGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",Y(d.totalGainPercent),\")\"]})]})]}),e.jsxs(\"div\",{className:\"day-change\",children:[e.jsx(\"span\",{className:\"label\",children:\"Today's Change\"}),e.jsxs(\"div\",{className:`change-section ${d.dayChange>=0?\"positive\":\"negative\"}`,children:[e.jsxs(\"span\",{className:\"change-amount\",\"data-testid\":\"portfolio-day-change\",children:[d.dayChange>=0?\"+\":\"\",V(d.dayChange)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",Y(d.dayChangePercent),\")\"]})]})]})]}),e.jsxs(\"div\",{className:\"portfolio-positions\",children:[e.jsx(\"h3\",{children:\"Holdings\"}),e.jsx(\"div\",{className:\"positions-grid\",\"data-testid\":\"portfolio-positions\",children:d.positions.map(c=>e.jsxs(\"div\",{className:\"position-card\",\"data-testid\":`position-${c.symbol}`,children:[e.jsxs(\"div\",{className:\"position-header\",children:[e.jsx(\"span\",{className:\"symbol\",children:c.symbol}),e.jsxs(\"span\",{className:\"shares\",children:[c.shares,\" shares\"]})]}),e.jsx(\"div\",{className:\"position-price\",children:e.jsx(ie,{symbol:c.symbol,showChange:!0,className:\"compact\"})}),e.jsxs(\"div\",{className:\"position-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Market Value\"}),e.jsx(\"span\",{className:\"value\",children:V(c.marketValue)})]}),e.jsxs(\"div\",{className:`position-gain ${c.unrealizedGain>=0?\"positive\":\"negative\"}`,children:[e.jsx(\"span\",{className:\"gain-amount\",children:V(c.unrealizedGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",Y(c.unrealizedGainPercent),\")\"]})]})]},c.symbol))})]}),R&&e.jsxs(\"div\",{className:\"portfolio-error\",\"data-testid\":\"portfolio-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading live data: \",R.message]})]}),e.jsxs(\"div\",{className:\"portfolio-footer\",children:[e.jsxs(\"div\",{className:\"last-update\",children:[\"Last updated: \",new Date().toLocaleTimeString()]}),e.jsx(\"div\",{className:\"data-status\",children:r?\"Real-time data\":\"Delayed data\"})]})]})},H=50,we=6e4,Ie=.02,Me=.01,Ae=1e6,Te=1e5,ne=150,Le=(n,_)=>{const m=[],u=Date.now(),R=_||100;for(let D=H-1;D>=0;D--){const d=u-D*we,r=Ie,c=(Math.random()-.5)*r,S=R*(1+c*(D/H)),N=Math.floor(Math.random()*Ae)+Te;m.push({timestamp:d,price:Math.max(S,Me),volume:N})}return m},Ee=({symbol:n,height:_=300,width:m=500,timeframe:u=\"1m\",showVolume:R=!1,className:D=\"\"})=>{const d=$.useRef(null),[r,c]=$.useState(null),[S,N]=$.useState(!1),[P,w]=$.useState(null),{lastMessage:f,connectionState:T,error:l}=q({symbols:[n],autoConnect:!0}),i=ce.useMemo(()=>{var o;return f&&f.symbol===n&&f.message_type===\"price_update\"&&((o=f.data)!=null&&o.price_data)?f.data.price_data.price??ne+Math.random()*H:ne+Math.random()*H},[f,n]),I=T===\"connected\";$.useEffect(()=>{var o;if(i>0){const s=Le(n,i),g=s.map(h=>h.price),b=Math.min(...g),j=Math.max(...g),y=j-b,t=((o=s[0])==null?void 0:o.price)??i,v=i-t,C=t!==0?v/t*100:0;c({points:s,minPrice:b,maxPrice:j,priceRange:y,currentPrice:i,change:v,changePercent:C})}},[n,i]),$.useEffect(()=>{if(r&&i>0&&I){const o={timestamp:Date.now(),price:i,volume:Math.floor(Math.random()*1e6)+1e5};c(s=>{var p;if(!s)return null;const g=[...s.points.slice(1),o],b=g.map(a=>a.price),j=Math.min(...b),y=Math.max(...b),t=y-j,v=((p=g[0])==null?void 0:p.price)??i,C=i-v,h=v!==0?C/v*100:0;return{points:g,minPrice:j,maxPrice:y,priceRange:t,currentPrice:i,change:C,changePercent:h}})}},[i,I,r]),$.useEffect(()=>{const o=d.current;if(!o||!r)return;const s=o.getContext(\"2d\");if(!s)return;o.width=m,o.height=_,s.clearRect(0,0,m,_);const{points:g,minPrice:b,maxPrice:j,priceRange:y}=r;if(g.length===0||y===0)return;const t=40,v=m-t*2,C=_-t*2;s.strokeStyle=\"#e1e5e9\",s.lineWidth=1,s.setLineDash([2,2]);for(let h=0;h<=4;h++){const p=t+C*h/4;s.beginPath(),s.moveTo(t,p),s.lineTo(m-t,p),s.stroke()}for(let h=0;h<=4;h++){const p=t+v*h/4;s.beginPath(),s.moveTo(p,t),s.lineTo(p,_-t),s.stroke()}if(s.setLineDash([]),s.strokeStyle=r.change>=0?\"#28a745\":\"#dc3545\",s.lineWidth=2,s.beginPath(),g.forEach((h,p)=>{const a=t+p/(g.length-1)*v,x=t+(j-h.price)/y*C;p===0?s.moveTo(a,x):s.lineTo(a,x)}),s.stroke(),s.fillStyle=r.change>=0?\"rgba(40, 167, 69, 0.1)\":\"rgba(220, 53, 69, 0.1)\",s.beginPath(),g.forEach((h,p)=>{const a=t+p/(g.length-1)*v,x=t+(j-h.price)/y*C;p===0?s.moveTo(a,x):s.lineTo(a,x)}),s.lineTo(m-t,_-t),s.lineTo(t,_-t),s.closePath(),s.fill(),g.length>0){const h=g.at(-1);if(h){const p=m-t,a=t+(j-h.price)/y*C;s.fillStyle=r.change>=0?\"#28a745\":\"#dc3545\",s.beginPath(),s.arc(p,a,4,0,2*Math.PI),s.fill(),I&&(s.strokeStyle=r.change>=0?\"#28a745\":\"#dc3545\",s.lineWidth=2,s.beginPath(),s.arc(p,a,8,0,2*Math.PI),s.stroke())}}s.fillStyle=\"#6c757d\",s.font=\"12px Monaco, Menlo, monospace\",s.textAlign=\"right\";for(let h=0;h<=4;h++){const p=j-y*h/4,a=t+C*h/4;s.fillText(`$${p.toFixed(2)}`,t-10,a+4)}},[r,m,_,I]);const z=o=>{if(!r||!d.current)return;const g=d.current.getBoundingClientRect(),b=o.clientX-g.left,j=40,y=m-j*2;if(b>=j&&b<=m-j){const t=Math.round((b-j)/y*(r.points.length-1)),v=r.points[t];v&&(w(v),N(!0))}else N(!1),w(null)},G=o=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(o),U=o=>new Date(o).toLocaleTimeString();return e.jsxs(\"div\",{className:`live-price-chart ${D} ${I?\"\":\"disconnected\"}`,\"data-testid\":\"live-charts\",children:[e.jsxs(\"div\",{className:\"chart-header\",children:[e.jsxs(\"div\",{className:\"chart-title\",children:[e.jsxs(\"h3\",{children:[n,\" Live Chart\"]}),e.jsx(\"span\",{className:`connection-indicator ${T}`,children:I?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})]}),r&&e.jsxs(\"div\",{className:`price-summary ${r.change>=0?\"positive\":\"negative\"}`,children:[e.jsx(\"span\",{className:\"current-price\",\"data-testid\":\"chart-current-price\",children:G(r.currentPrice)}),e.jsxs(\"span\",{className:\"price-change\",children:[r.change>=0?\"+\":\"\",G(r.change),\"(\",r.change>=0?\"+\":\"\",r.changePercent.toFixed(2),\"%)\"]})]})]}),e.jsxs(\"div\",{className:\"chart-container\",children:[e.jsx(\"canvas\",{ref:d,width:m,height:_,onMouseMove:z,onMouseLeave:()=>{N(!1),w(null)},style:{cursor:\"crosshair\"}}),S&&P&&e.jsxs(\"div\",{className:\"chart-tooltip\",\"data-testid\":\"chart-tooltip\",children:[e.jsx(\"div\",{className:\"tooltip-price\",children:G(P.price)}),e.jsx(\"div\",{className:\"tooltip-time\",children:U(P.timestamp)}),P.volume&&e.jsxs(\"div\",{className:\"tooltip-volume\",children:[\"Volume: \",P.volume.toLocaleString()]})]})]}),l&&e.jsxs(\"div\",{className:\"chart-error\",\"data-testid\":\"chart-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading chart data: \",l.message]})]}),e.jsx(\"div\",{className:\"chart-controls\",children:e.jsx(\"div\",{className:\"timeframe-selector\",children:[\"1m\",\"5m\",\"15m\",\"1h\",\"1d\"].map(o=>e.jsx(\"button\",{className:`timeframe-btn ${u===o?\"active\":\"\"}`,onClick:()=>{},\"data-testid\":`timeframe-${o}`,children:o},o))})})]})},$e=({className:n=\"\",initialSelectedSymbol:_=\"AAPL\",showDebugInfo:m=!1})=>{const[u,R]=$.useState(_),[D,d]=$.useState(new Date),{performance:r,isLoading:c,error:S}=ue(),{marketSummary:N,isLoading:P,error:w}=ge(),{gainers:f,losers:T,isLoading:l,error:i}=be(),{insights:I,isLoading:z,error:G}=je(),{watchlist:U,isLoading:o,error:s}=ve(),g=$.useMemo(()=>{const a=c||P||l||z||o,x=[S,w,i,G,s];return x.forEach((L,B)=>{}),Ne({performance:r,marketSummary:N,gainers:f,losers:T,insights:I,watchlist:U,isLoading:a,errors:x})},[r,N,f,T,I,U,c,P,l,z,o,S,w,i,G,s]),{performance:b,marketSummary:j,gainers:y,losers:t,insights:v,watchlist:C}=g,h=()=>{d(new Date),window.location.reload()},p=[{symbol:\"AAPL\",name:\"Apple Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",sector:\"Consumer Discretionary\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}];return e.jsxs(\"div\",{className:`dashboard ${n}`.trim(),\"data-testid\":\"dashboard-container\",children:[e.jsxs(\"div\",{className:\"dashboard__header\",children:[e.jsxs(\"div\",{className:\"dashboard__title-section\",children:[e.jsx(\"h1\",{className:\"dashboard__title\",children:\"Dashboard\"}),e.jsx(\"p\",{className:\"dashboard__subtitle\",children:\"Welcome to your Finance AI Research Platform\"})]}),e.jsxs(\"div\",{className:\"dashboard__header-actions\",children:[e.jsx(\"div\",{className:\"live-indicators\",\"data-testid\":\"realtime-indicators\",children:e.jsx(le,{showDetails:!1,className:\"dashboard__connection-status\",\"data-testid\":\"connection-status-elements\"})}),e.jsx(\"div\",{className:\"dashboard__last-updated\",children:e.jsxs(\"span\",{className:\"dashboard__update-time\",children:[\"Last updated: \",D.toLocaleTimeString()]})}),e.jsx(X,{variant:\"ghost\",size:\"sm\",onClick:h,className:\"dashboard__refresh-button\",\"data-testid\":\"dashboard__refresh-button\",children:e.jsx(Pe,{className:\"dashboard__refresh-icon\"})}),e.jsx(\"div\",{className:\"dashboard__notification-wrapper\",\"data-testid\":\"notification-system\",children:e.jsx(he,{})}),e.jsx(X,{variant:\"ghost\",size:\"sm\",className:\"dashboard__analytics-button\",title:\"Open Analytics Dashboard\",children:e.jsx(me,{className:\"dashboard__analytics-icon\"})}),e.jsx(X,{variant:\"ghost\",size:\"sm\",className:\"dashboard__settings-button\",children:e.jsx(oe,{className:\"dashboard__settings-icon\"})})]})]}),e.jsx(W,{level:\"section\",enableRecovery:!0,onError:(a,x)=>{},children:e.jsxs(\"div\",{className:\"dashboard__metrics-grid\",\"data-testid\":\"dashboard__metrics-grid\",children:[e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Portfolio Value\"}),e.jsx(fe,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"live-price-element\",children:b.totalValue}),e.jsx(\"span\",{className:`dashboard__metric-change ${b.isPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"}`,\"data-testid\":\"formatted-price\",children:b.totalGainLossPercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total portfolio value\"})]})]}),e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Daily Change\"}),e.jsx(K,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:b.dayChange}),e.jsx(\"span\",{className:`dashboard__metric-change ${b.isDayPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"}`,\"data-testid\":\"dashboard__metric-change--positive\",children:b.dayChangePercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Since yesterday\"})]})]}),e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Market Cap\"}),e.jsx(de,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsxs(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:[\"$\",(j.totalMarketCap/1e12).toFixed(1),\"T\"]})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total market cap\"})]})]}),e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(F,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:v.length})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"New recommendations\"})]})]})]})}),e.jsxs(\"div\",{className:\"dashboard__main-grid\",\"data-testid\":\"dashboard__main-grid\",children:[e.jsxs(\"div\",{className:\"dashboard__left-column\",\"data-testid\":\"dashboard__left-column\",children:[e.jsx(\"div\",{className:\"live-data-grid\",\"data-testid\":\"live-data-elements\",children:e.jsx(Q,{children:e.jsx(De,{className:\"dashboard__portfolio-summary\",\"data-testid\":\"portfolio-elements\"})})}),e.jsx(W,{level:\"component\",enableRecovery:!0,onError:(a,x)=>{},fallback:e.jsxs(M,{className:\"dashboard__performance-widget\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Performance Widget\"})}),e.jsx(A,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(F,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"Performance data temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Please try refreshing the page\"})]})})]}),children:e.jsx(_e,{portfolioMode:!0,className:\"dashboard__performance-widget\",timeRange:\"1Y\",showBenchmark:!0})}),e.jsx(Q,{children:e.jsxs(M,{className:\"dashboard__watchlist-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Watchlist\"}),e.jsx(Se,{className:\"dashboard__card-icon\"})]})}),e.jsx(A,{children:e.jsxs(\"div\",{className:\"dashboard__watchlist\",children:[C.slice(0,5).map((a,x)=>{var J;const L=((J=a==null?void 0:a.security)==null?void 0:J.symbol)??\"N/A\",B=(a==null?void 0:a.formattedPrice)??\"$0.00\",O=(a==null?void 0:a.formattedChangePercent)??\"0.00%\",k=!!(a!=null&&a.isPositive);return e.jsxs(\"div\",{className:\"dashboard__watchlist-item\",children:[e.jsxs(\"div\",{className:\"dashboard__watchlist-info\",children:[e.jsx(\"span\",{className:\"dashboard__watchlist-symbol\",children:L}),e.jsx(\"span\",{className:\"dashboard__watchlist-price\",children:B})]}),e.jsxs(\"div\",{className:`dashboard__watchlist-change ${k?\"dashboard__watchlist-change--positive\":\"dashboard__watchlist-change--negative\"}`,children:[k?\"+\":\"\",O]})]},(a==null?void 0:a.id)??x)}),C.length===0&&e.jsx(\"div\",{className:\"dashboard__watchlist-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No watchlist items\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__center-column\",\"data-testid\":\"dashboard__center-column\",children:[e.jsx(Z,{children:e.jsx(Ee,{symbol:u,height:300,width:500,timeframe:\"1m\",showVolume:!0,className:\"dashboard__live-chart\",\"data-testid\":\"live-charts\"})}),e.jsx(Z,{children:e.jsxs(M,{className:\"dashboard__chart-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__chart-header\",children:[e.jsx(\"h3\",{className:\"dashboard__chart-title\",children:\"Market Analysis\"}),e.jsx(\"div\",{className:\"dashboard__chart-controls\",children:e.jsx(\"select\",{value:u,onChange:a=>R(a.target.value),className:\"dashboard__symbol-selector\",children:p.map(a=>e.jsxs(\"option\",{value:a.symbol,children:[a.symbol,\" - \",a.name]},a.symbol))})})]})}),e.jsx(A,{children:e.jsx(pe,{symbol:u,height:350,showTimeRange:!0,showVolume:!0,initialRange:\"1M\"})})]})}),e.jsx(W,{level:\"component\",enableRecovery:!0,onError:(a,x)=>{},fallback:e.jsxs(M,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(F,{className:\"dashboard__card-icon\"})]})}),e.jsx(A,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(F,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"AI insights temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Analysis engine will be back shortly\"})]})})]}),children:e.jsxs(M,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(F,{className:\"dashboard__card-icon\"})]})}),e.jsx(A,{children:e.jsxs(\"div\",{className:\"dashboard__insights\",children:[v.slice(0,3).map(a=>{const x=(a==null?void 0:a.id)??`insight-${Math.random()}`,L=(a==null?void 0:a.type)??\"unknown\",B=(a==null?void 0:a.title)??\"No title\",O=(a==null?void 0:a.message)??\"No message available\",k=typeof(a==null?void 0:a.confidence)==\"number\"?a.confidence:0;return e.jsxs(\"div\",{className:\"dashboard__insight-item\",children:[e.jsxs(\"div\",{className:\"dashboard__insight-header\",children:[e.jsx(\"span\",{className:`dashboard__insight-type dashboard__insight-type--${L}`,children:L}),e.jsxs(\"span\",{className:\"dashboard__insight-confidence\",children:[Math.round(k*100),\"% confidence\"]})]}),e.jsx(\"h4\",{className:\"dashboard__insight-title\",children:B}),e.jsx(\"p\",{className:\"dashboard__insight-message\",children:O})]},x)}),v.length===0&&e.jsx(\"div\",{className:\"dashboard__insights-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No AI insights available\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__right-column\",\"data-testid\":\"dashboard__right-column\",children:[e.jsx(Q,{children:e.jsxs(M,{className:\"dashboard__movers-card\",variant:\"outlined\",children:[e.jsx(E,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Top Movers\"})}),e.jsx(A,{children:e.jsxs(\"div\",{className:\"dashboard__movers\",children:[e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--gainers\",children:\"Top Gainers\"}),y.slice(0,3).map((a,x)=>{const L=(a==null?void 0:a.symbol)??\"N/A\",B=typeof(a==null?void 0:a.price)==\"number\"?a.price:0,O=typeof(a==null?void 0:a.changePercent)==\"number\"?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:L}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",B.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--positive\",children:[\"+\",O.toFixed(2),\"%\"]})]},(a==null?void 0:a.symbol)??x)}),y.length===0&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No gainers data\"})})]}),e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--losers\",children:\"Top Losers\"}),t.slice(0,3).map((a,x)=>{const L=(a==null?void 0:a.symbol)??\"N/A\",B=typeof(a==null?void 0:a.price)==\"number\"?a.price:0,O=typeof(a==null?void 0:a.changePercent)==\"number\"?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:L}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",B.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--negative\",children:[O.toFixed(2),\"%\"]})]},(a==null?void 0:a.symbol)??x)}),t.length===0&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No losers data\"})})]})]})})]})}),e.jsx(\"div\",{className:\"dashboard__featured-stocks\",children:p.slice(0,2).map(a=>e.jsx(W,{level:\"component\",enableRecovery:!0,onError:(x,L)=>{ye(x??null,`Dashboard-StockWidget-${a.symbol}`)},fallback:e.jsx(M,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(A,{children:e.jsxs(\"div\",{style:{padding:\"16px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"6px\"},children:[e.jsx(K,{style:{width:\"24px\",height:\"24px\",margin:\"0 auto 8px\",opacity:.5}}),e.jsx(\"p\",{style:{fontSize:\"14px\",margin:0},children:a.symbol}),e.jsx(\"p\",{style:{fontSize:\"12px\",margin:\"4px 0 0\",opacity:.7},children:\"Data unavailable\"})]})})}),children:e.jsx(M,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(A,{children:e.jsxs(\"div\",{className:\"featured-stock-content\",children:[e.jsxs(\"div\",{className:\"stock-info\",children:[e.jsx(\"h4\",{children:a.symbol}),e.jsx(\"p\",{children:a.name})]}),e.jsx(ie,{symbol:a.symbol,showChange:!0,className:\"featured-stock-price\"})]})})})},a.symbol))})]})]})]})},ta=xe($e,{level:\"page\",enableRecovery:!0,onError:(n,_)=>{console.error(\"Critical Dashboard Error:\",{error:n.message,stack:n.stack,componentStack:_.componentStack,timestamp:new Date().toISOString()})},fallback:e.jsx(\"div\",{className:\"dashboard\",children:e.jsxs(\"div\",{className:\"dashboard__error-page\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"60vh\",padding:\"40px\",textAlign:\"center\",backgroundColor:\"#fef2f2\",border:\"1px solid #fecaca\",borderRadius:\"12px\",margin:\"20px\"},children:[e.jsx(\"div\",{style:{fontSize:\"64px\",marginBottom:\"24px\",opacity:.6},children:\"\ud83d\udcca\"}),e.jsx(\"h1\",{style:{fontSize:\"24px\",fontWeight:\"bold\",color:\"#dc2626\",marginBottom:\"16px\"},children:\"Dashboard Temporarily Unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"16px\",color:\"#7f1d1d\",marginBottom:\"24px\",maxWidth:\"500px\",lineHeight:\"1.5\"},children:\"We're experiencing technical difficulties with the dashboard. Our team has been notified and is working to resolve the issue.\"}),e.jsxs(\"div\",{style:{display:\"flex\",gap:\"12px\"},children:[e.jsx(\"button\",{style:{backgroundColor:\"#dc2626\",color:\"white\",border:\"none\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.location.reload(),children:\"Reload Dashboard\"}),e.jsx(\"button\",{style:{backgroundColor:\"white\",color:\"#dc2626\",border:\"1px solid #dc2626\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.history.back(),children:\"Go Back\"})]}),e.jsx(\"p\",{style:{fontSize:\"12px\",color:\"#9ca3af\",marginTop:\"24px\"},children:\"If the problem persists, please contact support.\"})]})})});export{ta as default};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/PerformanceWidget-5bAEosM4.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/PerformanceWidget-5bAEosM4.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 6,
          "content": "*/const I=S(\"Info\",[[\"circle\",{cx:\"12\",cy:\"12\",r:\"10\",key:\"1mglay\"}],[\"path\",{d:\"M12 16v-4\",key:\"1dtifu\"}],[\"path\",{d:\"M12 8h.01\",key:\"e9boi3\"}]]);function Y(r,n){const c=l=>e.jsx(A,{...n,children:e.jsx(r,{...l})});return c.displayName=`withErrorBoundary(${r.displayName??r.name})`,c}const L=({security:r,portfolioMode:n=!1,className:c=\"\",timeRange:l=\"1Y\",showBenchmark:m=!0,compact:i=!1})=>{const[o,k]=u.useState(l),[j,R]=u.useState(!1),{isLoading:P,error:$}=B(r==null?void 0:r.symbol),{formatCurrency:D,formatPercentage:d}=z(),a={totalReturn:15847.32,totalReturnPercent:18.45,annualizedReturn:12.8,volatility:22.4,sharpeRatio:1.47,maxDrawdown:-12.8,alpha:3.2,beta:1.15,informationRatio:.85,calmarRatio:1.02},p={benchmark:\"S&P 500\",outperformance:4.2,correlation:.78},y=[{value:\"1D\",label:\"1D\"},{value:\"1W\",label:\"1W\"},{value:\"1M\",label:\"1M\"},{value:\"3M\",label:\"3M\"},{value:\"6M\",label:\"6M\"},{value:\"1Y\",label:\"1Y\"},{value:\"YTD\",label:\"YTD\"}],f=(s,_=0)=>s>_?e.jsx(T,{className:\"performance-widget__trend-icon performance-widget__trend-icon--up\"}):s<_?e.jsx(F,{className:\"performance-widget__trend-icon performance-widget__trend-icon--down\"}):e.jsx(w,{className:\"performance-widget__trend-icon performance-widget__trend-icon--neutral\"}),t=(s,_=0)=>s>_?\"performance-widget__value--positive\":s<_?\"performance-widget__value--negative\":\"performance-widget__value--neutral\",C=s=>({level:\"Good\",color:\"performance-widget__risk--good\"});if($)return e.jsxs(h,{className:`performance-widget performance-widget--error ${c}`,variant:\"outlined\",children:[e.jsx(g,{children:e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:n?\"Portfolio Performance\":`${r==null?void 0:r.symbol} Performance`}),e.jsx(b,{className:\"performance-widget__error-icon\"})]})}),e.jsx(x,{children:e.jsxs(\"div\",{className:\"performance-widget__error-content\",children:[e.jsx(\"p\",{children:\"Unable to load performance data\"}),e.jsxs(N,{variant:\"outline\",size:\"sm\",children:[e.jsx(W,{className:\"performance-widget__refresh-icon\"}),\"Retry\"]})]})})]});if(P)return e.jsxs(h,{className:`performance-widget performance-widget--loading ${c}`,variant:\"outlined\",children:[e.jsx(g,{children:e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:n?\"Portfolio Performance\":`${r==null?void 0:r.symbol} Performance`}),e.jsx(w,{className:\"performance-widget__icon\"})]})}),e.jsx(x,{children:e.jsxs(\"div\",{className:\"performance-widget__loading-content\",children:[e.jsx(\"div\",{className:\"performance-widget__skeleton performance-widget__skeleton--large\"}),e.jsx(\"div\",{className:\"performance-widget__skeleton performance-widget__skeleton--medium\"}),e.jsx(\"div\",{className:\"performance-widget__skeleton performance-widget__skeleton--small\"})]})})]});const v=C();return e.jsxs(h,{className:`performance-widget ${i?\"performance-widget--compact\":\"\"} ${c}`,variant:\"outlined\",children:[e.jsxs(g,{children:[e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsxs(\"div\",{className:\"performance-widget__title-section\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:n?\"Portfolio Performance\":`${(r==null?void 0:r.symbol)??\"Performance\"}`}),e.jsxs(\"div\",{className:\"performance-widget__subtitle\",children:[e.jsxs(\"span\",{className:\"performance-widget__timerange\",children:[o,\" Performance\"]}),!i&&e.jsxs(\"div\",{className:`performance-widget__risk-indicator ${v.color}`,children:[e.jsx(E,{className:\"performance-widget__risk-icon\"}),e.jsx(\"span\",{children:v.level})]})]})]}),e.jsxs(\"div\",{className:\"performance-widget__controls\",children:[e.jsx(N,{variant:\"ghost\",size:\"sm\",onClick:()=>R(!j),className:\"performance-widget__details-button\",title:j?\"Hide details\":\"Show details\",children:e.jsx(I,{className:\"performance-widget__info-icon\"})}),e.jsx(w,{className:\"performance-widget__icon\"})]})]}),e.jsx(\"div\",{className:\"performance-widget__time-range\",children:y.map(s=>e.jsx(N,{variant:o===s.value?\"primary\":\"ghost\",size:\"sm\",onClick:()=>k(s.value),className:\"performance-widget__range-button\",children:s.label},s.value))})]}),e.jsx(x,{children:e.jsxs(\"div\",{className:\"performance-widget__content\",children:[e.jsxs(\"div\",{className:\"performance-widget__primary-metrics\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-item performance-widget__metric-item--primary\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-header\",children:[e.jsx(\"span\",{className:\"performance-widget__metric-label\",children:\"Total Return\"}),f(a.totalReturnPercent)]}),e.jsxs(\"div\",{className:\"performance-widget__metric-values\",children:[e.jsx(\"span\",{className:`performance-widget__metric-value ${t(a.totalReturn)}`,children:D(a.totalReturn)}),e.jsx(\"span\",{className:`performance-widget__metric-percent ${t(a.totalReturnPercent)}`,children:d(a.totalReturnPercent)})]})]}),e.jsxs(\"div\",{className:\"performance-widget__metric-item\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-header\",children:[e.jsx(\"span\",{className:\"performance-widget__metric-label\",children:\"Annualized Return\"}),f(a.annualizedReturn)]}),e.jsx(\"span\",{className:`performance-widget__metric-value ${t(a.annualizedReturn)}`,children:d(a.annualizedReturn)})]}),e.jsxs(\"div\",{className:\"performance-widget__metric-item\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-header\",children:[e.jsx(\"span\",{className:\"performance-widget__metric-label\",children:\"Sharpe Ratio\"}),f(a.sharpeRatio,1)]}),e.jsx(\"span\",{className:`performance-widget__metric-value ${t(a.sharpeRatio,1)}`,children:a.sharpeRatio.toFixed(2)})]})]}),m&&!i&&e.jsxs(\"div\",{className:\"performance-widget__benchmark\",children:[e.jsxs(\"div\",{className:\"performance-widget__benchmark-header\",children:[e.jsxs(\"span\",{className:\"performance-widget__benchmark-label\",children:[\"vs \",p.benchmark]}),e.jsx(M,{className:\"performance-widget__benchmark-icon\"})]}),e.jsxs(\"div\",{className:\"performance-widget__benchmark-metrics\",children:[e.jsxs(\"div\",{className:\"performance-widget__benchmark-item\",children:[e.jsx(\"span\",{className:\"performance-widget__benchmark-metric-label\",children:\"Outperformance\"}),e.jsxs(\"span\",{className:`performance-widget__benchmark-value ${t(p.outperformance)}`,children:[f(p.outperformance),d(p.outperformance)]})]}),e.jsxs(\"div\",{className:\"performance-widget__benchmark-item\",children:[e.jsx(\"span\",{className:\"performance-widget__benchmark-metric-label\",children:\"Correlation\"}),e.jsx(\"span\",{className:\"performance-widget__benchmark-value\",children:p.correlation.toFixed(2)})]})]})]}),j&&!i&&e.jsxs(\"div\",{className:\"performance-widget__detailed-metrics\",children:[e.jsx(\"div\",{className:\"performance-widget__details-header\",children:e.jsx(\"h4\",{className:\"performance-widget__details-title\",children:\"Risk Metrics\"})}),e.jsxs(\"div\",{className:\"performance-widget__details-grid\",children:[e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Volatility\"}),e.jsx(\"span\",{className:\"performance-widget__detail-value\",children:d(a.volatility)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Max Drawdown\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.maxDrawdown)}`,children:d(a.maxDrawdown)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Beta\"}),e.jsx(\"span\",{className:\"performance-widget__detail-value\",children:a.beta.toFixed(2)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Alpha\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.alpha)}`,children:d(a.alpha)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Information Ratio\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.informationRatio)}`,children:a.informationRatio.toFixed(2)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Calmar Ratio\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.calmarRatio)}`,children:a.calmarRatio.toFixed(2)})]})]})]}),!i&&e.jsx(\"div\",{className:\"performance-widget__chart\",children:e.jsx(\"div\",{className:\"performance-widget__chart-container\",children:e.jsx(U,{isPositive:a.totalReturnPercent>0})})})]})})]})},U=({isPositive:r})=>{const n=Array.from({length:20},(l,m)=>{const i=r?1:-1,o=(Math.random()-.5)*.3;return 50+m*i*2+o*10}),c=n.map((l,m)=>{const i=m/(n.length-1)*100,o=100-(l-Math.min(...n))/(Math.max(...n)-Math.min(...n))*100;return`${i},${o}`}).join(\" L \");return e.jsx(\"svg\",{width:\"100%\",height:\"40\",viewBox:\"0 0 100 100\",preserveAspectRatio:\"none\",className:\"performance-widget__sparkline\",children:e.jsx(\"path\",{d:`M ${c}`,fill:\"none\",stroke:r?\"#10b981\":\"#ef4444\",strokeWidth:\"2\",className:\"performance-widget__sparkline-path\"})})},ae=Y(L,{level:\"component\",enableRecovery:!0,onError:(r,n)=>{console.error(\"PerformanceWidget Error:\",{error:r.message,componentStack:n.componentStack,timestamp:new Date().toISOString()})},fallback:e.jsxs(h,{className:\"performance-widget performance-widget--error\",variant:\"outlined\",children:[e.jsx(g,{children:e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:\"Performance Widget\"}),e.jsx(b,{style:{color:\"#f59e0b\"}})]})}),e.jsx(x,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(w,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"h4\",{style:{margin:\"0 0 8px\",fontSize:\"14px\",fontWeight:\"600\"},children:\"Performance Data Unavailable\"}),e.jsx(\"p\",{style:{margin:0,fontSize:\"12px\",opacity:.7},children:\"Unable to load performance metrics\"})]})})]})});export{ae as P,Y as w};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/http-client-CwHweUYk.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/http-client-CwHweUYk.js",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 5,
          "content": "`):\" \"+xe(i[0]):\"as no adapter specified\";throw new m(\"There is no suitable adapter to dispatch the request \"+o,\"ERR_NOT_SUPPORT\")}return s},adapters:he};function ce(r){if(r.cancelToken&&r.cancelToken.throwIfRequested(),r.signal&&r.signal.aborted)throw new F(null,r)}function Me(r){return ce(r),r.headers=C.from(r.headers),r.data=ae.call(r,r.transformRequest),[\"post\",\"put\",\"patch\"].indexOf(r.method)!==-1&&r.headers.setContentType(\"application/x-www-form-urlencoded\",!1),et.getAdapter(r.adapter||K.adapter)(r).then(function(s){return ce(r),s.data=ae.call(r,r.transformResponse,s),s.headers=C.from(s.headers),s},function(s){return We(s)||(ce(r),s&&s.response&&(s.response.data=ae.call(r,r.transformResponse,s.response),s.response.headers=C.from(s.response.headers))),Promise.reject(s)})}const tt=\"1.11.0\",ie={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach((r,e)=>{ie[r]=function(s){return typeof s===r||\"a\"+(e<1?\"n \":\" \")+r}});const Ie={};ie.transitional=function(e,t,s){function n(i,o){return\"[Axios v\"+tt+\"] Transitional option '\"+i+\"'\"+o+(s?\". \"+s:\"\")}return(i,o,c)=>{if(e===!1)throw new m(n(o,\" has been removed\"+(t?\" in \"+t:\"\")),m.ERR_DEPRECATED);return t&&!Ie[o]&&(Ie[o]=!0,console.warn(n(o,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),e?e(i,o,c):!0}};ie.spelling=function(e){return(t,s)=>(console.warn(`${s} is likely a misspelling of ${e}`),!0)};function Dr(r,e,t){if(typeof r!=\"object\")throw new m(\"options must be an object\",m.ERR_BAD_OPTION_VALUE);const s=Object.keys(r);let n=s.length;for(;n-- >0;){const i=s[n],o=e[i];if(o){const c=r[i],d=c===void 0||o(c,i,r);if(d!==!0)throw new m(\"option \"+i+\" must be \"+d,m.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new m(\"Unknown option \"+i,m.ERR_BAD_OPTION)}}const Y={assertOptions:Dr,validators:ie},x=Y.validators;let q=class{constructor(e){this.defaults=e||{},this.interceptors={request:new Te,response:new Te}}async request(e,t){try{return await this._request(e,t)}catch(s){if(s instanceof Error){let n={};Error.captureStackTrace?Error.captureStackTrace(n):n=new Error;const i=n.stack?n.stack.replace(/^.+\\n/,\"\"):\"\";try{s.stack?i&&!String(s.stack).endsWith(i.replace(/^.+\\n.+\\n/,\"\"))&&(s.stack+=`",
          "type": "warn"
        },
        {
          "line_number": 6,
          "content": "`+i):s.stack=i}catch{}}throw s}}_request(e,t){typeof e==\"string\"?(t=t||{},t.url=e):t=e||{},t=k(this.defaults,t);const{transitional:s,paramsSerializer:n,headers:i}=t;s!==void 0&&Y.assertOptions(s,{silentJSONParsing:x.transitional(x.boolean),forcedJSONParsing:x.transitional(x.boolean),clarifyTimeoutError:x.transitional(x.boolean)},!1),n!=null&&(a.isFunction(n)?t.paramsSerializer={serialize:n}:Y.assertOptions(n,{encode:x.function,serialize:x.function},!0)),t.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?t.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:t.allowAbsoluteUrls=!0),Y.assertOptions(t,{baseUrl:x.spelling(\"baseURL\"),withXsrfToken:x.spelling(\"withXSRFToken\")},!0),t.method=(t.method||this.defaults.method||\"get\").toLowerCase();let o=i&&a.merge(i.common,i[t.method]);i&&a.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],h=>{delete i[h]}),t.headers=C.concat(o,i);const c=[];let d=!0;this.interceptors.request.forEach(function(g){typeof g.runWhen==\"function\"&&g.runWhen(t)===!1||(d=d&&g.synchronous,c.unshift(g.fulfilled,g.rejected))});const l=[];this.interceptors.response.forEach(function(g){l.push(g.fulfilled,g.rejected)});let u,f=0,E;if(!d){const h=[Me.bind(this),void 0];for(h.unshift(...c),h.push(...l),E=h.length,u=Promise.resolve(t);f<E;)u=u.then(h[f++],h[f++]);return u}E=c.length;let R=t;for(f=0;f<E;){const h=c[f++],g=c[f++];try{R=h(R)}catch(p){g.call(this,p);break}}try{u=Me.call(this,R)}catch(h){return Promise.reject(h)}for(f=0,E=l.length;f<E;)u=u.then(l[f++],l[f++]);return u}getUri(e){e=k(this.defaults,e);const t=Ye(e.baseURL,e.url,e.allowAbsoluteUrls);return Ke(t,e.params,e.paramsSerializer)}};a.forEach([\"delete\",\"get\",\"head\",\"options\"],function(e){q.prototype[e]=function(t,s){return this.request(k(s||{},{method:e,url:t,data:(s||{}).data}))}});a.forEach([\"post\",\"put\",\"patch\"],function(e){function t(s){return function(i,o,c){return this.request(k(c||{},{method:e,headers:s?{\"Content-Type\":\"multipart/form-data\"}:{},url:i,data:o}))}}q.prototype[e]=t(),q.prototype[e+\"Form\"]=t(!0)});let Pr=class rt{constructor(e){if(typeof e!=\"function\")throw new TypeError(\"executor must be a function.\");let t;this.promise=new Promise(function(i){t=i});const s=this;this.promise.then(n=>{if(!s._listeners)return;let i=s._listeners.length;for(;i-- >0;)s._listeners[i](n);s._listeners=null}),this.promise.then=n=>{let i;const o=new Promise(c=>{s.subscribe(c),i=c}).then(n);return o.cancel=function(){s.unsubscribe(i)},o},e(function(i,o,c){s.reason||(s.reason=new F(i,o,c),t(s.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}toAbortSignal(){const e=new AbortController,t=s=>{e.abort(s)};return this.subscribe(t),e.signal.unsubscribe=()=>this.unsubscribe(t),e.signal}static source(){let e;return{token:new rt(function(n){e=n}),cancel:e}}};function qr(r){return function(t){return r.apply(null,t)}}function kr(r){return a.isObject(r)&&r.isAxiosError===!0}const pe={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(pe).forEach(([r,e])=>{pe[e]=r});function st(r){const e=new q(r),t=De(q.prototype.request,e);return a.extend(t,q.prototype,e,{allOwnKeys:!0}),a.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return st(k(r,n))},t}const w=st(K);w.Axios=q;w.CanceledError=F;w.CancelToken=Pr;w.isCancel=We;w.VERSION=tt;w.toFormData=se;w.AxiosError=m;w.Cancel=w.CanceledError;w.all=function(e){return Promise.all(e)};w.spread=qr;w.isAxiosError=kr;w.mergeConfig=k;w.AxiosHeaders=C;w.formToJSON=r=>Ve(a.isHTMLForm(r)?new FormData(r):r);w.getAdapter=et.getAdapter;w.HttpStatusCode=pe;w.default=w;const{Axios:Xr,AxiosError:Qr,CanceledError:Zr,isCancel:es,CancelToken:ts,VERSION:rs,all:ss,Cancel:ns,isAxiosError:is,spread:os,toFormData:as,AxiosHeaders:cs,HttpStatusCode:ls,formToJSON:us,getAdapter:ds,mergeConfig:fs}=w,j={OK:200,MULTIPLE_CHOICES:300,REQUEST_TIMEOUT:408,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500},V={BASE_DELAY_MS:1e3,MAX_DELAY_MS:3e4,JITTER_PERCENTAGE:.25,BACKOFF_MULTIPLIER:2},nt={TRUNCATE_LENGTH:11},Lr={enabled:!0,enableRequestTransformation:!0,enableResponseNormalization:!0,enableAnalytics:!0,enablePerformanceMetrics:!0,enableCaching:!0,maxRetries:3,retryDelay:1e3,debug:!1};class Fr{static transform(e){var s,n,i,o;if(!e.data)return e;const t={...e};return(n=(s=e.headers)==null?void 0:s[\"Content-Type\"])!=null&&n.includes(\"multipart/form-data\")?t.data=this.transformFormData(e.data):(o=(i=e.headers)==null?void 0:i[\"Content-Type\"])!=null&&o.includes(\"application/json\")&&(t.data=this.transformJsonData(e.data)),t.metadata={...e.metadata??{},transformedAt:new Date().toISOString(),originalDataType:typeof e.data},t}static transformFormData(e){if(e instanceof FormData)return e;const t=new FormData;return e&&typeof e==\"object\"&&Object.entries(e).forEach(([s,n])=>{n!=null&&(n instanceof File||n instanceof Blob?t.append(s,n):t.append(s,String(n)))}),t}static transformJsonData(e){if(!e||typeof e!=\"object\")return e;const t=this.sanitizeObject(e);return this.applyFieldTransformations(t)}static sanitizeObject(e){const t={};return Object.entries(e).forEach(([s,n])=>{n!=null&&(t[s]=typeof n==\"object\"&&!Array.isArray(n)?this.sanitizeObject(n):n)}),t}static applyFieldTransformations(e){const t={};return Object.entries(e).forEach(([s,n])=>{const i=s.replaceAll(/[A-Z]/g,o=>`_${o.toLowerCase()}`);n instanceof Date?t[i]=n.toISOString():typeof n==\"string\"&&this.isDateString(n)?t[i]=new Date(n).toISOString():t[i]=n}),t}static isDateString(e){return/^\\d{4}-\\d{2}-\\d{2}/.test(e)&&!Number.isNaN(Date.parse(e))}}class Br{static normalize(e){const t=e.data;if(t&&typeof t==\"object\"&&\"success\"in t)return t;const s={success:e.status>=j.OK&&e.status<j.MULTIPLE_CHOICES,data:this.normalizeData(e.data),metadata:{status:e.status,statusText:e.statusText,headers:this.normalizeHeaders(e.headers),timestamp:new Date().toISOString(),requestId:e.headers[\"x-request-id\"]??this.generateRequestId()}};return this.hasPaginationHeaders(e.headers)&&(s.pagination=this.extractPaginationInfo(e.headers)),s}static normalizeData(e){if(!e||typeof e!=\"object\")return e;if(Array.isArray(e))return e.map(s=>this.normalizeData(s));const t={};return Object.entries(e).forEach(([s,n])=>{const i=s.replaceAll(/_([a-z])/g,(o,c)=>c.toUpperCase());t[i]=n&&typeof n==\"object\"?this.normalizeData(n):n}),t}static normalizeHeaders(e){const t={};return Object.entries(e).forEach(([s,n])=>{typeof n==\"string\"&&(t[s.toLowerCase()]=n)}),t}static hasPaginationHeaders(e){return!!(e[\"x-total-count\"]??e[\"x-page\"]??e[\"x-per-page\"]??e.link)}static extractPaginationInfo(e){return{totalCount:e[\"x-total-count\"]?Number(e[\"x-total-count\"]):void 0,page:e[\"x-page\"]?Number(e[\"x-page\"]):void 0,perPage:e[\"x-per-page\"]?Number(e[\"x-per-page\"]):void 0,totalPages:e[\"x-total-pages\"]?Number(e[\"x-total-pages\"]):void 0,hasNext:e[\"x-has-next\"]===\"true\",hasPrev:e[\"x-has-prev\"]===\"true\"}}static generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,nt.TRUNCATE_LENGTH)}`}}class Ue{static transform(e,t){const s={error_code:\"UNKNOWN_ERROR\",message:\"An unexpected error occurred\",timestamp:new Date().toISOString(),request_id:t.requestId};if(e.response){const n=e.response.data;s.error_code=this.extractErrorCode(e.response.status,n),s.message=this.extractErrorMessage(e,n);const i=this.extractErrorDetails(n);i!==void 0&&(s.details=i),s.status=e.response.status,this.isRetryableError(e.response.status)&&(s.retryable=!0,s.retry_after=this.calculateRetryDelay(t.metadata.retryCount??0))}else e.request?(s.error_code=\"NETWORK_ERROR\",s.message=\"Network error - please check your connection\",s.retryable=!0,s.retry_after=5e3):(s.error_code=\"REQUEST_ERROR\",s.message=e.message);return s}static extractErrorCode(e,t){return t!=null&&t.error_code&&typeof t.error_code==\"string\"?t.error_code:{400:\"BAD_REQUEST\",401:\"UNAUTHORIZED\",403:\"FORBIDDEN\",404:\"NOT_FOUND\",408:\"REQUEST_TIMEOUT\",409:\"CONFLICT\",422:\"VALIDATION_ERROR\",429:\"RATE_LIMITED\",500:\"INTERNAL_SERVER_ERROR\",502:\"BAD_GATEWAY\",503:\"SERVICE_UNAVAILABLE\",504:\"GATEWAY_TIMEOUT\"}[e]??`HTTP_${e}`}static extractErrorMessage(e,t){return t!=null&&t.message&&typeof t.message==\"string\"?t.message:t!=null&&t.error&&typeof t.error==\"string\"?t.error:e.message??\"An unexpected error occurred\"}static extractErrorDetails(e){const t={};return e!=null&&e.errors&&Array.isArray(e.errors)&&(t.validationErrors=e.errors),e!=null&&e.field_errors&&typeof e.field_errors==\"object\"&&(t.fieldErrors=e.field_errors),e!=null&&e.context&&typeof e.context==\"object\"&&(t.context=e.context),Object.keys(t).length>0?t:void 0}static isRetryableError(e){return e>=j.INTERNAL_SERVER_ERROR||e===j.REQUEST_TIMEOUT||e===j.TOO_MANY_REQUESTS}static calculateRetryDelay(e){const t=Math.min(V.BASE_DELAY_MS*Math.pow(V.BACKOFF_MULTIPLIER,e),V.MAX_DELAY_MS),s=t*V.JITTER_PERCENTAGE*(Math.random()-.5);return Math.round(t+s)}}class jr{constructor(e={}){S(this,\"requestMiddlewares\",[]);S(this,\"responseMiddlewares\",[]);S(this,\"errorMiddlewares\",[]);S(this,\"config\");S(this,\"requestTransformationMiddleware\",e=>({...e,config:Fr.transform(e.config)}));S(this,\"responseNormalizationMiddleware\",e=>{if(e.response){const t={...e.response,data:Br.normalize(e.response).data};return{...e,response:t}}return e});S(this,\"errorTransformationMiddleware\",(e,t)=>Ue.transform(e,t));this.config={...Lr,...e},this.setupDefaultMiddlewares()}setupDefaultMiddlewares(){this.config.enabled&&(this.config.enableRequestTransformation&&this.addRequestMiddleware(this.requestTransformationMiddleware),this.config.enableResponseNormalization&&this.addResponseMiddleware(this.responseNormalizationMiddleware),this.addErrorMiddleware(this.errorTransformationMiddleware))}addRequestMiddleware(e){this.requestMiddlewares.push(e)}addResponseMiddleware(e){this.responseMiddlewares.push(e)}addErrorMiddleware(e){this.errorMiddlewares.push(e)}async processRequest(e){if(!this.config.enabled)return e;let s={requestId:this.generateRequestId(),timestamp:Date.now(),metadata:{retryCount:0},config:e};for(const n of this.requestMiddlewares)s=await n(s);return s.config}async processResponse(e){if(!this.config.enabled)return e;let s={requestId:e.headers[\"x-request-id\"]??this.generateRequestId(),timestamp:Date.now(),duration:0,metadata:{},response:e};for(const n of this.responseMiddlewares)s=await n(s);return s.response??e}async processError(e,t){let s=Ue.transform(e,t);if(this.config.enabled)for(const n of this.errorMiddlewares)s=await n(e,t);return s}generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,nt.TRUNCATE_LENGTH)}`}updateConfig(e){this.config={...this.config,...e}}getConfig(){return{...this.config}}}const Hr=new jr,zr={enabled:!0,maxStoredEvents:1e3,maxStoredMetrics:500,maxStoredErrors:100,enableRealTimeMonitoring:!0,enablePerformanceTracking:!0,enableErrorTracking:!0,enableUsageAnalytics:!0,reportingInterval:6e4,healthCheckInterval:3e4};class vr{constructor(e={}){S(this,\"storage\");S(this,\"config\");S(this,\"reportingTimer\");S(this,\"healthCheckTimer\");S(this,\"sessionId\");this.config={...zr,...e},this.sessionId=this.generateSessionId(),this.storage={events:[],metrics:[],errors:[],usage:new Map,healthMetrics:this.initializeHealthMetrics()},this.config.enabled&&(this.startReporting(),this.startHealthChecks())}trackEvent(e,t,s={}){if(!this.config.enabled)return;const n={id:this.generateEventId(),type:e,timestamp:Date.now(),requestId:t.requestId,endpoint:this.extractEndpoint(t),method:this.extractMethod(t),metadata:{...s,sessionId:this.sessionId,userAgent:navigator.userAgent}};this.addEvent(n),this.updateUsageAnalytics(n),this.config.enableRealTimeMonitoring&&this.emitRealtimeEvent(n)}trackPerformance(e){var i;if(!this.config.enablePerformanceTracking)return;const t=e.response,s=t==null?void 0:t.config;if(!s||!t)return;const n={requestId:e.requestId,method:((i=s.method)==null?void 0:i.toUpperCase())??\"GET\",endpoint:this.extractEndpointFromConfig(s),startTime:e.timestamp-e.duration,endTime:e.timestamp,duration:e.duration,responseSize:this.calculateResponseSize(t),requestSize:this.calculateRequestSize(s),statusCode:t.status,fromCache:this.isFromCache(t),retryCount:e.metadata.retryCount||0};this.addMetrics(n),this.updateHealthMetrics(n)}trackError(e,t){var n,i;if(!this.config.enableErrorTracking)return;const s={errorId:this.generateErrorId(),errorCode:this.extractErrorCode(e),message:e.message,endpoint:this.extractEndpoint(t),method:((n=t.config.method)==null?void 0:n.toUpperCase())??\"GET\",statusCode:((i=e.response)==null?void 0:i.status)??0,timestamp:Date.now(),stackTrace:e.stack,userAgent:navigator.userAgent,sessionId:this.sessionId,retryable:this.isRetryableError(e),context:{requestId:t.requestId,url:t.config.url,headers:t.config.headers,metadata:t.metadata}};this.addError(s),this.updateErrorMetrics(s)}getPerformanceMetrics(e){let t=this.storage.metrics;return e&&(t=t.filter(s=>s.startTime>=e.start&&s.endTime<=e.end)),[...t]}getUsageAnalytics(){return[...this.storage.usage.values()]}getErrorAnalytics(e){let t=this.storage.errors;return e&&(t=t.filter(s=>s.timestamp>=e.start&&s.timestamp<=e.end)),[...t]}getHealthMetrics(){return{...this.storage.healthMetrics}}analyzePerformance(){const e=this.getUsageAnalytics(),t=e.filter(d=>d.requestCount>5).sort((d,l)=>l.averageResponseTime-d.averageResponseTime).slice(0,10).map(d=>({endpoint:d.endpoint,averageTime:d.averageResponseTime})),s=e.filter(d=>d.errorRate>.05).sort((d,l)=>l.errorRate-d.errorRate).slice(0,10).map(d=>({endpoint:d.endpoint,errorRate:d.errorRate})),n=Date.now()-1440*60*1e3,i=this.storage.metrics.filter(d=>d.startTime>=n),o=this.calculatePerformanceTrends(i),c=this.generatePerformanceRecommendations(e,s);return{slowestEndpoints:t,errorProneEndpoints:s,performanceTrends:o,recommendations:c}}createAnalyticsMiddleware(){return{request:e=>(this.trackEvent(\"request_started\",e),e),response:e=>(this.trackEvent(\"request_completed\",e),this.trackPerformance(e),e),error:(e,t)=>{throw this.trackEvent(\"request_failed\",t,{error:e.message}),this.trackError(e,t),e}}}updateConfig(e){this.config={...this.config,...e},this.config.enabled&&!this.reportingTimer?(this.startReporting(),this.startHealthChecks()):this.config.enabled||(this.stopReporting(),this.stopHealthChecks())}cleanup(){this.stopReporting(),this.stopHealthChecks()}addEvent(e){this.storage.events.push(e),this.storage.events.length>this.config.maxStoredEvents&&(this.storage.events=this.storage.events.slice(-this.config.maxStoredEvents))}addMetrics(e){this.storage.metrics.push(e),this.storage.metrics.length>this.config.maxStoredMetrics&&(this.storage.metrics=this.storage.metrics.slice(-this.config.maxStoredMetrics))}addError(e){this.storage.errors.push(e),this.storage.errors.length>this.config.maxStoredErrors&&(this.storage.errors=this.storage.errors.slice(-this.config.maxStoredErrors))}updateUsageAnalytics(e){if(!this.config.enableUsageAnalytics)return;const t=`${e.method}:${e.endpoint}`,s=this.storage.usage.get(t);s?(s.requestCount++,e.type===\"request_completed\"?s.successCount++:e.type===\"request_failed\"&&s.errorCount++,s.errorRate=s.errorCount/s.requestCount,s.lastAccessed=e.timestamp):this.storage.usage.set(t,{endpoint:e.endpoint,method:e.method,requestCount:1,successCount:e.type===\"request_completed\"?1:0,errorCount:e.type===\"request_failed\"?1:0,averageResponseTime:0,p95ResponseTime:0,p99ResponseTime:0,errorRate:e.type===\"request_failed\"?1:0,lastAccessed:e.timestamp})}updateHealthMetrics(e){const t=this.storage.healthMetrics,n=this.storage.metrics.filter(i=>i.startTime>Date.now()-3e5);if(n.length>0){t.average_response_time=n.reduce((c,d)=>c+d.duration,0)/n.length,t.requests_per_minute=n.length/5;const i=n.filter(c=>c.statusCode>=200&&c.statusCode<300);t.success_rate=i.length/n.length,t.error_rate=1-t.success_rate;const o=n.filter(c=>c.fromCache);t.cache_hit_rate=o.length/n.length}t.last_updated=Date.now(),t.overall_score=this.calculateHealthScore(t)}updateErrorMetrics(e){const t=this.storage.healthMetrics,s=this.storage.errors.filter(n=>n.timestamp>Date.now()-3e5);s.length>0&&(t.error_rate=Math.min(s.length/t.requests_per_minute,1),t.success_rate=1-t.error_rate)}calculateHealthScore(e){const t={success_rate:.4,response_time:.3,error_rate:.2,cache_hit_rate:.1},s=e.success_rate*100,n=Math.max(0,100-e.average_response_time/1e3*10),i=Math.max(0,100-e.error_rate*100),o=e.cache_hit_rate*100;return s*t.success_rate+n*t.response_time+i*t.error_rate+o*t.cache_hit_rate}calculatePerformanceTrends(e){const t=new Map;return e.forEach(s=>{const n=Math.floor(s.startTime/36e5)*60*60*1e3;t.has(n)||t.set(n,[]),t.get(n).push(s.duration)}),[...t.entries()].map(([s,n])=>({timestamp:s,averageResponseTime:n.reduce((i,o)=>i+o,0)/n.length})).sort((s,n)=>s.timestamp-n.timestamp)}generatePerformanceRecommendations(e,t){const s=[],n=e.filter(o=>o.averageResponseTime>2e3);return n.length>0&&s.push(`Consider optimizing ${n.length} slow endpoints (>2s response time)`),t.length>0&&s.push(`Review ${t.length} endpoints with high error rates (>5%)`),1-this.storage.healthMetrics.cache_hit_rate>.7&&s.push(\"Consider improving caching strategy - high cache miss rate detected\"),this.storage.healthMetrics.overall_score<80&&s.push(\"Overall API health is below optimal - consider performance improvements\"),s}extractEndpoint(e){return\"config\"in e?this.extractEndpointFromConfig(e.config):\"response\"in e&&e.response?e.response.config.url??\"\":\"\"}extractEndpointFromConfig(e){const t=e.url??\"\";return(t.split(\"?\")[0]??t).replaceAll(/\\/\\d+/g,\"/:id\")}extractMethod(e){var t,s;return\"config\"in e?((t=e.config.method)==null?void 0:t.toUpperCase())||\"GET\":\"response\"in e&&e.response&&((s=e.response.config.method)==null?void 0:s.toUpperCase())||\"GET\"}calculateResponseSize(e){const t=e.headers[\"content-length\"];return t?Number.parseInt(t,10):e.data?JSON.stringify(e.data).length:0}calculateRequestSize(e){return e.data?typeof e.data==\"string\"?e.data.length:JSON.stringify(e.data).length:0}isFromCache(e){return!!(e.headers[\"x-cache\"]??e.headers[\"cache-control\"])}extractErrorCode(e){var t;return(t=e.response)!=null&&t.data&&typeof e.response.data==\"object\"?e.response.data.error_code||`HTTP_${e.response.status}`:e.code??\"UNKNOWN_ERROR\"}isRetryableError(e){if(!e.response)return!0;const t=e.response.status;return t>=500||t===408||t===429}emitRealtimeEvent(e){typeof window<\"u\"&&window.dispatchEvent&&window.dispatchEvent(new CustomEvent(\"api-analytics-event\",{detail:e}))}startReporting(){this.reportingTimer||(this.reportingTimer=window.setInterval(()=>{this.generateReport()},this.config.reportingInterval))}stopReporting(){this.reportingTimer&&(window.clearInterval(this.reportingTimer),this.reportingTimer=void 0)}startHealthChecks(){this.healthCheckTimer||(this.healthCheckTimer=window.setInterval(()=>{this.updateSystemHealth()},this.config.healthCheckInterval))}stopHealthChecks(){this.healthCheckTimer&&(window.clearInterval(this.healthCheckTimer),this.healthCheckTimer=void 0)}generateReport(){this.sessionId,this.getPerformanceMetrics(),this.getUsageAnalytics(),this.getErrorAnalytics(),this.getHealthMetrics(),this.analyzePerformance()}updateSystemHealth(){this.storage.healthMetrics.last_updated=Date.now();const e=[...this.storage.usage.values()].reduce((s,n)=>s+n.requestCount,0),t=[...this.storage.usage.values()].reduce((s,n)=>s+n.successCount,0);e>0&&(this.storage.healthMetrics.uptime_percentage=t/e*100)}initializeHealthMetrics(){return{overall_score:100,uptime_percentage:100,average_response_time:0,error_rate:0,success_rate:1,requests_per_minute:0,cache_hit_rate:0,active_connections:0,last_updated:Date.now()}}generateEventId(){return`evt_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}generateErrorId(){return`err_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}generateSessionId(){return`sess_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}trackRequestStart(e,t,s){if(!this.config.enabled)return;const n={requestId:e,timestamp:Date.now(),metadata:{url:t,method:s.toUpperCase()},config:{url:t,method:s.toUpperCase()}};this.trackEvent(\"request_started\",n,{url:t,method:s.toUpperCase()})}trackRequestComplete(e,t,s){if(!this.config.enabled)return;const n={requestId:e,timestamp:Date.now(),duration:0,metadata:{status:t,responseSize:s}};this.trackEvent(\"request_completed\",n,{status:t,responseSize:s})}trackRequestError(e,t,s){if(!this.config.enabled)return;const n={requestId:e,timestamp:Date.now(),metadata:{error:t.message},config:{}};this.trackEvent(\"request_failed\",n,{error:t.message,errorCode:s,stack:t.stack})}trackPerformanceEvent(e,t={}){if(!this.config.enabled)return;const s={requestId:this.generateEventId(),timestamp:Date.now()};this.trackEvent(\"request_started\",s,{eventName:e,...t})}on(e,t){}getEvents(){return this.storage.events}getRequestMetrics(){return this.storage.metrics}getBatches(){return[]}destroy(){this.reportingTimer&&(clearInterval(this.reportingTimer),this.reportingTimer=void 0),this.healthCheckTimer&&(clearInterval(this.healthCheckTimer),this.healthCheckTimer=void 0),this.storage.events=[],this.storage.metrics=[],this.storage.errors=[],this.storage.usage.clear()}}const U=new vr;var $r={};const Kr={TRUNCATE_LENGTH:11},Jr={baseURL:$r.VITE_API_URL??\"http://localhost:4006\",timeout:3e4,retryAttempts:3,retryDelay:1e3,enableLogging:!1,enableMiddleware:!0,enableAnalytics:!0};class Z{static getAccessToken(){return localStorage.getItem(this.ACCESS_TOKEN_KEY)}static setAccessToken(e){localStorage.setItem(this.ACCESS_TOKEN_KEY,e)}static getRefreshToken(){return localStorage.getItem(this.REFRESH_TOKEN_KEY)}static setRefreshToken(e){localStorage.setItem(this.REFRESH_TOKEN_KEY,e)}static clearTokens(){localStorage.removeItem(this.ACCESS_TOKEN_KEY),localStorage.removeItem(this.REFRESH_TOKEN_KEY)}}S(Z,\"ACCESS_TOKEN_KEY\",\"finance_ai_access_token\"),S(Z,\"REFRESH_TOKEN_KEY\",\"finance_ai_refresh_token\");class Vr{constructor(e={}){S(this,\"axiosInstance\");S(this,\"config\");S(this,\"middleware\");this.config={...Jr,...e},this.middleware=this.config.enableMiddleware?Hr:{},this.axiosInstance=this.createAxiosInstance(),this.setupInterceptors(),this.setupMiddleware()}createAxiosInstance(){return w.create({baseURL:this.config.baseURL,timeout:this.config.timeout,headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}})}setupInterceptors(){this.axiosInstance.interceptors.request.use(async e=>{var t;if(this.config.enableMiddleware){const s=await this.middleware.processRequest(e);Object.assign(e,s)}return this.config.enableLogging&&console.log(`[HTTP Request] ${(t=e.method)==null?void 0:t.toUpperCase()} ${e.url}`,{headers:e.headers,data:e.data}),e},async e=>(this.config.enableLogging&&console.error(\"[HTTP Request Error]\",e),Promise.reject(e))),this.axiosInstance.interceptors.response.use(async e=>(this.config.enableMiddleware&&(e=await this.middleware.processResponse(e)),this.config.enableLogging&&console.log(`[HTTP Response] ${e.status} ${e.config.url}`,{data:e.data,headers:e.headers}),e),async e=>{var t,s,n;if(this.config.enableLogging&&console.error(\"[HTTP Response Error]\",{status:(t=e.response)==null?void 0:t.status,url:(s=e.config)==null?void 0:s.url,data:(n=e.response)==null?void 0:n.data}),this.config.enableMiddleware&&e.config){const i={requestId:this.generateRequestId(),timestamp:Date.now(),metadata:{},config:e.config};throw await this.middleware.processError(e,i)}throw this.transformError(e)})}setupMiddleware(){if(!this.config.enableMiddleware||!this.config.enableAnalytics||!this.middleware||typeof this.middleware.addRequestMiddleware!=\"function\")return;const e=U.createAnalyticsMiddleware();this.middleware.addRequestMiddleware(e.request),this.middleware.addResponseMiddleware(e.response),this.middleware.addErrorMiddleware(e.error)}generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,Kr.TRUNCATE_LENGTH)}`}transformError(e){const t={error_code:\"UNKNOWN_ERROR\",message:\"An unexpected error occurred\",timestamp:new Date().toISOString()};if(e.response){const s=e.response.data;t.error_code=(s==null?void 0:s.error_code)??`HTTP_${e.response.status}`,t.message=(s==null?void 0:s.message)??e.message,t.details=s==null?void 0:s.details,t.request_id=s==null?void 0:s.request_id}else e.request?(t.error_code=\"NETWORK_ERROR\",t.message=\"Network error - please check your connection\"):t.message=e.message;return t}async get(e,t){const s=await this.axiosInstance.get(e,t);return this.wrapResponse(s)}async post(e,t,s){const n=await this.axiosInstance.post(e,t,s);return this.wrapResponse(n)}async put(e,t,s){const n=await this.axiosInstance.put(e,t,s);return this.wrapResponse(n)}async patch(e,t,s){const n=await this.axiosInstance.patch(e,t,s);return this.wrapResponse(n)}async delete(e,t){const s=await this.axiosInstance.delete(e,t);return this.wrapResponse(s)}wrapResponse(e){const t=e.data;return t&&typeof t==\"object\"&&\"success\"in t?t:{success:!0,data:e.data,metadata:{status:e.status,statusText:e.statusText,headers:Object.fromEntries(Object.entries(e.headers).map(([s,n])=>[s,String(n??\"\")])),timestamp:new Date().toISOString(),requestId:crypto.randomUUID()}}}setToken(e){Z.setAccessToken(e)}clearTokens(){Z.clearTokens()}getBaseURL(){return this.config.baseURL}updateConfig(e){this.config={...this.config,...e},this.axiosInstance.defaults.baseURL=this.config.baseURL,this.axiosInstance.defaults.timeout=this.config.timeout,this.config.enableMiddleware&&this.middleware&&this.middleware.updateConfig({enableRequestTransformation:this.config.enableMiddleware,enableResponseNormalization:this.config.enableMiddleware,enableAnalytics:this.config.enableAnalytics,debug:this.config.enableLogging})}getMiddleware(){return this.middleware}getAnalytics(){return U}getPerformanceMetrics(e){return U.getPerformanceMetrics(e)}getUsageAnalytics(){return U.getUsageAnalytics()}getErrorAnalytics(e){return U.getErrorAnalytics(e)}getHealthMetrics(){return U.getHealthMetrics()}analyzePerformance(){return U.analyzePerformance()}cleanup(){this.config.enableAnalytics&&U.cleanup()}}const hs=new Vr;export{hs as h};",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/index-BujWCjCM.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/index-BujWCjCM.js",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 1,
          "content": "function Y(r){\"@babel/helpers - typeof\";return Y=typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?function(e){return typeof e}:function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Y(r)}function h(r,e){if(e.length<r)throw new TypeError(r+\" argument\"+(r>1?\"s\":\"\")+\" required, but only \"+e.length+\" present\")}function K(r){return h(1,arguments),r instanceof Date||Y(r)===\"object\"&&Object.prototype.toString.call(r)===\"[object Date]\"}function b(r){h(1,arguments);var e=Object.prototype.toString.call(r);return r instanceof Date||Y(r)===\"object\"&&e===\"[object Date]\"?new Date(r.getTime()):typeof r==\"number\"||e===\"[object Number]\"?new Date(r):((typeof r==\"string\"||e===\"[object String]\")&&typeof console<\"u\"&&(console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\"),console.warn(new Error().stack)),new Date(NaN))}function z(r){if(h(1,arguments),!K(r)&&typeof r!=\"number\")return!1;var e=b(r);return!isNaN(Number(e))}function O(r){if(r===null||r===!0||r===!1)return NaN;var e=Number(r);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function Z(r,e){h(2,arguments);var t=b(r).getTime(),a=O(e);return new Date(t+a)}function ee(r,e){h(2,arguments);var t=O(e);return Z(r,-t)}var te=864e5;function re(r){h(1,arguments);var e=b(r),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var a=e.getTime(),n=t-a;return Math.floor(n/te)+1}function E(r){h(1,arguments);var e=1,t=b(r),a=t.getUTCDay(),n=(a<e?7:0)+a-e;return t.setUTCDate(t.getUTCDate()-n),t.setUTCHours(0,0,0,0),t}function G(r){h(1,arguments);var e=b(r),t=e.getUTCFullYear(),a=new Date(0);a.setUTCFullYear(t+1,0,4),a.setUTCHours(0,0,0,0);var n=E(a),i=new Date(0);i.setUTCFullYear(t,0,4),i.setUTCHours(0,0,0,0);var o=E(i);return e.getTime()>=n.getTime()?t+1:e.getTime()>=o.getTime()?t:t-1}function ae(r){h(1,arguments);var e=G(r),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var a=E(t);return a}var ne=6048e5;function ie(r){h(1,arguments);var e=b(r),t=E(e).getTime()-ae(e).getTime();return Math.round(t/ne)+1}var oe={};function N(){return oe}function _(r,e){var t,a,n,i,o,s,l,d;h(1,arguments);var f=N(),c=O((t=(a=(n=(i=e==null?void 0:e.weekStartsOn)!==null&&i!==void 0?i:e==null||(o=e.locale)===null||o===void 0||(s=o.options)===null||s===void 0?void 0:s.weekStartsOn)!==null&&n!==void 0?n:f.weekStartsOn)!==null&&a!==void 0?a:(l=f.locale)===null||l===void 0||(d=l.options)===null||d===void 0?void 0:d.weekStartsOn)!==null&&t!==void 0?t:0);if(!(c>=0&&c<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");var v=b(r),m=v.getUTCDay(),w=(m<c?7:0)+m-c;return v.setUTCDate(v.getUTCDate()-w),v.setUTCHours(0,0,0,0),v}function I(r,e){var t,a,n,i,o,s,l,d;h(1,arguments);var f=b(r),c=f.getUTCFullYear(),v=N(),m=O((t=(a=(n=(i=e==null?void 0:e.firstWeekContainsDate)!==null&&i!==void 0?i:e==null||(o=e.locale)===null||o===void 0||(s=o.options)===null||s===void 0?void 0:s.firstWeekContainsDate)!==null&&n!==void 0?n:v.firstWeekContainsDate)!==null&&a!==void 0?a:(l=v.locale)===null||l===void 0||(d=l.options)===null||d===void 0?void 0:d.firstWeekContainsDate)!==null&&t!==void 0?t:1);if(!(m>=1&&m<=7))throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");var w=new Date(0);w.setUTCFullYear(c+1,0,m),w.setUTCHours(0,0,0,0);var D=_(w,e),T=new Date(0);T.setUTCFullYear(c,0,m),T.setUTCHours(0,0,0,0);var F=_(T,e);return f.getTime()>=D.getTime()?c+1:f.getTime()>=F.getTime()?c:c-1}function ue(r,e){var t,a,n,i,o,s,l,d;h(1,arguments);var f=N(),c=O((t=(a=(n=(i=e==null?void 0:e.firstWeekContainsDate)!==null&&i!==void 0?i:e==null||(o=e.locale)===null||o===void 0||(s=o.options)===null||s===void 0?void 0:s.firstWeekContainsDate)!==null&&n!==void 0?n:f.firstWeekContainsDate)!==null&&a!==void 0?a:(l=f.locale)===null||l===void 0||(d=l.options)===null||d===void 0?void 0:d.firstWeekContainsDate)!==null&&t!==void 0?t:1),v=I(r,e),m=new Date(0);m.setUTCFullYear(v,0,c),m.setUTCHours(0,0,0,0);var w=_(m,e);return w}var se=6048e5;function de(r,e){h(1,arguments);var t=b(r),a=_(t,e).getTime()-ue(t,e).getTime();return Math.round(a/se)+1}function u(r,e){for(var t=r<0?\"-\":\"\",a=Math.abs(r).toString();a.length<e;)a=\"0\"+a;return t+a}var p={y:function(e,t){var a=e.getUTCFullYear(),n=a>0?a:1-a;return u(t===\"yy\"?n%100:n,t.length)},M:function(e,t){var a=e.getUTCMonth();return t===\"M\"?String(a+1):u(a+1,2)},d:function(e,t){return u(e.getUTCDate(),t.length)},a:function(e,t){var a=e.getUTCHours()/12>=1?\"pm\":\"am\";switch(t){case\"a\":case\"aa\":return a.toUpperCase();case\"aaa\":return a;case\"aaaaa\":return a[0];case\"aaaa\":default:return a===\"am\"?\"a.m.\":\"p.m.\"}},h:function(e,t){return u(e.getUTCHours()%12||12,t.length)},H:function(e,t){return u(e.getUTCHours(),t.length)},m:function(e,t){return u(e.getUTCMinutes(),t.length)},s:function(e,t){return u(e.getUTCSeconds(),t.length)},S:function(e,t){var a=t.length,n=e.getUTCMilliseconds(),i=Math.floor(n*Math.pow(10,a-3));return u(i,t.length)}},M={midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},le={G:function(e,t,a){var n=e.getUTCFullYear()>0?1:0;switch(t){case\"G\":case\"GG\":case\"GGG\":return a.era(n,{width:\"abbreviated\"});case\"GGGGG\":return a.era(n,{width:\"narrow\"});case\"GGGG\":default:return a.era(n,{width:\"wide\"})}},y:function(e,t,a){if(t===\"yo\"){var n=e.getUTCFullYear(),i=n>0?n:1-n;return a.ordinalNumber(i,{unit:\"year\"})}return p.y(e,t)},Y:function(e,t,a,n){var i=I(e,n),o=i>0?i:1-i;if(t===\"YY\"){var s=o%100;return u(s,2)}return t===\"Yo\"?a.ordinalNumber(o,{unit:\"year\"}):u(o,t.length)},R:function(e,t){var a=G(e);return u(a,t.length)},u:function(e,t){var a=e.getUTCFullYear();return u(a,t.length)},Q:function(e,t,a){var n=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case\"Q\":return String(n);case\"QQ\":return u(n,2);case\"Qo\":return a.ordinalNumber(n,{unit:\"quarter\"});case\"QQQ\":return a.quarter(n,{width:\"abbreviated\",context:\"formatting\"});case\"QQQQQ\":return a.quarter(n,{width:\"narrow\",context:\"formatting\"});case\"QQQQ\":default:return a.quarter(n,{width:\"wide\",context:\"formatting\"})}},q:function(e,t,a){var n=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case\"q\":return String(n);case\"qq\":return u(n,2);case\"qo\":return a.ordinalNumber(n,{unit:\"quarter\"});case\"qqq\":return a.quarter(n,{width:\"abbreviated\",context:\"standalone\"});case\"qqqqq\":return a.quarter(n,{width:\"narrow\",context:\"standalone\"});case\"qqqq\":default:return a.quarter(n,{width:\"wide\",context:\"standalone\"})}},M:function(e,t,a){var n=e.getUTCMonth();switch(t){case\"M\":case\"MM\":return p.M(e,t);case\"Mo\":return a.ordinalNumber(n+1,{unit:\"month\"});case\"MMM\":return a.month(n,{width:\"abbreviated\",context:\"formatting\"});case\"MMMMM\":return a.month(n,{width:\"narrow\",context:\"formatting\"});case\"MMMM\":default:return a.month(n,{width:\"wide\",context:\"formatting\"})}},L:function(e,t,a){var n=e.getUTCMonth();switch(t){case\"L\":return String(n+1);case\"LL\":return u(n+1,2);case\"Lo\":return a.ordinalNumber(n+1,{unit:\"month\"});case\"LLL\":return a.month(n,{width:\"abbreviated\",context:\"standalone\"});case\"LLLLL\":return a.month(n,{width:\"narrow\",context:\"standalone\"});case\"LLLL\":default:return a.month(n,{width:\"wide\",context:\"standalone\"})}},w:function(e,t,a,n){var i=de(e,n);return t===\"wo\"?a.ordinalNumber(i,{unit:\"week\"}):u(i,t.length)},I:function(e,t,a){var n=ie(e);return t===\"Io\"?a.ordinalNumber(n,{unit:\"week\"}):u(n,t.length)},d:function(e,t,a){return t===\"do\"?a.ordinalNumber(e.getUTCDate(),{unit:\"date\"}):p.d(e,t)},D:function(e,t,a){var n=re(e);return t===\"Do\"?a.ordinalNumber(n,{unit:\"dayOfYear\"}):u(n,t.length)},E:function(e,t,a){var n=e.getUTCDay();switch(t){case\"E\":case\"EE\":case\"EEE\":return a.day(n,{width:\"abbreviated\",context:\"formatting\"});case\"EEEEE\":return a.day(n,{width:\"narrow\",context:\"formatting\"});case\"EEEEEE\":return a.day(n,{width:\"short\",context:\"formatting\"});case\"EEEE\":default:return a.day(n,{width:\"wide\",context:\"formatting\"})}},e:function(e,t,a,n){var i=e.getUTCDay(),o=(i-n.weekStartsOn+8)%7||7;switch(t){case\"e\":return String(o);case\"ee\":return u(o,2);case\"eo\":return a.ordinalNumber(o,{unit:\"day\"});case\"eee\":return a.day(i,{width:\"abbreviated\",context:\"formatting\"});case\"eeeee\":return a.day(i,{width:\"narrow\",context:\"formatting\"});case\"eeeeee\":return a.day(i,{width:\"short\",context:\"formatting\"});case\"eeee\":default:return a.day(i,{width:\"wide\",context:\"formatting\"})}},c:function(e,t,a,n){var i=e.getUTCDay(),o=(i-n.weekStartsOn+8)%7||7;switch(t){case\"c\":return String(o);case\"cc\":return u(o,t.length);case\"co\":return a.ordinalNumber(o,{unit:\"day\"});case\"ccc\":return a.day(i,{width:\"abbreviated\",context:\"standalone\"});case\"ccccc\":return a.day(i,{width:\"narrow\",context:\"standalone\"});case\"cccccc\":return a.day(i,{width:\"short\",context:\"standalone\"});case\"cccc\":default:return a.day(i,{width:\"wide\",context:\"standalone\"})}},i:function(e,t,a){var n=e.getUTCDay(),i=n===0?7:n;switch(t){case\"i\":return String(i);case\"ii\":return u(i,t.length);case\"io\":return a.ordinalNumber(i,{unit:\"day\"});case\"iii\":return a.day(n,{width:\"abbreviated\",context:\"formatting\"});case\"iiiii\":return a.day(n,{width:\"narrow\",context:\"formatting\"});case\"iiiiii\":return a.day(n,{width:\"short\",context:\"formatting\"});case\"iiii\":default:return a.day(n,{width:\"wide\",context:\"formatting\"})}},a:function(e,t,a){var n=e.getUTCHours(),i=n/12>=1?\"pm\":\"am\";switch(t){case\"a\":case\"aa\":return a.dayPeriod(i,{width:\"abbreviated\",context:\"formatting\"});case\"aaa\":return a.dayPeriod(i,{width:\"abbreviated\",context:\"formatting\"}).toLowerCase();case\"aaaaa\":return a.dayPeriod(i,{width:\"narrow\",context:\"formatting\"});case\"aaaa\":default:return a.dayPeriod(i,{width:\"wide\",context:\"formatting\"})}},b:function(e,t,a){var n=e.getUTCHours(),i;switch(n===12?i=M.noon:n===0?i=M.midnight:i=n/12>=1?\"pm\":\"am\",t){case\"b\":case\"bb\":return a.dayPeriod(i,{width:\"abbreviated\",context:\"formatting\"});case\"bbb\":return a.dayPeriod(i,{width:\"abbreviated\",context:\"formatting\"}).toLowerCase();case\"bbbbb\":return a.dayPeriod(i,{width:\"narrow\",context:\"formatting\"});case\"bbbb\":default:return a.dayPeriod(i,{width:\"wide\",context:\"formatting\"})}},B:function(e,t,a){var n=e.getUTCHours(),i;switch(n>=17?i=M.evening:n>=12?i=M.afternoon:n>=4?i=M.morning:i=M.night,t){case\"B\":case\"BB\":case\"BBB\":return a.dayPeriod(i,{width:\"abbreviated\",context:\"formatting\"});case\"BBBBB\":return a.dayPeriod(i,{width:\"narrow\",context:\"formatting\"});case\"BBBB\":default:return a.dayPeriod(i,{width:\"wide\",context:\"formatting\"})}},h:function(e,t,a){if(t===\"ho\"){var n=e.getUTCHours()%12;return n===0&&(n=12),a.ordinalNumber(n,{unit:\"hour\"})}return p.h(e,t)},H:function(e,t,a){return t===\"Ho\"?a.ordinalNumber(e.getUTCHours(),{unit:\"hour\"}):p.H(e,t)},K:function(e,t,a){var n=e.getUTCHours()%12;return t===\"Ko\"?a.ordinalNumber(n,{unit:\"hour\"}):u(n,t.length)},k:function(e,t,a){var n=e.getUTCHours();return n===0&&(n=24),t===\"ko\"?a.ordinalNumber(n,{unit:\"hour\"}):u(n,t.length)},m:function(e,t,a){return t===\"mo\"?a.ordinalNumber(e.getUTCMinutes(),{unit:\"minute\"}):p.m(e,t)},s:function(e,t,a){return t===\"so\"?a.ordinalNumber(e.getUTCSeconds(),{unit:\"second\"}):p.s(e,t)},S:function(e,t){return p.S(e,t)},X:function(e,t,a,n){var i=n._originalDate||e,o=i.getTimezoneOffset();if(o===0)return\"Z\";switch(t){case\"X\":return R(o);case\"XXXX\":case\"XX\":return C(o);case\"XXXXX\":case\"XXX\":default:return C(o,\":\")}},x:function(e,t,a,n){var i=n._originalDate||e,o=i.getTimezoneOffset();switch(t){case\"x\":return R(o);case\"xxxx\":case\"xx\":return C(o);case\"xxxxx\":case\"xxx\":default:return C(o,\":\")}},O:function(e,t,a,n){var i=n._originalDate||e,o=i.getTimezoneOffset();switch(t){case\"O\":case\"OO\":case\"OOO\":return\"GMT\"+H(o,\":\");case\"OOOO\":default:return\"GMT\"+C(o,\":\")}},z:function(e,t,a,n){var i=n._originalDate||e,o=i.getTimezoneOffset();switch(t){case\"z\":case\"zz\":case\"zzz\":return\"GMT\"+H(o,\":\");case\"zzzz\":default:return\"GMT\"+C(o,\":\")}},t:function(e,t,a,n){var i=n._originalDate||e,o=Math.floor(i.getTime()/1e3);return u(o,t.length)},T:function(e,t,a,n){var i=n._originalDate||e,o=i.getTime();return u(o,t.length)}};function H(r,e){var t=r>0?\"-\":\"+\",a=Math.abs(r),n=Math.floor(a/60),i=a%60;if(i===0)return t+String(n);var o=e;return t+String(n)+o+u(i,2)}function R(r,e){if(r%60===0){var t=r>0?\"-\":\"+\";return t+u(Math.abs(r)/60,2)}return C(r,e)}function C(r,e){var t=e||\"\",a=r>0?\"-\":\"+\",n=Math.abs(r),i=u(Math.floor(n/60),2),o=u(n%60,2);return a+i+t+o}var Q=function(e,t){switch(e){case\"P\":return t.date({width:\"short\"});case\"PP\":return t.date({width:\"medium\"});case\"PPP\":return t.date({width:\"long\"});case\"PPPP\":default:return t.date({width:\"full\"})}},j=function(e,t){switch(e){case\"p\":return t.time({width:\"short\"});case\"pp\":return t.time({width:\"medium\"});case\"ppp\":return t.time({width:\"long\"});case\"pppp\":default:return t.time({width:\"full\"})}},ce=function(e,t){var a=e.match(/(P+)(p+)?/)||[],n=a[1],i=a[2];if(!i)return Q(e,t);var o;switch(n){case\"P\":o=t.dateTime({width:\"short\"});break;case\"PP\":o=t.dateTime({width:\"medium\"});break;case\"PPP\":o=t.dateTime({width:\"long\"});break;case\"PPPP\":default:o=t.dateTime({width:\"full\"});break}return o.replace(\"{{date}}\",Q(n,t)).replace(\"{{time}}\",j(i,t))},fe={p:j,P:ce};function me(r){var e=new Date(Date.UTC(r.getFullYear(),r.getMonth(),r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds(),r.getMilliseconds()));return e.setUTCFullYear(r.getFullYear()),r.getTime()-e.getTime()}var he=[\"D\",\"DD\"],ve=[\"YY\",\"YYYY\"];function ge(r){return he.indexOf(r)!==-1}function we(r){return ve.indexOf(r)!==-1}function X(r,e,t){if(r===\"YYYY\")throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(e,\"`) for formatting years to the input `\").concat(t,\"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));if(r===\"YY\")throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(e,\"`) for formatting years to the input `\").concat(t,\"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));if(r===\"D\")throw new RangeError(\"Use `d` instead of `D` (in `\".concat(e,\"`) for formatting days of the month to the input `\").concat(t,\"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));if(r===\"DD\")throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(e,\"`) for formatting days of the month to the input `\").concat(t,\"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"))}var be={lessThanXSeconds:{one:\"less than a second\",other:\"less than {{count}} seconds\"},xSeconds:{one:\"1 second\",other:\"{{count}} seconds\"},halfAMinute:\"half a minute\",lessThanXMinutes:{one:\"less than a minute\",other:\"less than {{count}} minutes\"},xMinutes:{one:\"1 minute\",other:\"{{count}} minutes\"},aboutXHours:{one:\"about 1 hour\",other:\"about {{count}} hours\"},xHours:{one:\"1 hour\",other:\"{{count}} hours\"},xDays:{one:\"1 day\",other:\"{{count}} days\"},aboutXWeeks:{one:\"about 1 week\",other:\"about {{count}} weeks\"},xWeeks:{one:\"1 week\",other:\"{{count}} weeks\"},aboutXMonths:{one:\"about 1 month\",other:\"about {{count}} months\"},xMonths:{one:\"1 month\",other:\"{{count}} months\"},aboutXYears:{one:\"about 1 year\",other:\"about {{count}} years\"},xYears:{one:\"1 year\",other:\"{{count}} years\"},overXYears:{one:\"over 1 year\",other:\"over {{count}} years\"},almostXYears:{one:\"almost 1 year\",other:\"almost {{count}} years\"}},ye=function(e,t,a){var n,i=be[e];return typeof i==\"string\"?n=i:t===1?n=i.one:n=i.other.replace(\"{{count}}\",t.toString()),a!=null&&a.addSuffix?a.comparison&&a.comparison>0?\"in \"+n:n+\" ago\":n};function $(r){return function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},t=e.width?String(e.width):r.defaultWidth,a=r.formats[t]||r.formats[r.defaultWidth];return a}}var pe={full:\"EEEE, MMMM do, y\",long:\"MMMM do, y\",medium:\"MMM d, y\",short:\"MM/dd/yyyy\"},Te={full:\"h:mm:ss a zzzz\",long:\"h:mm:ss a z\",medium:\"h:mm:ss a\",short:\"h:mm a\"},Ce={full:\"{{date}} 'at' {{time}}\",long:\"{{date}} 'at' {{time}}\",medium:\"{{date}}, {{time}}\",short:\"{{date}}, {{time}}\"},Oe={date:$({formats:pe,defaultWidth:\"full\"}),time:$({formats:Te,defaultWidth:\"full\"}),dateTime:$({formats:Ce,defaultWidth:\"full\"})},Me={lastWeek:\"'last' eeee 'at' p\",yesterday:\"'yesterday at' p\",today:\"'today at' p\",tomorrow:\"'tomorrow at' p\",nextWeek:\"eeee 'at' p\",other:\"P\"},De=function(e,t,a,n){return Me[e]};function k(r){return function(e,t){var a=t!=null&&t.context?String(t.context):\"standalone\",n;if(a===\"formatting\"&&r.formattingValues){var i=r.defaultFormattingWidth||r.defaultWidth,o=t!=null&&t.width?String(t.width):i;n=r.formattingValues[o]||r.formattingValues[i]}else{var s=r.defaultWidth,l=t!=null&&t.width?String(t.width):r.defaultWidth;n=r.values[l]||r.values[s]}var d=r.argumentCallback?r.argumentCallback(e):e;return n[d]}}var Pe={narrow:[\"B\",\"A\"],abbreviated:[\"BC\",\"AD\"],wide:[\"Before Christ\",\"Anno Domini\"]},Se={narrow:[\"1\",\"2\",\"3\",\"4\"],abbreviated:[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],wide:[\"1st quarter\",\"2nd quarter\",\"3rd quarter\",\"4th quarter\"]},ke={narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],abbreviated:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],wide:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},xe={narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],abbreviated:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],wide:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},We={narrow:{am:\"a\",pm:\"p\",midnight:\"mi\",noon:\"n\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},wide:{am:\"a.m.\",pm:\"p.m.\",midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"}},Ue={narrow:{am:\"a\",pm:\"p\",midnight:\"mi\",noon:\"n\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"midnight\",noon:\"noon\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"},wide:{am:\"a.m.\",pm:\"p.m.\",midnight:\"midnight\",noon:\"noon\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"}},Ye=function(e,t){var a=Number(e),n=a%100;if(n>20||n<10)switch(n%10){case 1:return a+\"st\";case 2:return a+\"nd\";case 3:return a+\"rd\"}return a+\"th\"},Ee={ordinalNumber:Ye,era:k({values:Pe,defaultWidth:\"wide\"}),quarter:k({values:Se,defaultWidth:\"wide\",argumentCallback:function(e){return e-1}}),month:k({values:ke,defaultWidth:\"wide\"}),day:k({values:xe,defaultWidth:\"wide\"}),dayPeriod:k({values:We,defaultWidth:\"wide\",formattingValues:Ue,defaultFormattingWidth:\"wide\"})};function x(r){return function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=t.width,n=a&&r.matchPatterns[a]||r.matchPatterns[r.defaultMatchWidth],i=e.match(n);if(!i)return null;var o=i[0],s=a&&r.parsePatterns[a]||r.parsePatterns[r.defaultParseWidth],l=Array.isArray(s)?Ne(s,function(c){return c.test(o)}):_e(s,function(c){return c.test(o)}),d;d=r.valueCallback?r.valueCallback(l):l,d=t.valueCallback?t.valueCallback(d):d;var f=e.slice(o.length);return{value:d,rest:f}}}function _e(r,e){for(var t in r)if(r.hasOwnProperty(t)&&e(r[t]))return t}function Ne(r,e){for(var t=0;t<r.length;t++)if(e(r[t]))return t}function Fe(r){return function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=e.match(r.matchPattern);if(!a)return null;var n=a[0],i=e.match(r.parsePattern);if(!i)return null;var o=r.valueCallback?r.valueCallback(i[0]):i[0];o=t.valueCallback?t.valueCallback(o):o;var s=e.slice(n.length);return{value:o,rest:s}}}var qe=/^(\\d+)(th|st|nd|rd)?/i,Le=/\\d+/i,$e={narrow:/^(b|a)/i,abbreviated:/^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},He={any:[/^b/i,/^(a|c)/i]},Re={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},Qe={any:[/1/i,/2/i,/3/i,/4/i]},Xe={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},Ge={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},Ie={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},je={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},Be={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},Ae={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},Ve={ordinalNumber:Fe({matchPattern:qe,parsePattern:Le,valueCallback:function(e){return parseInt(e,10)}}),era:x({matchPatterns:$e,defaultMatchWidth:\"wide\",parsePatterns:He,defaultParseWidth:\"any\"}),quarter:x({matchPatterns:Re,defaultMatchWidth:\"wide\",parsePatterns:Qe,defaultParseWidth:\"any\",valueCallback:function(e){return e+1}}),month:x({matchPatterns:Xe,defaultMatchWidth:\"wide\",parsePatterns:Ge,defaultParseWidth:\"any\"}),day:x({matchPatterns:Ie,defaultMatchWidth:\"wide\",parsePatterns:je,defaultParseWidth:\"any\"}),dayPeriod:x({matchPatterns:Be,defaultMatchWidth:\"any\",parsePatterns:Ae,defaultParseWidth:\"any\"})},Je={code:\"en-US\",formatDistance:ye,formatLong:Oe,formatRelative:De,localize:Ee,match:Ve,options:{weekStartsOn:0,firstWeekContainsDate:1}},Ke=/[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g,ze=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,Ze=/^'([^]*?)'?$/,et=/''/g,tt=/[a-zA-Z]/;function at(r,e,t){var a,n,i,o,s,l,d,f,c,v,m,w,D,T;h(2,arguments);var F=String(e),P=N(),S=(a=(n=void 0)!==null&&n!==void 0?n:P.locale)!==null&&a!==void 0?a:Je,q=O((i=(o=(s=(l=void 0)!==null&&l!==void 0?l:void 0)!==null&&s!==void 0?s:P.firstWeekContainsDate)!==null&&o!==void 0?o:(d=P.locale)===null||d===void 0||(f=d.options)===null||f===void 0?void 0:f.firstWeekContainsDate)!==null&&i!==void 0?i:1);if(!(q>=1&&q<=7))throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");var L=O((c=(v=(m=(w=void 0)!==null&&w!==void 0?w:void 0)!==null&&m!==void 0?m:P.weekStartsOn)!==null&&v!==void 0?v:(D=P.locale)===null||D===void 0||(T=D.options)===null||T===void 0?void 0:T.weekStartsOn)!==null&&c!==void 0?c:0);if(!(L>=0&&L<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");if(!S.localize)throw new RangeError(\"locale must contain localize property\");if(!S.formatLong)throw new RangeError(\"locale must contain formatLong property\");var W=b(r);if(!z(W))throw new RangeError(\"Invalid time value\");var B=me(W),A=ee(W,B),V={firstWeekContainsDate:q,weekStartsOn:L,locale:S,_originalDate:W},J=F.match(ze).map(function(g){var y=g[0];if(y===\"p\"||y===\"P\"){var U=fe[y];return U(g,S.formatLong)}return g}).join(\"\").match(Ke).map(function(g){if(g===\"''\")return\"'\";var y=g[0];if(y===\"'\")return rt(g);var U=le[y];if(U)return we(g)&&X(g,e,String(r)),ge(g)&&X(g,e,String(r)),U(A,g,S.localize,V);if(y.match(tt))throw new RangeError(\"Format string contains an unescaped latin alphabet character `\"+y+\"`\");return g}).join(\"\");return J}function rt(r){var e=r.match(Ze);return e?e[1].replace(et,\"'\"):r}export{at as f,h as r,O as t};",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/authStore-Bvy4jE74.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/authStore-Bvy4jE74.js",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 1,
          "content": "var g=Object.defineProperty;var y=(r,t,e)=>t in r?g(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var h=(r,t,e)=>y(r,typeof t!=\"symbol\"?t+\"\":t,e);import{x as l,r as w,t as S,v as k}from\"./index-BKXu7Q-C.js\";import{h as o}from\"./http-client-CwHweUYk.js\";const u=class u{constructor(){h(this,\"authState\",{isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null});h(this,\"listeners\",[]);h(this,\"refreshTimer\",null);this.initializeAuthState(),this.setupStorageListener()}initializeAuthState(){try{const t=localStorage.getItem(u.AUTH_STATE_KEY);if(t){const e=JSON.parse(t);this.isTokenValid(e.token)?(this.authState={...e,isLoading:!1,error:null},this.scheduleTokenRefresh(e.token)):this.clearAuthState()}}catch(t){l.error(\"Failed to initialize auth state\",t,\"AuthService\"),this.clearAuthState()}}setupStorageListener(){window.addEventListener(\"storage\",t=>{if(t.key===u.AUTH_STATE_KEY)if(t.newValue)try{const e=JSON.parse(t.newValue);this.authState=e,this.notifyListeners()}catch(e){l.error(\"Failed to parse auth state from storage\",e,\"AuthService\")}else this.clearAuthState()})}isTokenValid(t){if(!(t!=null&&t.expires_in))return!1;const e=Date.now(),s=e+t.expires_in*1e3;return e<s}scheduleTokenRefresh(t){if(!t||this.refreshTimer)return;const a=new Date().getTime()+t.expires_in*1e3-u.TOKEN_REFRESH_THRESHOLD-Date.now();a>0&&(this.refreshTimer=setTimeout(async()=>{try{await this.refreshToken()}catch(c){l.error(\"Automatic token refresh failed\",c,\"AuthService\"),this.logout()}},a))}clearRefreshTimer(){this.refreshTimer&&(clearTimeout(this.refreshTimer),this.refreshTimer=null)}updateAuthState(t){this.authState={...this.authState,...t},this.persistAuthState(),this.notifyListeners()}persistAuthState(){try{localStorage.setItem(u.AUTH_STATE_KEY,JSON.stringify(this.authState))}catch(t){l.error(\"Failed to persist auth state\",t,\"AuthService\")}}clearAuthState(){this.authState={isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null},localStorage.removeItem(u.AUTH_STATE_KEY),o.clearTokens(),this.clearRefreshTimer(),this.notifyListeners()}notifyListeners(){this.listeners.forEach(t=>{try{t(this.authState)}catch(e){l.error(\"Auth state listener error\",e,\"AuthService\")}})}emitAuthEvent(t,e){const s={type:t,timestamp:Date.now(),data:e};t===\"logout\"?(localStorage.setItem(\"finance_ai_auth_logout\",Date.now().toString()),window.dispatchEvent(new CustomEvent(\"auth_logout\",{detail:s}))):localStorage.setItem(`finance_ai_auth_event_${Date.now()}`,JSON.stringify(s)),setTimeout(()=>{t===\"logout\"?localStorage.removeItem(\"finance_ai_auth_logout\"):localStorage.removeItem(`finance_ai_auth_event_${Date.now()}`)},1e3)}getAuthState(){return{...this.authState}}isAuthenticated(){return this.authState.isAuthenticated&&this.isTokenValid(this.authState.token)}getCurrentUser(){return this.authState.user}subscribe(t){return this.listeners.push(t),()=>{const e=this.listeners.indexOf(t);e>-1&&this.listeners.splice(e,1)}}async login(t){this.updateAuthState({isLoading:!0,error:null});try{const e=await o.post(\"/auth/login\",t);if(!e.success||!e.data)throw new Error(\"Login failed: Invalid response\");const{user:s,token:i}=e.data;return o.setToken(i.access_token),this.updateAuthState({isAuthenticated:!0,user:s,token:i,isLoading:!1,error:null}),this.scheduleTokenRefresh(i),this.emitAuthEvent(\"login\",{user:s}),s}catch(e){const s=e instanceof Error?e.message:\"Login failed\";throw this.updateAuthState({isLoading:!1,error:s}),e}}async register(t){this.updateAuthState({isLoading:!0,error:null});try{const e=await o.post(\"/auth/register\",t);if(!e.success||!e.data)throw new Error(\"Registration failed: Invalid response\");const{user:s,token:i}=e.data;return o.setToken(i.access_token),this.updateAuthState({isAuthenticated:!0,user:s,token:i,isLoading:!1,error:null}),this.scheduleTokenRefresh(i),this.emitAuthEvent(\"login\",{user:s}),s}catch(e){const s=e instanceof Error?e.message:\"Registration failed\";throw this.updateAuthState({isLoading:!1,error:s}),e}}async validateToken(t){var e;try{const s=await o.post(\"/auth/validate\",{token:t});return s.success&&((e=s.data)==null?void 0:e.valid)===!0}catch{return!1}}async logout(){try{this.isAuthenticated()&&await o.post(\"/auth/logout\")}catch(t){l.error(\"Logout request failed\",t,\"AuthService\")}finally{this.clearAuthState(),this.emitAuthEvent(\"logout\")}}async refreshToken(){var t,e;if(!((t=this.authState.token)!=null&&t.refresh_token))throw new Error(\"No refresh token available\");try{const s=await o.post(\"/auth/refresh\",{refresh_token:this.authState.token.refresh_token});if(!s.success||!s.data)throw new Error(\"Token refresh failed\");const{access_token:i,expires_in:a}=s.data,c={access_token:i,token_type:\"Bearer\",expires_in:a,refresh_token:this.authState.token.refresh_token,scope:((e=this.authState.token)==null?void 0:e.scope)??\"\"};o.setToken(i),this.updateAuthState({token:c,error:null}),this.clearRefreshTimer(),this.scheduleTokenRefresh(c),this.emitAuthEvent(\"token_refresh\")}catch(s){throw l.error(\"Token refresh failed\",s,\"AuthService\"),this.clearAuthState(),this.emitAuthEvent(\"session_expired\"),s}}async validateSession(){var t;if(!this.isAuthenticated())return!1;try{const e=await o.get(\"/auth/validate\");return e.success&&((t=e.data)==null?void 0:t.valid)===!0}catch(e){return l.error(\"Session validation failed\",e,\"AuthService\"),this.clearAuthState(),!1}}async changePassword(t,e){if(!this.isAuthenticated())throw new Error(\"User must be authenticated to change password\");try{if(!(await o.post(\"/auth/change-password\",{current_password:t,new_password:e})).success)throw new Error(\"Password change failed\")}catch(s){const i=s instanceof Error?s.message:\"Password change failed\";throw new Error(i)}}async requestPasswordReset(t){try{if(!(await o.post(\"/auth/request-password-reset\",{email:t})).success)throw new Error(\"Password reset request failed\")}catch(e){const s=e instanceof Error?e.message:\"Password reset request failed\";throw new Error(s)}}destroy(){this.clearRefreshTimer(),this.listeners=[]}};h(u,\"AUTH_STATE_KEY\",\"finance_ai_auth_state\"),h(u,\"TOKEN_REFRESH_THRESHOLD\",300*1e3);let A=u;const n=new A,d={rememberMe:!1,autoLogout:!0,logoutAfterMinutes:30},m=()=>({isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null,lastActivity:null,sessionExpiry:null,preferences:d}),f=w()(S(k((r,t)=>({isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null,lastActivity:null,sessionExpiry:null,preferences:d,login:async(e,s=!1)=>{var i;r({isLoading:!0,error:null});try{await n.login(e);const a=n.getAuthState();r({isAuthenticated:a.isAuthenticated,user:a.user,token:((i=a.token)==null?void 0:i.access_token)??null,isLoading:!1,error:null,lastActivity:Date.now(),sessionExpiry:a.token?Date.now()+a.token.expires_in*1e3:null,preferences:{...t().preferences,rememberMe:s}}),t().preferences.autoLogout&&t().updateActivity()}catch(a){const c=a instanceof Error?a.message:\"Login failed\";throw r({isLoading:!1,error:c,isAuthenticated:!1,user:null,token:null}),a}},logout:async()=>{r({isLoading:!0});try{await n.logout(),r({isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null,lastActivity:Date.now(),sessionExpiry:null,preferences:d})}catch{r({isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null,lastActivity:Date.now(),sessionExpiry:null})}},refreshAuth:async()=>{try{await n.refreshToken(),t().syncWithAuthService()}catch(e){throw await t().logout(),e}},register:async e=>{var s;r({isLoading:!0,error:null});try{await n.register(e);const i=n.getAuthState();r({isAuthenticated:i.isAuthenticated,user:i.user,token:((s=i.token)==null?void 0:s.access_token)??null,isLoading:!1,error:null,lastActivity:Date.now(),sessionExpiry:i.token?Date.now()+i.token.expires_in*1e3:null}),t().preferences.autoLogout&&t().updateActivity()}catch(i){const a=i instanceof Error?i.message:\"Registration failed\";throw r({isLoading:!1,error:a,isAuthenticated:!1,user:null,token:null}),i}},refreshToken:async()=>{try{await n.refreshToken(),t().syncWithAuthService()}catch(e){await t().logout();const s=e instanceof Error?e.message:\"Token refresh failed\";throw r({error:s}),e}},validateToken:async e=>{try{return n.validateToken(e)}catch{return!1}},clearError:()=>{r({error:null})},updateActivity:()=>{const e=t(),s=Date.now();if(r({lastActivity:s}),e.preferences.autoLogout&&e.isAuthenticated){const i=e.preferences.logoutAfterMinutes*60*1e3,a=s+i;r({sessionExpiry:a})}},updatePreferences:e=>{const i={...t().preferences,...e};r({preferences:i}),(\"autoLogout\"in e||\"logoutAfterMinutes\"in e)&&(i.autoLogout&&t().isAuthenticated?t().updateActivity():r({sessionExpiry:null}))},isSessionValid:()=>{const e=t();return!e.isAuthenticated||!e.sessionExpiry?e.isAuthenticated:Date.now()<e.sessionExpiry},extendSession:e=>{const s=Date.now();r({sessionExpiry:s+e})},reset:()=>{r({isAuthenticated:!1,user:null,token:null,isLoading:!1,error:null,lastActivity:null,sessionExpiry:null,preferences:d})},hydrate:()=>{try{const e=localStorage.getItem(\"auth_store\");if(e){const s=JSON.parse(e);s.state&&r({...t(),...s.state})}}catch(e){console.warn(\"Failed to hydrate auth store:\",e)}},syncWithAuthService:()=>{var s;const e=n.getAuthState();if(r({isAuthenticated:e.isAuthenticated,user:e.user,token:((s=e.token)==null?void 0:s.access_token)??null,isLoading:e.isLoading,error:e.error}),e.token&&t().preferences.autoLogout){const i=Date.now()+e.token.expires_in*1e3,a=t().preferences.logoutAfterMinutes*60*1e3,c=Math.min(i,Date.now()+a);r({sessionExpiry:c})}}}),{name:\"auth_store\",partialize:r=>({user:r.user,lastActivity:r.lastActivity,sessionExpiry:r.sessionExpiry,preferences:r.preferences}),version:1,migrate:(r,t)=>{if(t===0){const e=r;return{...m(),...e,preferences:{...d,...(e==null?void 0:e.preferences)??{}}}}return r}})));try{n.subscribe(r=>{var e;const t=f.getState();(t.isAuthenticated!==r.isAuthenticated||t.user!==r.user||t.token!==((e=r.token)==null?void 0:e.access_token)||t.isLoading!==r.isLoading||t.error!==r.error)&&t.syncWithAuthService()})}catch(r){console.warn(\"AuthService subscription failed:\",r)}let p=null;try{f.subscribe(r=>r.sessionExpiry,r=>{if(p&&(clearTimeout(p),p=null),r){const t=r-Date.now();t>0&&(p=setTimeout(()=>{const e=f.getState();e.isAuthenticated&&e.preferences.autoLogout&&e.logout()},t))}})}catch(r){console.warn(\"Session timeout setup failed:\",r)}const T=()=>{try{const r=f.getState();r.isAuthenticated&&r.preferences.autoLogout&&r.updateActivity()}catch(r){console.warn(\"Activity tracking failed:\",r)}};if(typeof window<\"u\")try{const r=[\"mousedown\",\"mousemove\",\"keypress\",\"scroll\",\"touchstart\"];let t=null;const e=()=>{t||(t=setTimeout(()=>{T(),t=null},1e3))};r.forEach(s=>{document.addEventListener(s,e,{passive:!0})})}catch(r){console.warn(\"Activity event setup failed:\",r)}const _=()=>f(r=>({isAuthenticated:r.isAuthenticated,user:r.user,isLoading:r.isLoading,error:r.error})),x=()=>f(r=>({login:r.login,logout:r.logout,register:r.register,refreshAuth:r.refreshAuth,clearError:r.clearError}));export{x as a,_ as u};",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-simple/assets/useComparativeAnalysis-BL2UHmK9.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-simple/assets/useComparativeAnalysis-BL2UHmK9.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "var pe=a=>{throw TypeError(a)};var ce=(a,e,r)=>e.has(a)||pe(\"Cannot \"+r);var R=(a,e,r)=>(ce(a,e,\"read from private field\"),r?r.call(a):e.get(a)),H=(a,e,r)=>e.has(a)?pe(\"Cannot add the same private member more than once\"):e instanceof WeakSet?e.add(a):e.set(a,r),X=(a,e,r,t)=>(ce(a,e,\"write to private field\"),t?t.call(a,r):e.set(a,r),r),J=(a,e,r)=>(ce(a,e,\"access private method\"),r);import{u as ue}from\"./useQuery-CL--WJBR.js\";import{k as Le,s as Ve,m as de,n as Ie,o as ve,u as be,p as Qe,q as Ue}from\"./index-BKXu7Q-C.js\";import{r as S}from\"./visx-B2MmNCqL.js\";import{a as K}from\"./api-DwEF0gfm.js\";var B,G,O,V,I,oe,me,ye,Be=(ye=class extends Le{constructor(e,r){super();H(this,I);H(this,B);H(this,G);H(this,O);H(this,V);X(this,B,e),this.setOptions(r),this.bindMethods(),J(this,I,oe).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(e){var t;const r=this.options;this.options=R(this,B).defaultMutationOptions(e),Ve(this.options,r)||R(this,B).getMutationCache().notify({type:\"observerOptionsUpdated\",mutation:R(this,O),observer:this}),r!=null&&r.mutationKey&&this.options.mutationKey&&de(r.mutationKey)!==de(this.options.mutationKey)?this.reset():((t=R(this,O))==null?void 0:t.state.status)===\"pending\"&&R(this,O).setOptions(this.options)}onUnsubscribe(){var e;this.hasListeners()||(e=R(this,O))==null||e.removeObserver(this)}onMutationUpdate(e){J(this,I,oe).call(this),J(this,I,me).call(this,e)}getCurrentResult(){return R(this,G)}reset(){var e;(e=R(this,O))==null||e.removeObserver(this),X(this,O,void 0),J(this,I,oe).call(this),J(this,I,me).call(this)}mutate(e,r){var t;return X(this,V,r),(t=R(this,O))==null||t.removeObserver(this),X(this,O,R(this,B).getMutationCache().build(R(this,B),this.options)),R(this,O).addObserver(this),R(this,O).execute(e)}},B=new WeakMap,G=new WeakMap,O=new WeakMap,V=new WeakMap,I=new WeakSet,oe=function(){var r;const e=((r=R(this,O))==null?void 0:r.state)??Ie();X(this,G,{...e,isPending:e.status===\"pending\",isSuccess:e.status===\"success\",isError:e.status===\"error\",isIdle:e.status===\"idle\",mutate:this.mutate,reset:this.reset})},me=function(e){ve.batch(()=>{var r,t,i,s,u,p,_,c;if(R(this,V)&&this.hasListeners()){const m=R(this,G).variables,M=R(this,G).context;(e==null?void 0:e.type)===\"success\"?((t=(r=R(this,V)).onSuccess)==null||t.call(r,e.data,m,M),(s=(i=R(this,V)).onSettled)==null||s.call(i,e.data,null,m,M)):(e==null?void 0:e.type)===\"error\"&&((p=(u=R(this,V)).onError)==null||p.call(u,e.error,m,M),(c=(_=R(this,V)).onSettled)==null||c.call(_,void 0,e.error,m,M))}this.listeners.forEach(m=>{m(R(this,G))})})},ye);function Ge(a,e){const r=be(),[t]=S.useState(()=>new Be(r,a));S.useEffect(()=>{t.setOptions(a)},[t,a]);const i=S.useSyncExternalStore(S.useCallback(u=>t.subscribe(ve.batchCalls(u)),[t]),()=>t.getCurrentResult(),()=>t.getCurrentResult()),s=S.useCallback((u,p)=>{t.mutate(u,p).catch(Qe)},[t]);if(i.error&&Ue(t.options.throwOnError,[i.error]))throw i.error;return{...i,mutate:s,mutateAsync:i.mutate}}async function je(a,e,r={}){var h;const t=performance.now(),{includePeerAnalysis:i=!0,includeSectorBenchmark:s=!0,peerSelectionCriteria:u={},minPeerCount:p=5,maxPeerCount:_=20}=r,c=[];if(!a)throw new Error(\"Target data is required for comparative analysis\");(!a.statements||a.statements.length===0)&&c.push(\"Limited financial data may reduce analysis accuracy\"),(!e||e.length===0)&&(c.push(\"No benchmark data available - analysis limited\"),e=[]),e.length<p&&c.push(`Limited benchmark data (${e.length} companies). Analysis may be less reliable.`),(!a.priceData||!a.priceData.prices||a.priceData.prices.length===0)&&c.push(\"Missing price data for target company. Performance analysis will be limited.\"),(!a.marketCap||a.marketCap===0)&&c.push(\"Missing or invalid market capitalization data.\");const m=e.filter(o=>!o.statements||o.statements.length===0);m.length>e.length*.5&&c.push(`${m.length} of ${e.length} benchmark companies missing financial statements.`);const M=e.filter(o=>!o.priceData||!o.priceData.prices||o.priceData.prices.length===0);M.length>e.length*.3&&c.push(`${M.length} of ${e.length} benchmark companies missing price data.`),e.filter(o=>o.sector!==a.sector).length>e.length*.7&&c.push(\"Many benchmark companies are from different sectors. Consider refining peer selection criteria.\");try{const o=await Z(a);let f;if(i){const C=ze(a,e,u,p,_);C.length<p&&c.push(\"Limited peer data may reduce analysis accuracy\"),f=await Ke(o,C)}let d=[];if(s){const C=e.filter(U=>U.sector===a.sector),N=e.filter(U=>U.industry===a.industry);C.length===0&&c.push(\"No sector data available for benchmarking\"),d=[await Se(o,C,N)]}const q=f?f.percentileRankings:he(o,[]),ee=f?f.relativeMetrics:ke(o,[]),y=Xe(o,f,d.length>0?d[0]:void 0),Q={targetSecurity:o,peerComparison:f||{peers:[],percentileRankings:{valuation:{},profitability:{},growth:{},efficiency:{},leverage:{},performance:{},risk:{},revenueGrowthPercentile:50,profitabilityPercentile:50,valuationPercentile:50,liquidityPercentile:50},relativeMetrics:{betterThanPeers:50,medianDeviation:{},topQuartileMetrics:[],bottomQuartileMetrics:[],relativeValuation:1,relativeGrowth:1,relativeProfitability:1,relativeRisk:1,relativeEfficiency:1,relativeLiquidity:1},peerSummary:{totalPeers:0,overallRank:1,percentileRank:50,strengthVsPeers:[],weaknessVsPeers:[],averageROE:0,averageROA:0,averagePERatio:0}},sectorBenchmark:d,relativeSummary:y,percentileRankings:q,relativeMetrics:ee},j=performance.now()-t;let D=\"high\",g=100;e.length<10&&(g-=20),e.length<5&&(g-=30),(!a.statements||a.statements.length===0)&&(g-=25),(!a.priceData||!a.priceData.prices||a.priceData.prices.length===0)&&(g-=20),(!a.marketCap||a.marketCap===0)&&(g-=15);const $=e.length>0?e.filter(C=>C.statements&&C.statements.length>0&&C.priceData&&C.priceData.prices&&C.priceData.prices.length>0).length/e.length:0;return $<.7&&(g-=20),$<.5&&(g-=15),(e.length>0?e.filter(C=>C.sector===a.sector).length/e.length:1)<.5&&(g-=15),g>=80?D=\"high\":g>=60?D=\"medium\":D=\"low\",y.comparisonScore<30&&c.push(\"Low comparison score indicates poor relative performance\"),f&&f.peerSummary.percentileRank<25&&c.push(\"Company ranks in bottom quartile vs peers\"),d&&Array.isArray(d)&&d.length>0&&(((h=d[0])==null?void 0:h.relativeScore)??50)<40&&c.push(\"Below-average performance vs sector benchmark\"),{data:Q,metadata:{calculationTime:Math.round(j),dataQuality:D,warnings:c.length>0?c:void 0,sources:[\"fundamental_analysis\",\"market_data\",\"peer_comparison\",\"benchmark_data\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(o){throw new Error(`Comparative analysis calculation failed: ${o instanceof Error?o.message:\"Unknown error\"}`)}}async function Fe(a){return Promise.all(a.map(e=>Z(e)))}async function Z(a){var i;const e=Ne(a.statements);let r=a.performanceMetrics;r||(r=Ye(a.priceData));let t=a.riskMetrics;return t||(t=He(a.priceData)),{symbol:a.symbol,name:a.name,marketCap:a.marketCap,sector:a.sector,industry:a.industry,fundamentalRatios:e,performanceMetrics:r,riskMetrics:t,similarityScore:0,price:Array.isArray(a.priceData)?((i=a.priceData[a.priceData.length-1])==null?void 0:i.close)??0:0,change:0,change_percent:0}}function ze(a,e,r,t,i){const{sectorMatch:s=!0,industryMatch:u=!1,marketCapRange:p={minRatio:.1,maxRatio:10},excludeSymbols:_=[],includeOnlySymbols:c}=r,m=Array.isArray(p)?{minRatio:p[0]??.1,maxRatio:p[1]??10}:p;let M=e.filter(h=>{if(h.symbol===a.symbol||_.includes(h.symbol)||c&&!c.includes(h.symbol)||s&&h.sector!==a.sector||u&&h.industry!==a.industry)return!1;const o=h.marketCap/a.marketCap;return!(o<m.minRatio||o>m.maxRatio)});M.length<t&&(M=e.filter(h=>!(h.symbol===a.symbol||_.includes(h.symbol)||c&&!c.includes(h.symbol)||s&&h.sector!==a.sector)));const b=M.map(h=>({data:h,similarityScore:_e(a,h)}));return b.sort((h,o)=>o.similarityScore-h.similarityScore),b.slice(0,i).map(h=>h.data)}function _e(a,e){let r=0;a.sector===e.sector&&(r+=40),a.industry===e.industry&&(r+=30);const t=Math.min(a.marketCap,e.marketCap)/Math.max(a.marketCap,e.marketCap);return r+=t*20,r+=10,Math.min(100,r)}async function Ke(a,e){const r=await Promise.all(e.map(u=>Z(u)));r.forEach(u=>{const p={symbol:a.symbol,name:a.name,sector:a.sector,industry:a.industry,marketCap:a.marketCap,priceData:{symbol:a.symbol,name:a.name}},_={symbol:u.symbol,name:u.name,sector:u.sector,industry:u.industry,marketCap:u.marketCap,priceData:{symbol:u.symbol,name:u.name}};u.similarityScore=_e(p,_)/100});const t=he(a,r),i=ke(a,r),s=We(a,r,t);return{peers:r,percentileRankings:t,relativeMetrics:i,peerSummary:s}}function he(a,e){const r=[a,...e],t=W(r,o=>o.fundamentalRatios.valuation,[\"pe\",\"pb\",\"ps\",\"ev_ebitda\",\"peg\"]),i=W(r,o=>o.fundamentalRatios.profitability,[\"gross_margin\",\"operating_margin\",\"net_margin\",\"roe\",\"roa\",\"roic\"]),s=W(r,o=>o.fundamentalRatios.growth,[\"revenue_growth_1y\",\"revenue_growth_3y\",\"earnings_growth_1y\",\"earnings_growth_3y\"]),u=W(r,o=>o.fundamentalRatios.efficiency,[\"asset_turnover\",\"inventory_turnover\",\"receivables_turnover\"]),p=W(r,o=>o.fundamentalRatios.leverage,[\"debt_to_equity\",\"debt_to_assets\",\"current_ratio\",\"quick_ratio\"]),_=W(r,o=>o.performanceMetrics,[\"sharpeRatio\",\"beta\",\"alpha\"]),c=W(r,o=>o.riskMetrics,[\"var_95\",\"var_99\",\"expectedShortfall\",\"beta\"]),m=s.revenue_growth_1y||50,M=i.roe||50,b=t.pe||50,h=p.current_ratio||50;return{valuation:t,profitability:i,growth:s,efficiency:u,leverage:p,performance:_,risk:c,revenueGrowthPercentile:m,profitabilityPercentile:M,valuationPercentile:b,liquidityPercentile:h}}function W(a,e,r){const t={};return r.forEach(i=>{const s=a.map(_=>e(_)[i]||0),u=s[0]??0,p=we(u,s);t[i]=p}),t}function we(a,e){const r=[...e].sort((i,s)=>i-s);return r.indexOf(a)/(r.length-1)*100}function ke(a,e){const r=ge([a,...e]),t=ge([a])[0];if(!t)return{betterThanPeers:0,medianDeviation:{},topQuartileMetrics:[],bottomQuartileMetrics:[],relativeValuation:0,relativeGrowth:0,relativeProfitability:0,relativeRisk:0,relativeEfficiency:0,relativeLiquidity:0};let i=0;const s={},u=[],p=[];Object.keys(t).forEach(v=>{const P=r.map(x=>x[v]).filter(x=>x!==void 0),ie=fe(P),Y=t[v];if(Y===void 0)return;s[v]=ie!==0?(Y-ie)/ie*100:0;const se=we(Y,P);se>=75&&u.push(v),se<=25&&p.push(v);const F=P.filter(x=>x!==void 0&&Y>x).length-1;i+=F});const _=Object.keys(t).length*e.length,c=_>0?i/_*100:0,m=e.map(v=>v.fundamentalRatios.valuation.pe).filter(v=>v>0),M=a.fundamentalRatios.valuation.pe,b=m.length>0?M/(m.reduce((v,P)=>v+P,0)/m.length):1,h=e.map(v=>v.fundamentalRatios.growth.revenue_growth_1y),o=a.fundamentalRatios.growth.revenue_growth_1y,f=h.length>0?h.reduce((v,P)=>v+P,0)/h.length:0,d=f!==0?o/f:1,q=e.map(v=>v.fundamentalRatios.profitability.roe),ee=a.fundamentalRatios.profitability.roe,y=q.length>0?q.reduce((v,P)=>v+P,0)/q.length:0,te=y!==0?ee/y:1,Q=e.map(v=>v.riskMetrics.volatility),j=a.riskMetrics.volatility,D=Q.length>0?Q.reduce((v,P)=>v+P,0)/Q.length:0,g=D!==0?j/D:1,$=e.map(v=>v.fundamentalRatios.efficiency.asset_turnover),ae=a.fundamentalRatios.efficiency.asset_turnover,C=$.length>0?$.reduce((v,P)=>v+P,0)/$.length:0,N=C!==0?ae/C:1,k=e.map(v=>v.fundamentalRatios.leverage.current_ratio),U=a.fundamentalRatios.leverage.current_ratio,re=k.length>0?k.reduce((v,P)=>v+P,0)/k.length:0,ne=re!==0?U/re:1;return{betterThanPeers:c,medianDeviation:s,topQuartileMetrics:u,bottomQuartileMetrics:p,relativeValuation:b,relativeGrowth:d,relativeProfitability:te,relativeRisk:g,relativeEfficiency:N,relativeLiquidity:ne}}function ge(a){return a.map(e=>({pe:e.fundamentalRatios.valuation.pe,pb:e.fundamentalRatios.valuation.pb,ps:e.fundamentalRatios.valuation.ps,ev_ebitda:e.fundamentalRatios.valuation.ev_ebitda,peg:e.fundamentalRatios.valuation.peg,gross_margin:e.fundamentalRatios.profitability.gross_margin,operating_margin:e.fundamentalRatios.profitability.operating_margin,net_margin:e.fundamentalRatios.profitability.net_margin,roe:e.fundamentalRatios.profitability.roe,roa:e.fundamentalRatios.profitability.roa,roic:e.fundamentalRatios.profitability.roic,revenue_growth_1y:e.fundamentalRatios.growth.revenue_growth_1y,revenue_growth_3y:e.fundamentalRatios.growth.revenue_growth_3y,earnings_growth_1y:e.fundamentalRatios.growth.earnings_growth_1y,earnings_growth_3y:e.fundamentalRatios.growth.earnings_growth_3y,asset_turnover:e.fundamentalRatios.efficiency.asset_turnover,inventory_turnover:e.fundamentalRatios.efficiency.inventory_turnover,receivables_turnover:e.fundamentalRatios.efficiency.receivables_turnover,debt_to_equity:e.fundamentalRatios.leverage.debt_to_equity,debt_to_assets:e.fundamentalRatios.leverage.debt_to_assets,current_ratio:e.fundamentalRatios.leverage.current_ratio,quick_ratio:e.fundamentalRatios.leverage.quick_ratio,sharpe_ratio:e.performanceMetrics.sharpeRatio,beta:e.performanceMetrics.beta,alpha:e.performanceMetrics.alpha,max_drawdown:e.performanceMetrics.maxDrawdown,var_95:e.riskMetrics.var_95,var_99:e.riskMetrics.var_99,expected_shortfall:e.riskMetrics.expectedShortfall}))}function fe(a){const e=a.filter(i=>i!==void 0);if(e.length===0)return 0;const r=[...e].sort((i,s)=>i-s),t=Math.floor(r.length/2);return r.length%2===0?(r[t-1]+r[t])/2:r[t]}function We(a,e,r){const t=e.length,i=Object.values(r).flatMap(Object.values),s=i.reduce((b,h)=>b+h,0)/i.length,u=Math.round((100-s)/100*t)+1,p=e.length>0?e.reduce((b,h)=>{var o,f;return b+(((f=(o=h.fundamentalRatios)==null?void 0:o.profitability)==null?void 0:f.roe)||0)},0)/e.length:0,_=e.length>0?e.reduce((b,h)=>{var o,f;return b+(((f=(o=h.fundamentalRatios)==null?void 0:o.profitability)==null?void 0:f.roa)||0)},0)/e.length:0,c=e.length>0?e.reduce((b,h)=>{var o,f;return b+(((f=(o=h.fundamentalRatios)==null?void 0:o.valuation)==null?void 0:f.pe)||0)},0)/e.length:0,m=[],M=[];return Object.entries(r).forEach(([b,h])=>{Object.entries(h).forEach(([o,f])=>{const d=typeof f==\"number\"?f:0;d>=75?m.push(`${b}: ${o}`):d<=25&&M.push(`${b}: ${o}`)})}),{totalPeers:t,overallRank:Math.max(1,Math.min(t,u)),percentileRank:Math.max(0,Math.min(100,s)),strengthVsPeers:m.slice(0,5),weaknessVsPeers:M.slice(0,5),averageROE:p,averageROA:_,averagePERatio:c}}function Ne(a){const e=a[0];if(!e)return{valuation:{pe:15,pb:1.5,ps:2,ev_ebitda:10,peg:1.2,enterprise_value:1e9},profitability:{roe:.1,roa:.05,gross_margin:.3,net_margin:.1,operating_margin:.15,roic:.12},growth:{revenue_growth_1y:.1,revenue_growth_3y:.1,earnings_growth_1y:.1,earnings_growth_3y:.1,book_value_growth_1y:.1,dividend_growth_1y:.05},efficiency:{asset_turnover:1.2,inventory_turnover:6,receivables_turnover:8,working_capital_turnover:4},leverage:{debt_to_equity:.5,debt_to_assets:.3,current_ratio:1.5,quick_ratio:1.2,interest_coverage:5}};const{incomeStatement:r,balanceSheet:t}=e,i=r.sharesOutstanding*50,s=i/r.sharesOutstanding;return{valuation:{pe:r.eps>0?s/r.eps:15,pb:t.totalEquity>0?i/t.totalEquity:2.5,ps:r.revenue>0?i/r.revenue:3,ev_ebitda:r.ebitda>0?(i+t.totalDebt)/r.ebitda:12,peg:1.2,enterprise_value:i+t.totalDebt-t.cash},profitability:{gross_margin:r.revenue>0?r.grossProfit/r.revenue:0,operating_margin:r.revenue>0?r.operatingIncome/r.revenue:0,net_margin:r.revenue>0?r.netIncome/r.revenue:0,roe:t.totalEquity>0?r.netIncome/t.totalEquity:0,roa:t.totalAssets>0?r.netIncome/t.totalAssets:0,roic:t.totalEquity+t.totalDebt>0?r.operatingIncome/(t.totalEquity+t.totalDebt):0},growth:{revenue_growth_1y:.08,revenue_growth_3y:.07,earnings_growth_1y:.1,earnings_growth_3y:.09,book_value_growth_1y:.05,dividend_growth_1y:.03},efficiency:{asset_turnover:t.totalAssets>0?r.revenue/t.totalAssets:0,inventory_turnover:t.inventory&&t.inventory>0?r.revenue/t.inventory:5,receivables_turnover:t.accountsReceivable&&t.accountsReceivable>0?r.revenue/t.accountsReceivable:8,working_capital_turnover:t.currentAssets-t.currentLiabilities>0?r.revenue/(t.currentAssets-t.currentLiabilities):2},leverage:{debt_to_equity:t.totalEquity>0?t.totalDebt/t.totalEquity:0,debt_to_assets:t.totalAssets>0?t.totalDebt/t.totalAssets:0,current_ratio:t.currentLiabilities>0?t.currentAssets/t.currentLiabilities:2,quick_ratio:t.currentLiabilities>0?(t.currentAssets-(t.inventory||0))/t.currentLiabilities:1.5,interest_coverage:r.interestExpense&&r.interestExpense>0?r.ebitda/r.interestExpense:5}}}function Ye(a){return{returns:{oneMonth:0,threeMonth:0,sixMonth:0,oneYear:0,threeYear:0,fiveYear:0},volatility:{dailyVolatility:0,monthlyVolatility:0,annualizedVolatility:0,volatilityRank:0},sharpeRatio:0,maxDrawdown:0,beta:1,alpha:0}}function He(a){return{volatility:.15,beta:1,alpha:0,correlation:.8,trackingError:0,informationRatio:0,treynorRatio:0,jensenAlpha:0,var_95:0,var_99:0,expectedShortfall:0,correlationToMarket:0}}async function Se(a,e,r){const t=await Promise.all(e.map(c=>Z(c))),i=await Promise.all(r.map(c=>Z(c))),s={};t.length>0?(s.avgPE=t.reduce((c,m)=>c+m.fundamentalRatios.valuation.pe,0)/t.length,s.avgROE=t.reduce((c,m)=>c+m.fundamentalRatios.profitability.roe,0)/t.length,s.avgRevenueGrowth=t.reduce((c,m)=>c+m.fundamentalRatios.growth.revenue_growth_1y,0)/t.length,s.avgDebtToEquity=t.reduce((c,m)=>c+m.fundamentalRatios.leverage.debt_to_equity,0)/t.length,s.avgBeta=t.reduce((c,m)=>c+m.riskMetrics.beta,0)/t.length):(s.avgPE=15,s.avgROE=.15,s.avgRevenueGrowth=.05,s.avgDebtToEquity=.5,s.avgBeta=1);const u=t.length>0?he(a,t):{valuation:{pe:50},profitability:{roe:50},growth:{revenue_growth_1y:50},efficiency:{asset_turnover:50},leverage:{debt_to_equity:50,current_ratio:50},performance:{sharpeRatio:50},risk:{var_95:50},revenueGrowthPercentile:50,profitabilityPercentile:50,valuationPercentile:50,liquidityPercentile:50},p=[u.revenueGrowthPercentile,u.profitabilityPercentile,u.valuationPercentile,u.liquidityPercentile],_=p.reduce((c,m)=>c+m,0)/p.length;return{sectorName:a.sector,industryName:a.industry,companyCount:e.length,averageMetrics:s,percentileRankings:u,sectorMetrics:{avgPE:s.avgPE,avgROE:s.avgROE,avgRevenueGrowth:s.avgRevenueGrowth,avgDebtToEquity:s.avgDebtToEquity,avgBeta:s.avgBeta,medianMarketCap:e.length>0?fe(e.map(c=>c.marketCap)):1e9,sectorVolatility:.2},industryMetrics:{avgPE:i.length>0?i.reduce((c,m)=>c+m.fundamentalRatios.valuation.pe,0)/i.length:14,avgROE:i.length>0?i.reduce((c,m)=>c+m.fundamentalRatios.profitability.roe,0)/i.length:.16,avgRevenueGrowth:i.length>0?i.reduce((c,m)=>c+m.fundamentalRatios.growth.revenue_growth_1y,0)/i.length:.06,avgDebtToEquity:i.length>0?i.reduce((c,m)=>c+m.fundamentalRatios.leverage.debt_to_equity,0)/i.length:.45,avgBeta:i.length>0?i.reduce((c,m)=>c+m.riskMetrics.beta,0)/i.length:.95,medianMarketCap:r.length>0?fe(r.map(c=>c.marketCap)):12e8,industryVolatility:.18},relativeScore:Math.round(_),benchmarkOutperformance:{vsSector:{performance:_-50,metrics:{}},vsIndustry:{performance:_-50,metrics:{}}}}}function Xe(a,e,r){const t=[],i=[];let s=50;e&&(t.push(...e.peerSummary.strengthVsPeers.slice(0,3)),i.push(...e.peerSummary.weaknessVsPeers.slice(0,3)),s=e.peerSummary.percentileRank);let u;s>=60?u=\"outperforming\":s>=40?u=\"in_line\":u=\"underperforming\";const p=Je(a,t,i,s),_=t.map(m=>`Strong performance in ${m.replace(\":\",\" -\")} compared to peer group`),c=i.map(m=>`Below-average performance in ${m.replace(\":\",\" -\")} versus peers`);return{overallRank:(e==null?void 0:e.peerSummary.percentileRank)||50,strengthAreas:t.slice(0,5),weaknessAreas:i.slice(0,5),investmentThesis:p,comparisonScore:Math.round(s),overallAssessment:u,keyStrengths:_,keyWeaknesses:c}}function Je(a,e,r,t){const i=a.name||a.symbol;return t>=75?`${i} demonstrates strong competitive positioning with particular strengths in ${e.slice(0,2).join(\" and \")}. The company outperforms most peers and shows solid fundamentals suitable for growth-oriented investors.`:t>=50?`${i} shows average performance relative to peers with mixed fundamentals. Strengths in ${e[0]??\"certain areas\"} are offset by concerns in ${r[0]??\"other metrics\"}. Suitable for balanced portfolios.`:t>=25?`${i} underperforms peer averages with notable weaknesses in ${r.slice(0,2).join(\" and \")}. The investment requires careful consideration of turnaround potential and risk tolerance.`:`${i} significantly underperforms peers across multiple metrics. High risk investment that may be suitable only for contrarian strategies or deep value investors willing to accept substantial risk.`}async function Ze(a,e,r={}){const t=performance.now();try{const s=await Z(a),u=await Se(s,e,[]),p=performance.now()-t;return{data:[u],metadata:{calculationTime:Math.round(p),dataQuality:\"high\",sources:[\"sector_data\",\"financial_statements\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch(i){const s=performance.now()-t;return{data:[],metadata:{calculationTime:Math.round(s),dataQuality:\"low\",sources:[\"sector_data\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"error\",errors:[{code:\"SECTOR_ANALYSIS_ERROR\",message:i instanceof Error?i.message:\"Unknown sector analysis error\"}]}}}async function et(a,e={}){const r=performance.now();try{const t=await Fe(a),i=t.reduce((o,f)=>o+(f.marketCap||0),0),s=t.map(o=>(o.marketCap||0)/i),u=t.reduce((o,f,d)=>{var q;return o+(((q=f.riskMetrics)==null?void 0:q.beta)||1)*(s[d]??0)},0),p={};t.forEach((o,f)=>{const d=o.sector??\"Other\";p[d]=(p[d]||0)+(s[f]??0)});const _={totalValue:i,totalReturn:.08,annualizedReturn:.08,volatility:Math.sqrt(t.reduce((o,f,d)=>{var q;return o+Math.pow((s[d]??0)*(((q=f.riskMetrics)==null?void 0:q.volatility)||.15),2)},0)),sharpeRatio:.8,beta:u,maxDrawdown:.12,var_95:i*.05},c={concentrationRisk:Math.max(...s)*100,sectorDiversification:p,correlationMatrix:[],effectiveStocks:1/t.reduce((o,f,d)=>o+Math.pow(s[d]??0,2),0)},m={marginalVar:t.reduce((o,f,d)=>({...o,[f.symbol]:(s[d]??0)*.05}),{}),componentVar:t.reduce((o,f,d)=>({...o,[f.symbol]:(s[d]??0)*.03}),{}),riskContribution:t.reduce((o,f,d)=>({...o,[f.symbol]:(s[d]??0)*100}),{})},M={currentWeights:t.reduce((o,f,d)=>({...o,[f.symbol]:s[d]}),{}),optimizedWeights:t.reduce((o,f,d)=>({...o,[f.symbol]:s[d]}),{}),expectedReturn:.08,expectedVolatility:_.volatility,expectedSharpe:_.sharpeRatio,optimizationObjective:\"max_sharpe\"},b={portfolioMetrics:_,diversificationAnalysis:c,riskContribution:m,optimization:M},h=performance.now()-r;return{data:b,metadata:{calculationTime:Math.round(h),dataQuality:\"high\",sources:[\"portfolio_data\",\"financial_statements\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}catch{const t={portfolioMetrics:{totalValue:0,totalReturn:0,annualizedReturn:0,volatility:0,sharpeRatio:0,beta:1,maxDrawdown:0,var_95:0},diversificationAnalysis:{concentrationRisk:0,sectorDiversification:{},correlationMatrix:[],effectiveStocks:0},riskContribution:{marginalVar:{},componentVar:{},riskContribution:{}},optimization:{currentWeights:{},optimizedWeights:{},expectedReturn:0,expectedVolatility:0,expectedSharpe:0,optimizationObjective:\"max_sharpe\"}},i=performance.now()-r;return{data:t,metadata:{calculationTime:Math.round(i),dataQuality:\"low\",sources:[\"portfolio_data\"],lastUpdated:new Date().toISOString(),cacheStatus:\"miss\"},status:\"success\"}}}function st(a={}){const{symbol:e,enableAutoRefresh:r=!0,refreshInterval:t=300*1e3,includePeerAnalysis:i=!0,includeSectorBenchmark:s=!0,includePortfolioAnalysis:u=!1,peerSelectionCriteria:p={},portfolioAssets:_=[]}=a,c=be(),[m,M]=S.useState(p),[b,h]=S.useState(_),[o,f]=S.useState(null),d=S.useMemo(()=>({comparative:[\"comparative-analysis\",e,m],sector:[\"sector-analysis\",e],portfolio:[\"portfolio-analysis\",b]}),[e,m,b]),q=S.useCallback(async n=>{try{const l=await K.securities.getDetails(n),w={symbols:[n],start_date:new Date(Date.now()-365*24*60*60*1e3).toISOString().split(\"T\")[0]??\"\",end_date:new Date().toISOString().split(\"T\")[0]??\"\",interval:\"1d\"},E=await K.priceData.getHistorical(w),A=await Promise.allSettled([K.fundamentals.getIncomeStatement(n),K.fundamentals.getBalanceSheet(n),K.fundamentals.getCashFlow(n)]),L=[];if(A[0].status===\"fulfilled\"&&A[1].status===\"fulfilled\"&&A[2].status===\"fulfilled\"){const z=A[0].value[0]??{},T=A[1].value[0]??{},De=A[2].value[0]??{},$e={totalAssets:T.totalAssets??0,currentAssets:T.currentAssets??0,totalLiabilities:T.totalLiabilities??0,currentLiabilities:T.currentLiabilities??0,totalEquity:T.totalEquity??0,cash:T.cash??0,totalDebt:T.totalDebt??0,longTermDebt:T.longTermDebt??0,shortTermDebt:T.shortTermDebt??0,inventory:T.inventory??0,accountsReceivable:T.accountsReceivable??0,accountsPayable:T.accountsPayable??0,retainedEarnings:T.retainedEarnings??0};L.push({incomeStatement:z,balanceSheet:$e,cashFlowStatement:De,period:\"annual\",currency:\"USD\"})}return{symbol:l.symbol,name:l.name,sector:l.sector??\"Unknown\",industry:l.industry??\"Unknown\",marketCap:l.market_cap??0,statements:L,priceData:{symbol:l.symbol,name:l.name,prices:E.data}}}catch{return{symbol:n,name:`${n} Inc.`,sector:\"Unknown\",industry:\"Unknown\",marketCap:0,statements:[],priceData:{symbol:n,name:`${n} Inc.`,prices:[]}}}},[]),ee=S.useCallback(async n=>{try{const l={symbols:n,data_types:[\"price\",\"fundamentals\"],start_date:new Date(Date.now()-31536e6).toISOString().split(\"T\")[0]??\"\",end_date:new Date().toISOString().split(\"T\")[0]??\"\",quality_checks:[\"completeness\",\"accuracy\",\"consistency\",\"timeliness\"]};await K.analytics.assessDataQuality(l)}catch{}},[]),{data:y,isLoading:te,isRefetching:Q,error:j,refetch:D}=ue({queryKey:d.comparative,queryFn:async()=>{if(!e)throw new Error(\"Symbol is required for comparative analysis\");const n=await q(e),l=[\"MSFT\",\"GOOGL\",\"META\",\"NFLX\"],w=l.map(L=>q(L)),E=await Promise.all(w);return await ee([e,...l]),je(n,E,{includePeerAnalysis:i,includeSectorBenchmark:s,peerSelectionCriteria:m})},enabled:!!e&&i,staleTime:t,refetchInterval:r?t:!1,retry:(n,l)=>l.message.includes(\"required\")||l.message.includes(\"validation\")?!1:n<2}),{data:g,isLoading:$,isRefetching:ae,error:C,refetch:N}=ue({queryKey:d.sector,queryFn:async()=>{if(!e)throw new Error(\"Symbol is required for sector analysis\");const n=await q(e);let l=[];try{const L=(await K.securities.search({query:n.sector,limit:20,security_type:\"stock\"})).securities.filter(z=>z.symbol!==e).slice(0,10).map(z=>z.symbol).map(z=>q(z));l=await Promise.all(L)}catch{l=[]}const w={sectorName:n.sector,industryName:n.industry};return Ze(n,l,w)},enabled:!!e&&s,staleTime:t,refetchInterval:r?t:!1,retry:2}),{data:k,isLoading:U,isRefetching:re,error:ne,refetch:v}=ue({queryKey:d.portfolio,queryFn:async()=>{if(b.length===0)throw new Error(\"Portfolio assets are required for portfolio analysis\");const n=b.map(w=>({symbol:w,name:`${w} Inc.`,sector:\"Technology\",industry:\"Software\",marketCap:1e9,statements:[],priceData:{symbol:w,name:`${w} Inc.`,prices:[]}}));return et(n,{})},enabled:u&&b.length>0,staleTime:t,refetchInterval:r?t:!1,retry:2}),P=Ge({mutationFn:async n=>{try{n.peerCriteria&&M(n.peerCriteria),n.portfolioAssets&&h(n.portfolioAssets);const l=[];n.peerCriteria&&l.push(c.invalidateQueries({queryKey:d.comparative})),n.portfolioAssets&&l.push(c.invalidateQueries({queryKey:d.portfolio})),l.length>0&&await Promise.allSettled(l)}catch(l){throw f(l),l}},onSuccess:()=>{f(null)},onError:n=>{f(n)}}),ie=S.useMemo(()=>{if(!i&&!s&&!u)return!1;let n=!1,l=!1;return e&&i&&(n=n||te,l=!0),e&&s&&(n=n||$,l=!0),u&&b.length>0&&(n=n||U,l=!0),l?n:!1},[e,i,s,u,b.length,te,$,U]),Y=S.useMemo(()=>{if(!i&&!s&&!u)return!1;let n=!1,l=!1;return e&&i&&(n=n||Q,l=!0),e&&s&&(n=n||ae,l=!0),u&&b.length>0&&(n=n||re,l=!0),l?n:!1},[e,i,s,u,b.length,Q,ae,re]),se=S.useMemo(()=>o||(e&&i&&j?j:e&&s&&C?C:u&&b.length>0&&ne?ne:null),[o,e,i,s,u,b.length,j,C,ne]),F=S.useMemo(()=>{const n=[y,g,k].filter(Boolean);return n.length===0?null:n.map(E=>{var A;return((A=E==null?void 0:E.metadata)==null?void 0:A.dataQuality)??\"low\"}).reduce((E,A)=>{const L={high:3,medium:2,low:1};return L[A]<L[E]?A:E})},[y,g,k]),x=S.useMemo(()=>{var l,w,E;const n=[];return(l=y==null?void 0:y.metadata)!=null&&l.warnings&&n.push(...y.metadata.warnings),(w=g==null?void 0:g.metadata)!=null&&w.warnings&&n.push(...g.metadata.warnings),(E=k==null?void 0:k.metadata)!=null&&E.warnings&&n.push(...k.metadata.warnings),[...new Set(n)]},[y,g,k]),Re=S.useCallback(async()=>{const n=[];i&&n.push(D()),s&&n.push(N()),u&&n.push(v()),await Promise.allSettled(n)},[i,s,u,D,N,v]),Me=S.useCallback(n=>{P.mutate({peerCriteria:n})},[P]),Pe=S.useCallback(n=>{P.mutate({portfolioAssets:n})},[P]),Ce=S.useCallback(()=>{try{f(null)}catch(n){console.warn(\"Failed to clear error state:\",n)}},[]),Ee=S.useCallback(()=>{var n,l;return((l=(n=y==null?void 0:y.data)==null?void 0:n.relativeSummary)==null?void 0:l.comparisonScore)??0},[y]),qe=S.useCallback(()=>{var n,l,w;return((w=(l=(n=y==null?void 0:y.data)==null?void 0:n.peerComparison)==null?void 0:l.peerSummary)==null?void 0:w.overallRank)??0},[y]),Ae=S.useCallback(()=>{if(!(g!=null&&g.data))return 0;const n=g.data.find(l=>l.sectorName===e);return(n==null?void 0:n.relativeScore)??0},[g,e]),Oe=S.useCallback(()=>{var n;return((n=k==null?void 0:k.data)==null?void 0:n.portfolioMetrics)??null},[k]),le=S.useCallback(()=>{var n;return{...e&&{symbol:e},timestamp:new Date().toISOString(),comparative:(y==null?void 0:y.data)??null,sector:(g==null?void 0:g.data)??null,portfolio:(k==null?void 0:k.data)??null,metadata:{dataQuality:F,warnings:x,lastUpdated:((n=y==null?void 0:y.metadata)==null?void 0:n.lastUpdated)??new Date().toISOString()}}},[e,y,g,k,F,x]),xe=S.useCallback(()=>{const n=le();let l=`Comparative Analysis Report for ${e}",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "development/scripts/validate-phase7c-optimization.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/scripts/validate-phase7c-optimization.js",
      "console_count": 31,
      "console_lines": [
        {
          "line_number": 48,
          "content": "console.log('\ud83d\udd0d Analyzing Phase 7C Analytics bundle sizes...\\n');",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.error('\u274c Validation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 119,
          "content": "console.log(`${status} ${bundleType}: ${sizeKB.toFixed(2)}kB / ${target}kB ${reductionText}`);",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log(`\ud83d\udcca ${bundleType}: ${sizeKB.toFixed(2)}kB (no target set)`);",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('\\n\ud83d\udcca PHASE 7C ANALYTICS OPTIMIZATION VALIDATION REPORT');",
          "type": "log"
        },
        {
          "line_number": 208,
          "content": "console.log('\u2550'.repeat(65));",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log(`\\n\u26a1 ESSENTIAL TIER PERFORMANCE:`);",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log(`   Bundles: ${performance.essential.count}`);",
          "type": "log"
        },
        {
          "line_number": 213,
          "content": "console.log(`   Total Size: ${performance.essential.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log(`   Average Size: ${performance.essential.averageSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log(`   Target: <10kB total \u2705 ${performance.essential.totalSize <= 10 ? 'ACHIEVED' : 'MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`\\n\ud83d\ude80 PROGRESSIVE TIER PERFORMANCE:`);",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log(`   Bundles: ${performance.progressive.count}`);",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log(`   Total Size: ${performance.progressive.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log(`   Average Size: ${performance.progressive.averageSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.log(`   Target: <200kB total \u2705 ${performance.progressive.totalSize <= 200 ? 'ACHIEVED' : 'MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log(`\\n\ud83c\udfaf ADVANCED TIER PERFORMANCE:`);",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.log(`   Bundles: ${performance.advanced.count}`);",
          "type": "log"
        },
        {
          "line_number": 227,
          "content": "console.log(`   Total Size: ${performance.advanced.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 228,
          "content": "console.log(`   Average Size: ${performance.advanced.averageSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 231,
          "content": "console.log(`\\n\ud83c\udfc6 OVERALL ACHIEVEMENT:`);",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.log(`   Total Analytics Bundles: ${performance.overall.totalBundles}`);",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log(`   Total Analytics Size: ${performance.overall.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 234,
          "content": "console.log(`   Target Achievement: ${performance.overall.targetAchievement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 240,
          "content": "console.log(`\\n${success ? '\u2705' : '\u274c'} PHASE 7C OPTIMIZATION: ${success ? 'SUCCESS' : 'NEEDS IMPROVEMENT'}`);",
          "type": "log"
        },
        {
          "line_number": 243,
          "content": "console.log('\\n\ud83d\ude80 Revolutionary 80-90% bundle reduction ACHIEVED!');",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('\ud83d\udcf1 Essential analytics loads in <50ms on 3G networks');",
          "type": "log"
        },
        {
          "line_number": 245,
          "content": "console.log('\u26a1 Progressive enhancement provides optimal user experience');",
          "type": "log"
        },
        {
          "line_number": 247,
          "content": "console.log('\\n\u26a0\ufe0f  Some targets not met. Review bundle sizes and optimization.');",
          "type": "log"
        },
        {
          "line_number": 250,
          "content": "console.log('\\n' + '\u2550'.repeat(65));",
          "type": "log"
        },
        {
          "line_number": 256,
          "content": "validation.analyzeBundleSizes().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "development/reports/phase7c-bundle-analysis-validation-report.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-bundle-analysis-validation-report.js",
      "console_count": 84,
      "console_lines": [
        {
          "line_number": 97,
          "content": "console.log('\ud83d\ude80 Phase 7C Analytics Dashboard Bundle Analysis & Validation');",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log('\u2550'.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 99,
          "content": "console.log(`\ud83d\udccd Project Root: ${this.projectRoot}`);",
          "type": "log"
        },
        {
          "line_number": 100,
          "content": "console.log(`\ud83d\udcc1 Distribution: ${this.distPath}`);",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log('\ud83d\udcca Loading bundle baseline for comparison...');",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.log(`\u2705 Loaded Phase 5 baseline: ${this.bundleBaseline.phase5Summary.totalCurrentSize}kB total`);",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log('\u26a0\ufe0f  No baseline found, creating new baseline comparison');",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log(`\u26a0\ufe0f  Error loading baseline: ${error.message}`);",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('\ud83d\udd0d Analyzing Phase 7C bundle structure and sizes...');",
          "type": "log"
        },
        {
          "line_number": 137,
          "content": "console.log(`\u2705 Analyzed ${this.results.bundles.length} bundle files`);",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log(`${status} ${bundle.type}: ${sizeKB.toFixed(2)}kB${targetText}`);",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.log('\ud83d\udcc2 Categorizing bundles by Progressive Enhancement Tiers...');",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log(`${status} ${tierName.toUpperCase()} tier: ${tier.totalSize.toFixed(2)}kB / ${tier.targetSize}kB (${tier.bundles.length} bundles)`);",
          "type": "log"
        },
        {
          "line_number": 239,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('\ud83c\udf10 Simulating cross-network performance...');",
          "type": "log"
        },
        {
          "line_number": 267,
          "content": "console.log(`${essentialStatus} ${networkType} Essential: ${Math.round(essentialLoadTime)}ms (target: ${config.ttl_target}ms)`);",
          "type": "log"
        },
        {
          "line_number": 268,
          "content": "console.log(`${standardStatus} ${networkType} Standard: ${Math.round(standardLoadTime)}ms (target: ${config.ttl_target * 2}ms)`);",
          "type": "log"
        },
        {
          "line_number": 270,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.log('\ud83d\udd04 Validating Progressive Enhancement System...');",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.log(`${enhancementStatus} Essential\u2192Standard Enhancement: +${standard.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 306,
          "content": "console.log(`${advancedStatus} Standard\u2192Advanced Enhancement: +${advanced.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 307,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 312,
          "content": "console.log('\ud83c\udf33 Analyzing Tree-Shaking and Dead Code Elimination...');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.log(`${status} Tree-shaking effectiveness: ${effectiveness.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 333,
          "content": "console.log(`\ud83d\udcca Empty bundles (tree-shaken): ${emptyBundles.length}`);",
          "type": "log"
        },
        {
          "line_number": 334,
          "content": "console.log(`\ud83d\udce6 Small bundles (<2kB): ${smallBundles.length}`);",
          "type": "log"
        },
        {
          "line_number": 335,
          "content": "console.log(`\ud83d\udcc8 Average bundle size: ${treeShakingMetrics.averageBundleSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 336,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 341,
          "content": "console.log('\ud83d\udcca Calculating Overall Validation Results...');",
          "type": "log"
        },
        {
          "line_number": 377,
          "content": "console.log(`\ud83d\udcc8 Target Achievement: ${criteriaResults.targetAchievement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 378,
          "content": "console.log(`\ud83d\udcc9 Bundle Reduction: ${criteriaResults.bundleReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 379,
          "content": "console.log(`\u26a1 Essential Tier: ${criteriaResults.essentialUnder5KB ? '\u2705' : '\u274c'} <5kB`);",
          "type": "log"
        },
        {
          "line_number": 380,
          "content": "console.log(`\ud83d\ude80 Standard Tier: ${criteriaResults.standardUnder25KB ? '\u2705' : '\u274c'} <25kB`);",
          "type": "log"
        },
        {
          "line_number": 381,
          "content": "console.log(`\ud83c\udfaf Advanced Tier: ${criteriaResults.advancedUnder35KB ? '\u2705' : '\u274c'} <35kB`);",
          "type": "log"
        },
        {
          "line_number": 382,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 430,
          "content": "console.log('\\n\ud83c\udfc6 PHASE 7C ANALYTICS BUNDLE OPTIMIZATION VALIDATION REPORT');",
          "type": "log"
        },
        {
          "line_number": 431,
          "content": "console.log('\u2550'.repeat(90));",
          "type": "log"
        },
        {
          "line_number": 435,
          "content": "console.log(`\\n\ud83d\udccb EXECUTIVE SUMMARY: ${overallStatus}`);",
          "type": "log"
        },
        {
          "line_number": 436,
          "content": "console.log(`\ud83d\udcc5 Analysis Date: ${this.results.timestamp}`);",
          "type": "log"
        },
        {
          "line_number": 437,
          "content": "console.log(`\ud83d\udcca Total Analytics Bundles: ${this.results.bundles.length}`);",
          "type": "log"
        },
        {
          "line_number": 438,
          "content": "console.log(`\ud83c\udfaf Target Achievement: ${this.results.validation.targetAchievement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 439,
          "content": "console.log(`\ud83d\udcc9 Bundle Size Reduction: ${this.results.validation.bundleReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 442,
          "content": "console.log('\\n\ud83c\udfd7\ufe0f  PROGRESSIVE ENHANCEMENT TIER ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 443,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 450,
          "content": "console.log(`${status} ${tierName.toUpperCase()} TIER:`);",
          "type": "log"
        },
        {
          "line_number": 451,
          "content": "console.log(`   Bundles: ${tier.bundles.length}`);",
          "type": "log"
        },
        {
          "line_number": 452,
          "content": "console.log(`   Total Size: ${tier.totalSize.toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 453,
          "content": "console.log(`   Target: ${tier.targetSize}kB`);",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.log(`   Achievement: ${percentage}%`);",
          "type": "log"
        },
        {
          "line_number": 455,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 460,
          "content": "console.log('\ud83c\udf10 NETWORK PERFORMANCE VALIDATION');",
          "type": "log"
        },
        {
          "line_number": 461,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 467,
          "content": "console.log(`${networkType.toUpperCase()} NETWORK:`);",
          "type": "log"
        },
        {
          "line_number": 468,
          "content": "console.log(`   ${essentialStatus} Essential TTI: ${Math.round(perf.essentialTTL)}ms (target: ${perf.targetTTL}ms)`);",
          "type": "log"
        },
        {
          "line_number": 469,
          "content": "console.log(`   ${standardStatus} Standard TTI: ${Math.round(perf.standardTTL)}ms (target: ${perf.targetTTL * 2}ms)`);",
          "type": "log"
        },
        {
          "line_number": 470,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 474,
          "content": "console.log('\ud83d\udce6 DETAILED BUNDLE ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 475,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 485,
          "content": "console.log(`${tier.toUpperCase()} TIER BUNDLES:`);",
          "type": "log"
        },
        {
          "line_number": 489,
          "content": "console.log(`   ${status} ${bundle.name}: ${bundle.size.toFixed(2)}kB${targetText}`);",
          "type": "log"
        },
        {
          "line_number": 491,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 496,
          "content": "console.log('\ud83c\udfaf OPTIMIZATION RECOMMENDATIONS');",
          "type": "log"
        },
        {
          "line_number": 497,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 501,
          "content": "console.log(`${priority} ${rec.priority} - ${rec.category}:`);",
          "type": "log"
        },
        {
          "line_number": 502,
          "content": "console.log(`   Issue: ${rec.issue}`);",
          "type": "log"
        },
        {
          "line_number": 503,
          "content": "console.log(`   Action: ${rec.action}`);",
          "type": "log"
        },
        {
          "line_number": 504,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 509,
          "content": "console.log('\ud83c\udf8a PHASE 7C OPTIMIZATION ACHIEVEMENT');",
          "type": "log"
        },
        {
          "line_number": 510,
          "content": "console.log('\u2550'.repeat(90));",
          "type": "log"
        },
        {
          "line_number": 513,
          "content": "console.log('\ud83d\ude80 REVOLUTIONARY 80-90% BUNDLE REDUCTION ACHIEVED!');",
          "type": "log"
        },
        {
          "line_number": 514,
          "content": "console.log('\ud83d\udcf1 Essential analytics loads in <50ms on 3G networks');",
          "type": "log"
        },
        {
          "line_number": 515,
          "content": "console.log('\u26a1 Progressive enhancement provides optimal user experience');",
          "type": "log"
        },
        {
          "line_number": 516,
          "content": "console.log('\ud83c\udf1f Phase 7C Analytics Dashboard optimization: COMPLETE SUCCESS');",
          "type": "log"
        },
        {
          "line_number": 518,
          "content": "console.log('\u26a0\ufe0f  Phase 7C optimization targets partially achieved');",
          "type": "log"
        },
        {
          "line_number": 519,
          "content": "console.log('\ud83d\udd27 Review recommendations above for optimization opportunities');",
          "type": "log"
        },
        {
          "line_number": 520,
          "content": "console.log('\ud83d\udcc8 Continue optimization efforts to achieve 80-90% reduction target');",
          "type": "log"
        },
        {
          "line_number": 523,
          "content": "console.log('\\n' + '\u2550'.repeat(90));",
          "type": "log"
        },
        {
          "line_number": 534,
          "content": "console.log(`\ud83d\udcbe Detailed analysis saved to: ${reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 536,
          "content": "console.error(`\u274c Failed to save analysis: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 556,
          "content": "console.error(`\\n\u274c VALIDATION FAILED: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 564,
          "content": "validator.runValidation().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "development/reports/phase7c-comprehensive-bundle-optimization-comparison-report.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-comprehensive-bundle-optimization-comparison-report.js",
      "console_count": 92,
      "console_lines": [
        {
          "line_number": 39,
          "content": "console.log('\ud83c\udfc6 PHASE 7C COMPREHENSIVE BUNDLE OPTIMIZATION COMPARISON REPORT');",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.log('\u2550'.repeat(85));",
          "type": "log"
        },
        {
          "line_number": 41,
          "content": "console.log(`\ud83d\udccd Analysis Root: ${this.projectRoot}`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`\ud83d\udd50 Execution Time: ${this.reportData.executionTime}`);",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 48,
          "content": "console.log('\ud83d\udcca Loading Bundle Baseline Data...');",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`\u2705 Loaded Phase 5 baseline: ${(this.reportData.baseline.phase5Summary.totalCurrentSize / 1024).toFixed(1)}kB total`);",
          "type": "log"
        },
        {
          "line_number": 55,
          "content": "console.log('\u26a0\ufe0f  Phase 5 baseline not found - using fallback estimates');",
          "type": "log"
        },
        {
          "line_number": 65,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log('\ud83d\udcc8 Loading Phase 7C Implementation Data...');",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`\u2705 Loaded Phase 7C results: ${totalCurrent.toFixed(1)}kB total analytics bundles`);",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.log('\u274c Phase 7C validation results not found');",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log('\u2705 Loaded Phase 7C performance measurements');",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('\u26a0\ufe0f  Phase 7C performance measurements not found - using theoretical calculations');",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log('\ud83d\udd0d Generating Comprehensive Comparison Analysis...');",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.log(`\ud83d\udcca Bundle Size Reduction: ${reduction.toFixed(1)}kB (${reductionPercentage.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "console.log(`\ud83c\udfaf Target Achievement: ${this.reportData.comparison.targetAchievement.achieved ? '\u2705' : '\u26a0\ufe0f'} ${reductionPercentage.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 153,
          "content": "console.log('\u26a1 Analyzing Performance Improvements...');",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log('\ud83d\udcc8 Performance improvement analysis completed');",
          "type": "log"
        },
        {
          "line_number": 178,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log('\ud83c\udfc6 Evaluating Phase 7C Achievement Status...');",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.log(`\ud83c\udfaf Achievement Rate: ${achievedCount}/${totalCount} (${this.reportData.achievements.achievementRate.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log(`\ud83d\udcca Overall Success: ${this.reportData.achievements.overallSuccess ? '\u2705' : '\u26a0\ufe0f'}`);",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 242,
          "content": "console.log('\ud83c\udfaf Generating Optimization Recommendations...');",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log(`\ud83d\udcdd Generated ${this.reportData.recommendations.length} optimization recommendations`);",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 310,
          "content": "console.log('\ud83d\udccb Generating Final Conclusion...');",
          "type": "log"
        },
        {
          "line_number": 335,
          "content": "console.log(`\ud83c\udfaf Phase 7C Status: ${this.reportData.conclusion.phase7cStatus}`);",
          "type": "log"
        },
        {
          "line_number": 336,
          "content": "console.log(`\ud83d\udcca Final Grade: ${this.reportData.conclusion.finalGrade}`);",
          "type": "log"
        },
        {
          "line_number": 337,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 364,
          "content": "console.log('\\n\ud83c\udfc6 PHASE 7C COMPREHENSIVE OPTIMIZATION COMPARISON REPORT');",
          "type": "log"
        },
        {
          "line_number": 365,
          "content": "console.log('\u2550'.repeat(90));",
          "type": "log"
        },
        {
          "line_number": 372,
          "content": "console.log(`\\n\ud83d\udccb EXECUTIVE SUMMARY`);",
          "type": "log"
        },
        {
          "line_number": 373,
          "content": "console.log(`\ud83d\udd50 Report Date: ${this.reportData.executionTime}`);",
          "type": "log"
        },
        {
          "line_number": 374,
          "content": "console.log(`\ud83c\udfaf Phase 7C Status: ${conclusion.phase7cStatus}`);",
          "type": "log"
        },
        {
          "line_number": 375,
          "content": "console.log(`\ud83d\udcca Final Grade: ${conclusion.finalGrade}`);",
          "type": "log"
        },
        {
          "line_number": 376,
          "content": "console.log(`\u26a1 Revolutionary Achievement: ${conclusion.revolutionaryStatus ? '\u2705 YES' : '\u26a0\ufe0f  NOT YET'}`);",
          "type": "log"
        },
        {
          "line_number": 379,
          "content": "console.log(`\\n\ud83d\udce6 BUNDLE SIZE COMPARISON`);",
          "type": "log"
        },
        {
          "line_number": 380,
          "content": "console.log('\u2500'.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 381,
          "content": "console.log(`\ud83d\udcca Baseline (Phase 5): ${comp.bundleSizes.baseline.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 382,
          "content": "console.log(`\ud83d\udcc8 Current (Phase 7C): ${comp.bundleSizes.current.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 383,
          "content": "console.log(`\ud83d\udcc9 Reduction: ${comp.bundleSizes.reduction.toFixed(1)}kB (${comp.bundleSizes.reductionPercentage.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 386,
          "content": "console.log(`\ud83c\udfaf Target Achievement: ${reductionStatus} ${comp.bundleSizes.reductionPercentage.toFixed(1)}% (target: 80%)`);",
          "type": "log"
        },
        {
          "line_number": 389,
          "content": "console.log(`\\n\ud83c\udfd7\ufe0f  PROGRESSIVE ENHANCEMENT TIER VALIDATION`);",
          "type": "log"
        },
        {
          "line_number": 390,
          "content": "console.log('\u2500'.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 394,
          "content": "console.log(`${status} ${tierName.toUpperCase()} TIER: ${tier.current.toFixed(1)}kB / ${tier.target}kB`);",
          "type": "log"
        },
        {
          "line_number": 395,
          "content": "console.log(`   ${tier.description}`);",
          "type": "log"
        },
        {
          "line_number": 399,
          "content": "console.log(`\\n\ud83c\udfaf PRIMARY OBJECTIVE ACHIEVEMENT ANALYSIS`);",
          "type": "log"
        },
        {
          "line_number": 400,
          "content": "console.log('\u2500'.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 404,
          "content": "console.log(`${status} ${objective.objective}:`);",
          "type": "log"
        },
        {
          "line_number": 405,
          "content": "console.log(`   Target: ${objective.target}`);",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log(`   Actual: ${objective.actual}`);",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.log(`   Status: ${objective.status}`);",
          "type": "log"
        },
        {
          "line_number": 408,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 413,
          "content": "console.log(`\ud83c\udfc6 KEY ACHIEVEMENTS`);",
          "type": "log"
        },
        {
          "line_number": 414,
          "content": "console.log('\u2500'.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 416,
          "content": "console.log(`\u2705 ${achievement}`);",
          "type": "log"
        },
        {
          "line_number": 418,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 423,
          "content": "console.log(`\ud83c\udfaf OPTIMIZATION RECOMMENDATIONS`);",
          "type": "log"
        },
        {
          "line_number": 424,
          "content": "console.log('\u2500'.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 428,
          "content": "console.log(`${priority} ${rec.priority} - ${rec.category}:`);",
          "type": "log"
        },
        {
          "line_number": 429,
          "content": "console.log(`   Issue: ${rec.issue}`);",
          "type": "log"
        },
        {
          "line_number": 430,
          "content": "console.log(`   Action: ${rec.action}`);",
          "type": "log"
        },
        {
          "line_number": 431,
          "content": "console.log(`   Impact: ${rec.impact}`);",
          "type": "log"
        },
        {
          "line_number": 432,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 437,
          "content": "console.log(`\ud83d\ude80 NEXT STEPS FOR CONTINUED OPTIMIZATION`);",
          "type": "log"
        },
        {
          "line_number": 438,
          "content": "console.log('\u2500'.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 440,
          "content": "console.log(`${i + 1}. ${conclusion.nextSteps[i]}`);",
          "type": "log"
        },
        {
          "line_number": 444,
          "content": "console.log(`\\n\ud83c\udf8a PHASE 7C BUNDLE OPTIMIZATION FINAL ASSESSMENT`);",
          "type": "log"
        },
        {
          "line_number": 445,
          "content": "console.log('\u2550'.repeat(90));",
          "type": "log"
        },
        {
          "line_number": 448,
          "content": "console.log('\ud83d\ude80 REVOLUTIONARY 80-90% BUNDLE REDUCTION ACHIEVED!');",
          "type": "log"
        },
        {
          "line_number": 449,
          "content": "console.log('\ud83c\udf1f Phase 7C Analytics Dashboard optimization represents a breakthrough');",
          "type": "log"
        },
        {
          "line_number": 450,
          "content": "console.log('\ud83d\udcf1 Mobile performance targets exceeded across all network conditions');",
          "type": "log"
        },
        {
          "line_number": 451,
          "content": "console.log('\u26a1 Progressive enhancement system provides optimal user experience');",
          "type": "log"
        },
        {
          "line_number": 453,
          "content": "console.log('\u2705 Phase 7C optimization successful with room for improvement');",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.log('\ud83d\udcc8 Significant bundle size reductions achieved');",
          "type": "log"
        },
        {
          "line_number": 455,
          "content": "console.log('\ud83d\udd27 Continue optimization efforts to reach revolutionary targets');",
          "type": "log"
        },
        {
          "line_number": 456,
          "content": "console.log('\ud83c\udfaf Focus on remaining critical recommendations');",
          "type": "log"
        },
        {
          "line_number": 458,
          "content": "console.log('\u26a0\ufe0f  Phase 7C optimization partially successful');",
          "type": "log"
        },
        {
          "line_number": 459,
          "content": "console.log('\ud83d\udd27 Critical optimizations needed to meet targets');",
          "type": "log"
        },
        {
          "line_number": 460,
          "content": "console.log('\ud83d\udcca Review and implement high-priority recommendations');",
          "type": "log"
        },
        {
          "line_number": 461,
          "content": "console.log('\ud83d\ude80 Continue development toward revolutionary reduction goals');",
          "type": "log"
        },
        {
          "line_number": 464,
          "content": "console.log(`\\n\ud83d\udcca Overall Achievement: ${achievements.achievementRate.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 465,
          "content": "console.log(`\ud83c\udfc6 Final Grade: ${conclusion.finalGrade}`);",
          "type": "log"
        },
        {
          "line_number": 466,
          "content": "console.log('\u2550'.repeat(90));",
          "type": "log"
        },
        {
          "line_number": 475,
          "content": "console.log(`\\n\ud83d\udcbe Comprehensive comparison report saved to: ${reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 477,
          "content": "console.error(`\u274c Failed to save report: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 498,
          "content": "console.error(`\\n\u274c REPORT GENERATION FAILED: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 506,
          "content": "report.generateReport().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "development/reports/phase7c-gridcolumns-validation-test.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-gridcolumns-validation-test.js",
      "console_count": 38,
      "console_lines": [
        {
          "line_number": 17,
          "content": "console.log('\ud83e\uddea Test 1: GridProgressive Export Validation');",
          "type": "log"
        },
        {
          "line_number": 27,
          "content": "console.log(`   \u2705 GridProgressive properly exported: ${hasProgressiveExport}`);",
          "type": "log"
        },
        {
          "line_number": 28,
          "content": "console.log(`   \u2705 Temporary bypass removed: ${hasNoBypass}`);",
          "type": "log"
        },
        {
          "line_number": 31,
          "content": "console.log('   \ud83c\udf89 Test 1 PASSED: GridProgressive activation successful\\n');",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "console.log('   \u274c Test 1 FAILED: GridProgressive not properly activated\\n');",
          "type": "log"
        },
        {
          "line_number": 36,
          "content": "console.log(`   \u274c Test 1 ERROR: ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.log('\ud83e\uddea Test 2: Bundle Splitting Configuration');",
          "type": "log"
        },
        {
          "line_number": 50,
          "content": "console.log(`   \u2705 Grid optimization section added: ${hasGridOptimization}`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log(`   \u2705 Essential bundle splitting: ${hasEssentialSplit}`);",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log(`   \u2705 Progressive bundle splitting: ${hasProgressiveSplit}`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`   \u2705 Enhanced bundle splitting: ${hasEnhancedSplit}`);",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log('   \ud83c\udf89 Test 2 PASSED: Bundle splitting properly configured\\n');",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log('   \u274c Test 2 FAILED: Bundle splitting configuration incomplete\\n');",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log(`   \u274c Test 2 ERROR: ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log('\ud83e\uddea Test 3: Tree Shaking Import Optimization');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log(`   \u2705 Optimized tree shaking imports: ${hasOptimizedImports}`);",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log(`   \u2705 Old inefficient imports removed: ${!hasOldImports}`);",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log('   \ud83c\udf89 Test 3 PASSED: Tree shaking optimization successful\\n');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log('   \u274c Test 3 FAILED: Tree shaking imports not properly optimized\\n');",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.log(`   \u274c Test 3 ERROR: ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 87,
          "content": "console.log('\ud83e\uddea Test 4: Bundle Size Validation');",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log(`   \ud83d\udce6 Found grid bundles: ${gridBundles.length}`);",
          "type": "log"
        },
        {
          "line_number": 105,
          "content": "console.log(`      - ${bundle}: ${sizeKB} kB`);",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "console.log(`      - ${bundle}: Could not read size`);",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log(`   \ud83d\udcca Total GridColumns bundle size: ${totalSize.toFixed(2)} kB`);",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log('   \ud83c\udf89 Test 4 PASSED: EXCEPTIONAL bundle reduction achieved!\\n');",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "console.log('   \ud83c\udf89 Test 4 PASSED: Target bundle size achieved\\n');",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log('   \u274c Test 4 FAILED: Bundle size still too large\\n');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log(`   \u274c Test 4 ERROR: ${error.message}\\n`);",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log('\ud83d\udccb VALIDATION SUMMARY:');",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log('='.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log('GridColumns Bundle Optimization Phase 1 validation completed.');",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log('Check individual test results above for detailed status.');",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log('\\n\ud83d\ude80 Expected Results:');",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log('   \u2022 GridProgressive properly activated (bypass removed)');",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log('   \u2022 Bundle splitting configuration active');",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log('   \u2022 Tree shaking imports optimized');",
          "type": "log"
        },
        {
          "line_number": 135,
          "content": "console.log('   \u2022 Total bundle size reduced to <10kB (90%+ reduction)');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "development/reports/phase7c-performance-measurement-framework.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/development/reports/phase7c-performance-measurement-framework.js",
      "console_count": 59,
      "console_lines": [
        {
          "line_number": 113,
          "content": "console.log('\ud83d\ude80 Phase 7C Performance Measurement Framework');",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log('\u2550'.repeat(75));",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`\ud83d\udccd Project Root: ${this.projectRoot}`);",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log(`\ud83c\udf10 Testing ${Object.keys(NETWORK_PROFILES).length} Network Profiles`);",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log(`\ud83d\udcca Running ${TEST_SCENARIOS.length} Test Scenarios`);",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.log('\ud83c\udf10 Starting development server for performance testing...');",
          "type": "log"
        },
        {
          "line_number": 137,
          "content": "console.log('\u2705 Development server ready on http://localhost:4005');",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log(`\ud83d\udcca Testing: ${scenario.name} on ${networkProfile}`);",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log(`   ${status} TTI: ${performance.tti}ms (target: ${targetTTI}ms) - ${totalBundleSize.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 255,
          "content": "console.log('\ud83d\udcc8 Running Comprehensive Performance Analysis...');",
          "type": "log"
        },
        {
          "line_number": 258,
          "content": "console.log(`\\n\ud83c\udf10 Testing ${networkType} Network (${NETWORK_PROFILES[networkType].description})`);",
          "type": "log"
        },
        {
          "line_number": 270,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.log('\ud83d\udd04 Analyzing Progressive Enhancement Performance...');",
          "type": "log"
        },
        {
          "line_number": 327,
          "content": "console.log('\ud83d\udcca Progressive Enhancement Analysis:');",
          "type": "log"
        },
        {
          "line_number": 328,
          "content": "console.log(`   Essential\u2192Standard: +${essentialToStandardSize.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 329,
          "content": "console.log(`   Standard\u2192Advanced: +${standardToAdvancedSize.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 330,
          "content": "console.log(`   3G Transition Times: ${Math.round(progressiveAnalysis.tierTransitions.essentialToStandard.loadTime3G)}ms / ${Math.round(progressiveAnalysis.tierTransitions.standardToAdvanced.loadTime3G)}ms`);",
          "type": "log"
        },
        {
          "line_number": 331,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 336,
          "content": "console.log('\ud83d\udcca Generating Performance Summary & Recommendations...');",
          "type": "log"
        },
        {
          "line_number": 392,
          "content": "console.log('\u2705 Performance analysis complete');",
          "type": "log"
        },
        {
          "line_number": 393,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 398,
          "content": "console.log('\\n\ud83c\udfc6 PHASE 7C PERFORMANCE MEASUREMENT RESULTS');",
          "type": "log"
        },
        {
          "line_number": 399,
          "content": "console.log('\u2550'.repeat(75));",
          "type": "log"
        },
        {
          "line_number": 404,
          "content": "console.log(`\\n\ud83d\udccb EXECUTIVE SUMMARY: ${overallStatus}`);",
          "type": "log"
        },
        {
          "line_number": 405,
          "content": "console.log(`\ud83d\udd50 Test Execution: ${this.results.testRun.startTime}`);",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log(`\ud83d\udcbb Environment: ${this.results.testRun.environment.platform} ${this.results.testRun.environment.arch}`);",
          "type": "log"
        },
        {
          "line_number": 409,
          "content": "console.log('\\n\ud83c\udf10 NETWORK PERFORMANCE ACHIEVEMENTS');",
          "type": "log"
        },
        {
          "line_number": 410,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 414,
          "content": "console.log(`${status} ${network}: ${achievement.achievementRate.toFixed(1)}% (${achievement.achieved}/${achievement.total} scenarios)`);",
          "type": "log"
        },
        {
          "line_number": 415,
          "content": "console.log(`   Average TTI: ${Math.round(achievement.avgTTI)}ms`);",
          "type": "log"
        },
        {
          "line_number": 419,
          "content": "console.log('\\n\ud83d\udcca DETAILED SCENARIO PERFORMANCE');",
          "type": "log"
        },
        {
          "line_number": 420,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 423,
          "content": "console.log(`\\n${scenario.name}:`);",
          "type": "log"
        },
        {
          "line_number": 429,
          "content": "console.log(`   ${status} ${networkType}: ${result.performance.tti}ms (target: ${result.target}ms) ${deviation}`);",
          "type": "log"
        },
        {
          "line_number": 430,
          "content": "console.log(`      Bundle Size: ${result.totalSize.toFixed(1)}kB (gzip ~${result.gzipEstimate.toFixed(1)}kB)`);",
          "type": "log"
        },
        {
          "line_number": 436,
          "content": "console.log('\\n\ud83d\udd04 PROGRESSIVE ENHANCEMENT PERFORMANCE');",
          "type": "log"
        },
        {
          "line_number": 437,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 440,
          "content": "console.log(`Essential\u2192Standard Enhancement:`);",
          "type": "log"
        },
        {
          "line_number": 441,
          "content": "console.log(`   Additional Size: ${prog.tierTransitions.essentialToStandard.additionalSize.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 442,
          "content": "console.log(`   3G Load Time: ${Math.round(prog.tierTransitions.essentialToStandard.loadTime3G)}ms`);",
          "type": "log"
        },
        {
          "line_number": 443,
          "content": "console.log(`   4G Load Time: ${Math.round(prog.tierTransitions.essentialToStandard.loadTime4G)}ms`);",
          "type": "log"
        },
        {
          "line_number": 445,
          "content": "console.log(`Standard\u2192Advanced Enhancement:`);",
          "type": "log"
        },
        {
          "line_number": 446,
          "content": "console.log(`   Additional Size: ${prog.tierTransitions.standardToAdvanced.additionalSize.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 447,
          "content": "console.log(`   3G Load Time: ${Math.round(prog.tierTransitions.standardToAdvanced.loadTime3G)}ms`);",
          "type": "log"
        },
        {
          "line_number": 448,
          "content": "console.log(`   4G Load Time: ${Math.round(prog.tierTransitions.standardToAdvanced.loadTime4G)}ms`);",
          "type": "log"
        },
        {
          "line_number": 453,
          "content": "console.log('\\n\ud83c\udfaf OPTIMIZATION RECOMMENDATIONS');",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.log('\u2500'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 457,
          "content": "console.log(`\ud83d\udd34 CRITICAL: ${issue}`);",
          "type": "log"
        },
        {
          "line_number": 462,
          "content": "console.log(`${priority} ${rec.priority} - ${rec.category}:`);",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.log(`   Issue: ${rec.issue}`);",
          "type": "log"
        },
        {
          "line_number": 464,
          "content": "console.log(`   Action: ${rec.action}`);",
          "type": "log"
        },
        {
          "line_number": 465,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 469,
          "content": "console.log('\\n\ud83c\udf8a PERFORMANCE MEASUREMENT COMPLETE');",
          "type": "log"
        },
        {
          "line_number": 470,
          "content": "console.log('\u2550'.repeat(75));",
          "type": "log"
        },
        {
          "line_number": 479,
          "content": "console.log(`\ud83d\udcbe Detailed performance results saved to: ${reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 481,
          "content": "console.error(`\u274c Failed to save performance results: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 498,
          "content": "console.error(`\\n\u274c PERFORMANCE MEASUREMENT FAILED: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 506,
          "content": "framework.runMeasurement().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "dist-baseline-test/assets/js/Dashboard-B25U7JYC.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/Dashboard-B25U7JYC.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{j as e}from\"./data-Bv-1wmlB.js\";import{R as a,r as s}from\"./react-vendor-CFewNFzH.js\";import{u as r,C as i,N as t}from\"./ConnectionStatus-DKbt5BS6.js\";import{PriceChart as n}from\"./PriceChart-BxJK_mKW.js\";import{E as c,A as d,C as l}from\"./ErrorBoundary-CbgT__3Q.js\";import{B as o}from\"./Button-CManshQT.js\";import{C as h,a as m,b as p}from\"./Card-CobffA9g.js\";import{w as x,P as _}from\"./PerformanceWidget-dDnp_LwI.js\";import{a as g,b as u,u as j,c as b,g as v}from\"./useFinancialData-BgMtsrnL.js\";import{a as N}from\"./index-BXV1uie2.js\";import{validateDashboardData as y}from\"./financialValidators-D9z1DjLZ.js\";import{R as f,i as S,o as P,D as w,T as C,B as k,A as D,a as M}from\"./ui-DMFgMOOC.js\";import\"./authStore-OnCmqkYQ.js\";import\"./auth-DaqElu4y.js\";import\"./http-client-BjWGBSjJ.js\";import\"./logger-BhHoEjgh.js\";import\"./api-DKM9LNLr.js\";import\"./messages-BCwGaSuP.js\";import\"./genericValidators-irPhnqvQ.js\";const A=e=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(e),T=({symbol:s,showChange:i=!0,className:t=\"\"})=>{const{lastMessage:n,connectionState:c,error:d}=r({symbols:[s],autoConnect:!0}),l=a.useMemo(()=>{var e;if(n&&n.symbol===s&&\"price_update\"===n.message_type&&(null==(e=n.data)?void 0:e.price_data)){const e=n.data.price_data,a=e.price??150+50*Math.random(),s=e.change??10*(Math.random()-.5);return{price:a,change:s,changePercent:e.change_percent??s/a*100,isPositive:s>=0,lastUpdate:new Date(n.timestamp).toISOString()}}const a=150+50*Math.random(),r=10*(Math.random()-.5);return{price:a,change:r,changePercent:r/a*100,isPositive:r>=0,lastUpdate:(new Date).toISOString()}},[n,s]),o=\"connected\"===c,h=l.price>0;return e.jsxs(\"div\",{className:`live-price-display ${t} ${o?\"\":\"disconnected\"}`,\"data-testid\":\"live-price-element\",children:[e.jsxs(\"div\",{className:\"price-main\",children:[e.jsx(\"span\",{className:\"live-price-value \"+(h?\"loaded\":\"loading\"),\"data-testid\":\"formatted-price\",children:h?A(l.price):\"--\"}),!o&&e.jsx(\"span\",{className:\"connection-indicator offline\",title:\"Disconnected\",children:\"\u26a1\"})]}),i&&h&&e.jsxs(\"div\",{className:\"price-change-section\",children:[e.jsxs(\"span\",{className:\"live-price-change \"+(l.isPositive?\"positive\":\"negative\"),\"data-testid\":\"price-change-indicator\",children:[e.jsxs(\"span\",{className:\"change-amount\",children:[l.change>=0?\"+\":\"\",A(l.change)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",(m=l.changePercent,`${m>=0?\"+\":\"\"}${m.toFixed(2)}%`),\")\"]})]}),e.jsx(\"div\",{className:\"price-trend-arrow\",children:l.isPositive?\"\u2197\":\"\u2198\"})]}),d&&e.jsx(\"div\",{className:\"price-error\",title:d.message,children:\"\u26a0\ufe0f Error loading price\"}),e.jsx(\"div\",{className:\"last-update\",title:`Last updated: ${l.lastUpdate}`,children:e.jsx(\"span\",{className:\"update-indicator \"+(o?\"live\":\"stale\"),children:o?\"\ud83d\udd34 LIVE\":\"\u23f8\ufe0f PAUSED\"})})]});var m},I={positions:[{symbol:\"AAPL\",shares:50,costBasis:150,currentPrice:175.5,marketValue:8775,unrealizedGain:1275,unrealizedGainPercent:17,dayChange:125.5,dayChangePercent:1.45},{symbol:\"MSFT\",shares:30,costBasis:280,currentPrice:295.75,marketValue:8872.5,unrealizedGain:472.5,unrealizedGainPercent:5.63,dayChange:89.25,dayChangePercent:1.02},{symbol:\"GOOGL\",shares:25,costBasis:2100,currentPrice:2250,marketValue:56250,unrealizedGain:3750,unrealizedGainPercent:7.14,dayChange:675,dayChangePercent:1.21}]},L=e=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(e),R=e=>`${e>=0?\"+\":\"\"}${e.toFixed(2)}%`,z=({className:a=\"\"})=>{const s=I.positions.map(e=>e.symbol),{lastMessage:i,connectionState:t,error:n}=r({symbols:s,autoConnect:!0}),c=(()=>{const e=I.positions.map(e=>{var a;let s=e.currentPrice;i&&i.symbol===e.symbol&&\"price_update\"===i.message_type&&(null==(a=i.data)?void 0:a.price_data)&&(s=i.data.price_data.price??e.currentPrice);const r=e.shares*s,t=r-e.shares*e.costBasis,n=t/(e.shares*e.costBasis)*100,c=(s-e.currentPrice)*e.shares,d=(s-e.currentPrice)/e.currentPrice*100;return{...e,currentPrice:s,marketValue:r,unrealizedGain:t,unrealizedGainPercent:n,dayChange:c,dayChangePercent:d}}),a=e.reduce((e,a)=>e+a.marketValue,0),s=e.reduce((e,a)=>e+a.shares*a.costBasis,0),r=a-s,t=r/s*100,n=e.reduce((e,a)=>e+a.dayChange,0);return{totalValue:a,totalCost:s,totalGain:r,totalGainPercent:t,dayChange:n,dayChangePercent:n/(a-n)*100,positions:e}})(),d=\"connected\"===t;return e.jsxs(\"div\",{className:`live-portfolio-summary ${a} ${d?\"\":\"disconnected\"}`,\"data-testid\":\"portfolio-elements\",children:[e.jsxs(\"div\",{className:\"portfolio-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(\"div\",{className:`connection-status ${t}`,children:e.jsx(\"span\",{className:\"status-indicator\",children:d?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})})]}),e.jsxs(\"div\",{className:\"portfolio-totals\",\"data-testid\":\"live-data-elements\",children:[e.jsxs(\"div\",{className:\"total-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"value\",\"data-testid\":\"portfolio-total-value\",children:L(c.totalValue)})]}),e.jsxs(\"div\",{className:\"total-gain\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Gain/Loss\"}),e.jsxs(\"div\",{className:\"gain-section \"+(c.totalGain>=0?\"positive\":\"negative\"),children:[e.jsx(\"span\",{className:\"gain-amount\",\"data-testid\":\"portfolio-total-gain\",children:L(c.totalGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",R(c.totalGainPercent),\")\"]})]})]}),e.jsxs(\"div\",{className:\"day-change\",children:[e.jsx(\"span\",{className:\"label\",children:\"Today's Change\"}),e.jsxs(\"div\",{className:\"change-section \"+(c.dayChange>=0?\"positive\":\"negative\"),children:[e.jsxs(\"span\",{className:\"change-amount\",\"data-testid\":\"portfolio-day-change\",children:[c.dayChange>=0?\"+\":\"\",L(c.dayChange)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",R(c.dayChangePercent),\")\"]})]})]})]}),e.jsxs(\"div\",{className:\"portfolio-positions\",children:[e.jsx(\"h3\",{children:\"Holdings\"}),e.jsx(\"div\",{className:\"positions-grid\",\"data-testid\":\"portfolio-positions\",children:c.positions.map(a=>e.jsxs(\"div\",{className:\"position-card\",\"data-testid\":`position-${a.symbol}`,children:[e.jsxs(\"div\",{className:\"position-header\",children:[e.jsx(\"span\",{className:\"symbol\",children:a.symbol}),e.jsxs(\"span\",{className:\"shares\",children:[a.shares,\" shares\"]})]}),e.jsx(\"div\",{className:\"position-price\",children:e.jsx(T,{symbol:a.symbol,showChange:!0,className:\"compact\"})}),e.jsxs(\"div\",{className:\"position-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Market Value\"}),e.jsx(\"span\",{className:\"value\",children:L(a.marketValue)})]}),e.jsxs(\"div\",{className:\"position-gain \"+(a.unrealizedGain>=0?\"positive\":\"negative\"),children:[e.jsx(\"span\",{className:\"gain-amount\",children:L(a.unrealizedGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",R(a.unrealizedGainPercent),\")\"]})]})]},a.symbol))})]}),n&&e.jsxs(\"div\",{className:\"portfolio-error\",\"data-testid\":\"portfolio-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading live data: \",n.message]})]}),e.jsxs(\"div\",{className:\"portfolio-footer\",children:[e.jsxs(\"div\",{className:\"last-update\",children:[\"Last updated: \",(new Date).toLocaleTimeString()]}),e.jsx(\"div\",{className:\"data-status\",children:d?\"Real-time data\":\"Delayed data\"})]})]})},G=({symbol:i,height:t=300,width:n=500,timeframe:c=\"1m\",showVolume:d=!1,className:l=\"\"})=>{const o=s.useRef(null),[h,m]=s.useState(null),[p,x]=s.useState(!1),[_,g]=s.useState(null),{lastMessage:u,connectionState:j,error:b}=r({symbols:[i],autoConnect:!0}),v=a.useMemo(()=>{var e;return u&&u.symbol===i&&\"price_update\"===u.message_type&&(null==(e=u.data)?void 0:e.price_data)?u.data.price_data.price??150+50*Math.random():150+50*Math.random()},[u,i]),N=\"connected\"===j;s.useEffect(()=>{var e;if(v>0){const a=((e,a)=>{const s=[],r=Date.now(),i=a||100;for(let t=49;t>=0;t--){const e=r-6e4*t,a=.02,n=i*(1+(Math.random()-.5)*a*(t/50)),c=Math.floor(1e6*Math.random())+1e5;s.push({timestamp:e,price:Math.max(n,.01),volume:c})}return s})(0,v),s=a.map(e=>e.price),r=Math.min(...s),i=Math.max(...s),t=i-r,n=(null==(e=a[0])?void 0:e.price)??v,c=v-n;m({points:a,minPrice:r,maxPrice:i,priceRange:t,currentPrice:v,change:c,changePercent:0!==n?c/n*100:0})}},[i,v]),s.useEffect(()=>{if(h&&v>0&&N){const e={timestamp:Date.now(),price:v,volume:Math.floor(1e6*Math.random())+1e5};m(a=>{var s;if(!a)return null;const r=[...a.points.slice(1),e],i=r.map(e=>e.price),t=Math.min(...i),n=Math.max(...i),c=n-t,d=(null==(s=r[0])?void 0:s.price)??v,l=v-d;return{points:r,minPrice:t,maxPrice:n,priceRange:c,currentPrice:v,change:l,changePercent:0!==d?l/d*100:0}})}},[v,N,h]),s.useEffect(()=>{const e=o.current;if(!e||!h)return;const a=e.getContext(\"2d\");if(!a)return;e.width=n,e.height=t,a.clearRect(0,0,n,t);const{points:s,maxPrice:r,priceRange:i}=h;if(0===s.length||0===i)return;const c=40,d=n-80,l=t-80;a.strokeStyle=\"#e1e5e9\",a.lineWidth=1,a.setLineDash([2,2]);for(let t=0;t<=4;t++){const e=c+l*t/4;a.beginPath(),a.moveTo(c,e),a.lineTo(n-c,e),a.stroke()}for(let n=0;n<=4;n++){const e=c+d*n/4;a.beginPath(),a.moveTo(e,c),a.lineTo(e,t-c),a.stroke()}if(a.setLineDash([]),a.strokeStyle=h.change>=0?\"#28a745\":\"#dc3545\",a.lineWidth=2,a.beginPath(),s.forEach((e,t)=>{const n=c+t/(s.length-1)*d,o=c+(r-e.price)/i*l;0===t?a.moveTo(n,o):a.lineTo(n,o)}),a.stroke(),a.fillStyle=h.change>=0?\"rgba(40, 167, 69, 0.1)\":\"rgba(220, 53, 69, 0.1)\",a.beginPath(),s.forEach((e,t)=>{const n=c+t/(s.length-1)*d,o=c+(r-e.price)/i*l;0===t?a.moveTo(n,o):a.lineTo(n,o)}),a.lineTo(n-c,t-c),a.lineTo(c,t-c),a.closePath(),a.fill(),s.length>0){const e=s.at(-1);if(e){const s=n-c,t=c+(r-e.price)/i*l;a.fillStyle=h.change>=0?\"#28a745\":\"#dc3545\",a.beginPath(),a.arc(s,t,4,0,2*Math.PI),a.fill(),N&&(a.strokeStyle=h.change>=0?\"#28a745\":\"#dc3545\",a.lineWidth=2,a.beginPath(),a.arc(s,t,8,0,2*Math.PI),a.stroke())}}a.fillStyle=\"#6c757d\",a.font=\"12px Monaco, Menlo, monospace\",a.textAlign=\"right\";for(let t=0;t<=4;t++){const e=r-i*t/4,s=c+l*t/4;a.fillText(`$${e.toFixed(2)}`,30,s+4)}},[h,n,t,N]);const y=e=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(e);return e.jsxs(\"div\",{className:`live-price-chart ${l} ${N?\"\":\"disconnected\"}`,\"data-testid\":\"live-charts\",children:[e.jsxs(\"div\",{className:\"chart-header\",children:[e.jsxs(\"div\",{className:\"chart-title\",children:[e.jsxs(\"h3\",{children:[i,\" Live Chart\"]}),e.jsx(\"span\",{className:`connection-indicator ${j}`,children:N?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})]}),h&&e.jsxs(\"div\",{className:\"price-summary \"+(h.change>=0?\"positive\":\"negative\"),children:[e.jsx(\"span\",{className:\"current-price\",\"data-testid\":\"chart-current-price\",children:y(h.currentPrice)}),e.jsxs(\"span\",{className:\"price-change\",children:[h.change>=0?\"+\":\"\",y(h.change),\"(\",h.change>=0?\"+\":\"\",h.changePercent.toFixed(2),\"%)\"]})]})]}),e.jsxs(\"div\",{className:\"chart-container\",children:[e.jsx(\"canvas\",{ref:o,width:n,height:t,onMouseMove:e=>{if(!h||!o.current)return;const a=o.current.getBoundingClientRect(),s=e.clientX-a.left,r=n-80;if(s>=40&&s<=n-40){const e=Math.round((s-40)/r*(h.points.length-1)),a=h.points[e];a&&(g(a),x(!0))}else x(!1),g(null)},onMouseLeave:()=>{x(!1),g(null)},style:{cursor:\"crosshair\"}}),p&&_&&e.jsxs(\"div\",{className:\"chart-tooltip\",\"data-testid\":\"chart-tooltip\",children:[e.jsx(\"div\",{className:\"tooltip-price\",children:y(_.price)}),e.jsx(\"div\",{className:\"tooltip-time\",children:(f=_.timestamp,new Date(f).toLocaleTimeString())}),_.volume&&e.jsxs(\"div\",{className:\"tooltip-volume\",children:[\"Volume: \",_.volume.toLocaleString()]})]})]}),b&&e.jsxs(\"div\",{className:\"chart-error\",\"data-testid\":\"chart-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading chart data: \",b.message]})]}),e.jsx(\"div\",{className:\"chart-controls\",children:e.jsx(\"div\",{className:\"timeframe-selector\",children:[\"1m\",\"5m\",\"15m\",\"1h\",\"1d\"].map(a=>e.jsx(\"button\",{className:\"timeframe-btn \"+(c===a?\"active\":\"\"),onClick:()=>{},\"data-testid\":`timeframe-${a}`,children:a},a))})})]});var f},$=x(({className:a=\"\",initialSelectedSymbol:r=\"AAPL\",showDebugInfo:x=!1})=>{const[A,I]=s.useState(r),[L,R]=s.useState(new Date),{loadForContext:$}=N();s.useEffect(()=>{$(\"dashboard\").catch(console.error)},[$]);const{performance:F,isLoading:E,error:V}=g(),{marketSummary:O,isLoading:B,error:U}=u(),{gainers:W,losers:Q,isLoading:H,error:X}=j(),{insights:Y,isLoading:q,error:J}=b(),{watchlist:K,isLoading:Z,error:ee}=v(),ae=s.useMemo(()=>{const e=E||B||H||q||Z,a=[V,U,X,J,ee];return a.forEach((e,a)=>{}),y({performance:F,marketSummary:O,gainers:W,losers:Q,insights:Y,watchlist:K,isLoading:e,errors:a})},[F,O,W,Q,Y,K,E,B,H,q,Z,V,U,X,J,ee]),{performance:se,marketSummary:re,gainers:ie,losers:te,insights:ne,watchlist:ce}=ae,de=[{symbol:\"AAPL\",name:\"Apple Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",sector:\"Consumer Discretionary\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()}];return e.jsxs(\"div\",{className:`dashboard ${a}`.trim(),\"data-testid\":\"dashboard-container\",children:[e.jsxs(\"div\",{className:\"dashboard__header\",children:[e.jsxs(\"div\",{className:\"dashboard__title-section\",children:[e.jsx(\"h1\",{className:\"dashboard__title\",children:\"Dashboard\"}),e.jsx(\"p\",{className:\"dashboard__subtitle\",children:\"Welcome to your Finance AI Research Platform\"})]}),e.jsxs(\"div\",{className:\"dashboard__header-actions\",children:[e.jsx(\"div\",{className:\"live-indicators\",\"data-testid\":\"realtime-indicators\",children:e.jsx(i,{showDetails:!1,className:\"dashboard__connection-status\",\"data-testid\":\"connection-status-elements\"})}),e.jsx(\"div\",{className:\"dashboard__last-updated\",children:e.jsxs(\"span\",{className:\"dashboard__update-time\",children:[\"Last updated: \",L.toLocaleTimeString()]})}),e.jsx(o,{variant:\"ghost\",size:\"sm\",onClick:()=>{R(new Date),window.location.reload()},className:\"dashboard__refresh-button\",\"data-testid\":\"dashboard__refresh-button\",children:e.jsx(f,{className:\"dashboard__refresh-icon\"})}),e.jsx(\"div\",{className:\"dashboard__notification-wrapper\",\"data-testid\":\"notification-system\",children:e.jsx(t,{})}),e.jsx(o,{variant:\"ghost\",size:\"sm\",className:\"dashboard__analytics-button\",title:\"Open Analytics Dashboard\",children:e.jsx(S,{className:\"dashboard__analytics-icon\"})}),e.jsx(o,{variant:\"ghost\",size:\"sm\",className:\"dashboard__settings-button\",children:e.jsx(P,{className:\"dashboard__settings-icon\"})})]})]}),e.jsx(c,{level:\"section\",enableRecovery:!0,onError:(e,a)=>{},children:e.jsxs(\"div\",{className:\"dashboard__metrics-grid\",\"data-testid\":\"dashboard__metrics-grid\",children:[e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Portfolio Value\"}),e.jsx(w,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"live-price-element\",children:se.totalValue}),e.jsx(\"span\",{className:\"dashboard__metric-change \"+(se.isPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"),\"data-testid\":\"formatted-price\",children:se.totalGainLossPercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total portfolio value\"})]})]}),e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Daily Change\"}),e.jsx(C,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:se.dayChange}),e.jsx(\"span\",{className:\"dashboard__metric-change \"+(se.isDayPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"),\"data-testid\":\"dashboard__metric-change--positive\",children:se.dayChangePercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Since yesterday\"})]})]}),e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Market Cap\"}),e.jsx(k,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsxs(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:[\"$\",(re.totalMarketCap/1e12).toFixed(1),\"T\"]})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total market cap\"})]})]}),e.jsxs(h,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(D,{className:\"dashboard__card-icon\"})]})}),e.jsxs(p,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:ne.length})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"New recommendations\"})]})]})]})}),e.jsxs(\"div\",{className:\"dashboard__main-grid\",\"data-testid\":\"dashboard__main-grid\",children:[e.jsxs(\"div\",{className:\"dashboard__left-column\",\"data-testid\":\"dashboard__left-column\",children:[e.jsx(\"div\",{className:\"live-data-grid\",\"data-testid\":\"live-data-elements\",children:e.jsx(d,{children:e.jsx(z,{className:\"dashboard__portfolio-summary\",\"data-testid\":\"portfolio-elements\"})})}),e.jsx(c,{level:\"component\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsxs(h,{className:\"dashboard__performance-widget\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Performance Widget\"})}),e.jsx(p,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(D,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"Performance data temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Please try refreshing the page\"})]})})]}),children:e.jsx(_,{portfolioMode:!0,className:\"dashboard__performance-widget\",timeRange:\"1Y\",showBenchmark:!0})}),e.jsx(d,{children:e.jsxs(h,{className:\"dashboard__watchlist-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Watchlist\"}),e.jsx(M,{className:\"dashboard__card-icon\"})]})}),e.jsx(p,{children:e.jsxs(\"div\",{className:\"dashboard__watchlist\",children:[ce.slice(0,5).map((a,s)=>{var r;const i=(null==(r=null==a?void 0:a.security)?void 0:r.symbol)??\"N/A\",t=(null==a?void 0:a.formattedPrice)??\"$0.00\",n=(null==a?void 0:a.formattedChangePercent)??\"0.00%\",c=Boolean(null==a?void 0:a.isPositive);return e.jsxs(\"div\",{className:\"dashboard__watchlist-item\",children:[e.jsxs(\"div\",{className:\"dashboard__watchlist-info\",children:[e.jsx(\"span\",{className:\"dashboard__watchlist-symbol\",children:i}),e.jsx(\"span\",{className:\"dashboard__watchlist-price\",children:t})]}),e.jsxs(\"div\",{className:\"dashboard__watchlist-change \"+(c?\"dashboard__watchlist-change--positive\":\"dashboard__watchlist-change--negative\"),children:[c?\"+\":\"\",n]})]},(null==a?void 0:a.id)??s)}),0===ce.length&&e.jsx(\"div\",{className:\"dashboard__watchlist-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No watchlist items\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__center-column\",\"data-testid\":\"dashboard__center-column\",children:[e.jsx(l,{children:e.jsx(G,{symbol:A,height:300,width:500,timeframe:\"1m\",showVolume:!0,className:\"dashboard__live-chart\",\"data-testid\":\"live-charts\"})}),e.jsx(l,{children:e.jsxs(h,{className:\"dashboard__chart-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__chart-header\",children:[e.jsx(\"h3\",{className:\"dashboard__chart-title\",children:\"Market Analysis\"}),e.jsx(\"div\",{className:\"dashboard__chart-controls\",children:e.jsx(\"select\",{value:A,onChange:e=>I(e.target.value),className:\"dashboard__symbol-selector\",children:de.map(a=>e.jsxs(\"option\",{value:a.symbol,children:[a.symbol,\" - \",a.name]},a.symbol))})})]})}),e.jsx(p,{children:e.jsx(n,{symbol:A,height:350,showTimeRange:!0,showVolume:!0,initialRange:\"1M\"})})]})}),e.jsx(c,{level:\"component\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsxs(h,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(D,{className:\"dashboard__card-icon\"})]})}),e.jsx(p,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(D,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"AI insights temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Analysis engine will be back shortly\"})]})})]}),children:e.jsxs(h,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(D,{className:\"dashboard__card-icon\"})]})}),e.jsx(p,{children:e.jsxs(\"div\",{className:\"dashboard__insights\",children:[ne.slice(0,3).map(a=>{const s=(null==a?void 0:a.id)??`insight-${Math.random()}`,r=(null==a?void 0:a.type)??\"unknown\",i=(null==a?void 0:a.title)??\"No title\",t=(null==a?void 0:a.message)??\"No message available\",n=\"number\"==typeof(null==a?void 0:a.confidence)?a.confidence:0;return e.jsxs(\"div\",{className:\"dashboard__insight-item\",children:[e.jsxs(\"div\",{className:\"dashboard__insight-header\",children:[e.jsx(\"span\",{className:`dashboard__insight-type dashboard__insight-type--${r}`,children:r}),e.jsxs(\"span\",{className:\"dashboard__insight-confidence\",children:[Math.round(100*n),\"% confidence\"]})]}),e.jsx(\"h4\",{className:\"dashboard__insight-title\",children:i}),e.jsx(\"p\",{className:\"dashboard__insight-message\",children:t})]},s)}),0===ne.length&&e.jsx(\"div\",{className:\"dashboard__insights-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No AI insights available\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__right-column\",\"data-testid\":\"dashboard__right-column\",children:[e.jsx(d,{children:e.jsxs(h,{className:\"dashboard__movers-card\",variant:\"outlined\",children:[e.jsx(m,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Top Movers\"})}),e.jsx(p,{children:e.jsxs(\"div\",{className:\"dashboard__movers\",children:[e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--gainers\",children:\"Top Gainers\"}),ie.slice(0,3).map((a,s)=>{const r=(null==a?void 0:a.symbol)??\"N/A\",i=\"number\"==typeof(null==a?void 0:a.price)?a.price:0,t=\"number\"==typeof(null==a?void 0:a.changePercent)?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:r}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",i.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--positive\",children:[\"+\",t.toFixed(2),\"%\"]})]},(null==a?void 0:a.symbol)??s)}),0===ie.length&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No gainers data\"})})]}),e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--losers\",children:\"Top Losers\"}),te.slice(0,3).map((a,s)=>{const r=(null==a?void 0:a.symbol)??\"N/A\",i=\"number\"==typeof(null==a?void 0:a.price)?a.price:0,t=\"number\"==typeof(null==a?void 0:a.changePercent)?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:r}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",i.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--negative\",children:[t.toFixed(2),\"%\"]})]},(null==a?void 0:a.symbol)??s)}),0===te.length&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No losers data\"})})]})]})})]})}),e.jsx(\"div\",{className:\"dashboard__featured-stocks\",children:de.slice(0,2).map(a=>e.jsx(c,{level:\"component\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsx(h,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(p,{children:e.jsxs(\"div\",{style:{padding:\"16px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"6px\"},children:[e.jsx(C,{style:{width:\"24px\",height:\"24px\",margin:\"0 auto 8px\",opacity:.5}}),e.jsx(\"p\",{style:{fontSize:\"14px\",margin:0},children:a.symbol}),e.jsx(\"p\",{style:{fontSize:\"12px\",margin:\"4px 0 0\",opacity:.7},children:\"Data unavailable\"})]})})}),children:e.jsx(h,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(p,{children:e.jsxs(\"div\",{className:\"featured-stock-content\",children:[e.jsxs(\"div\",{className:\"stock-info\",children:[e.jsx(\"h4\",{children:a.symbol}),e.jsx(\"p\",{children:a.name})]}),e.jsx(T,{symbol:a.symbol,showChange:!0,className:\"featured-stock-price\"})]})})})},a.symbol))})]})]})]})},{level:\"page\",enableRecovery:!0,onError:(e,a)=>{},fallback:e.jsx(\"div\",{className:\"dashboard\",children:e.jsxs(\"div\",{className:\"dashboard__error-page\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"60vh\",padding:\"40px\",textAlign:\"center\",backgroundColor:\"#fef2f2\",border:\"1px solid #fecaca\",borderRadius:\"12px\",margin:\"20px\"},children:[e.jsx(\"div\",{style:{fontSize:\"64px\",marginBottom:\"24px\",opacity:.6},children:\"\ud83d\udcca\"}),e.jsx(\"h1\",{style:{fontSize:\"24px\",fontWeight:\"bold\",color:\"#dc2626\",marginBottom:\"16px\"},children:\"Dashboard Temporarily Unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"16px\",color:\"#7f1d1d\",marginBottom:\"24px\",maxWidth:\"500px\",lineHeight:\"1.5\"},children:\"We're experiencing technical difficulties with the dashboard. Our team has been notified and is working to resolve the issue.\"}),e.jsxs(\"div\",{style:{display:\"flex\",gap:\"12px\"},children:[e.jsx(\"button\",{style:{backgroundColor:\"#dc2626\",color:\"white\",border:\"none\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.location.reload(),children:\"Reload Dashboard\"}),e.jsx(\"button\",{style:{backgroundColor:\"white\",color:\"#dc2626\",border:\"1px solid #dc2626\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.history.back(),children:\"Go Back\"})]}),e.jsx(\"p\",{style:{fontSize:\"12px\",color:\"#9ca3af\",marginTop:\"24px\"},children:\"If the problem persists, please contact support.\"})]})})});export{$ as default};",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "dist-baseline-test/assets/js/ForecastingDashboard-CvRLHh7L.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/ForecastingDashboard-CvRLHh7L.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{j as e}from\"./data-Bv-1wmlB.js\";import{r as a}from\"./react-vendor-CFewNFzH.js\";import{ForecastingService as s}from\"./forecasting-C8PZEyZr.js\";import{ModelValidationService as r}from\"./predictionModels-sI-I-VH6.js\";import{BarChart as i}from\"./BarChart-ySIA6bod.js\";import{LineChart as t}from\"./LineChart-DlOILlo7.js\";import{ScatterPlot as n}from\"./ScatterPlot-k_L5UUdK.js\";import{B as c}from\"./Button-CManshQT.js\";import{C as l}from\"./Card-CobffA9g.js\";import{a as o}from\"./index-BXV1uie2.js\";import\"./BaseChart-poULCdg4.js\";import\"./chartHelpers-DkhC0aaT.js\";import\"./utils-DvmUb7mG.js\";import\"./ParentSize-FAAUvIBf.js\";import\"./_baseGetTag-76xZNbvL.js\";import\"./VixBarChart-DxDe98kd.js\";import\"./ordinal-DWMvV58e.js\";import\"./AxisBottom-Do3PUUOn.js\";import\"./GridColumns-g-vDgu7M.js\";import\"./Bar-BeL4cnsA.js\";import\"./LinearGradient-bYVEPoik.js\";import\"./ui-DMFgMOOC.js\";import\"./VixTooltip-BaqBoJlZ.js\";import\"./time-DOP1oq_V.js\";import\"./LinePath-C4mQz8iC.js\";import\"./monotone-Q2mjRMuk.js\";import\"./AxisProgressive-COP0doiw.js\";import\"./localPoint-AOW7UCX8.js\";import\"./VixScatterPlot-CgY_lTZZ.js\";import\"./GridProgressive-D7CjWd7b.js\";import\"./GridOptimizationProvider-Dk_3Nzi2.js\";function d({symbol:d,priceData:m,earningsHistory:h,financialStatements:p,className:x=\"\",onExport:j}){var f;const{utilities:u,loadForContext:g}=o();a.useEffect(()=>{g(\"analytics\").catch(console.error)},[g]);const b=a.useCallback(e=>{var a;return(null==(a=u.formatCurrency)?void 0:a.call(u,e))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(e)},[u]),v=a.useCallback(e=>{var a;return(null==(a=u.formatPercentage)?void 0:a.call(u,e))||`${e.toFixed(2)}%`},[u]),y=a.useCallback((e,a)=>{var s;return(null==(s=u.formatTimestamp)?void 0:s.call(u,e,a))||new Date(e).toLocaleDateString()},[u]),[N,F]=a.useState({loading:!1,error:null}),[C,k]=a.useState({horizon:30,confidenceLevel:.95,includeSeasonality:!0,ensembleMethods:[\"ARIMA\",\"TREND_ANALYSIS\",\"LINEAR_REGRESSION\"],backtestPeriods:20}),[P,M]=a.useState(\"price\"),S=a.useMemo(()=>new s,[]),A=a.useMemo(()=>new r,[]),E=a.useCallback(async()=>{F(e=>({...e,loading:!0,error:null}));try{const e=await S.generatePriceForecast(m,C),a=await S.generateEarningsForecast(h,p,C),s=await S.generateVolatilityForecast(m,C),r=await Promise.all(C.ensembleMethods.map(async e=>{const a=m.at(-1),s=(null==a?void 0:a.close)??100,r=Array.from({length:20},()=>s*(1+.1*(Math.random()-.5))),i=m.slice(-20).map(e=>e.close);return A.validateModel(e,r,i)})),i=m.at(-1),t=(null==i?void 0:i.close)??100,n=C.ensembleMethods.map((e,a)=>({modelType:e,predictions:Array.from({length:20},()=>t*(1+.1*(Math.random()-.5))),actual:m.slice(-20).map(e=>e.close)})),c=await A.compareModels(n),l=await A.designEnsemble(r.map(e=>e.data));F({priceForecast:e,earningsForecast:a,volatilityForecast:s,modelValidation:r,modelComparison:c,ensembleConfig:l,loading:!1,error:null})}catch(e){F(a=>({...a,loading:!1,error:e instanceof Error?e.message:\"Unknown error occurred\"}))}},[m,h,p,C,S,A]);a.useEffect(()=>{m.length>0&&E()},[m,C,E]);const _=a.useMemo(()=>{if(!N.priceForecast)return{type:\"line\",data:[],dimensions:{height:400}};return{type:\"line\",data:[...m.slice(-60).map(e=>({timestamp:e.timestamp,value:e.close,name:\"Historical Price\"})),...N.priceForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:e.predicted,name:\"Predicted Price\"})),...N.priceForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:e.confidenceInterval.upper,name:\"Upper Confidence\"})),...N.priceForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:e.confidenceInterval.lower,name:\"Lower Confidence\"}))],dimensions:{height:400},title:`${d} Price Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:e=>y(Number(e),\"1M\")},yAxis:{enabled:!0,label:\"Price ($)\",tickFormatter:e=>b(Number(e))},colors:{primary:\"#3b82f6\",secondary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"},tooltip:{enabled:!0,formatter:(e,a)=>[b(Number(e)),a]},legend:{enabled:!0}}},[N.priceForecast,m,d]),w=a.useMemo(()=>{if(!N.earningsForecast)return{type:\"bar\",data:[],dimensions:{height:300}};return{type:\"bar\",data:N.earningsForecast.data.predictions.map(e=>({timestamp:Date.now(),value:e.predictedEPS,name:e.quarter,category:e.quarter})),dimensions:{height:300},title:`${d} Earnings Forecast`,xAxis:{enabled:!0,label:\"Quarter\",type:\"category\"},yAxis:{enabled:!0,label:\"EPS ($)\",tickFormatter:e=>b(Number(e))},colors:{primary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}},[N.earningsForecast,d]),R=a.useMemo(()=>{if(!N.volatilityForecast)return{type:\"line\",data:[],dimensions:{height:300}};return{type:\"line\",data:N.volatilityForecast.data.predictions.map(e=>({timestamp:e.timestamp,value:100*e.predictedVolatility,name:\"Predicted Volatility\"})),dimensions:{height:300},title:`${d} Volatility Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:e=>y(Number(e),\"1M\")},yAxis:{enabled:!0,label:\"Volatility (%)\",tickFormatter:e=>v(Number(e)/100)},colors:{primary:\"#f59e0b\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}},[N.volatilityForecast,d]),V=a.useMemo(()=>{if(!N.modelComparison)return{type:\"scatter\",data:[],dimensions:{height:350}};return{type:\"scatter\",data:N.modelComparison.data.rankings.map(e=>({timestamp:e.rank,value:100*e.score,name:e.modelType,category:e.modelType})),dimensions:{height:350},title:\"Model Performance Comparison\",xAxis:{enabled:!0,label:\"Rank\",type:\"number\"},yAxis:{enabled:!0,label:\"Score (%)\",tickFormatter:e=>v(Number(e)/100)},colors:{primary:\"#8b5cf6\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}},[N.modelComparison]);return N.loading?e.jsx(l,{className:`forecasting-dashboard ${x}`,children:e.jsxs(\"div\",{className:\"forecasting-dashboard__loading\",children:[e.jsx(\"div\",{className:\"loading-spinner\"}),e.jsx(\"p\",{children:\"Generating forecasts...\"})]})}):N.error?e.jsx(l,{className:`forecasting-dashboard ${x}`,children:e.jsxs(\"div\",{className:\"forecasting-dashboard__error\",children:[e.jsx(\"h3\",{children:\"Error generating forecasts\"}),e.jsx(\"p\",{children:N.error}),e.jsx(c,{onClick:E,children:\"Retry\"})]})}):e.jsxs(\"div\",{className:`forecasting-dashboard ${x}`,children:[e.jsxs(l,{className:\"forecasting-dashboard__header\",children:[e.jsxs(\"div\",{className:\"forecasting-dashboard__title\",children:[e.jsxs(\"h2\",{children:[\"Forecasting Dashboard - \",d]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__actions\",children:[e.jsx(c,{onClick:E,disabled:N.loading,children:\"Refresh Forecasts\"}),j&&e.jsx(c,{onClick:()=>{var e,a,s,r,i;if(j){const t={...(null==(e=N.priceForecast)?void 0:e.data)&&{priceForecast:N.priceForecast.data},...(null==(a=N.earningsForecast)?void 0:a.data)&&{earningsForecast:N.earningsForecast.data},...(null==(s=N.volatilityForecast)?void 0:s.data)&&{volatilityForecast:N.volatilityForecast.data},...N.modelValidation&&{modelValidation:N.modelValidation.map(e=>e.data)},...(null==(r=N.modelComparison)?void 0:r.data)&&{modelComparison:N.modelComparison.data},...(null==(i=N.ensembleConfig)?void 0:i.data)&&{ensembleConfig:N.ensembleConfig.data}};j(t)}},variant:\"secondary\",children:\"Export Data\"})]})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__options\",children:[e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"forecast-horizon\",children:\"Forecast Horizon (days)\"}),e.jsx(\"input\",{id:\"forecast-horizon\",type:\"number\",value:C.horizon,onChange:e=>k(a=>({...a,horizon:Number.parseInt(e.target.value)})),min:\"1\",max:\"365\"})]}),e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"confidence-level\",children:\"Confidence Level\"}),e.jsxs(\"select\",{id:\"confidence-level\",value:C.confidenceLevel,onChange:e=>k(a=>({...a,confidenceLevel:Number.parseFloat(e.target.value)})),children:[e.jsx(\"option\",{value:.9,children:\"90%\"}),e.jsx(\"option\",{value:.95,children:\"95%\"}),e.jsx(\"option\",{value:.99,children:\"99%\"})]})]}),e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"include-seasonality\",children:\"Include Seasonality\"}),e.jsx(\"input\",{id:\"include-seasonality\",type:\"checkbox\",checked:C.includeSeasonality,onChange:e=>k(a=>({...a,includeSeasonality:e.target.checked}))})]})]})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__tabs\",children:[e.jsx(\"button\",{className:\"tab \"+(\"price\"===P?\"active\":\"\"),onClick:()=>M(\"price\"),children:\"Price Forecast\"}),e.jsx(\"button\",{className:\"tab \"+(\"earnings\"===P?\"active\":\"\"),onClick:()=>M(\"earnings\"),children:\"Earnings Forecast\"}),e.jsx(\"button\",{className:\"tab \"+(\"volatility\"===P?\"active\":\"\"),onClick:()=>M(\"volatility\"),children:\"Volatility Forecast\"}),e.jsx(\"button\",{className:\"tab \"+(\"validation\"===P?\"active\":\"\"),onClick:()=>M(\"validation\"),children:\"Model Validation\"})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__content\",children:[\"price\"===P&&N.priceForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(t,{config:_})}),e.jsxs(\"div\",{className:\"forecast-metrics\",children:[e.jsxs(l,{className:\"metric-card\",children:[e.jsx(\"h4\",{children:\"Model Performance\"}),e.jsxs(\"div\",{className:\"metrics\",children:[e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Accuracy:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.accuracy)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"R\u00b2:\"}),e.jsx(\"span\",{children:N.priceForecast.data.accuracy_metrics.rmse.toFixed(3)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"MAPE:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.accuracy_metrics.mape)})]})]})]}),e.jsxs(l,{className:\"backtest-results\",children:[e.jsx(\"h4\",{children:\"Backtest Results\"}),e.jsxs(\"div\",{className:\"metrics\",children:[e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Period:\"}),e.jsx(\"span\",{children:N.priceForecast.data.backtestResults.period})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Accuracy:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.backtestResults.accuracy)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Profitability:\"}),e.jsx(\"span\",{children:v(N.priceForecast.data.backtestResults.profitability)})]})]})]})]})]}),\"earnings\"===P&&N.earningsForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(i,{config:w})}),e.jsxs(l,{className:\"earnings-table\",children:[e.jsx(\"h4\",{children:\"Earnings Predictions\"}),e.jsxs(\"table\",{children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Quarter\"}),e.jsx(\"th\",{children:\"Predicted EPS\"}),e.jsx(\"th\",{children:\"Confidence Interval\"}),e.jsx(\"th\",{children:\"Growth Rate\"})]})}),e.jsx(\"tbody\",{children:N.earningsForecast.data.predictions.map((a,s)=>e.jsxs(\"tr\",{children:[e.jsx(\"td\",{children:a.quarter}),e.jsx(\"td\",{children:b(a.predictedEPS)}),e.jsxs(\"td\",{children:[b(a.confidenceInterval.lower),\" -\",\" \",b(a.confidenceInterval.upper)]}),e.jsx(\"td\",{children:v(a.growthRate)})]},a.quarter||`pred-${s}`))})]})]})]}),\"volatility\"===P&&N.volatilityForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(t,{config:R})}),e.jsxs(l,{className:\"garch-params\",children:[e.jsx(\"h4\",{children:\"GARCH Model Parameters\"}),e.jsx(\"div\",{className:\"params\",children:N.volatilityForecast.data.predictions[0]&&e.jsxs(e.Fragment,{children:[e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Alpha (\u03b1):\"}),e.jsx(\"span\",{children:N.volatilityForecast.data.predictions[0].garchParams.alpha.toFixed(4)})]}),e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Beta (\u03b2):\"}),e.jsx(\"span\",{children:N.volatilityForecast.data.predictions[0].garchParams.beta.toFixed(4)})]}),e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Omega (\u03c9):\"}),e.jsx(\"span\",{children:N.volatilityForecast.data.predictions[0].garchParams.omega.toFixed(6)})]})]})})]})]}),\"validation\"===P&&N.modelComparison&&e.jsxs(\"div\",{className:\"validation-section\",children:[e.jsx(l,{className:\"chart-container\",children:e.jsx(n,{config:V})}),e.jsxs(\"div\",{className:\"validation-results\",children:[e.jsxs(l,{className:\"model-rankings\",children:[e.jsx(\"h4\",{children:\"Model Rankings\"}),e.jsxs(\"table\",{children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Rank\"}),e.jsx(\"th\",{children:\"Model\"}),e.jsx(\"th\",{children:\"Score\"})]})}),e.jsx(\"tbody\",{children:N.modelComparison.data.rankings.map((a,s)=>e.jsxs(\"tr\",{children:[e.jsx(\"td\",{children:a.rank}),e.jsx(\"td\",{children:a.modelType}),e.jsx(\"td\",{children:v(a.score)})]},a.modelType||`ranking-${s}`))})]})]}),e.jsxs(l,{className:\"recommendations\",children:[e.jsx(\"h4\",{children:\"Recommendations\"}),e.jsx(\"ul\",{children:N.modelComparison.data.recommendations.map((a,s)=>e.jsx(\"li\",{children:a},a))})]}),N.ensembleConfig&&e.jsxs(l,{className:\"ensemble-config\",children:[e.jsx(\"h4\",{children:\"Ensemble Configuration\"}),e.jsxs(\"div\",{className:\"ensemble-details\",children:[e.jsxs(\"div\",{className:\"ensemble-method\",children:[e.jsx(\"span\",{children:\"Method:\"}),e.jsx(\"span\",{children:N.ensembleConfig.data.method})]}),e.jsxs(\"div\",{className:\"performance-gain\",children:[e.jsx(\"span\",{children:\"Expected Performance Gain:\"}),e.jsx(\"span\",{children:v(N.ensembleConfig.data.performanceGain)})]}),e.jsxs(\"div\",{className:\"model-weights\",children:[e.jsx(\"h5\",{children:\"Model Weights:\"}),null==(f=N.ensembleConfig)?void 0:f.data.baseModels.map((a,s)=>{var r;return e.jsxs(\"div\",{className:\"weight-item\",children:[e.jsxs(\"span\",{children:[a,\":\"]}),e.jsx(\"span\",{children:v((null==(r=N.ensembleConfig)?void 0:r.data.weights[s])??0)})]},a)})]})]})]})]})]})]})]})}export{d as ForecastingDashboard,d as default};",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "dist-baseline-test/assets/js/Portfolio-DaCePi_W.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/Portfolio-DaCePi_W.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{j as e}from\"./data-Bv-1wmlB.js\";import{r as a}from\"./react-vendor-CFewNFzH.js\";import{B as t}from\"./Button-CManshQT.js\";import{C as o,a as s,b as i}from\"./Card-CobffA9g.js\";import{I as l}from\"./Input-D6JwjyJt.js\";import{a as r}from\"./index-BXV1uie2.js\";import{R as n,j as c,P as d,k as m,T as p,b as h,B as _,n as u,o as j,E as x,r as f}from\"./ui-DMFgMOOC.js\";const v=1500,N=500,b=[{symbol:\"AAPL\",name:\"Apple Inc.\",shares:150,averagePrice:145.32,currentPrice:175.84,marketValue:26376,unrealizedGain:4578,unrealizedGainPercent:21,allocation:42.1,lastUpdated:(new Date).toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",shares:75,averagePrice:320.15,currentPrice:378.85,marketValue:28413.75,unrealizedGain:4402.5,unrealizedGainPercent:18.3,allocation:45.3,lastUpdated:(new Date).toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",shares:50,averagePrice:125.8,currentPrice:142.56,marketValue:7128,unrealizedGain:838,unrealizedGainPercent:13.3,allocation:11.4,lastUpdated:(new Date).toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",shares:25,averagePrice:280.45,currentPrice:254.22,marketValue:6355.5,unrealizedGain:-656.25,unrealizedGainPercent:-9.3,allocation:10.1,lastUpdated:(new Date).toISOString()}],g=()=>{const[g]=a.useState(b),[y,P]=a.useState(!1),[C,S]=a.useState(\"\"),[k,w]=a.useState(\"\"),[A,z]=a.useState(\"\"),[R,G]=a.useState(!1),[T,U]=a.useState(new Date),{utilities:I,loadForContext:L}=r();a.useEffect(()=>{L(\"portfolio\").catch(console.error)},[L]);const D=a.useMemo(()=>{const e=g.reduce((e,a)=>e+a.marketValue,0),a=g.reduce((e,a)=>e+a.shares*a.averagePrice,0),t=e-a;return{totalValue:e,todayChange:3847.21,todayChangePercent:3.2,totalReturn:t,totalReturnPercent:a>0?t/a*100:0,totalCost:a,availableCash:15420.75}},[g]),O=e=>{var a;return(null==(a=I.formatCurrency)?void 0:a.call(I,e))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(e)},V=e=>{var a;return(null==(a=I.formatPercentage)?void 0:a.call(I,e))||`${e>=0?\"+\":\"\"}${e.toFixed(2)}%`};return e.jsxs(\"div\",{className:\"portfolio\",\"data-testid\":\"portfolio-page\",children:[e.jsxs(\"div\",{className:\"portfolio__header\",children:[e.jsx(\"h1\",{className:\"portfolio__title\",\"data-testid\":\"portfolio-heading\",children:\"Portfolio Management\"}),e.jsx(\"p\",{className:\"portfolio__subtitle\",children:\"Track and manage your investment portfolio with real-time performance metrics\"}),e.jsxs(\"div\",{className:\"portfolio__controls\",children:[e.jsxs(t,{variant:\"outline\",onClick:async()=>{G(!0),await new Promise(e=>setTimeout(e,v)),U(new Date),G(!1)},disabled:R,\"data-testid\":\"refresh-portfolio-button\",children:[e.jsx(n,{className:\"portfolio__control-icon \"+(R?\"spinning\":\"\")}),\"Refresh Data\"]}),e.jsxs(t,{variant:\"outline\",onClick:()=>{const e={summary:D,positions:g,exportDate:(new Date).toISOString()},a=new Blob([JSON.stringify(e,null,2)],{type:\"application/json\"}),t=URL.createObjectURL(a),o=document.createElement(\"a\");o.href=t,o.download=`portfolio-export-${(new Date).toISOString().split(\"T\")[0]}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(t)},\"data-testid\":\"export-portfolio-button\",children:[e.jsx(c,{className:\"portfolio__control-icon\"}),\"Export\"]}),e.jsxs(t,{onClick:()=>P(!0),\"data-testid\":\"add-position-button\",children:[e.jsx(d,{className:\"portfolio__control-icon\"}),\"Add Position\"]})]})]}),e.jsx(\"div\",{className:\"portfolio__summary\",children:e.jsxs(o,{className:\"portfolio__summary-card\",children:[e.jsx(s,{children:e.jsxs(\"div\",{className:\"portfolio__summary-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(m,{className:\"portfolio__summary-icon\"})]})}),e.jsx(i,{children:e.jsxs(\"div\",{className:\"portfolio__metrics\",\"data-testid\":\"portfolio-metrics\",children:[e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"total-value\",children:O(D.totalValue)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Cost\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"total-cost\",children:O(D.totalCost)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Today's Change\"}),e.jsxs(\"span\",{className:\"portfolio__metric-value \"+(D.todayChange>=0?\"portfolio__metric-value--positive\":\"portfolio__metric-value--negative\"),\"data-testid\":\"today-change\",children:[D.todayChange>=0?e.jsx(p,{className:\"portfolio__trend-icon\"}):e.jsx(h,{className:\"portfolio__trend-icon\"}),O(D.todayChange),\" (\",V(D.todayChangePercent),\")\"]})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Return\"}),e.jsxs(\"span\",{className:\"portfolio__metric-value \"+(D.totalReturn>=0?\"portfolio__metric-value--positive\":\"portfolio__metric-value--negative\"),\"data-testid\":\"total-return\",children:[D.totalReturn>=0?e.jsx(p,{className:\"portfolio__trend-icon\"}):e.jsx(h,{className:\"portfolio__trend-icon\"}),O(D.totalReturn),\" (\",V(D.totalReturnPercent),\")\"]})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Available Cash\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"available-cash\",children:O(D.availableCash)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Last Updated\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"last-updated\",children:T.toLocaleTimeString()})]})]})})]})}),e.jsx(\"div\",{className:\"portfolio__actions\",children:e.jsx(o,{className:\"portfolio__actions-card\",children:e.jsx(i,{children:e.jsxs(\"div\",{className:\"portfolio__action-buttons\",children:[e.jsxs(t,{variant:\"outline\",onClick:()=>{},\"data-testid\":\"rebalance-button\",children:[e.jsx(_,{className:\"portfolio__action-icon\"}),\"Rebalance Portfolio\"]}),e.jsxs(t,{variant:\"outline\",\"data-testid\":\"performance-analysis-button\",children:[e.jsx(p,{className:\"portfolio__action-icon\"}),\"Performance Analysis\"]}),e.jsxs(t,{variant:\"outline\",\"data-testid\":\"risk-analysis-button\",children:[e.jsx(u,{className:\"portfolio__action-icon\"}),\"Risk Analysis\"]}),e.jsxs(t,{variant:\"outline\",\"data-testid\":\"settings-button\",children:[e.jsx(j,{className:\"portfolio__action-icon\"}),\"Settings\"]})]})})})}),e.jsxs(o,{className:\"portfolio__positions-card\",children:[e.jsx(s,{children:e.jsxs(\"div\",{className:\"portfolio__positions-header\",children:[e.jsxs(\"h2\",{children:[\"Holdings (\",g.length,\" positions)\"]}),e.jsx(p,{className:\"portfolio__positions-icon\"})]})}),e.jsx(i,{children:e.jsx(\"div\",{className:\"portfolio__positions-table\",\"data-testid\":\"portfolio-positions\",children:g.length>0?e.jsxs(\"table\",{className:\"portfolio__table\",children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Symbol\"}),e.jsx(\"th\",{children:\"Name\"}),e.jsx(\"th\",{children:\"Shares\"}),e.jsx(\"th\",{children:\"Avg Price\"}),e.jsx(\"th\",{children:\"Current Price\"}),e.jsx(\"th\",{children:\"Market Value\"}),e.jsx(\"th\",{children:\"Unrealized Gain/Loss\"}),e.jsx(\"th\",{children:\"Allocation\"}),e.jsx(\"th\",{children:\"Actions\"})]})}),e.jsx(\"tbody\",{children:g.map(a=>e.jsxs(\"tr\",{\"data-testid\":\"position-row\",children:[e.jsx(\"td\",{className:\"portfolio__symbol\",children:a.symbol}),e.jsx(\"td\",{className:\"portfolio__name\",children:a.name}),e.jsx(\"td\",{className:\"portfolio__shares\",children:a.shares.toLocaleString()}),e.jsx(\"td\",{className:\"portfolio__avg-price\",children:O(a.averagePrice)}),e.jsx(\"td\",{className:\"portfolio__current-price\",children:O(a.currentPrice)}),e.jsx(\"td\",{className:\"portfolio__market-value\",children:O(a.marketValue)}),e.jsxs(\"td\",{className:\"portfolio__unrealized-gain \"+(a.unrealizedGain>=0?\"positive\":\"negative\"),children:[a.unrealizedGain>=0?e.jsx(p,{className:\"portfolio__gain-icon\"}):e.jsx(h,{className:\"portfolio__gain-icon\"}),O(a.unrealizedGain),\" (\",V(a.unrealizedGainPercent),\")\"]}),e.jsxs(\"td\",{className:\"portfolio__allocation\",children:[a.allocation.toFixed(1),\"%\"]}),e.jsxs(\"td\",{className:\"portfolio__actions\",children:[e.jsxs(t,{size:\"sm\",variant:\"outline\",\"data-testid\":\"view-position-button\",children:[e.jsx(x,{className:\"portfolio__action-icon\"}),\"View\"]}),e.jsxs(t,{size:\"sm\",variant:\"outline\",onClick:()=>(async()=>{G(!0),await new Promise(e=>setTimeout(e,N)),G(!1)})(),disabled:R,\"data-testid\":\"remove-position-button\",children:[e.jsx(f,{className:\"portfolio__action-icon\"}),\"Remove\"]})]})]},a.symbol))})]}):e.jsxs(\"div\",{className:\"portfolio__empty-state\",\"data-testid\":\"empty-portfolio\",children:[e.jsx(m,{className:\"portfolio__empty-icon\"}),e.jsx(\"h3\",{children:\"No Holdings Yet\"}),e.jsx(\"p\",{children:\"Start building your portfolio by adding your first position.\"}),e.jsxs(t,{onClick:()=>P(!0),children:[e.jsx(d,{className:\"portfolio__control-icon\"}),\"Add Your First Position\"]})]})})})]}),y&&e.jsx(\"div\",{className:\"portfolio__modal-overlay\",\"data-testid\":\"add-position-modal\",children:e.jsxs(\"div\",{className:\"portfolio__modal\",children:[e.jsxs(\"div\",{className:\"portfolio__modal-header\",children:[e.jsx(\"h3\",{children:\"Add New Position\"}),e.jsx(t,{variant:\"outline\",size:\"sm\",onClick:()=>P(!1),\"data-testid\":\"close-modal-button\",children:\"\u00d7\"})]}),e.jsxs(\"div\",{className:\"portfolio__modal-body\",children:[e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"symbol\",children:\"Stock Symbol\"}),e.jsx(l,{id:\"symbol\",type:\"text\",placeholder:\"e.g., AAPL\",value:C,onChange:e=>S(e.target.value.toUpperCase()),\"data-testid\":\"symbol-input\"})]}),e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"shares\",children:\"Number of Shares\"}),e.jsx(l,{id:\"shares\",type:\"number\",placeholder:\"e.g., 100\",value:k,onChange:e=>w(e.target.value),\"data-testid\":\"shares-input\"})]}),e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"price\",children:\"Average Price\"}),e.jsx(l,{id:\"price\",type:\"number\",step:\"0.01\",placeholder:\"e.g., 150.00\",value:A,onChange:e=>z(e.target.value),\"data-testid\":\"price-input\"})]})]}),e.jsxs(\"div\",{className:\"portfolio__modal-footer\",children:[e.jsx(t,{variant:\"outline\",onClick:()=>P(!1),disabled:R,\"data-testid\":\"cancel-add-button\",children:\"Cancel\"}),e.jsx(t,{onClick:async()=>{C&&k&&A&&(G(!0),await new Promise(e=>setTimeout(e,1e3)),S(\"\"),w(\"\"),z(\"\"),P(!1),G(!1))},disabled:R||!C||!k||!A,\"data-testid\":\"confirm-add-button\",children:R?\"Adding...\":\"Add Position\"})]})]})})]})};export{g as default};",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "dist-baseline-test/assets/js/Securities-CRSZsdwj.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-baseline-test/assets/js/Securities-CRSZsdwj.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 2,
          "content": "import{a as e,_ as s}from\"./index-BXV1uie2.js\";import{j as i}from\"./data-Bv-1wmlB.js\";import{r as a,R as r}from\"./react-vendor-CFewNFzH.js\";import{VixBarChart as t}from\"./VixBarChart-DxDe98kd.js\";import{B as c}from\"./Button-CManshQT.js\";import{C as l,a as n,b as d}from\"./Card-CobffA9g.js\";import{G as o}from\"./GridOptimizationProvider-Dk_3Nzi2.js\";import{S as m,B as h,A as u,T as _,b as x,r as p}from\"./ui-DMFgMOOC.js\";import{P as j}from\"./ParentSize-FAAUvIBf.js\";import\"./ordinal-DWMvV58e.js\";import\"./AxisBottom-Do3PUUOn.js\";import\"./_baseGetTag-76xZNbvL.js\";import\"./GridColumns-g-vDgu7M.js\";import\"./Bar-BeL4cnsA.js\";import\"./LinearGradient-bYVEPoik.js\";const v=r.lazy(()=>s(()=>import(\"./VixLineChart-m6DmgT1w.js\"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]))),g=r.lazy(()=>s(()=>import(\"./VixAreaChart-DCUSHR8K.js\").then(e=>e.a),__vite__mapDeps([17,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16]))),N=r.lazy(()=>s(()=>import(\"./VixCandlestickChart-Ctq9cnW3.js\"),__vite__mapDeps([18,1,2,3,4,5,6,8,9,10,11,12,13,16]))),b=[{symbol:\"AAPL\",name:\"Apple Inc.\",price:175.84,change:2.31,changePercent:1.33,volume:45632e3,marketCap:\"2.75T\",peRatio:28.45,dividendYield:.52,sector:\"Technology\",exchange:\"NASDAQ\",high52Week:198.23,low52Week:164.08,beta:1.29,eps:6.18,revenue:\"394.33B\",operatingMargin:30.74,priceToBook:39.57,debtToEquity:195.33},{symbol:\"MSFT\",name:\"Microsoft Corporation\",price:378.85,change:-1.45,changePercent:-.38,volume:23154e3,marketCap:\"2.81T\",peRatio:34.72,dividendYield:.73,sector:\"Technology\",exchange:\"NASDAQ\",high52Week:384.3,low52Week:309.45,beta:.89,eps:10.92,revenue:\"211.92B\",operatingMargin:42.05,priceToBook:13.73,debtToEquity:47.05},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",price:142.56,change:0,changePercent:0,volume:28745e3,marketCap:\"1.78T\",peRatio:25.83,dividendYield:null,sector:\"Technology\",exchange:\"NASDAQ\",high52Week:153.78,low52Week:121.46,beta:1.05,eps:5.52,revenue:\"307.39B\",operatingMargin:25.89,priceToBook:5.18,debtToEquity:14.71},{symbol:\"TSLA\",name:\"Tesla, Inc.\",price:254.22,change:8.76,changePercent:3.57,volume:67891e3,marketCap:\"810B\",peRatio:65.23,dividendYield:null,sector:\"Consumer Discretionary\",exchange:\"NASDAQ\",high52Week:299.29,low52Week:152.37,beta:2.32,eps:3.9,revenue:\"96.77B\",operatingMargin:8.16,priceToBook:9.34,debtToEquity:17.19}],y=e=>{if(e.length<20)return{sma20:null,sma50:null,rsi:null,macd:null,bollingerUpper:null,bollingerLower:null};const s=e.map(e=>e.close),i=s.length-1,a=s.slice(i-19,i+1).reduce((e,s)=>e+s,0)/20,r=s.length>=50?s.slice(i-49,i+1).reduce((e,s)=>e+s,0)/50:null,t=a,c=s.slice(i-19,i+1).reduce((e,s)=>e+Math.pow(s-t,2),0)/20,l=Math.sqrt(c);return{sma20:a,sma50:r,rsi:50+40*(Math.random()-.5),macd:2*(Math.random()-.5),bollingerUpper:t+2*l,bollingerLower:t-2*l}},f=()=>{const[s,r]=a.useState(\"\"),[f,k]=a.useState([]),[S,w]=a.useState(!1),[T,A]=a.useState(!1),[C,M]=a.useState(\"\"),[D,P]=a.useState(\"1M\"),[L,R]=a.useState(!1),[B,F]=a.useState(\"line\"),{utilities:E,loadForContext:I}=e();a.useEffect(()=>{I(\"charts\").catch(console.error)},[I]);const V=e=>{var s;return(null==(s=E.formatNumber)?void 0:s.call(E,e))||new Intl.NumberFormat(\"en-US\").format(e)},W=e=>{var s;return(null==(s=E.formatCurrency)?void 0:s.call(E,e))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(e)},Y=e=>{var s;return null===e?\"N/A\":(null==(s=E.formatPercentage)?void 0:s.call(E,e))||`${e.toFixed(2)}%`},z=(e,s=2)=>{var i,a;return null===e?\"N/A\":(null==(a=null==(i=E.roundToDecimalPlaces)?void 0:i.call(E,e,s))?void 0:a.toString())||e.toFixed(s)},O=a.useCallback(e=>{const s={\"1D\":1,\"5D\":5,\"1M\":30,\"3M\":90,\"6M\":180,\"1Y\":365,\"5Y\":1825}[D];return((e,s,i=30)=>{const a=[];let r=.9*s;for(let t=i;t>=0;t--){const e=new Date;e.setDate(e.getDate()-t);const s=r,i=r*(1+2*(Math.random()-.5)*.02),c=Math.max(s,i)*(1+.01*Math.random()),l=Math.min(s,i)*(1-.01*Math.random()),n=Math.floor(5e7*Math.random())+1e7;a.push({date:e.toISOString().split(\"T\")[0],open:s,high:c,low:l,close:i,volume:n,timestamp:e.getTime()}),r=i}return a})(e.symbol,e.price,s)},[D]),U=e=>new Date(e).toLocaleDateString(),$=a.useCallback(e=>{const s=O(e),i=y(s);return s.map(e=>({...e,timestamp:new Date(e.date).getTime(),sma20:i.sma20,sma50:i.sma50,bollingerUpper:i.bollingerUpper,bollingerLower:i.bollingerLower}))},[O]),G=({height:e=400,title:s=\"Loading chart...\"})=>i.jsx(\"div\",{className:\"chart-skeleton animate-pulse bg-gray-100 rounded-lg flex items-center justify-center\",style:{height:e},\"data-testid\":\"chart-skeleton\",children:i.jsxs(\"div\",{className:\"text-gray-500 text-center\",children:[i.jsx(\"div\",{className:\"loading-spinner w-8 h-8 border-2 border-gray-300 border-t-blue-500 rounded-full animate-spin mx-auto mb-2\"}),i.jsx(\"p\",{children:s})]})}),q=e=>{const s=$(e),a=y(O(e)),r=e.price,t=e.change>=0;return i.jsx(j,{children:({width:e,height:c=400})=>i.jsxs(Suspense,{fallback:i.jsx(G,{height:c,title:`Loading ${B} chart...`}),children:[\"line\"===B&&i.jsx(v,{data:s,width:e,height:c,isPositive:t,currentPrice:r,showTechnicalIndicators:L,indicators:a}),\"area\"===B&&i.jsx(g,{data:s,width:e,height:c,isPositive:t,currentPrice:r}),\"candlestick\"===B&&i.jsx(N,{data:s,width:e,height:c,currentPrice:r})]})})},Q=e=>{const s={data:O(e).map(e=>({timestamp:new Date(e.date).getTime(),value:e.volume,volume:e.volume,originalData:e})),colors:{primary:\"#9ca3af\",grid:\"#e0e4e7\",axis:\"#666\",text:\"#666\"},xAxis:{enabled:!0,tickFormatter:e=>new Date(e).toLocaleDateString(\"en-US\",{month:\"short\",day:\"numeric\"}),label:\"Date\"},yAxis:{enabled:!0,tickFormatter:e=>(e/1e6).toFixed(1)+\"M\",label:\"Volume\"},tooltip:{enabled:!0,formatter:e=>[V(e),\"Volume\"],labelFormatter:U,contentStyle:{backgroundColor:\"#fff\",border:\"1px solid #e0e4e7\",borderRadius:\"4px\",fontSize:\"12px\"}},grid:{enabled:!0},margins:{top:10,right:30,bottom:30,left:60}};return i.jsx(j,{children:({width:e,height:a=200})=>i.jsx(t,{config:s,width:e,height:a})})};return i.jsx(o,{userBehavior:\"high\",deviceCapability:\"medium\",enableAnalytics:!1,children:i.jsxs(\"div\",{className:\"securities\",\"data-testid\":\"securities-page\",children:[i.jsxs(\"div\",{className:\"securities__header\",children:[i.jsx(\"h1\",{className:\"securities__title\",\"data-testid\":\"securities-heading\",children:\"Securities Research\"}),i.jsx(\"p\",{className:\"securities__subtitle\",children:\"Search and analyze financial securities with real-time data\"})]}),i.jsxs(l,{className:\"securities__search-card\",children:[i.jsx(n,{children:i.jsx(\"h2\",{children:\"Security Search\"})}),i.jsx(d,{children:i.jsx(\"form\",{onSubmit:async e=>{if(e.preventDefault(),s.trim())if(s.length<1)M(\"Search term must be at least 1 character\");else{M(\"\"),w(!0),A(!0);try{const e=500;await new Promise(s=>setTimeout(s,e));const i=b.filter(e=>e.symbol.toLowerCase().includes(s.toLowerCase())||e.name.toLowerCase().includes(s.toLowerCase()));k(i)}catch(i){M(\"Search failed. Please try again.\")}finally{w(!1)}}else M(\"Please enter a search term\")},className:\"securities__search-form\",children:i.jsxs(\"div\",{className:\"securities__search\",children:[i.jsxs(\"div\",{className:\"securities__search-input\",children:[i.jsx(m,{className:\"securities__search-icon\"}),i.jsx(\"input\",{type:\"text\",value:s,onChange:e=>{const s=e.target.value;if(r(s),C&&M(\"\"),s.length>=1){const e=b.filter(e=>e.symbol.toLowerCase().includes(s.toLowerCase())||e.name.toLowerCase().includes(s.toLowerCase()));k(e),A(!0)}else k([]),A(!1)},placeholder:\"Search for stocks, ETFs, or other securities...\",className:\"securities__input \"+(C?\"securities__input--error\":\"\"),\"data-testid\":\"securities-search-input\",disabled:S}),i.jsx(c,{type:\"submit\",disabled:S||!s.trim(),loading:S,\"data-testid\":\"securities-search-button\",className:\"securities__search-button\",\"aria-label\":S?\"Searching securities...\":\"Search for securities\",children:S?\"Searching...\":\"Search\"})]}),C&&i.jsx(\"span\",{className:\"securities__error\",\"data-testid\":\"search-error\",children:C}),i.jsx(\"p\",{className:\"securities__search-help\",children:\"Try searching for symbols like AAPL, MSFT, or company names like Apple, Microsoft\"})]})})})]}),i.jsxs(l,{className:\"securities__results-card\",children:[i.jsx(n,{children:i.jsx(\"h2\",{children:\"Search Results\"})}),i.jsx(d,{children:i.jsxs(\"div\",{className:\"securities__results\",\"data-testid\":\"securities-results\",children:[S&&i.jsx(\"div\",{className:\"securities__loading\",\"data-testid\":\"securities-loading\",children:i.jsx(\"p\",{children:\"Searching securities...\"})}),!S&&T&&0===f.length&&i.jsx(\"div\",{className:\"securities__no-results\",\"data-testid\":\"securities-no-results\",children:i.jsxs(\"p\",{children:['No securities found for \"',s,'\". Please try a different search term.']})}),!S&&f.length>0&&i.jsx(\"div\",{className:\"securities__results-list\",\"data-testid\":\"securities-results-list\",children:f.map(e=>{return i.jsxs(\"div\",{className:\"securities__result-item\",\"data-testid\":\"security-item\",children:[i.jsxs(\"div\",{className:\"securities__result-header\",children:[i.jsxs(\"div\",{className:\"securities__result-symbol\",children:[i.jsx(\"h3\",{children:e.symbol}),i.jsx(\"p\",{children:e.name}),i.jsxs(\"div\",{className:\"securities__result-meta\",children:[i.jsx(\"span\",{className:\"securities__sector\",children:e.sector}),i.jsx(\"span\",{className:\"securities__exchange\",children:e.exchange})]})]}),i.jsxs(\"div\",{className:\"securities__result-price\",children:[i.jsx(\"span\",{className:\"securities__price\",children:W(e.price)}),i.jsxs(\"div\",{className:\"securities__change \"+(e.change>=0?\"securities__change--positive\":\"securities__change--negative\"),children:[(r=e.change,r>0?i.jsx(_,{className:\"securities__trend-icon securities__trend-icon--up\"}):r<0?i.jsx(x,{className:\"securities__trend-icon securities__trend-icon--down\"}):i.jsx(p,{className:\"securities__trend-icon securities__trend-icon--neutral\"})),i.jsxs(\"span\",{children:[e.change>=0?\"+\":\"\",W(e.change),\" (\",e.changePercent>=0?\"+\":\"\",e.changePercent.toFixed(2),\"%)\"]})]})]})]}),i.jsxs(\"div\",{className:\"securities__financial-metrics\",children:[i.jsxs(\"div\",{className:\"securities__metrics-row\",children:[i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Valuation Metrics\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"P/E Ratio:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.peRatio)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"P/B Ratio:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.priceToBook)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"EPS:\"}),i.jsxs(\"span\",{className:\"securities__metric-value\",children:[\"$\",z(e.eps)]})]})]})]}),i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Financial Health\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Revenue:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:e.revenue})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Op. Margin:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:Y(e.operatingMargin)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"D/E Ratio:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.debtToEquity)})]})]})]})]}),i.jsxs(\"div\",{className:\"securities__metrics-row\",children:[i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Market Data\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Market Cap:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:e.marketCap})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Volume:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:V(e.volume)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Beta:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:z(e.beta)})]})]})]}),i.jsxs(\"div\",{className:\"securities__metric-group\",children:[i.jsx(\"h4\",{children:\"Performance & Yield\"}),i.jsxs(\"div\",{className:\"securities__metrics-grid\",children:[i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"52W Range:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:(s=e.low52Week,a=e.high52Week,`${W(s)} - ${W(a)}`)})]}),i.jsxs(\"div\",{className:\"securities__metric-item\",children:[i.jsx(\"span\",{className:\"securities__metric-label\",children:\"Dividend:\"}),i.jsx(\"span\",{className:\"securities__metric-value\",children:Y(e.dividendYield)})]})]})]})]})]}),i.jsxs(\"div\",{className:\"securities__charts-container\",\"data-testid\":\"price-charts-container\",children:[i.jsxs(\"div\",{className:\"securities__chart-header\",children:[i.jsxs(\"div\",{className:\"securities__chart-title\",children:[i.jsx(h,{className:\"securities__chart-icon\"}),i.jsx(\"h4\",{children:\"Price Chart & Technical Analysis\"})]}),i.jsxs(\"div\",{className:\"securities__chart-controls\",children:[i.jsxs(\"div\",{className:\"securities__timeframe-selector\",children:[i.jsx(\"span\",{className:\"securities__control-label\",children:\"Timeframe:\"}),[\"1D\",\"5D\",\"1M\",\"3M\",\"6M\",\"1Y\",\"5Y\"].map(e=>i.jsx(\"button\",{className:\"securities__timeframe-button \"+(D===e?\"securities__timeframe-button--active\":\"\"),onClick:()=>P(e),\"data-testid\":`timeframe-${e}`,children:e},e))]}),i.jsxs(\"div\",{className:\"securities__chart-type-selector\",children:[i.jsx(\"span\",{className:\"securities__control-label\",children:\"Chart:\"}),[{key:\"line\",label:\"Line\"},{key:\"area\",label:\"Area\"},{key:\"candlestick\",label:\"OHLC\"}].map(e=>i.jsx(\"button\",{className:\"securities__chart-type-button \"+(B===e.key?\"securities__chart-type-button--active\":\"\"),onClick:()=>F(e.key),\"data-testid\":`chart-type-${e.key}`,children:e.label},e.key))]}),i.jsx(\"div\",{className:\"securities__technical-indicators\",children:i.jsxs(\"label\",{className:\"securities__indicator-toggle\",children:[i.jsx(\"input\",{type:\"checkbox\",checked:L,onChange:e=>R(e.target.checked),\"data-testid\":\"technical-indicators-toggle\"}),i.jsx(\"span\",{children:\"Technical Indicators\"})]})})]})]}),i.jsxs(\"div\",{className:\"securities__chart-content\",children:[i.jsx(\"div\",{className:\"securities__price-chart\",\"data-testid\":\"price-chart\",children:q(e)}),i.jsxs(\"div\",{className:\"securities__volume-chart\",\"data-testid\":\"volume-chart\",children:[i.jsxs(\"div\",{className:\"securities__chart-subtitle\",children:[i.jsx(u,{className:\"securities__chart-icon\"}),i.jsx(\"h5\",{children:\"Volume\"})]}),Q(e)]})]}),L&&i.jsxs(\"div\",{className:\"securities__technical-summary\",\"data-testid\":\"technical-summary\",children:[i.jsx(\"h5\",{children:\"Technical Indicators\"}),i.jsx(\"div\",{className:\"securities__technical-grid\",children:(()=>{const s=O(e),a=y(s);return i.jsxs(i.Fragment,{children:[i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"RSI (14):\"}),i.jsx(\"span\",{className:\"securities__technical-value \"+(a.rsi&&a.rsi>70?\"securities__technical-value--overbought\":a.rsi&&a.rsi<30?\"securities__technical-value--oversold\":\"\"),children:a.rsi?a.rsi.toFixed(1):\"N/A\"})]}),i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"MACD:\"}),i.jsx(\"span\",{className:\"securities__technical-value \"+(a.macd&&a.macd>0?\"securities__technical-value--bullish\":\"securities__technical-value--bearish\"),children:a.macd?a.macd.toFixed(3):\"N/A\"})]}),i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"SMA 20:\"}),i.jsx(\"span\",{className:\"securities__technical-value\",children:a.sma20?W(a.sma20):\"N/A\"})]}),i.jsxs(\"div\",{className:\"securities__technical-item\",children:[i.jsx(\"span\",{className:\"securities__technical-label\",children:\"SMA 50:\"}),i.jsx(\"span\",{className:\"securities__technical-value\",children:a.sma50?W(a.sma50):\"N/A\"})]})]})})()})]})]}),i.jsxs(\"div\",{className:\"securities__result-actions\",children:[i.jsx(c,{size:\"sm\",variant:\"outline\",\"data-testid\":\"view-details-button\",children:\"View Details\"}),i.jsx(c,{size:\"sm\",\"data-testid\":\"add-to-portfolio-button\",children:\"Add to Portfolio\"})]})]},e.symbol);var s,a,r})}),!T&&i.jsxs(\"div\",{className:\"securities__placeholder\",\"data-testid\":\"securities-placeholder\",children:[i.jsx(\"p\",{children:\"Search results will appear here. This will include:\"}),i.jsxs(\"ul\",{children:[i.jsx(\"li\",{children:\"Security details and current prices\"}),i.jsx(\"li\",{children:\"Historical performance charts\"}),i.jsx(\"li\",{children:\"AI-powered analysis and recommendations\"}),i.jsx(\"li\",{children:\"Related securities and market insights\"})]})]})]})})]})]})})};export{f as default};",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/phase7-validation-system.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-validation-system.js",
      "console_count": 111,
      "console_lines": [
        {
          "line_number": 133,
          "content": "console.log('\ud83d\ude80 Phase 7 Validation System - 10 Concurrent Subagent Framework Initialized');",
          "type": "log"
        },
        {
          "line_number": 156,
          "content": "console.log(`\ud83d\udcc1 Created Phase 7 validation directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log('\ud83e\udd16 SUBAGENT 1: Baseline Generation and Target Mapping');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log(`\u2705 SUBAGENT 1 COMPLETE: Baselines saved to ${baselineFile}`);",
          "type": "log"
        },
        {
          "line_number": 227,
          "content": "console.log('\ud83e\udd16 SUBAGENT 2: Bundle Size Validation and Achievement Measurement');",
          "type": "log"
        },
        {
          "line_number": 287,
          "content": "console.log(`\ud83d\udcca ${target.name}: ${this.formatBytes(baseline)} \u2192 ${this.formatBytes(current)} (${this.formatBytes(result.reduction)} reduction, ${result.achievementPercentage.toFixed(1)}% of target)`);",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log(`\u2705 SUBAGENT 2 COMPLETE: Bundle validation saved to ${validationFile}`);",
          "type": "log"
        },
        {
          "line_number": 318,
          "content": "console.log('\ud83e\udd16 SUBAGENT 3: Performance Regression Testing and Monitoring');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.log('\ud83d\udcca Measuring build performance...');",
          "type": "log"
        },
        {
          "line_number": 336,
          "content": "console.log('\u26a1 Assessing runtime performance...');",
          "type": "log"
        },
        {
          "line_number": 340,
          "content": "console.log('\ud83e\udde0 Measuring memory usage...');",
          "type": "log"
        },
        {
          "line_number": 344,
          "content": "console.log('\ud83c\udf10 Testing core web vitals...');",
          "type": "log"
        },
        {
          "line_number": 348,
          "content": "console.log('\ud83d\udd0d Detecting performance regressions...');",
          "type": "log"
        },
        {
          "line_number": 352,
          "content": "console.log('\ud83d\udcc8 Analyzing load time improvements...');",
          "type": "log"
        },
        {
          "line_number": 362,
          "content": "console.log(`\u2705 SUBAGENT 3 COMPLETE: Performance validation saved to ${performanceFile}`);",
          "type": "log"
        },
        {
          "line_number": 376,
          "content": "console.log('\ud83e\udd16 SUBAGENT 4: Functionality Integrity and Regression Testing');",
          "type": "log"
        },
        {
          "line_number": 394,
          "content": "console.log('\ud83e\uddea Running unit tests...');",
          "type": "log"
        },
        {
          "line_number": 397,
          "content": "console.log('\ud83d\udd17 Running integration tests...');",
          "type": "log"
        },
        {
          "line_number": 400,
          "content": "console.log('\ud83c\udf10 Running E2E tests...');",
          "type": "log"
        },
        {
          "line_number": 403,
          "content": "console.log('\ud83e\udde9 Running component-specific tests...');",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log('\ud83d\udce6 Running bundle integrity tests...');",
          "type": "log"
        },
        {
          "line_number": 410,
          "content": "console.log('\ud83d\udcca Analyzing test coverage...');",
          "type": "log"
        },
        {
          "line_number": 414,
          "content": "console.log('\ud83d\udd0d Performing regression analysis...');",
          "type": "log"
        },
        {
          "line_number": 427,
          "content": "console.log(`\u2705 SUBAGENT 4 COMPLETE: Functionality validation saved to ${functionalityFile}`);",
          "type": "log"
        },
        {
          "line_number": 441,
          "content": "console.log('\ud83e\udd16 SUBAGENT 5: Real-time Monitoring and Alerting System');",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.log('\ud83d\udcca Setting up monitoring infrastructure...');",
          "type": "log"
        },
        {
          "line_number": 458,
          "content": "console.log('\ud83d\udcc8 Configuring performance metrics...');",
          "type": "log"
        },
        {
          "line_number": 462,
          "content": "console.log('\ud83d\udea8 Setting up alerting system...');",
          "type": "log"
        },
        {
          "line_number": 466,
          "content": "console.log('\ud83d\udcf1 Creating monitoring dashboard...');",
          "type": "log"
        },
        {
          "line_number": 470,
          "content": "console.log('\ud83d\udd04 Enabling continuous validation...');",
          "type": "log"
        },
        {
          "line_number": 480,
          "content": "console.log(`\u2705 SUBAGENT 5 COMPLETE: Monitoring system saved to ${monitoringFile}`);",
          "type": "log"
        },
        {
          "line_number": 494,
          "content": "console.log('\ud83e\udd16 SUBAGENT 6: Comprehensive Benchmarking and Performance Analysis');",
          "type": "log"
        },
        {
          "line_number": 513,
          "content": "console.log('\ud83d\udce6 Running bundle size benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 517,
          "content": "console.log('\u26a1 Running load time benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 521,
          "content": "console.log('\ud83d\ude80 Running runtime benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 525,
          "content": "console.log('\ud83e\udde0 Running memory benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 529,
          "content": "console.log('\ud83d\udcbe Running caching benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 533,
          "content": "console.log('\ud83c\udf10 Running network benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 537,
          "content": "console.log('\ud83d\udcca Performing comparative analysis...');",
          "type": "log"
        },
        {
          "line_number": 541,
          "content": "console.log('\ud83d\udcc8 Generating performance profiles...');",
          "type": "log"
        },
        {
          "line_number": 545,
          "content": "console.log('\ud83d\udd0d Analyzing performance bottlenecks...');",
          "type": "log"
        },
        {
          "line_number": 555,
          "content": "console.log(`\u2705 SUBAGENT 6 COMPLETE: Benchmarking suite saved to ${benchmarkFile}`);",
          "type": "log"
        },
        {
          "line_number": 569,
          "content": "console.log('\ud83e\udd16 SUBAGENT 7: Evidence Collection and Achievement Documentation');",
          "type": "log"
        },
        {
          "line_number": 592,
          "content": "console.log('\ud83d\udce6 Collecting bundle reduction evidence...');",
          "type": "log"
        },
        {
          "line_number": 596,
          "content": "console.log('\u26a1 Collecting performance evidence...');",
          "type": "log"
        },
        {
          "line_number": 600,
          "content": "console.log('\ud83e\uddea Collecting functionality evidence...');",
          "type": "log"
        },
        {
          "line_number": 604,
          "content": "console.log('\ud83d\udd12 Collecting regression prevention evidence...');",
          "type": "log"
        },
        {
          "line_number": 608,
          "content": "console.log('\ud83d\udcca Generating visual evidence...');",
          "type": "log"
        },
        {
          "line_number": 612,
          "content": "console.log('\ud83d\udd22 Compiling quantitative evidence...');",
          "type": "log"
        },
        {
          "line_number": 616,
          "content": "console.log('\ud83d\udcdd Compiling qualitative evidence...');",
          "type": "log"
        },
        {
          "line_number": 620,
          "content": "console.log('\u2705 Validating compliance...');",
          "type": "log"
        },
        {
          "line_number": 630,
          "content": "console.log(`\u2705 SUBAGENT 7 COMPLETE: Evidence collection saved to ${evidenceFile}`);",
          "type": "log"
        },
        {
          "line_number": 644,
          "content": "console.log('\ud83e\udd16 SUBAGENT 8: Achievement Validation and Success Measurement');",
          "type": "log"
        },
        {
          "line_number": 664,
          "content": "console.log('\ud83c\udfaf Validating individual target achievements...');",
          "type": "log"
        },
        {
          "line_number": 671,
          "content": "console.log('\ud83c\udfc6 Validating overall Phase 7 achievement...');",
          "type": "log"
        },
        {
          "line_number": 675,
          "content": "console.log('\ud83d\udcca Measuring success metrics...');",
          "type": "log"
        },
        {
          "line_number": 679,
          "content": "console.log('\ud83c\udfc5 Generating achievement certification...');",
          "type": "log"
        },
        {
          "line_number": 683,
          "content": "console.log('\ud83d\udcc8 Comparing with Phase 6 results...');",
          "type": "log"
        },
        {
          "line_number": 687,
          "content": "console.log('\ud83c\udf1f Identifying exceeded expectations...');",
          "type": "log"
        },
        {
          "line_number": 697,
          "content": "console.log(`\u2705 SUBAGENT 8 COMPLETE: Achievement validation saved to ${achievementFile}`);",
          "type": "log"
        },
        {
          "line_number": 711,
          "content": "console.log('\ud83e\udd16 SUBAGENT 9: Comprehensive Reporting and Documentation');",
          "type": "log"
        },
        {
          "line_number": 737,
          "content": "console.log('\ud83d\udccb Generating executive summary...');",
          "type": "log"
        },
        {
          "line_number": 741,
          "content": "console.log('\ud83d\udd27 Generating technical report...');",
          "type": "log"
        },
        {
          "line_number": 745,
          "content": "console.log('\ud83c\udfc6 Generating achievement report...');",
          "type": "log"
        },
        {
          "line_number": 749,
          "content": "console.log('\ud83d\udcca Generating comparison report...');",
          "type": "log"
        },
        {
          "line_number": 753,
          "content": "console.log('\ud83d\udca1 Generating recommendations report...');",
          "type": "log"
        },
        {
          "line_number": 757,
          "content": "console.log('\ud83d\udcda Creating comprehensive documentation...');",
          "type": "log"
        },
        {
          "line_number": 761,
          "content": "console.log('\ud83d\udcc8 Generating presentations...');",
          "type": "log"
        },
        {
          "line_number": 771,
          "content": "console.log(`\u2705 SUBAGENT 9 COMPLETE: Reporting system saved to ${reportingFile}`);",
          "type": "log"
        },
        {
          "line_number": 785,
          "content": "console.log('\ud83e\udd16 SUBAGENT 10: Integration Coordination and Final Validation');",
          "type": "log"
        },
        {
          "line_number": 809,
          "content": "console.log('\ud83d\udd17 Coordinating all subagent results...');",
          "type": "log"
        },
        {
          "line_number": 814,
          "content": "console.log('\u2705 Performing final comprehensive validation...');",
          "type": "log"
        },
        {
          "line_number": 818,
          "content": "console.log('\ud83d\ude80 Assessing delivery readiness...');",
          "type": "log"
        },
        {
          "line_number": 831,
          "content": "console.log(`\u2705 SUBAGENT 10 COMPLETE: Integration coordination saved to ${integrationFile}`);",
          "type": "log"
        },
        {
          "line_number": 845,
          "content": "console.log('\ud83d\ude80 STARTING PHASE 7 COMPREHENSIVE VALIDATION - 10 CONCURRENT SUBAGENTS');",
          "type": "log"
        },
        {
          "line_number": 846,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 875,
          "content": "console.log('\u26a1 DEPLOYING SUBAGENTS 1-9 CONCURRENTLY...');",
          "type": "log"
        },
        {
          "line_number": 879,
          "content": "console.log('\ud83d\udd17 EXECUTING FINAL COORDINATION SUBAGENT 10...');",
          "type": "log"
        },
        {
          "line_number": 894,
          "content": "console.log('\u2705 PHASE 7 COMPREHENSIVE VALIDATION COMPLETED');",
          "type": "log"
        },
        {
          "line_number": 895,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 901,
          "content": "console.error('\u274c Phase 7 validation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 930,
          "content": "console.log(`\u2705 ${subagentId.toUpperCase()} COMPLETED - ${this.subagentCoordination.completedSubagents.size}/10 subagents complete`);",
          "type": "log"
        },
        {
          "line_number": 938,
          "content": "console.error(`\u274c ${subagentId.toUpperCase()} FAILED: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 952,
          "content": "console.log('\ud83d\udcca Loaded Phase 7 baselines from', baselineFile);",
          "type": "log"
        },
        {
          "line_number": 954,
          "content": "console.warn('\u26a0\ufe0f Could not load Phase 7 baselines:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 991,
          "content": "console.warn('\u26a0\ufe0f Could not analyze build output:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 1032,
          "content": "console.log(`\ud83d\udce6 Mapped ${targetName} to bundle: ${matchingChunk}`);",
          "type": "log"
        },
        {
          "line_number": 1036,
          "content": "console.warn(`\u26a0\ufe0f Could not find bundle size for target: ${targetName}`);",
          "type": "warn"
        },
        {
          "line_number": 1045,
          "content": "console.log('\ud83d\udd28 Building project for Phase 7 analysis...');",
          "type": "log"
        },
        {
          "line_number": 1051,
          "content": "console.log('\u2705 Build completed successfully');",
          "type": "log"
        },
        {
          "line_number": 1053,
          "content": "console.error('\u274c Build failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 1093,
          "content": "console.log('\\n\ud83d\udcca === Phase 7 Baselines Summary ===');",
          "type": "log"
        },
        {
          "line_number": 1094,
          "content": "console.log(`Total Current Size: ${this.formatBytes(baselines.totalCurrentSize)}`);",
          "type": "log"
        },
        {
          "line_number": 1095,
          "content": "console.log(`Total Target Reduction: ${this.formatBytes(baselines.totalTargetReduction)}`);",
          "type": "log"
        },
        {
          "line_number": 1096,
          "content": "console.log('Bundle Details:');",
          "type": "log"
        },
        {
          "line_number": 1098,
          "content": "console.log(`  \ud83d\udce6 ${name}: ${this.formatBytes(data.size)} (Target: -${this.formatBytes(data.target.targetReduction)}, ${data.optimizationStrategy})`);",
          "type": "log"
        },
        {
          "line_number": 1100,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 1107,
          "content": "console.log('\\n\ud83c\udfaf === Phase 7 Validation Summary ===');",
          "type": "log"
        },
        {
          "line_number": 1109,
          "content": "console.log(`\ud83d\udcca Session ID: ${validationSession.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 1110,
          "content": "console.log(`\ud83d\udd50 Timestamp: ${validationSession.timestamp}`);",
          "type": "log"
        },
        {
          "line_number": 1114,
          "content": "console.log(`\ud83d\udcca Bundle Optimization: ${bundleResults.summary.overallAchievementPercentage.toFixed(1)}% of target achieved`);",
          "type": "log"
        },
        {
          "line_number": 1115,
          "content": "console.log(`\u2705 Successful targets: ${bundleResults.summary.successCount}`);",
          "type": "log"
        },
        {
          "line_number": 1116,
          "content": "console.log(`\u274c Failed targets: ${bundleResults.summary.failureCount}`);",
          "type": "log"
        },
        {
          "line_number": 1119,
          "content": "console.log(`\ud83c\udf1f Exceptional achievements (>100% of target):`);",
          "type": "log"
        },
        {
          "line_number": 1121,
          "content": "console.log(`    ${achievement.target}: ${achievement.achievement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 1126,
          "content": "console.log(`\ud83e\udd16 Completed Subagents: ${this.subagentCoordination.completedSubagents.size}/10`);",
          "type": "log"
        },
        {
          "line_number": 1127,
          "content": "console.log(`\u274c Failed Subagents: ${this.subagentCoordination.failedSubagents.size}/10`);",
          "type": "log"
        },
        {
          "line_number": 1129,
          "content": "console.log(`\ud83c\udfc6 Overall Success: ${validationSession.overallSuccess ? '\u2705 SUCCESS' : '\u274c FAILURE'}`);",
          "type": "log"
        },
        {
          "line_number": 1130,
          "content": "console.log('====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 1356,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 1393,
          "content": "console.error('\u274c Phase 7 validation error:', error.message);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/phase7-benchmark-suite.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-benchmark-suite.js",
      "console_count": 55,
      "console_lines": [
        {
          "line_number": 91,
          "content": "console.log('\ud83c\udfc1 Phase 7 Comprehensive Benchmarking Suite Initialized');",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log('\ud83c\udfc1 STARTING PHASE 7 COMPREHENSIVE BENCHMARKING SUITE');",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 142,
          "content": "console.log('\ud83d\udcca RUNNING BUNDLE ANALYSIS BENCHMARKS...');",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log('\u26a1 RUNNING LOAD PERFORMANCE BENCHMARKS...');",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log('\ud83d\ude80 RUNNING RUNTIME PERFORMANCE BENCHMARKS...');",
          "type": "log"
        },
        {
          "line_number": 151,
          "content": "console.log('\ud83e\udde0 RUNNING MEMORY PROFILING BENCHMARKS...');",
          "type": "log"
        },
        {
          "line_number": 154,
          "content": "console.log('\ud83c\udf10 RUNNING NETWORK SIMULATION BENCHMARKS...');",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "console.log('\ud83d\udcc8 RUNNING COMPARATIVE ANALYSIS BENCHMARKS...');",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log('\ud83d\udd0d GENERATING COMPREHENSIVE ANALYSIS...');",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log('\ud83d\udcca GENERATING PHASE COMPARISONS...');",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "console.log('\ud83c\udfc6 CALCULATING OVERALL PERFORMANCE SCORE...');",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('\ud83d\udcc8 GENERATING STATISTICAL ANALYSIS...');",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log('\ud83d\udccb GENERATING COMPREHENSIVE BENCHMARK REPORT...');",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log('\u2705 PHASE 7 COMPREHENSIVE BENCHMARKING COMPLETED');",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.error('\u274c Benchmarking failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 237,
          "content": "console.log(`\u2705 Bundle analysis benchmarks completed`);",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.error('\u274c Bundle analysis benchmarks failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 266,
          "content": "console.log(`\ud83d\udce1 Testing ${conditionName} network conditions...`);",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log(`\u2705 Load performance benchmarks completed`);",
          "type": "log"
        },
        {
          "line_number": 296,
          "content": "console.error('\u274c Load performance benchmarks failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 321,
          "content": "console.log(`\ud83d\udcf1 Testing ${profileName} device profile...`);",
          "type": "log"
        },
        {
          "line_number": 347,
          "content": "console.log(`\u2705 Runtime performance benchmarks completed`);",
          "type": "log"
        },
        {
          "line_number": 351,
          "content": "console.error('\u274c Runtime performance benchmarks failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 398,
          "content": "console.log(`\u2705 Memory profiling benchmarks completed`);",
          "type": "log"
        },
        {
          "line_number": 402,
          "content": "console.error('\u274c Memory profiling benchmarks failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 426,
          "content": "console.log(`\ud83c\udf10 Deep testing ${conditionName} network simulation...`);",
          "type": "log"
        },
        {
          "line_number": 450,
          "content": "console.log(`\u2705 Network simulation benchmarks completed`);",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.error('\u274c Network simulation benchmarks failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 500,
          "content": "console.log(`\u2705 Comparative analysis benchmarks completed`);",
          "type": "log"
        },
        {
          "line_number": 504,
          "content": "console.error('\u274c Comparative analysis benchmarks failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 548,
          "content": "console.warn('\u26a0\ufe0f Could not generate comprehensive analysis:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 587,
          "content": "console.warn('\u26a0\ufe0f Could not generate phase comparisons:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 629,
          "content": "console.warn('\u26a0\ufe0f Could not generate statistical analysis:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 717,
          "content": "console.log(`\ud83d\udccb Comprehensive benchmark report saved: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 840,
          "content": "console.log('\\n\ud83c\udfc1 === Phase 7 Benchmarking Summary ===');",
          "type": "log"
        },
        {
          "line_number": 841,
          "content": "console.log(`\ud83d\udcca Session ID: ${benchmarkSession.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 842,
          "content": "console.log(`\ud83d\udd50 Timestamp: ${benchmarkSession.timestamp}`);",
          "type": "log"
        },
        {
          "line_number": 843,
          "content": "console.log(`\ud83c\udfc6 Overall Score: ${benchmarkSession.overallScore}/100`);",
          "type": "log"
        },
        {
          "line_number": 845,
          "content": "console.log('\\n\ud83d\udcc8 Benchmark Suite Results:');",
          "type": "log"
        },
        {
          "line_number": 849,
          "content": "console.log(`  ${status} ${category}: ${score}/100`);",
          "type": "log"
        },
        {
          "line_number": 853,
          "content": "console.log('\\n\ud83c\udfaf Key Metrics:');",
          "type": "log"
        },
        {
          "line_number": 855,
          "content": "console.log(`  Bundle Size Reduction: ${metrics.bundleSizeReduction?.toFixed(1) || 'N/A'}%`);",
          "type": "log"
        },
        {
          "line_number": 856,
          "content": "console.log(`  Load Time Improvement: ${metrics.loadTimeImprovement?.toFixed(1) || 'N/A'}%`);",
          "type": "log"
        },
        {
          "line_number": 857,
          "content": "console.log(`  Memory Efficiency: ${metrics.memoryEfficiency?.toFixed(1) || 'N/A'}%`);",
          "type": "log"
        },
        {
          "line_number": 860,
          "content": "console.log('==========================================\\n');",
          "type": "log"
        },
        {
          "line_number": 1393,
          "content": "console.log('Bundle analysis benchmarks:', JSON.stringify(bundleResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1398,
          "content": "console.log('Load performance benchmarks:', JSON.stringify(loadResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1403,
          "content": "console.log('Runtime performance benchmarks:', JSON.stringify(runtimeResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1408,
          "content": "console.log('Memory profiling benchmarks:', JSON.stringify(memoryResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1413,
          "content": "console.log('Network simulation benchmarks:', JSON.stringify(networkResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1418,
          "content": "console.log('Comparative analysis benchmarks:', JSON.stringify(comparativeResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1429,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 1476,
          "content": "console.error('\u274c Benchmarking error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/subagent-10-bundle-monitor.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/subagent-10-bundle-monitor.js",
      "console_count": 89,
      "console_lines": [
        {
          "line_number": 133,
          "content": "console.log('\u2705 Bundle monitoring is already running');",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log('Use \"npm run monitor:status\" to check system status');",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('\ud83d\ude80 Bundle Monitoring System started successfully');",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "console.log(`\ud83d\udcca Real-time monitoring: http://localhost:${config.realTimeMonitoring.port}`);",
          "type": "log"
        },
        {
          "line_number": 175,
          "content": "console.log(`\ud83e\udd16 AI predictions: ${config.predictiveAnalytics.enabled ? 'Enabled' : 'Disabled'}`);",
          "type": "log"
        },
        {
          "line_number": 176,
          "content": "console.log(`\ud83d\udcc8 Live dashboard: ${options['enable-dashboard'] ? 'Available' : 'Disabled'}`);",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log('\ud83d\udcca System Metrics:', {",
          "type": "log"
        },
        {
          "line_number": 191,
          "content": "console.log('\\n\ud83d\udca1 Press Ctrl+C to stop monitoring');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log('\u26a0\ufe0f  Bundle monitoring is not running');",
          "type": "log"
        },
        {
          "line_number": 234,
          "content": "console.log('\u2705 Bundle monitoring stopped successfully');",
          "type": "log"
        },
        {
          "line_number": 243,
          "content": "console.log('\u26a0\ufe0f  Monitoring system stopped (forced cleanup)');",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log('\ud83d\udd04 Restarting Bundle Monitoring System...');",
          "type": "log"
        },
        {
          "line_number": 270,
          "content": "console.log('\u274c Bundle monitoring is not running');",
          "type": "log"
        },
        {
          "line_number": 271,
          "content": "console.log('Use \"npm run monitor:start\" to start monitoring');",
          "type": "log"
        },
        {
          "line_number": 280,
          "content": "console.log('\u2705 Bundle monitoring is running');",
          "type": "log"
        },
        {
          "line_number": 281,
          "content": "console.log('\ud83d\udcca System Status:');",
          "type": "log"
        },
        {
          "line_number": 282,
          "content": "console.log(`   Uptime: ${Math.round(response.metrics.uptime / 1000)}s`);",
          "type": "log"
        },
        {
          "line_number": 283,
          "content": "console.log(`   Total Predictions: ${response.metrics.totalPredictions}`);",
          "type": "log"
        },
        {
          "line_number": 284,
          "content": "console.log(`   Alerts Generated: ${response.metrics.alertsGenerated}`);",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log(`   System Overhead: ${response.performance.overhead.toFixed(2)}%`);",
          "type": "log"
        },
        {
          "line_number": 286,
          "content": "console.log(`   Connected Clients: ${response.metrics.connectedClients}`);",
          "type": "log"
        },
        {
          "line_number": 287,
          "content": "console.log(`   Last Update: ${response.metrics.lastUpdate}`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('\u26a0\ufe0f  Recent Alerts:');",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log(`   ${alert.severity.toUpperCase()}: ${alert.message}`);",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log('\u26a0\ufe0f  Bundle monitoring process running but not responding');",
          "type": "log"
        },
        {
          "line_number": 298,
          "content": "console.log('Consider restarting: \"npm run monitor:restart\"');",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log('\u274c Error checking system status:', error.message);",
          "type": "log"
        },
        {
          "line_number": 310,
          "content": "console.log('\ud83d\ude80 Launching Live Performance Dashboard...');",
          "type": "log"
        },
        {
          "line_number": 313,
          "content": "console.log('\u274c Bundle monitoring is not running');",
          "type": "log"
        },
        {
          "line_number": 314,
          "content": "console.log('Start monitoring first: \"npm run monitor:start\"');",
          "type": "log"
        },
        {
          "line_number": 324,
          "content": "console.log(`\ud83d\udcca Dashboard available at: ${dashboardUrl}`);",
          "type": "log"
        },
        {
          "line_number": 330,
          "content": "console.log('\ud83c\udf10 Dashboard opened in browser');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.log('\u26a0\ufe0f  Could not open browser automatically');",
          "type": "log"
        },
        {
          "line_number": 333,
          "content": "console.log(`Please open ${dashboardUrl} manually`);",
          "type": "log"
        },
        {
          "line_number": 342,
          "content": "console.log('\ud83d\udd0d Running Bundle Regression Analysis...');",
          "type": "log"
        },
        {
          "line_number": 360,
          "content": "console.log('\ud83d\udcca Analysis Results:');",
          "type": "log"
        },
        {
          "line_number": 361,
          "content": "console.log('   \ud83d\udd2e Regression predictions generated');",
          "type": "log"
        },
        {
          "line_number": 362,
          "content": "console.log('   \ud83d\udcc8 Performance correlations analyzed');",
          "type": "log"
        },
        {
          "line_number": 363,
          "content": "console.log('   \ud83c\udfaf Optimization opportunities identified');",
          "type": "log"
        },
        {
          "line_number": 367,
          "content": "console.log(`\ud83d\udcc4 Detailed report saved to: ${reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 382,
          "content": "console.log('\ud83c\udfaf Generating Bundle Optimization Recommendations...');",
          "type": "log"
        },
        {
          "line_number": 391,
          "content": "console.log('\ud83d\udca1 Optimization Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 392,
          "content": "console.log('   \ud83d\udce6 Bundle size optimizations identified');",
          "type": "log"
        },
        {
          "line_number": 393,
          "content": "console.log('   \u26a1 Build performance improvements available');",
          "type": "log"
        },
        {
          "line_number": 394,
          "content": "console.log('   \ud83d\udcbe Caching strategy optimizations suggested');",
          "type": "log"
        },
        {
          "line_number": 395,
          "content": "console.log('   \ud83c\udf33 Tree-shaking improvements recommended');",
          "type": "log"
        },
        {
          "line_number": 422,
          "content": "console.log(`\\n${index + 1}. ${rec.type.toUpperCase()}`);",
          "type": "log"
        },
        {
          "line_number": 423,
          "content": "console.log(`   Description: ${rec.description}`);",
          "type": "log"
        },
        {
          "line_number": 424,
          "content": "console.log(`   Savings: ${rec.estimatedSavings}`);",
          "type": "log"
        },
        {
          "line_number": 425,
          "content": "console.log(`   Effort: ${rec.effort}`);",
          "type": "log"
        },
        {
          "line_number": 426,
          "content": "console.log(`   Priority: ${rec.priority}`);",
          "type": "log"
        },
        {
          "line_number": 441,
          "content": "console.log('\ud83d\udd17 Integrating with Existing Monitoring Systems...');",
          "type": "log"
        },
        {
          "line_number": 451,
          "content": "console.log('\u274c System compatibility issues found:');",
          "type": "log"
        },
        {
          "line_number": 453,
          "content": "console.log(`   \u2022 ${issue}`);",
          "type": "log"
        },
        {
          "line_number": 455,
          "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 457,
          "content": "console.log(`   \u2022 ${rec}`);",
          "type": "log"
        },
        {
          "line_number": 471,
          "content": "console.log('\u2705 Integration completed successfully');",
          "type": "log"
        },
        {
          "line_number": 472,
          "content": "console.log('\ud83d\ude80 Enhanced monitoring capabilities available');",
          "type": "log"
        },
        {
          "line_number": 486,
          "content": "console.log('\ud83d\udd0d Validating Bundle Monitor System...');",
          "type": "log"
        },
        {
          "line_number": 495,
          "content": "console.log('\u2705 System validation passed');",
          "type": "log"
        },
        {
          "line_number": 496,
          "content": "console.log('\ud83d\ude80 Bundle monitoring system is ready to use');",
          "type": "log"
        },
        {
          "line_number": 498,
          "content": "console.log('\u274c System validation failed');",
          "type": "log"
        },
        {
          "line_number": 499,
          "content": "console.log('\\nIssues found:');",
          "type": "log"
        },
        {
          "line_number": 501,
          "content": "console.log(`   \u2022 ${issue}`);",
          "type": "log"
        },
        {
          "line_number": 503,
          "content": "console.log('\\nRecommendations:');",
          "type": "log"
        },
        {
          "line_number": 505,
          "content": "console.log(`   \u2022 ${rec}`);",
          "type": "log"
        },
        {
          "line_number": 510,
          "content": "console.log('\u274c Validation error:', error.message);",
          "type": "log"
        },
        {
          "line_number": 532,
          "content": "console.log('\u274c Unknown config action:', action);",
          "type": "log"
        },
        {
          "line_number": 533,
          "content": "console.log('Available actions: show, reset, validate');",
          "type": "log"
        },
        {
          "line_number": 549,
          "content": "console.log(`\ud83d\udcc4 Showing last ${options.lines} lines from ${this.logFile}:`);",
          "type": "log"
        },
        {
          "line_number": 550,
          "content": "console.log('\u2500'.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 557,
          "content": "console.log(line);",
          "type": "log"
        },
        {
          "line_number": 561,
          "content": "console.log('\ud83d\udcc4 No log file found');",
          "type": "log"
        },
        {
          "line_number": 564,
          "content": "console.log('\u274c Error reading logs:', error.message);",
          "type": "log"
        },
        {
          "line_number": 572,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 729,
          "content": "console.log('\\\\n\ud83d\uded1 Shutting down Bundle Monitoring System...');",
          "type": "log"
        },
        {
          "line_number": 734,
          "content": "console.log('\u2705 Bundle monitoring stopped gracefully');",
          "type": "log"
        },
        {
          "line_number": 737,
          "content": "console.error('\u274c Error during shutdown:', error.message);",
          "type": "error"
        },
        {
          "line_number": 792,
          "content": "console.log('\ud83d\udcc4 Current Configuration:');",
          "type": "log"
        },
        {
          "line_number": 793,
          "content": "console.log(JSON.stringify(config, null, 2));",
          "type": "log"
        },
        {
          "line_number": 795,
          "content": "console.log('\u274c Error showing config:', error.message);",
          "type": "log"
        },
        {
          "line_number": 803,
          "content": "console.log('\u2705 Configuration reset to defaults');",
          "type": "log"
        },
        {
          "line_number": 805,
          "content": "console.log('\u274c Error resetting config:', error.message);",
          "type": "log"
        },
        {
          "line_number": 817,
          "content": "console.log('\u274c Configuration validation failed');",
          "type": "log"
        },
        {
          "line_number": 818,
          "content": "console.log('Missing sections:', missing.join(', '));",
          "type": "log"
        },
        {
          "line_number": 820,
          "content": "console.log('\u2705 Configuration validation passed');",
          "type": "log"
        },
        {
          "line_number": 823,
          "content": "console.log('\u274c Error validating config:', error.message);",
          "type": "log"
        },
        {
          "line_number": 863,
          "content": "console.error('Log write error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 872,
          "content": "console.error('\u274c Bundle Monitor CLI error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase7-master-validator.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-master-validator.js",
      "console_count": 61,
      "console_lines": [
        {
          "line_number": 67,
          "content": "console.log('\ud83c\udfbc Phase 7 Master Validation Orchestrator Initialized');",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log('\ud83c\udfaf Building on Phase 6\\'s proven 78.7%, 81%, 73.9% reduction success');",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('\ud83c\udfbc STARTING PHASE 7 MASTER VALIDATION ORCHESTRATION');",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log(`\ud83d\udcca Session ID: ${this.orchestrationState.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 97,
          "content": "console.log(`\u2699\ufe0f Execution Mode: ${mode}`);",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log(`\ud83c\udfaf Phase 7 Targets: data, AxisBottom, dashboard, index optimizations`);",
          "type": "log"
        },
        {
          "line_number": 99,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log('\ud83d\udccb GENERATING COMPREHENSIVE ORCHESTRATION REPORT...');",
          "type": "log"
        },
        {
          "line_number": 136,
          "content": "console.log('\ud83c\udfc6 CALCULATING PHASE 7 ACHIEVEMENTS...');",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "console.log('\u2705 PHASE 7 MASTER VALIDATION ORCHESTRATION COMPLETED');",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 154,
          "content": "console.error('\u274c Phase 7 orchestration failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 171,
          "content": "console.log('\u26a1 EXECUTING PARALLEL VALIDATION - ALL COMPONENTS CONCURRENT');",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log('\u2705 Parallel validation completed');",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log('\ud83d\udd04 EXECUTING SEQUENTIAL VALIDATION - COORDINATED EXECUTION');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('\ud83d\udcca Step 1: Starting monitoring dashboard...');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log('\ud83e\uddea Step 2: Executing validation system...');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log('\ud83d\udd0d Step 3: Executing regression testing...');",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log('\ud83c\udfc1 Step 4: Executing benchmark suite...');",
          "type": "log"
        },
        {
          "line_number": 224,
          "content": "console.log('\ud83d\udcca Step 5: Stopping monitoring dashboard...');",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.log('\u2705 Sequential validation completed');",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log('\ud83c\udfad EXECUTING STAGED VALIDATION - DEPENDENCY-AWARE COORDINATION');",
          "type": "log"
        },
        {
          "line_number": 239,
          "content": "console.log('\ud83c\udfad STAGE 1: Infrastructure Setup');",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('\ud83c\udfad STAGE 2: Baseline Validation');",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log('\ud83c\udfad STAGE 3: Concurrent Analysis Phase');",
          "type": "log"
        },
        {
          "line_number": 257,
          "content": "console.log('\ud83c\udfad STAGE 4: Performance Validation Phase');",
          "type": "log"
        },
        {
          "line_number": 266,
          "content": "console.log('\ud83c\udfad STAGE 5: Comprehensive Testing Phase');",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.log('\ud83c\udfad STAGE 6: Final Coordination and Reporting');",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log('\ud83c\udfad STAGE 7: Orchestration Completion');",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('\u2705 Staged validation completed');",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log('\ud83d\udcca EXECUTING MONITORING DASHBOARD ONLY');",
          "type": "log"
        },
        {
          "line_number": 300,
          "content": "console.log('\ud83d\udcca Monitoring dashboard started - press Ctrl+C to stop');",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.log('\\n\ud83d\udcca Stopping monitoring dashboard...');",
          "type": "log"
        },
        {
          "line_number": 316,
          "content": "console.log('\ud83e\uddea EXECUTING VALIDATION SYSTEM ONLY');",
          "type": "log"
        },
        {
          "line_number": 324,
          "content": "console.log('\ud83d\udd0d EXECUTING REGRESSION TESTING ONLY');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.log('\ud83c\udfc1 EXECUTING BENCHMARK SUITE ONLY');",
          "type": "log"
        },
        {
          "line_number": 346,
          "content": "console.log(`\ud83d\ude80 Executing ${componentName}...`);",
          "type": "log"
        },
        {
          "line_number": 370,
          "content": "console.log(`\u2705 ${componentName} completed successfully (${duration}ms)`);",
          "type": "log"
        },
        {
          "line_number": 387,
          "content": "console.error(`\u274c ${componentName} failed (${duration}ms): ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 403,
          "content": "console.log(`\ud83d\udcca Monitoring dashboard started (PID: ${monitoringProcess.pid})`);",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.warn('\u26a0\ufe0f Could not start monitoring dashboard:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 425,
          "content": "console.error('\u274c Could not start monitoring dashboard:', error.message);",
          "type": "error"
        },
        {
          "line_number": 437,
          "content": "console.log(`\ud83d\udcca Background process stopped (PID: ${process.pid})`);",
          "type": "log"
        },
        {
          "line_number": 439,
          "content": "console.warn('\u26a0\ufe0f Could not stop background process:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 452,
          "content": "console.log(`\u2705 ${componentName} completed successfully`);",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.error(`\u274c ${componentName} failed:`, result.reason.message);",
          "type": "error"
        },
        {
          "line_number": 497,
          "content": "console.log(`\ud83d\udccb Orchestration report saved: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 885,
          "content": "console.log('\\n\ud83c\udfbc === Phase 7 Orchestration Summary ===');",
          "type": "log"
        },
        {
          "line_number": 886,
          "content": "console.log(`\ud83d\udcca Session ID: ${this.orchestrationState.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 887,
          "content": "console.log(`\ud83d\udd50 Duration: ${this.calculateTotalDuration()}s`);",
          "type": "log"
        },
        {
          "line_number": 888,
          "content": "console.log(`\ud83c\udfc6 Overall Success: ${this.orchestrationState.overallSuccess ? '\u2705 SUCCESS' : '\u274c FAILURE'}`);",
          "type": "log"
        },
        {
          "line_number": 890,
          "content": "console.log('\\n\ud83e\udde9 Component Execution:');",
          "type": "log"
        },
        {
          "line_number": 894,
          "content": "console.log(`  ${status} ${name}: ${duration}s`);",
          "type": "log"
        },
        {
          "line_number": 898,
          "content": "console.log('\\n\ud83c\udfaf Phase 7 Achievements:');",
          "type": "log"
        },
        {
          "line_number": 899,
          "content": "console.log(`  Bundle Optimization: ${this.orchestrationState.achievements.bundleOptimization?.achievementRate || 0}%`);",
          "type": "log"
        },
        {
          "line_number": 900,
          "content": "console.log(`  Performance: ${this.orchestrationState.achievements.performanceImprovements?.status || 'unknown'}`);",
          "type": "log"
        },
        {
          "line_number": 901,
          "content": "console.log(`  Overall Score: ${this.orchestrationState.achievements.overallScore}/100`);",
          "type": "log"
        },
        {
          "line_number": 904,
          "content": "console.log('==========================================\\n');",
          "type": "log"
        },
        {
          "line_number": 965,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 1012,
          "content": "console.error('\u274c Orchestration error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/lint-pre-commit.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-pre-commit.js",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.error(`\u274c ${message}`);",
          "type": "error"
        },
        {
          "line_number": 47,
          "content": "console.warn(`\u26a0\ufe0f  ${message}`);",
          "type": "warn"
        },
        {
          "line_number": 50,
          "content": "console.log(`\u2705 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`\ud83d\udd0d ${message}`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('\\n\ud83d\udca1 Tip: Run \"npm run lint:fix\" to automatically fix issues before committing.');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase4-master-validator.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-master-validator.js",
      "console_count": 49,
      "console_lines": [
        {
          "line_number": 156,
          "content": "console.log(`\ud83d\udcc1 Created master validation directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log('\ud83c\udfaf Starting Phase 4 Master Validation Suite...');",
          "type": "log"
        },
        {
          "line_number": 166,
          "content": "console.log(`Session ID: ${this.session.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 167,
          "content": "console.log(`Timestamp: ${this.session.timestamp}`);",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log(`Git Branch: ${this.session.gitInfo.branch}`);",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "console.log(`Git Commit: ${this.session.gitInfo.commit.slice(0, 8)}`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log('\\n' + '='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "console.log('\\n\ud83d\udd0d Step 1: Pre-validation checks');",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log('\\n\ud83d\udcca Step 2: Starting performance monitoring');",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log('\\n\ud83e\uddea Step 3: Running validation sequence');",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log('\\n\ud83d\udcca Step 4: Analyzing validation results');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log('\\n\ud83d\udcc8 Step 5: Generating master validation report');",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.log('\\n\ud83d\udcbe Step 6: Saving session results');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log('\\n' + '='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log(`\ud83c\udfc6 Phase 4 Master Validation ${success ? 'COMPLETED SUCCESSFULLY' : 'COMPLETED WITH ISSUES'}`);",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log(`Session: ${this.session.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.error('\\n\u274c Phase 4 Master Validation FAILED:', error.message);",
          "type": "error"
        },
        {
          "line_number": 228,
          "content": "console.log('  \ud83d\udd28 Checking build capability...');",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log('    \u2705 Build check passed');",
          "type": "log"
        },
        {
          "line_number": 239,
          "content": "console.log('    \u274c Build check failed:', error.message);",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('  \ud83d\udcdc Checking validation scripts...');",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log(`    \u2705 ${step.script} found`);",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.log(`    \u274c ${step.script} not found`);",
          "type": "log"
        },
        {
          "line_number": 270,
          "content": "console.log(`  \ud83d\udcca Starting monitoring dashboard on port ${this.config.monitoring.port}...`);",
          "type": "log"
        },
        {
          "line_number": 272,
          "content": "console.log('    \u2705 Monitoring started (background process)');",
          "type": "log"
        },
        {
          "line_number": 280,
          "content": "console.log('    \u26a0\ufe0f Could not start monitoring:', error.message);",
          "type": "log"
        },
        {
          "line_number": 298,
          "content": "console.log(`\\n  \ud83e\uddea Running ${step.name} validation...`);",
          "type": "log"
        },
        {
          "line_number": 324,
          "content": "console.log(`    \ud83d\udcbb Executing: ${command}`);",
          "type": "log"
        },
        {
          "line_number": 334,
          "content": "console.log(`    \u2705 ${step.name} completed successfully (${duration}ms)`);",
          "type": "log"
        },
        {
          "line_number": 345,
          "content": "console.log(`    ${step.required ? '\u274c' : '\u26a0\ufe0f'} ${step.name} ${step.required ? 'failed' : 'failed (optional)'} (${duration}ms)`);",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log(`    \ud83d\udcca Analysis complete: ${analysis.successfulSteps} successful, ${analysis.failedSteps} failed`);",
          "type": "log"
        },
        {
          "line_number": 435,
          "content": "console.log(`    \ud83d\udcc8 Master report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 604,
          "content": "console.log(`    \ud83d\udcbe Session saved: ${sessionFile}`);",
          "type": "log"
        },
        {
          "line_number": 613,
          "content": "console.log('\\n\ud83c\udfc6 === Master Validation Summary ===');",
          "type": "log"
        },
        {
          "line_number": 614,
          "content": "console.log(`\ud83c\udfaf Overall Success: ${this.session.overallSuccess ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 615,
          "content": "console.log(`\ud83d\udcca Successful Steps: ${summary?.successfulSteps || 0}`);",
          "type": "log"
        },
        {
          "line_number": 616,
          "content": "console.log(`\u274c Failed Steps: ${summary?.failedSteps || 0}`);",
          "type": "log"
        },
        {
          "line_number": 617,
          "content": "console.log(`\ud83d\udea8 Errors: ${this.session.errors.length}`);",
          "type": "log"
        },
        {
          "line_number": 618,
          "content": "console.log(`\u26a0\ufe0f Warnings: ${this.session.warnings.length}`);",
          "type": "log"
        },
        {
          "line_number": 619,
          "content": "console.log(`\ud83d\udcc8 Reports Generated: ${Object.keys(this.session.results).length}`);",
          "type": "log"
        },
        {
          "line_number": 620,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 623,
          "content": "console.log('\ud83c\udf89 \ud83c\udf86 PHASE 4 VALIDATION SUCCESSFUL! \ud83c\udf86 \ud83c\udf89');",
          "type": "log"
        },
        {
          "line_number": 624,
          "content": "console.log('\ud83c\udfaf Ready for Phase 4 deployment!');",
          "type": "log"
        },
        {
          "line_number": 626,
          "content": "console.log('\u26a0\ufe0f \ud83d\udea8 PHASE 4 VALIDATION REQUIRES ATTENTION \ud83d\udea8 \u26a0\ufe0f');",
          "type": "log"
        },
        {
          "line_number": 627,
          "content": "console.log('\ud83d\udd27 Please address validation issues before deployment.');",
          "type": "log"
        },
        {
          "line_number": 650,
          "content": "console.log('\u2705 Pre-validation checks completed successfully');",
          "type": "log"
        },
        {
          "line_number": 655,
          "content": "console.log('Phase 4 validation status checking...');",
          "type": "log"
        },
        {
          "line_number": 660,
          "content": "console.log(`\\n\ud83c\udfaf Phase 4 Master Validation Coordinator\\n\\n\ud83c\udfc6 **PERFORMANCE VALIDATION SPECIALIST #6**\\n",
          "type": "log"
        },
        {
          "line_number": 665,
          "content": "console.error('\u274c Master validation error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/build-performance-integration.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-performance-integration.js",
      "console_count": 38,
      "console_lines": [
        {
          "line_number": 66,
          "content": "console.log('\ud83d\ude80 Starting comprehensive build performance analysis...');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log('\ud83d\udce6 Phase 1: Cache Optimization Analysis...');",
          "type": "log"
        },
        {
          "line_number": 86,
          "content": "console.log('\u23f1\ufe0f Phase 2: Build Performance Monitoring...');",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log('\ud83d\udcca Phase 3: Baseline Analysis...');",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log('\ud83d\udea8 Phase 4: Performance Alert Analysis...');",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log('\ud83d\udca1 Phase 5: Generating Comprehensive Recommendations...');",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log(`\u2705 Comprehensive analysis completed in ${Math.round(totalTime)}ms`);",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.log(`\ud83d\udcc4 Analysis saved: ${analysisFile}`);",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.error('\u274c Comprehensive analysis failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 142,
          "content": "console.log('\ud83d\udd0d Analyzing cache performance...');",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "console.warn('\u26a0\ufe0f Cache analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 169,
          "content": "console.log('\ud83c\udfd7\ufe0f Running build with comprehensive monitoring...');",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.warn('\u26a0\ufe0f Build monitoring failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 215,
          "content": "console.log('\ud83d\udcc8 Performing baseline analysis...');",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.warn('\u26a0\ufe0f Baseline analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 238,
          "content": "console.log('\u26a0\ufe0f Analyzing performance alerts...');",
          "type": "log"
        },
        {
          "line_number": 249,
          "content": "console.warn('\u26a0\ufe0f Alert analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 404,
          "content": "console.log('\\n\ud83d\udcca === Comprehensive Build Performance Analysis Summary ===');",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.log(`\ud83c\udfaf Overall Score: ${overall.score}/100 (${overall.healthStatus.toUpperCase()})`);",
          "type": "log"
        },
        {
          "line_number": 408,
          "content": "console.log(`\u2705 Success Rate: ${overall.successRate.toFixed(1)}% (${overall.successCount}/${overall.totalCount} components)`);",
          "type": "log"
        },
        {
          "line_number": 411,
          "content": "console.log(`\ud83d\udea8 Critical Issues: ${overall.criticalIssues}`);",
          "type": "log"
        },
        {
          "line_number": 415,
          "content": "console.log(`\u26a0\ufe0f High Priority Issues: ${overall.highPriorityIssues}`);",
          "type": "log"
        },
        {
          "line_number": 419,
          "content": "console.log('\\n\ud83d\udccb Component Status:');",
          "type": "log"
        },
        {
          "line_number": 422,
          "content": "console.log(`  ${status} ${name.charAt(0).toUpperCase() + name.slice(1)}`);",
          "type": "log"
        },
        {
          "line_number": 427,
          "content": "console.log('\\n\ud83d\udca1 Top Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 430,
          "content": "console.log(`  ${i + 1}. ${priority} ${rec.message}`);",
          "type": "log"
        },
        {
          "line_number": 434,
          "content": "console.log('\\n===============================================================\\n');",
          "type": "log"
        },
        {
          "line_number": 472,
          "content": "console.log('\ud83d\udea8 CI/CD: CRITICAL issues detected - failing build');",
          "type": "log"
        },
        {
          "line_number": 477,
          "content": "console.log('\u26a0\ufe0f CI/CD: Performance score too low - failing build');",
          "type": "log"
        },
        {
          "line_number": 482,
          "content": "console.log('\u26a0\ufe0f CI/CD: Too many high priority issues - warning');",
          "type": "log"
        },
        {
          "line_number": 486,
          "content": "console.log('\u2705 CI/CD: Performance checks passed');",
          "type": "log"
        },
        {
          "line_number": 494,
          "content": "console.log('\ud83e\uddea Generating integration test report...');",
          "type": "log"
        },
        {
          "line_number": 603,
          "content": "console.log('\ud83e\uddea Integration Test Results:');",
          "type": "log"
        },
        {
          "line_number": 604,
          "content": "console.log(JSON.stringify(testReport, null, 2));",
          "type": "log"
        },
        {
          "line_number": 613,
          "content": "console.log('\ud83d\udd04 Running CI/CD integration analysis...');",
          "type": "log"
        },
        {
          "line_number": 621,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 648,
          "content": "console.error('\u274c Integration error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 661,
          "content": "console.error('Build performance integration failed:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/environment-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/environment-validation.js",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 40,
          "content": "console.log(`${color}${message}${COLORS.RESET}`);",
          "type": "log"
        },
        {
          "line_number": 449,
          "content": "console.error('Validation failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/lint-ci.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-ci.js",
      "console_count": 14,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.error(`${prefix} \u274c ${message}`);",
          "type": "error"
        },
        {
          "line_number": 47,
          "content": "console.warn(`${prefix} \u26a0\ufe0f  ${message}`);",
          "type": "warn"
        },
        {
          "line_number": 50,
          "content": "console.log(`${prefix} \u2705 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`${prefix} \ud83d\udd0d ${message}`);",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log(`${prefix} \ud83d\udcca ${message}`);",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log('\\n\ud83d\udccb CI Lint Summary:');",
          "type": "log"
        },
        {
          "line_number": 163,
          "content": "console.log(`   Files analyzed: ${filesCount}`);",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log(`   Errors found: ${errorsCount}`);",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log(`   Warnings found: ${warningsCount}`);",
          "type": "log"
        },
        {
          "line_number": 166,
          "content": "console.log(`   Duration: ${duration}ms`);",
          "type": "log"
        },
        {
          "line_number": 167,
          "content": "console.log(`\\n\ud83d\udcc4 Reports generated:`);",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log(`   JSON report: ${LINT_REPORT_FILE}`);",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "console.log(`   JUnit report: ${LINT_JUNIT_FILE}`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log(`   Performance metrics: ${PERFORMANCE_FILE}`);",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/clear-lint-cache.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/clear-lint-cache.js",
      "console_count": 20,
      "console_lines": [
        {
          "line_number": 62,
          "content": "console.log(`${emoji} ${message}`);",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log('\u2501'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.log(`\u2705 ${name}`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log(`   File: ${fileName}`);",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log(`   Size: ${formatBytes(info.size)}`);",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log(`   Modified: ${info.lastModifiedFormatted}`);",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log(`\u274c ${name}`);",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log(`   File: ${fileName} (not found)`);",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log(`   Error: ${info.error}`);",
          "type": "log"
        },
        {
          "line_number": 136,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 140,
          "content": "console.log('\u2501'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.log('\u2501'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 246,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 260,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 270,
          "content": "console.error('\u274c Cache management failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 271,
          "content": "console.error(error.stack);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/run-comprehensive-dark-theme-tests.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/run-comprehensive-dark-theme-tests.js",
      "console_count": 21,
      "console_lines": [
        {
          "line_number": 83,
          "content": "console.log(`${timestamp} ${prefix} ${message}`);",
          "type": "log"
        },
        {
          "line_number": 289,
          "content": "console.log('\\n' + '='.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('\ud83c\udfa8 COMPREHENSIVE DARK THEME INTEGRATION TEST RESULTS');",
          "type": "log"
        },
        {
          "line_number": 291,
          "content": "console.log('='.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log(`\ud83d\udcc5 Completed: ${timestamp}`);",
          "type": "log"
        },
        {
          "line_number": 293,
          "content": "console.log(`\u23f1\ufe0f  Total Duration: ${totalDurationMinutes} minutes`);",
          "type": "log"
        },
        {
          "line_number": 294,
          "content": "console.log(`\ud83c\udfaf Overall Success: ${overallSuccess ? '\u2705 PASSED' : '\u274c FAILED'}`);",
          "type": "log"
        },
        {
          "line_number": 295,
          "content": "console.log(`\ud83d\udcca Success Rate: ${successRate.toFixed(1)}% (${passedTests}/${totalTests})`);",
          "type": "log"
        },
        {
          "line_number": 296,
          "content": "console.log(`\ud83d\udd25 Critical Tests: ${criticalSuccessRate.toFixed(1)}% (${passedCriticalTests}/${criticalTests})`);",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log('\\n\ud83d\udccb Test Suite Results:');",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log(`   ${status} ${result.name}${critical} (${result.durationMinutes}m)`);",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.log('\\n\ud83c\udfaf Coverage Summary:');",
          "type": "log"
        },
        {
          "line_number": 307,
          "content": "console.log(`   ${area.replace(/([A-Z])/g, ' $1').trim()}: ${status}`);",
          "type": "log"
        },
        {
          "line_number": 310,
          "content": "console.log(`\\n\ud83d\udcc4 Reports Generated:`);",
          "type": "log"
        },
        {
          "line_number": 311,
          "content": "console.log(`   JSON: ${jsonReportPath}`);",
          "type": "log"
        },
        {
          "line_number": 312,
          "content": "console.log(`   HTML: ${htmlReportPath}`);",
          "type": "log"
        },
        {
          "line_number": 315,
          "content": "console.log('\\n\ud83c\udf89 ALL COMPREHENSIVE DARK THEME TESTS PASSED SUCCESSFULLY!');",
          "type": "log"
        },
        {
          "line_number": 316,
          "content": "console.log('\u2705 Theme implementation is production-ready with full integration validation');",
          "type": "log"
        },
        {
          "line_number": 318,
          "content": "console.log('\\n\u26a0\ufe0f  Some tests failed - please review the detailed results above');",
          "type": "log"
        },
        {
          "line_number": 321,
          "content": "console.log('='.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 482,
          "content": "console.error(error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/lint-watch.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-watch.js",
      "console_count": 15,
      "console_lines": [
        {
          "line_number": 64,
          "content": "console.error(`[${timestamp}] \u274c ${message}`);",
          "type": "error"
        },
        {
          "line_number": 67,
          "content": "console.warn(`[${timestamp}] \u26a0\ufe0f  ${message}`);",
          "type": "warn"
        },
        {
          "line_number": 70,
          "content": "console.log(`[${timestamp}] \u2705 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log(`[${timestamp}] \ud83d\udd0d ${message}`);",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log(`[${timestamp}] \ud83d\udc40 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('\\n\u2328\ufe0f  Keyboard controls:');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log('   r + Enter: Force re-lint all files');",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log('   c + Enter: Clear console');",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log('   q + Enter: Quit gracefully');",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.log('   Ctrl+C: Force exit');",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log('\ud83d\ude80 Starting ESLint Watch Mode');",
          "type": "log"
        },
        {
          "line_number": 286,
          "content": "console.log(`\ud83d\udcc1 Watching directories: ${WATCH_DIRECTORIES.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 287,
          "content": "console.log(`\ud83d\udcc4 File extensions: ${LINT_EXTENSIONS.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 288,
          "content": "console.log('');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase4-benchmark-suite.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-benchmark-suite.js",
      "console_count": 37,
      "console_lines": [
        {
          "line_number": 133,
          "content": "console.log(`\ud83d\udcc1 Created benchmark directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 142,
          "content": "console.log('\ud83d\ude80 Starting Phase 4 comprehensive benchmark suite...');",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.log(`\ud83d\udd25 Running ${this.config.warmupRuns} warmup builds...`);",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.log('\u23f1\ufe0f Running build performance benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "console.log('\ud83d\udce6 Running bundle size stability tests...');",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('\ud83c\udf10 Running load time simulation benchmarks...');",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log('\ud83e\udde0 Running memory usage profiling...');",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log('\ud83d\udd0d Running performance regression analysis...');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log(`\u2705 Phase 4 benchmark suite completed. Results saved: ${sessionFile}`);",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.error('\u274c Benchmark suite failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 212,
          "content": "console.log(`\u23f1\ufe0f Running ${this.config.buildRuns} build performance measurements...`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`  \ud83d\udcca Build run ${i + 1}/${this.config.buildRuns}...`);",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.log(`    \u23f1\ufe0f Build ${i + 1}: ${buildTime.toFixed(0)}ms, Bundle: ${this.formatBytes(bundleSize)}`);",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.warn(`    \u26a0\ufe0f Build ${i + 1} failed:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 263,
          "content": "console.log('\ud83d\udce6 Testing bundle size stability and determinism...');",
          "type": "log"
        },
        {
          "line_number": 269,
          "content": "console.log(`  \ud83d\udcca Stability test ${i + 1}/3...`);",
          "type": "log"
        },
        {
          "line_number": 306,
          "content": "console.log('\ud83c\udf10 Simulating load times across network conditions...');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.log(`  \ud83c\udf10 ${condition}: ${loadTime.totalLoadTime.toFixed(0)}ms`);",
          "type": "log"
        },
        {
          "line_number": 346,
          "content": "console.log('\ud83e\udde0 Profiling memory usage...');",
          "type": "log"
        },
        {
          "line_number": 356,
          "content": "console.log(`  \ud83e\udde0 Memory profiling run ${i + 1}/3...`);",
          "type": "log"
        },
        {
          "line_number": 377,
          "content": "console.log(`    \ud83e\udde0 Memory delta: RSS ${this.formatBytes(memoryDelta.rss)}, Heap ${this.formatBytes(memoryDelta.heapUsed)}`);",
          "type": "log"
        },
        {
          "line_number": 380,
          "content": "console.warn(`    \u26a0\ufe0f Memory profiling run ${i + 1} failed:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 397,
          "content": "console.log('\ud83d\udd0d Analyzing performance regressions...');",
          "type": "log"
        },
        {
          "line_number": 431,
          "content": "console.warn('\u26a0\ufe0f Regression analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 478,
          "content": "console.warn('\u26a0\ufe0f Could not clean previous builds:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 487,
          "content": "console.log(`  \ud83d\udd25 Warmup build ${i + 1}/${this.config.warmupRuns}...`);",
          "type": "log"
        },
        {
          "line_number": 498,
          "content": "console.warn(`    \u26a0\ufe0f Warmup build ${i + 1} failed:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 821,
          "content": "console.log('\\n\ud83d\udcca === Phase 4 Benchmark Summary ===');",
          "type": "log"
        },
        {
          "line_number": 822,
          "content": "console.log(`\u23f1\ufe0f Build Time: ${Math.round(summary.buildPerformance.meanBuildTime / 1000)}s (${summary.buildPerformance.buildTimeVariability})`);",
          "type": "log"
        },
        {
          "line_number": 823,
          "content": "console.log(`\ud83d\udce6 Bundle Size: ${this.formatBytes(summary.buildPerformance.meanBundleSize)}`);",
          "type": "log"
        },
        {
          "line_number": 824,
          "content": "console.log(`\ud83d\udd04 Build Stability: ${summary.stability.deterministic ? '\u2705 Deterministic' : '\u274c Non-deterministic'}`);",
          "type": "log"
        },
        {
          "line_number": 827,
          "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 829,
          "content": "console.log(`${i + 1}. [${rec.priority.toUpperCase()}] ${rec.message}`);",
          "type": "log"
        },
        {
          "line_number": 833,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 920,
          "content": "console.log(`\\n\ud83c\udfaf Benchmark session completed: ${results.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 925,
          "content": "console.log(`\\n\ud83d\ude80 Phase 4 Automated Performance Benchmarking Suite\\n\\nUsage: node phase4-benchmark-suite.js <command>\\n\\nCommands:\\n  build-performance     Benchmark build performance across multiple runs\\n  bundle-stability      Test bundle size stability and determinism\\n  load-simulation      Simulate load times across network conditions\\n  memory-profiling     Profile memory usage during builds\\n  full-benchmark       Run complete benchmark suite\\n  benchmark           Alias for full-benchmark\\n  help               Show this help message\\n\\nConfiguration:\\n  - Build runs: ${BENCHMARK_CONFIG.buildRuns}\\n  - Performance runs: ${BENCHMARK_CONFIG.performanceRuns}\\n  - Confidence level: ${BENCHMARK_CONFIG.confidenceLevel}\\n  - Timeout: ${BENCHMARK_CONFIG.timeoutMs / 1000}s\\n        `);",
          "type": "log"
        },
        {
          "line_number": 929,
          "content": "console.error('\u274c Benchmark suite error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/build-performance-monitor.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-performance-monitor.js",
      "console_count": 27,
      "console_lines": [
        {
          "line_number": 224,
          "content": "console.warn('Cache analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 305,
          "content": "console.warn('Bundle analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 454,
          "content": "console.log('\ud83d\ude80 Starting build performance monitoring...');",
          "type": "log"
        },
        {
          "line_number": 490,
          "content": "console.log(`\ud83d\udcca Build phase started: ${phase}`);",
          "type": "log"
        },
        {
          "line_number": 499,
          "content": "console.log(`\u2705 Build phase completed: ${phase} (${duration}ms)`);",
          "type": "log"
        },
        {
          "line_number": 515,
          "content": "console.log(`${icon} Alert [${level.toUpperCase()}]: ${message}`);",
          "type": "log"
        },
        {
          "line_number": 520,
          "content": "console.log('\ud83d\udd0d Analyzing build performance...');",
          "type": "log"
        },
        {
          "line_number": 544,
          "content": "console.log('\ud83d\udcdd No previous build report found for regression comparison');",
          "type": "log"
        },
        {
          "line_number": 582,
          "content": "console.warn('\u26a0\ufe0f Could not perform regression analysis:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 587,
          "content": "console.log('\ud83d\udcca Generating build performance report...');",
          "type": "log"
        },
        {
          "line_number": 615,
          "content": "console.log('\\n\ud83d\udcca === Build Performance Summary ===');",
          "type": "log"
        },
        {
          "line_number": 616,
          "content": "console.log(`\ud83c\udfd7\ufe0f Total Build Time: ${Math.round(report.totalDuration)}ms`);",
          "type": "log"
        },
        {
          "line_number": 617,
          "content": "console.log(`\ud83d\udcbe Peak Memory Usage: ${Math.round(report.memory.peak.heapUsed / 1024 / 1024)}MB`);",
          "type": "log"
        },
        {
          "line_number": 622,
          "content": "console.log(`\ud83d\udce6 Total Bundle Size: ${totalSizeKB}KB (${gzippedSizeKB}KB gzipped)`);",
          "type": "log"
        },
        {
          "line_number": 626,
          "content": "console.log(`\ud83c\udfaf Cache Hit Ratio: ${report.cacheMetrics.hitRatio.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 631,
          "content": "console.log('\\n\ud83d\udcc8 Build Phase Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 634,
          "content": "console.log(`  ${phase}: ${Math.round(duration)}ms (${percentage.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 640,
          "content": "console.log('\\n\ud83d\udea8 Performance Alerts:');",
          "type": "log"
        },
        {
          "line_number": 648,
          "content": "console.log(`  ${icon} ${alert.message}`);",
          "type": "log"
        },
        {
          "line_number": 654,
          "content": "console.log('\\n\ud83d\udca1 Optimization Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 656,
          "content": "console.log(`  \u2022 ${rec.message}`);",
          "type": "log"
        },
        {
          "line_number": 658,
          "content": "console.log(`    Suggestion: ${rec.suggestion}`);",
          "type": "log"
        },
        {
          "line_number": 663,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 689,
          "content": "console.log(`\ud83d\udd28 Executing build command: ${buildCommand}`);",
          "type": "log"
        },
        {
          "line_number": 707,
          "content": "console.log('\u2705 Build monitoring completed successfully!');",
          "type": "log"
        },
        {
          "line_number": 713,
          "content": "console.error('\u274c Build failed with monitoring data captured');",
          "type": "error"
        },
        {
          "line_number": 735,
          "content": "console.error('Build monitoring failed:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase7-regression-testing.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-regression-testing.js",
      "console_count": 52,
      "console_lines": [
        {
          "line_number": 81,
          "content": "console.log('\ud83e\uddea Phase 7 Regression Testing Suite Initialized');",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log('\ud83d\ude80 STARTING PHASE 7 COMPREHENSIVE REGRESSION TESTING SUITE');",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 139,
          "content": "console.log('\u26a1 RUNNING CORE REGRESSION TESTS CONCURRENTLY...');",
          "type": "log"
        },
        {
          "line_number": 152,
          "content": "console.log('\ud83c\udf10 RUNNING CROSS-BROWSER COMPATIBILITY TESTS...');",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.log('\ud83d\udd0d ANALYZING REGRESSIONS...');",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log('\ud83d\udccb GENERATING REGRESSION TEST REPORT...');",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log('\u2705 PHASE 7 REGRESSION TESTING COMPLETED');",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('=' .repeat(80));",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.error('\u274c Regression testing failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 195,
          "content": "console.log('\ud83e\uddea Running functionality regression tests...');",
          "type": "log"
        },
        {
          "line_number": 249,
          "content": "console.log(`\u2705 Functionality tests completed: ${functionalityTests.summary.passed}/${functionalityTests.summary.total} passed`);",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.error('\u274c Functionality regression tests failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 264,
          "content": "console.log('\u26a1 Running performance regression tests...');",
          "type": "log"
        },
        {
          "line_number": 323,
          "content": "console.log(`\u2705 Performance tests completed: ${performanceTests.summary.passed}/${performanceTests.summary.total} passed`);",
          "type": "log"
        },
        {
          "line_number": 328,
          "content": "console.error('\u274c Performance regression tests failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 338,
          "content": "console.log('\ud83d\udce6 Running bundle integrity tests...');",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log(`\u2705 Bundle integrity tests completed: ${bundleTests.summary.passed}/${bundleTests.summary.total} passed`);",
          "type": "log"
        },
        {
          "line_number": 411,
          "content": "console.error('\u274c Bundle integrity tests failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 421,
          "content": "console.log('\ud83d\udd04 Running progressive loading tests...');",
          "type": "log"
        },
        {
          "line_number": 477,
          "content": "console.log(`\u2705 Progressive loading tests completed: ${progressiveTests.summary.passed}/${progressiveTests.summary.total} passed`);",
          "type": "log"
        },
        {
          "line_number": 482,
          "content": "console.error('\u274c Progressive loading tests failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 492,
          "content": "console.log('\ud83c\udf10 Running cross-browser compatibility tests...');",
          "type": "log"
        },
        {
          "line_number": 510,
          "content": "console.log(`\ud83c\udf10 Testing ${browser}...`);",
          "type": "log"
        },
        {
          "line_number": 530,
          "content": "console.log(`\u2705 Cross-browser tests completed: ${crossBrowserTests.summary.passed}/${crossBrowserTests.summary.total} passed`);",
          "type": "log"
        },
        {
          "line_number": 535,
          "content": "console.error('\u274c Cross-browser tests failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 545,
          "content": "console.log('\ud83e\udde0 Running memory leak detection tests...');",
          "type": "log"
        },
        {
          "line_number": 595,
          "content": "console.log(`\u2705 Memory leak detection completed: ${memoryTests.summary.passed}/${memoryTests.summary.total} passed`);",
          "type": "log"
        },
        {
          "line_number": 600,
          "content": "console.error('\u274c Memory leak detection failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 613,
          "content": "console.error(`\u274c ${testType} test failed:`, settledResult.reason.message);",
          "type": "error"
        },
        {
          "line_number": 662,
          "content": "console.log('\ud83d\udcca No baseline found, current results will serve as baseline');",
          "type": "log"
        },
        {
          "line_number": 691,
          "content": "console.warn('\u26a0\ufe0f Could not compare with baseline:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 816,
          "content": "console.log(`\ud83d\udccb Regression report saved: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 955,
          "content": "console.log('\\n\ud83e\uddea === Phase 7 Regression Testing Summary ===');",
          "type": "log"
        },
        {
          "line_number": 956,
          "content": "console.log(`\ud83d\udcca Session ID: ${testSession.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 957,
          "content": "console.log(`\ud83d\udd50 Timestamp: ${testSession.timestamp}`);",
          "type": "log"
        },
        {
          "line_number": 958,
          "content": "console.log(`\ud83c\udfc6 Overall Success: ${testSession.overallResult.success ? '\u2705 PASS' : '\u274c FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 959,
          "content": "console.log(`\ud83d\udcca Test Results: ${testSession.overallResult.passedTests}/${testSession.overallResult.totalTests} passed (${testSession.overallResult.successRate.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 960,
          "content": "console.log(`\ud83d\udea8 Regressions: ${testSession.overallResult.regressions.length} detected`);",
          "type": "log"
        },
        {
          "line_number": 963,
          "content": "console.log('\\n\ud83d\udea8 Detected Regressions:');",
          "type": "log"
        },
        {
          "line_number": 965,
          "content": "console.log(`  ${i + 1}. [${regression.severity.toUpperCase()}] ${regression.message}`);",
          "type": "log"
        },
        {
          "line_number": 969,
          "content": "console.log('\\n\ud83d\udccb Test Suite Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 973,
          "content": "console.log(`  ${status} ${name}: ${summary}`);",
          "type": "log"
        },
        {
          "line_number": 976,
          "content": "console.log('=============================================\\n');",
          "type": "log"
        },
        {
          "line_number": 1174,
          "content": "console.log('Functionality tests:', JSON.stringify(functionalityResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1179,
          "content": "console.log('Performance tests:', JSON.stringify(performanceResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1184,
          "content": "console.log('Bundle integrity tests:', JSON.stringify(bundleResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1189,
          "content": "console.log('Progressive loading tests:', JSON.stringify(progressiveResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1194,
          "content": "console.log('Cross-browser tests:', JSON.stringify(crossBrowserResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1199,
          "content": "console.log('Memory leak detection:', JSON.stringify(memoryResult, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1210,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 1247,
          "content": "console.error('\u274c Regression testing error:', error.message);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/build-cache-performance-optimizer.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-cache-performance-optimizer.js",
      "console_count": 35,
      "console_lines": [
        {
          "line_number": 53,
          "content": "console.log('\ud83d\ude80 Initializing Build Cache Performance Optimizer...');",
          "type": "log"
        },
        {
          "line_number": 64,
          "content": "console.log('\u2705 Cache system initialized successfully');",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('\ud83d\udcca No existing cache metrics found, starting fresh');",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.log('\ud83d\udd0d Performing cache health check...');",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log(`\ud83d\udccb ${level.toUpperCase()} Cache: ${levelHealth.fileCount} files, ${this.formatBytes(levelHealth.totalSize)}, ${levelHealth.hitRatio.toFixed(1)}% hit ratio`);",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log('\u26a1 Optimizing build cache performance...');",
          "type": "log"
        },
        {
          "line_number": 190,
          "content": "console.log('\ud83e\uddf9 Cache size approaching limit, performing cleanup...');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log('\u2705 Cache optimization complete');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log(`\ud83d\udcca Total cache size: ${report.totalCacheSize}`);",
          "type": "log"
        },
        {
          "line_number": 213,
          "content": "console.log(`\ud83d\udd27 Applied ${optimizations.length} optimizations`);",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log('\ud83e\uddf9 Performing intelligent cache cleanup...');",
          "type": "log"
        },
        {
          "line_number": 294,
          "content": "console.warn(`\u26a0\ufe0f  Failed to remove cache file: ${fileInfo.name}`);",
          "type": "warn"
        },
        {
          "line_number": 299,
          "content": "console.log(`\ud83e\uddf9 Cleaned ${levelName} cache: ${filesRemoved} files, ${this.formatBytes(bytesRemoved)}`);",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.warn(`\u26a0\ufe0f  Failed to cleanup ${levelName} cache:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 380,
          "content": "console.log('\ud83d\udcca Starting cache performance monitoring...');",
          "type": "log"
        },
        {
          "line_number": 401,
          "content": "console.log('\u2705 Cache performance monitoring complete');",
          "type": "log"
        },
        {
          "line_number": 405,
          "content": "console.error('\u274c Build failed during cache monitoring:', error.message);",
          "type": "error"
        },
        {
          "line_number": 456,
          "content": "console.log('\ud83d\udd25 Warming build cache...');",
          "type": "log"
        },
        {
          "line_number": 472,
          "content": "console.log(`\u2705 Cache warming complete: ${successCount}/${results.length} operations successful`);",
          "type": "log"
        },
        {
          "line_number": 482,
          "content": "console.log('\ud83d\udcbe Warming dependency cache...');",
          "type": "log"
        },
        {
          "line_number": 495,
          "content": "console.log('\ud83d\udd04 Warming transform cache...');",
          "type": "log"
        },
        {
          "line_number": 508,
          "content": "console.log('\ud83d\uddbc\ufe0f  Warming asset cache...');",
          "type": "log"
        },
        {
          "line_number": 531,
          "content": "console.warn(`\u26a0\ufe0f  Failed to remove ${file}:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 538,
          "content": "console.log(`\ud83e\uddf9 Cleared ${level} cache: ${clearedCount} files removed`);",
          "type": "log"
        },
        {
          "line_number": 542,
          "content": "console.error(`\u274c Failed to clear ${level} cache:`, error.message);",
          "type": "error"
        },
        {
          "line_number": 551,
          "content": "console.log('\ud83e\uddf9 Clearing all build cache...');",
          "type": "log"
        },
        {
          "line_number": 565,
          "content": "console.log('\u2705 All cache levels cleared');",
          "type": "log"
        },
        {
          "line_number": 609,
          "content": "console.log(`\ud83d\udcca Cache status report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 625,
          "content": "console.log('\\n\ud83d\udcca Cache Status Summary:');",
          "type": "log"
        },
        {
          "line_number": 626,
          "content": "console.log(`Total Size: ${optimizer.formatBytes(report.summary.totalSize)}`);",
          "type": "log"
        },
        {
          "line_number": 627,
          "content": "console.log(`Overall Hit Ratio: ${report.summary.overallHitRatio.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 628,
          "content": "console.log(`Recommendations: ${report.recommendations.length}`);",
          "type": "log"
        },
        {
          "line_number": 654,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 674,
          "content": "console.error('\u274c Cache optimization failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 680,
          "content": "main().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/bundle-regression-check.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/bundle-regression-check.js",
      "console_count": 22,
      "console_lines": [
        {
          "line_number": 97,
          "content": "console.warn('Warning: Could not read build manifest, using fallback analysis');",
          "type": "warn"
        },
        {
          "line_number": 127,
          "content": "console.warn('Warning: dist directory not found');",
          "type": "warn"
        },
        {
          "line_number": 164,
          "content": "console.log('No baseline found, current analysis will be used as baseline');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.warn('Warning: Could not load baseline:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 227,
          "content": "console.log(`\u2705 Baseline updated: ${this.baselinePath}`);",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.error('Error: Could not store baseline:', error.message);",
          "type": "error"
        },
        {
          "line_number": 254,
          "content": "console.log(`\ud83d\udcca Report generated: ${this.reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 280,
          "content": "console.log('\ud83d\udd0d Starting bundle regression analysis...');",
          "type": "log"
        },
        {
          "line_number": 286,
          "content": "console.log('\ud83d\udcca Analyzing current build...');",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.warn('\u26a0\ufe0f  Warning: No bundle files found. Make sure to run this after build.');",
          "type": "warn"
        },
        {
          "line_number": 294,
          "content": "console.log(`\ud83d\udce6 Current bundle size: ${analyzer.formatSize(currentAnalysis.totalSize)}`);",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log('\ud83d\udd0d Checking for regressions...');",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log('\u2705 No bundle size regressions detected');",
          "type": "log"
        },
        {
          "line_number": 307,
          "content": "console.log(`\u274c Found ${regressions.length} bundle size regressions:`);",
          "type": "log"
        },
        {
          "line_number": 314,
          "content": "console.log(`  ${icon} ${regression.chunk}: ${analyzer.formatSize(regression.baseline)} \u2192 ${analyzer.formatSize(regression.current)} (+${regression.percentage.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 321,
          "content": "console.error('\ud83d\udca5 Critical bundle size regressions detected - failing build');",
          "type": "error"
        },
        {
          "line_number": 324,
          "content": "console.log('\u26a0\ufe0f  Non-critical regressions detected - build will continue');",
          "type": "log"
        },
        {
          "line_number": 332,
          "content": "console.log('\ud83c\udf89 Bundle regression analysis completed successfully');",
          "type": "log"
        },
        {
          "line_number": 335,
          "content": "console.error('\ud83d\udca5 Error during bundle analysis:', error.message);",
          "type": "error"
        },
        {
          "line_number": 347,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 369,
          "content": "console.log('\ud83d\uddd1\ufe0f  Baseline cleared');",
          "type": "log"
        },
        {
          "line_number": 371,
          "content": "console.log('\u2139\ufe0f  No baseline to clear');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/coverage-analysis.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/coverage-analysis.js",
      "console_count": 18,
      "console_lines": [
        {
          "line_number": 32,
          "content": "console.log('\ud83d\udd0d Starting comprehensive coverage analysis...\\n');",
          "type": "log"
        },
        {
          "line_number": 38,
          "content": "console.error('\u274c Failed to load coverage data');",
          "type": "error"
        },
        {
          "line_number": 66,
          "content": "console.log('\\n\u2705 All coverage thresholds met!');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('\\n\u274c Coverage thresholds not met!');",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.error('\u274c Coverage analysis failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 83,
          "content": "console.error(`Coverage summary file not found: ${COVERAGE_SUMMARY_FILE}`);",
          "type": "error"
        },
        {
          "line_number": 104,
          "content": "console.error('Error reading coverage files:', error.message);",
          "type": "error"
        },
        {
          "line_number": 309,
          "content": "console.warn('Could not read coverage history, starting fresh');",
          "type": "warn"
        },
        {
          "line_number": 376,
          "content": "console.log('\ud83d\udcca COVERAGE ANALYSIS RESULTS');",
          "type": "log"
        },
        {
          "line_number": 377,
          "content": "console.log('\u2500'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 380,
          "content": "console.log('\\n\ud83d\udcc8 Overall Coverage:');",
          "type": "log"
        },
        {
          "line_number": 385,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 391,
          "content": "console.log('\\n\ud83c\udfaf Threshold Compliance:');",
          "type": "log"
        },
        {
          "line_number": 398,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 405,
          "content": "console.log('\\n\ud83d\udcca Trends:');",
          "type": "log"
        },
        {
          "line_number": 412,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 421,
          "content": "console.log(`\\n\ud83d\udccb Summary: ${passedCount}/${totalCount} thresholds met`);",
          "type": "log"
        },
        {
          "line_number": 430,
          "content": "console.log(`\\n\ud83d\udcc4 Detailed report saved to: ${COVERAGE_REPORT_FILE}`);",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/lint-super-fast.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-super-fast.js",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 33,
          "content": "console.log(`${emoji} ${message}`);",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log(`  - ${relPath} (modified: ${mtime})`);",
          "type": "log"
        },
        {
          "line_number": 139,
          "content": "console.error('\u274c Super-fast lint failed:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/validate-build-optimizations.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/validate-build-optimizations.js",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 46,
          "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 919,
          "content": "console.error(error.stack);",
          "type": "error"
        },
        {
          "line_number": 932,
          "content": "console.error('Failed to run build optimization validation:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/ast-bundle-analyzer.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/ast-bundle-analyzer.js",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 18,
          "content": "info: (msg, data) => console.log(`[AST-ANALYZER] ${msg}`, data || ''),",
          "type": "log"
        },
        {
          "line_number": 19,
          "content": "warn: (msg, data) => console.warn(`[AST-ANALYZER] ${msg}`, data || ''),",
          "type": "warn"
        },
        {
          "line_number": 20,
          "content": "error: (msg, data) => console.error(`[AST-ANALYZER] ${msg}`, data || ''),",
          "type": "error"
        },
        {
          "line_number": 21,
          "content": "success: (msg, data) => console.log(`[AST-SUCCESS] ${msg}`, data || '')",
          "type": "log"
        },
        {
          "line_number": 558,
          "content": "console.log('\\n\ud83c\udfaf AST-Based Bundle Analysis Complete!');",
          "type": "log"
        },
        {
          "line_number": 559,
          "content": "console.log(`\ud83d\udcca Found ${results.optimizationTargets.length} optimization opportunities`);",
          "type": "log"
        },
        {
          "line_number": 566,
          "content": "console.log('\u2705 80-90% bundle size reduction is ACHIEVABLE!');",
          "type": "log"
        },
        {
          "line_number": 572,
          "content": "console.error('\u274c AST Analysis failed:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/lint-changed-files.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-changed-files.js",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 69,
          "content": "console.error(`${prefix}\u274c ${message}`);",
          "type": "error"
        },
        {
          "line_number": 72,
          "content": "console.warn(`${prefix}\u26a0\ufe0f  ${message}`);",
          "type": "warn"
        },
        {
          "line_number": 75,
          "content": "console.log(`${prefix}\u2705 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "if (options.verbose) console.log(`${prefix}\u23f3 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`${prefix}${message}`);",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.error(error.stack);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/performance-alerts.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/performance-alerts.js",
      "console_count": 35,
      "console_lines": [
        {
          "line_number": 82,
          "content": "console.log('\ud83d\udd0d Analyzing performance data for regressions...');",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log('\u26a0\ufe0f No performance report found');",
          "type": "log"
        },
        {
          "line_number": 155,
          "content": "console.log(`\ud83d\udcca Performance analysis saved: ${analysisFile}`);",
          "type": "log"
        },
        {
          "line_number": 156,
          "content": "console.log(`\ud83d\udea8 Overall severity: ${analysis.overallSeverity}`);",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.error('\u274c Error analyzing performance data:', error.message);",
          "type": "error"
        },
        {
          "line_number": 350,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 356,
          "content": "console.log(`\ud83d\udcac Creating GitHub PR comment for PR #${prNumber}`);",
          "type": "log"
        },
        {
          "line_number": 369,
          "content": "console.log(`\ud83d\udcdd PR comment saved: ${commentFile}`);",
          "type": "log"
        },
        {
          "line_number": 370,
          "content": "console.log('\\n--- PR Comment Content ---');",
          "type": "log"
        },
        {
          "line_number": 371,
          "content": "console.log(comment);",
          "type": "log"
        },
        {
          "line_number": 372,
          "content": "console.log('--- End PR Comment ---\\n');",
          "type": "log"
        },
        {
          "line_number": 376,
          "content": "console.error('\u274c Error creating PR comment:', error.message);",
          "type": "error"
        },
        {
          "line_number": 553,
          "content": "console.log('\u2705 No performance issues detected, skipping notifications');",
          "type": "log"
        },
        {
          "line_number": 584,
          "content": "console.log('\ud83d\udcf1 Preparing Slack notification...');",
          "type": "log"
        },
        {
          "line_number": 627,
          "content": "console.log(`\ud83d\udcf1 Slack notification prepared: ${slackFile}`);",
          "type": "log"
        },
        {
          "line_number": 635,
          "content": "console.log('\ud83c\udfae Preparing Discord notification...');",
          "type": "log"
        },
        {
          "line_number": 679,
          "content": "console.log(`\ud83c\udfae Discord notification prepared: ${discordFile}`);",
          "type": "log"
        },
        {
          "line_number": 687,
          "content": "console.log('\ud83d\udc54 Preparing Teams notification...');",
          "type": "log"
        },
        {
          "line_number": 728,
          "content": "console.log(`\ud83d\udc54 Teams notification prepared: ${teamsFile}`);",
          "type": "log"
        },
        {
          "line_number": 736,
          "content": "console.log('\ud83d\udce7 Preparing email notification...');",
          "type": "log"
        },
        {
          "line_number": 753,
          "content": "console.log(`\ud83d\udce7 Email notification prepared: ${emailFile}`);",
          "type": "log"
        },
        {
          "line_number": 863,
          "content": "console.log('\ud83d\udccb Generating performance alert summary...');",
          "type": "log"
        },
        {
          "line_number": 867,
          "content": "console.log('\u274c No performance data available for analysis');",
          "type": "log"
        },
        {
          "line_number": 882,
          "content": "console.log(`\ud83d\udccb Alert Summary:`);",
          "type": "log"
        },
        {
          "line_number": 883,
          "content": "console.log(`   Severity: ${summary.severity}`);",
          "type": "log"
        },
        {
          "line_number": 884,
          "content": "console.log(`   Regressions: ${summary.regressions}`);",
          "type": "log"
        },
        {
          "line_number": 885,
          "content": "console.log(`   Improvements: ${summary.improvements}`);",
          "type": "log"
        },
        {
          "line_number": 886,
          "content": "console.log(`   Requires Action: ${summary.requiresAction}`);",
          "type": "log"
        },
        {
          "line_number": 904,
          "content": "console.log('\u2705 Performance analysis completed');",
          "type": "log"
        },
        {
          "line_number": 913,
          "content": "console.log('\u274c Performance analysis failed');",
          "type": "log"
        },
        {
          "line_number": 922,
          "content": "console.error('\u274c PR number required');",
          "type": "error"
        },
        {
          "line_number": 937,
          "content": "console.log('\u2705 Notifications sent');",
          "type": "log"
        },
        {
          "line_number": 945,
          "content": "console.log(JSON.stringify(summaryResult.summary, null, 2));",
          "type": "log"
        },
        {
          "line_number": 952,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 980,
          "content": "console.error('\u274c Error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/ci-cd-performance-integration.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/ci-cd-performance-integration.js",
      "console_count": 21,
      "console_lines": [
        {
          "line_number": 59,
          "content": "console.log('\ud83d\ude80 Initializing CI/CD Performance Integration...');",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log(`\ud83d\udd27 Detected CI Environment: ${this.ciEnvironment.name}`);",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log('\u2705 CI/CD integration initialized');",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.log('\ud83d\udeaa Running CI/CD performance quality gates...');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.error('\u274c Performance quality gates failed - blocking build');",
          "type": "error"
        },
        {
          "line_number": 214,
          "content": "console.warn(`\u26a0\ufe0f  Performance quality gates passed with ${qualityGateResults.warnings.length} warnings`);",
          "type": "warn"
        },
        {
          "line_number": 216,
          "content": "console.log('\u2705 All performance quality gates passed');",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.error('\u274c Quality gate evaluation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 238,
          "content": "console.log('\ud83d\udcca Gathering performance metrics...');",
          "type": "log"
        },
        {
          "line_number": 269,
          "content": "console.log('\ud83d\udd0d Evaluating performance quality gates...');",
          "type": "log"
        },
        {
          "line_number": 428,
          "content": "console.log('\ud83d\udcc4 Generating CI performance report...');",
          "type": "log"
        },
        {
          "line_number": 454,
          "content": "console.log(`\ud83d\udcca CI report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 534,
          "content": "console.log('\ud83d\udcdd Skipping PR comment - not a pull request');",
          "type": "log"
        },
        {
          "line_number": 538,
          "content": "console.log(`\ud83d\udcdd Generating PR comment for #${this.ciEnvironment.prNumber}...`);",
          "type": "log"
        },
        {
          "line_number": 548,
          "content": "console.log(`\ud83d\udcac PR comment content saved: ${commentFile}`);",
          "type": "log"
        },
        {
          "line_number": 621,
          "content": "console.log('\u2705 Performance quality gates passed - no notifications needed');",
          "type": "log"
        },
        {
          "line_number": 625,
          "content": "console.log('\ud83d\udce4 Sending performance notifications...');",
          "type": "log"
        },
        {
          "line_number": 642,
          "content": "console.log(`\ud83d\udce7 Notification data saved: ${notificationFile}`);",
          "type": "log"
        },
        {
          "line_number": 699,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 714,
          "content": "console.error('\u274c CI/CD performance integration failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 720,
          "content": "main().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/css-lazy-loading-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/css-lazy-loading-validation.js",
      "console_count": 29,
      "console_lines": [
        {
          "line_number": 19,
          "content": "console.log('\ud83d\udd0d CSS Phase 2 Lazy Loading - Bundle Size Validation\\n');",
          "type": "log"
        },
        {
          "line_number": 25,
          "content": "console.log('\u274c No CSS files found in dist directory');",
          "type": "log"
        },
        {
          "line_number": 26,
          "content": "console.log('   Please run \"npm run build\" first\\n');",
          "type": "log"
        },
        {
          "line_number": 34,
          "content": "console.log('\ud83d\udcca CSS Bundle Analysis:');",
          "type": "log"
        },
        {
          "line_number": 35,
          "content": "console.log('========================');",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log(`  ${relativePath.padEnd(40)} ${sizeKB.toString().padStart(6)} kB`);",
          "type": "log"
        },
        {
          "line_number": 48,
          "content": "console.log('========================');",
          "type": "log"
        },
        {
          "line_number": 49,
          "content": "console.log(`  Total CSS Bundle Size: ${totalSize.toFixed(1)} kB\\n`);",
          "type": "log"
        },
        {
          "line_number": 55,
          "content": "console.log('\ud83c\udfaf Performance Targets:');",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log('=======================');",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log(`  Baseline Size:        ${BASELINE_SIZE} kB`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`  Current Size:         ${totalSize.toFixed(1)} kB`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`  Actual Reduction:     ${actualReduction.toFixed(1)} kB`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log(`  Target Reduction:     ${TARGET_REDUCTION} kB`);",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "console.log(`  Reduction Percentage: ${reductionPercentage}%\\n`);",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log('\u2705 SUCCESS: CSS Phase 2 Lazy Loading Implementation');",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log('================================================');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log(`   \u2713 Achieved ${actualReduction.toFixed(1)}kB reduction (target: ${TARGET_REDUCTION}kB)`);",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log(`   \u2713 Bundle size reduced by ${reductionPercentage}%`);",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log(`   \u2713 All 4 optimization targets implemented`);",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log(`   \u2713 Dynamic CSS loading infrastructure active\\n`);",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log('\ud83d\ude80 Lazy Loading Components Identified:');",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log('======================================');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log(`   \ud83d\udce6 ${component.name}: ${component.description}`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log('\u26a0\ufe0f  PARTIAL SUCCESS: Additional Optimization Needed');",
          "type": "log"
        },
        {
          "line_number": 86,
          "content": "console.log('===============================================');",
          "type": "log"
        },
        {
          "line_number": 87,
          "content": "console.log(`   \u26a0\ufe0f  Current reduction: ${actualReduction.toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log(`   \u26a0\ufe0f  Still need: ${shortfall.toFixed(1)}kB more reduction`);",
          "type": "log"
        },
        {
          "line_number": 89,
          "content": "console.log(`   \ud83d\udca1 Consider additional lazy loading opportunities\\n`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/build-performance-monitor-enhanced.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-performance-monitor-enhanced.js",
      "console_count": 29,
      "console_lines": [
        {
          "line_number": 91,
          "content": "console.log('\ud83d\ude80 Starting Enhanced Build Performance Monitoring...');",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log(`\ud83d\udccb Build Command: ${buildCommand}`);",
          "type": "log"
        },
        {
          "line_number": 156,
          "content": "console.log('\u23f1\ufe0f  Starting build execution with real-time monitoring...');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log('\u2705 Build completed successfully');",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.error(`\u274c Build failed with code: ${code}`);",
          "type": "error"
        },
        {
          "line_number": 257,
          "content": "console.log(`\ud83d\udcca Build Phase Started: ${phaseName}`);",
          "type": "log"
        },
        {
          "line_number": 263,
          "content": "console.log(`\u23f1\ufe0f  Build Phase Completed: ${phaseName} (${phase.duration.toFixed(2)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('\ud83d\udcc8 Analyzing build performance results...');",
          "type": "log"
        },
        {
          "line_number": 313,
          "content": "console.log(`\u2705 Build analysis complete. Total time: ${totalBuildTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 326,
          "content": "console.log('\ud83d\udcdd No historical performance data found, creating baseline...');",
          "type": "log"
        },
        {
          "line_number": 336,
          "content": "console.log('\ud83d\udcca No baseline data for regression detection');",
          "type": "log"
        },
        {
          "line_number": 380,
          "content": "console.warn(`\u26a0\ufe0f  Performance regressions detected: ${this.performanceMetrics.regressions.length}`);",
          "type": "warn"
        },
        {
          "line_number": 390,
          "content": "console.log('\ud83d\udcbe Analyzing build cache performance...');",
          "type": "log"
        },
        {
          "line_number": 410,
          "content": "console.log('\ud83d\udcc4 Generating comprehensive performance report...');",
          "type": "log"
        },
        {
          "line_number": 453,
          "content": "console.log(`\u2705 Performance report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 514,
          "content": "console.log('\ud83d\udd14 Checking performance thresholds...');",
          "type": "log"
        },
        {
          "line_number": 570,
          "content": "console.log(`\ud83d\udea8 Sending ${alerts.length} performance alerts...`);",
          "type": "log"
        },
        {
          "line_number": 573,
          "content": "console.error(`${alert.severity.toUpperCase()}: ${alert.message}`);",
          "type": "error"
        },
        {
          "line_number": 592,
          "content": "console.log('\ud83c\udfc3\u200d\u2642\ufe0f Running comprehensive build benchmark suite...');",
          "type": "log"
        },
        {
          "line_number": 603,
          "content": "console.log('\u2744\ufe0f  Running cold build benchmark...');",
          "type": "log"
        },
        {
          "line_number": 608,
          "content": "console.log('\ud83d\udd25 Running hot build benchmark...');",
          "type": "log"
        },
        {
          "line_number": 612,
          "content": "console.log('\ud83d\udcbe Analyzing cache performance...');",
          "type": "log"
        },
        {
          "line_number": 622,
          "content": "console.error('\u274c Benchmark suite failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 636,
          "content": "console.log('\ud83e\uddf9 Build cache cleaned');",
          "type": "log"
        },
        {
          "line_number": 638,
          "content": "console.warn('\u26a0\ufe0f  Failed to clean build cache:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 690,
          "content": "console.log(`\ud83d\udcca Benchmark report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 724,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 743,
          "content": "console.error('\u274c Build performance monitoring failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 749,
          "content": "main().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase4-reporting-engine.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-reporting-engine.js",
      "console_count": 33,
      "console_lines": [
        {
          "line_number": 167,
          "content": "console.log(`\ud83d\udcc1 Created report directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 176,
          "content": "console.log('\ud83d\udcc8 Generating comprehensive Phase 4 achievement report...');",
          "type": "log"
        },
        {
          "line_number": 187,
          "content": "console.log('\ud83d\udcca Collecting Phase 4 achievement data...');",
          "type": "log"
        },
        {
          "line_number": 191,
          "content": "console.log('\ud83d\udcc8 Analyzing achievements and metrics...');",
          "type": "log"
        },
        {
          "line_number": 195,
          "content": "console.log('\ud83d\udcbc Generating executive summary report...');",
          "type": "log"
        },
        {
          "line_number": 199,
          "content": "console.log('\ud83d\udd27 Generating technical analysis report...');",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log('\ud83d\udd04 Generating phase comparison report...');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('\ud83d\udccf Generating progress tracking report...');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log('\ud83d\udcc4 Generating evidence collection report...');",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log('\ud83d\udcc9 Generating visual charts and analysis...');",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log('\ud83d\udca1 Generating summary and recommendations...');",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.log(`\u2705 Comprehensive Phase 4 report generated: ${reportSession.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.error('\u274c Report generation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 590,
          "content": "console.warn('\u26a0\ufe0f Could not load validation results:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 614,
          "content": "console.warn('\u26a0\ufe0f Could not load benchmark results:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 636,
          "content": "console.warn('\u26a0\ufe0f Could not load regression results:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 654,
          "content": "console.warn('\u26a0\ufe0f Could not load monitoring data:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 741,
          "content": "console.log('\\n\ud83d\udcc8 === Phase 4 Report Generation Summary ===');",
          "type": "log"
        },
        {
          "line_number": 742,
          "content": "console.log(`\ud83c\udfaf Session ID: ${reportSession.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 743,
          "content": "console.log(`\ud83d\udccb Reports Generated:`);",
          "type": "log"
        },
        {
          "line_number": 746,
          "content": "console.log(`  \u2705 ${type.charAt(0).toUpperCase() + type.slice(1)} Report`);",
          "type": "log"
        },
        {
          "line_number": 747,
          "content": "if (report.htmlFile) console.log(`    \ud83c\udf10 HTML: ${path.basename(report.htmlFile)}`);",
          "type": "log"
        },
        {
          "line_number": 748,
          "content": "if (report.markdownFile) console.log(`    \ud83d\udcdd Markdown: ${path.basename(report.markdownFile)}`);",
          "type": "log"
        },
        {
          "line_number": 753,
          "content": "console.log(`\\n\ud83c\udfc6 Overall Success: ${summary.overallSuccess ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 754,
          "content": "console.log(`\ud83d\udcca Success Rate: ${summary.successRate.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 755,
          "content": "console.log(`\ud83d\udd22 Achievements: ${summary.successfulAchievements}/${summary.totalAchievements}`);",
          "type": "log"
        },
        {
          "line_number": 758,
          "content": "console.log('===========================================\\n');",
          "type": "log"
        },
        {
          "line_number": 843,
          "content": "console.log(`\ud83d\udccb Executive report generated: ${executiveReport.markdownFile}`);",
          "type": "log"
        },
        {
          "line_number": 850,
          "content": "console.log(`\ud83d\udd27 Technical report generated: ${technicalReport.markdownFile}`);",
          "type": "log"
        },
        {
          "line_number": 856,
          "content": "console.log(`\ud83d\udd04 Comparison report generated: ${comparisonReport.htmlFile}`);",
          "type": "log"
        },
        {
          "line_number": 862,
          "content": "console.log(`\\n\ud83c\udfc6 Comprehensive Phase 4 report completed: ${fullReport.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 867,
          "content": "console.log(`\\n\ud83d\udcc8 Phase 4 Comprehensive Achievement Reporting Engine\\n\\nUsage: node phase4-reporting-engine.js <command>\\n\\nCommands:\\n  executive        Generate executive summary report\\n  technical        Generate technical analysis report\\n  comparison       Generate phase comparison report\\n  full-report      Generate comprehensive report suite\\n  comprehensive    Alias for full-report\\n  help            Show this help message\\n\\nReport Features:\\n  - Executive summaries for stakeholders\\n  - Technical analysis for developers\\n  - Phase-by-phase comparison analysis\\n  - Visual charts and progress tracking\\n  - Evidence collection and validation\\n  - Multiple output formats (HTML, Markdown, JSON)\\n\\nPhase 4 Targets:\\n  - utils: 27.34kB reduction\\n  - useComparativeAnalysis: 27.36kB reduction\\n  - Securities: 26.13kB reduction\\n  - Total: 80.83kB reduction target\\n        `);",
          "type": "log"
        },
        {
          "line_number": 871,
          "content": "console.error('\u274c Report generation error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/generate-coverage-badge.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/generate-coverage-badge.js",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 21,
          "content": "console.log('\ud83c\udff7\ufe0f Generating coverage badges...');",
          "type": "log"
        },
        {
          "line_number": 26,
          "content": "console.warn('\u26a0\ufe0f Coverage summary not found, skipping badge generation');",
          "type": "warn"
        },
        {
          "line_number": 69,
          "content": "console.log('\u2705 Coverage badges generated successfully');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log(`\ud83d\udcca Overall Coverage: ${overallCoverage}%`);",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.error('\u274c Failed to generate coverage badges:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/bundle-size-monitoring-system.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/bundle-size-monitoring-system.js",
      "console_count": 26,
      "console_lines": [
        {
          "line_number": 57,
          "content": "console.log('\ud83d\ude80 Initializing Bundle Size Monitoring System...');",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log('\u2705 Bundle monitoring system initialized');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log(`\ud83d\udcca Loaded ${this.bundleHistory.length} historical bundle analyses`);",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log('\ud83d\udcdd No bundle history found, starting fresh');",
          "type": "log"
        },
        {
          "line_number": 105,
          "content": "console.log('\ud83d\udd0d Analyzing current bundle state...');",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log('\ud83d\udd28 Building project for bundle analysis...');",
          "type": "log"
        },
        {
          "line_number": 140,
          "content": "console.error('\u274c Bundle analysis failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 144,
          "content": "console.log('\u2705 Bundle analysis complete');",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log(`\ud83d\udce6 Total bundles: ${analysis.chunkCount}`);",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.log(`\ud83d\udccf Total size: ${this.formatBytes(analysis.totalSize)}`);",
          "type": "log"
        },
        {
          "line_number": 190,
          "content": "console.warn('\u26a0\ufe0f  Failed to analyze bundle files:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 234,
          "content": "console.log('\ud83d\udcdd No detailed bundle composition available');",
          "type": "log"
        },
        {
          "line_number": 325,
          "content": "console.log('\ud83d\udcca No baseline data for regression detection');",
          "type": "log"
        },
        {
          "line_number": 428,
          "content": "console.log('\u2705 No bundle size regressions detected');",
          "type": "log"
        },
        {
          "line_number": 432,
          "content": "console.log(`\ud83d\udea8 Found ${regressions.length} bundle size issues:`);",
          "type": "log"
        },
        {
          "line_number": 445,
          "content": "console.log(`${icon} ${regression.description}`);",
          "type": "log"
        },
        {
          "line_number": 477,
          "content": "console.log('\ud83d\udcc4 Generating comprehensive bundle report...');",
          "type": "log"
        },
        {
          "line_number": 480,
          "content": "console.error('\u274c No bundle analysis available. Run analyze first.');",
          "type": "error"
        },
        {
          "line_number": 509,
          "content": "console.log(`\ud83d\udcca Bundle report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 510,
          "content": "console.log(`\ud83d\udcdd Summary report: ${summaryFile}`);",
          "type": "log"
        },
        {
          "line_number": 658,
          "content": "console.log('\ud83d\udd04 Running complete bundle monitoring cycle...');",
          "type": "log"
        },
        {
          "line_number": 689,
          "content": "console.log('\u2705 Bundle monitoring cycle complete');",
          "type": "log"
        },
        {
          "line_number": 693,
          "content": "console.error('\u274c Bundle monitoring cycle failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 749,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 767,
          "content": "console.error('\u274c Bundle monitoring failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 773,
          "content": "main().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/test-hot-reload-performance.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-hot-reload-performance.js",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 40,
          "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "console.log('HMRTestComponent mounted - Version ${version}');",
          "type": "log"
        },
        {
          "line_number": 338,
          "content": "<button onClick={() => console.log('Clicked ${i}')}>Button ${i}</button>",
          "type": "log"
        },
        {
          "line_number": 567,
          "content": "console.error('Failed to run HMR performance tests:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/analyze-analytics-webpack.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/analyze-analytics-webpack.js",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 18,
          "content": "info: (msg, data) => console.log(`[ANALYTICS-ANALYZER] ${msg}`, data || ''),",
          "type": "log"
        },
        {
          "line_number": 19,
          "content": "warn: (msg, data) => console.warn(`[ANALYTICS-ANALYZER] ${msg}`, data || ''),",
          "type": "warn"
        },
        {
          "line_number": 20,
          "content": "error: (msg, data) => console.error(`[ANALYTICS-ANALYZER] ${msg}`, data || ''),",
          "type": "error"
        },
        {
          "line_number": 21,
          "content": "success: (msg, data) => console.log(`[ANALYTICS-SUCCESS] ${msg}`, data || '')",
          "type": "log"
        },
        {
          "line_number": 428,
          "content": "console.log('\\n\ud83d\ude80 Advanced Analytics Bundle Analysis Complete!');",
          "type": "log"
        },
        {
          "line_number": 429,
          "content": "console.log('\ud83d\udcca Bundle report: analytics-bundle-report.html');",
          "type": "log"
        },
        {
          "line_number": 430,
          "content": "console.log('\ud83d\udccb Recommendations: development/research-reports/analytics-webpack-optimization-recommendations.md');",
          "type": "log"
        },
        {
          "line_number": 434,
          "content": "console.error('\u274c Analysis failed:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/build-phase3-localpoint.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-phase3-localpoint.js",
      "console_count": 27,
      "console_lines": [
        {
          "line_number": 204,
          "content": "console.error('Bundle analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 259,
          "content": "console.log('\ud83d\ude80 Starting Phase 3 LocalPoint Bundle Optimization...\\n');",
          "type": "log"
        },
        {
          "line_number": 263,
          "content": "console.log('\ud83d\udcca Phase 1: Analyzing current bundle size...');",
          "type": "log"
        },
        {
          "line_number": 268,
          "content": "console.log(`   Current LocalPoint bundle: ${baselineAnalysis.totalSizeKB}kB (${baselineAnalysis.chunkCount} chunks)`);",
          "type": "log"
        },
        {
          "line_number": 271,
          "content": "console.log('   No baseline found (will create new baseline)');",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.log('\\n\ud83d\udd28 Phase 2: Building with Phase 3 optimizations...');",
          "type": "log"
        },
        {
          "line_number": 276,
          "content": "console.log('   \u2022 Phase 3A: Force Dependency Exclusion');",
          "type": "log"
        },
        {
          "line_number": 277,
          "content": "console.log('   \u2022 Phase 3B: Dynamic Import Conversion');",
          "type": "log"
        },
        {
          "line_number": 278,
          "content": "console.log('   \u2022 Phase 3C: Micro-Chunking Enhancement');",
          "type": "log"
        },
        {
          "line_number": 281,
          "content": "console.log('   \u2705 Build completed successfully');",
          "type": "log"
        },
        {
          "line_number": 284,
          "content": "console.log('\\n\ud83d\udcc8 Phase 3: Analyzing optimized bundle...');",
          "type": "log"
        },
        {
          "line_number": 288,
          "content": "console.log(`   Optimized LocalPoint bundle: ${optimizedAnalysis.totalSizeKB}kB (${optimizedAnalysis.chunkCount} chunks)`);",
          "type": "log"
        },
        {
          "line_number": 289,
          "content": "console.log('\\n   \ud83d\udce6 Chunk breakdown:');",
          "type": "log"
        },
        {
          "line_number": 291,
          "content": "console.log(`     \u2022 ${file.name}: ${file.sizeKB}kB`);",
          "type": "log"
        },
        {
          "line_number": 296,
          "content": "console.log('\\n\ud83d\udccb Phase 4: Generating optimization report...');",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log('\\n\ud83c\udfaf Phase 3 LocalPoint Optimization Results:');",
          "type": "log"
        },
        {
          "line_number": 303,
          "content": "console.log('=====================================');",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log(`\ud83d\udce6 Final Bundle Size: ${report.overallResults.finalBundleSize}`);",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.log(`\ud83d\ude80 Total Optimization: ${report.overallResults.totalOptimization}`);",
          "type": "log"
        },
        {
          "line_number": 306,
          "content": "console.log(`\u26a1 Performance Score: ${report.overallResults.performanceScore}/100`);",
          "type": "log"
        },
        {
          "line_number": 307,
          "content": "console.log(`\ud83d\udd04 Progressive Chunks: ${report.phase3BResults.progressiveChunks}`);",
          "type": "log"
        },
        {
          "line_number": 308,
          "content": "console.log(`\ud83d\udd2c Micro Chunks: ${report.phase3CResults.microChunks}`);",
          "type": "log"
        },
        {
          "line_number": 310,
          "content": "console.log('\\n\ud83d\udcca Detailed report saved to: dist-phase3-optimized/phase3-optimization-report.json');",
          "type": "log"
        },
        {
          "line_number": 311,
          "content": "console.log('\\n\u2705 Phase 3 LocalPoint optimization completed successfully!');",
          "type": "log"
        },
        {
          "line_number": 315,
          "content": "console.log('\\n\ud83c\udfc6 BREAKTHROUGH: LocalPoint bundle optimized below 1kB target!');",
          "type": "log"
        },
        {
          "line_number": 316,
          "content": "console.log('   This represents exceptional optimization success.');",
          "type": "log"
        },
        {
          "line_number": 320,
          "content": "console.error('\u274c Phase 3 build failed:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/run-theme-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/run-theme-validation.js",
      "console_count": 35,
      "console_lines": [
        {
          "line_number": 59,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log('\ud83d\udd0d Validating prerequisites...');",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.error('\u274c Prerequisites check failed:');",
          "type": "error"
        },
        {
          "line_number": 139,
          "content": "failed.forEach(check => console.error(`   \u2022 ${check.error}`));",
          "type": "error"
        },
        {
          "line_number": 143,
          "content": "console.log('\u2705 All prerequisites validated');",
          "type": "log"
        },
        {
          "line_number": 150,
          "content": "console.log('\ud83d\ude80 Ensuring development server is running...');",
          "type": "log"
        },
        {
          "line_number": 155,
          "content": "console.log('\u2705 Development server is already running');",
          "type": "log"
        },
        {
          "line_number": 158,
          "content": "console.log('\ud83d\udd27 Starting development server...');",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log('\u2705 Development server started');",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.error(`\u274c Unknown validation mode: ${mode}`);",
          "type": "error"
        },
        {
          "line_number": 197,
          "content": "console.error(`Available modes: ${Object.keys(VALIDATION_CONFIG.modes).join(', ')}`);",
          "type": "error"
        },
        {
          "line_number": 201,
          "content": "console.log(`\ud83e\uddea Running ${mode} validation mode...`);",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log(`\ud83d\udccb ${config.description}`);",
          "type": "log"
        },
        {
          "line_number": 249,
          "content": "console.log('\\n\ud83d\udcca Validation Results Summary:');",
          "type": "log"
        },
        {
          "line_number": 255,
          "content": "console.log('   No results directory found');",
          "type": "log"
        },
        {
          "line_number": 269,
          "content": "console.log('   No result files found');",
          "type": "log"
        },
        {
          "line_number": 273,
          "content": "console.log('   \ud83d\udcc1 Recent result files:');",
          "type": "log"
        },
        {
          "line_number": 280,
          "content": "console.log(`      ${file} (${size}KB, ${time})`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('\\n   \ud83d\udcc8 Summary Statistics:');",
          "type": "log"
        },
        {
          "line_number": 291,
          "content": "console.log(`      Total Categories: ${report.summary.totalCategories}`);",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log(`      Total Tests: ${report.summary.totalTests}`);",
          "type": "log"
        },
        {
          "line_number": 293,
          "content": "console.log(`      Test Duration: ${report.summary.testDuration}`);",
          "type": "log"
        },
        {
          "line_number": 296,
          "content": "console.log('\\n   \ud83c\udff7\ufe0f  Category Breakdown:');",
          "type": "log"
        },
        {
          "line_number": 298,
          "content": "console.log(`      ${category.category}: ${category.testCount} tests`);",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log('   \u26a0\ufe0f Could not parse comprehensive report');",
          "type": "log"
        },
        {
          "line_number": 310,
          "content": "console.log(`\\n   \ud83c\udf10 HTML Report: file://${fullPath}`);",
          "type": "log"
        },
        {
          "line_number": 314,
          "content": "console.log(`   \u274c Error reading results: ${error.message}`);",
          "type": "log"
        },
        {
          "line_number": 327,
          "content": "console.log('\ud83c\udfa8 Starting Dark Theme Validation Suite...\\n');",
          "type": "log"
        },
        {
          "line_number": 335,
          "content": "console.log(`\\n\u26a1 Running validation tests in ${mode} mode...`);",
          "type": "log"
        },
        {
          "line_number": 338,
          "content": "console.log('\\n\u2705 All validation tests completed successfully!');",
          "type": "log"
        },
        {
          "line_number": 342,
          "content": "console.error(`\\n\u274c Validation failed: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 347,
          "content": "console.log('\\n\ud83e\uddf9 Shutting down development server...');",
          "type": "log"
        },
        {
          "line_number": 355,
          "content": "console.log('\\n\ud83d\uded1 Validation interrupted by user');",
          "type": "log"
        },
        {
          "line_number": 360,
          "content": "console.log('\\n\ud83d\uded1 Validation terminated');",
          "type": "log"
        },
        {
          "line_number": 367,
          "content": "console.error(`\u274c Unexpected error: ${error.message}`);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/lint-syntax-only.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-syntax-only.js",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 27,
          "content": "console.log(`${emoji} ${message}`);",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.error('\u274c Syntax check failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 93,
          "content": "console.error('\u274c Syntax check error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/test-typescript-build-integration.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-typescript-build-integration.js",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 38,
          "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 377,
          "content": "console.log('TestComponent${version} mounted');",
          "type": "log"
        },
        {
          "line_number": 694,
          "content": "console.error('Failed to run TypeScript build integration tests:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/analyze-barchart-bundle.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/analyze-barchart-bundle.js",
      "console_count": 39,
      "console_lines": [
        {
          "line_number": 16,
          "content": "console.log(`\\n\ud83d\udd0d Analyzing bundle size for: ${description}`);",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.error(`Failed to analyze bundle: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 77,
          "content": "console.log('\\n\ud83d\udcca Analyzing import sizes...\\n');",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log('\ud83d\udce6 RECHARTS DEPENDENCIES (Original):');",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "rechartsImports.forEach(imp => console.log(`   - ${imp}`));",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log('\\n\ud83d\udce6 VISX DEPENDENCIES (Migrated):');",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "visxImports.forEach(imp => console.log(`   - ${imp}`));",
          "type": "log"
        },
        {
          "line_number": 109,
          "content": "console.log(`\\n\ud83d\udd0d Import Count Comparison:`);",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log(`   Recharts: ${rechartsImports.length} imports`);",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log(`   Visx: ${visxImports.length} imports`);",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log('\\n\ud83d\udcbe ESTIMATED BUNDLE SIZE SAVINGS:\\n');",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log(`   Recharts bundle: ${formatBytes(rechartsSize)}`);",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log(`   Visx bundle: ${formatBytes(visxSize)}`);",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log(`   Estimated savings: ${formatBytes(savings)} (${savingsPercent}%)`);",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log('\\n\u26a1 PERFORMANCE OPTIMIZATION FEATURES:\\n');",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "optimizations.forEach(opt => console.log(`   ${opt}`));",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log('\\n\ud83d\udcc8 FINANCIAL FEATURES ENHANCED:');",
          "type": "log"
        },
        {
          "line_number": 169,
          "content": "financialFeatures.forEach(feature => console.log(`   ${feature}`));",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "console.log('\\n' + '='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 175,
          "content": "console.log('\ud83d\udcca BARCHART MIGRATION TO VISX - ANALYSIS REPORT');",
          "type": "log"
        },
        {
          "line_number": 176,
          "content": "console.log('='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log('\\n\ud83c\udfaf MIGRATION SUMMARY:');",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log(`   \u2705 Successfully migrated from Recharts to Visx`);",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log(`   \u2705 Maintained full API compatibility`);",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log(`   \u2705 Enhanced financial data visualization`);",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.log(`   \u2705 Added positive/negative value styling`);",
          "type": "log"
        },
        {
          "line_number": 187,
          "content": "console.log(`   \u2705 Improved tooltip information`);",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log(`   \u2705 Performance optimizations implemented`);",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log(`   \u2705 Bundle size reduced by ~${savings.savingsPercent}%`);",
          "type": "log"
        },
        {
          "line_number": 191,
          "content": "console.log('\\n\ud83d\udccb MIGRATION CHECKLIST:');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log(`   \u2705 VixBarChart component created`);",
          "type": "log"
        },
        {
          "line_number": 193,
          "content": "console.log(`   \u2705 BaseChart integration maintained`);",
          "type": "log"
        },
        {
          "line_number": 194,
          "content": "console.log(`   \u2705 Financial data formatting preserved`);",
          "type": "log"
        },
        {
          "line_number": 195,
          "content": "console.log(`   \u2705 Volume data visualization enhanced`);",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.log(`   \u2705 Hover states and tooltips improved`);",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log(`   \u2705 TypeScript types properly configured`);",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.log(`   \u2705 Performance optimizations added`);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('\\n\ud83d\ude80 READY FOR DEPLOYMENT');",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('='.repeat(60) + '\\n');",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase4-monitoring-dashboard.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-monitoring-dashboard.js",
      "console_count": 23,
      "console_lines": [
        {
          "line_number": 156,
          "content": "console.log(`\ud83d\udcc1 Created monitoring directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 175,
          "content": "console.log('\u26a0\ufe0f Monitoring system is already running');",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log('\ud83d\udcca Starting Phase 4 performance monitoring...');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log(`\u2705 Phase 4 monitoring started successfully`);",
          "type": "log"
        },
        {
          "line_number": 193,
          "content": "console.log(`\ud83c\udf10 Dashboard available at: http://${this.config.server.host}:${this.config.server.port}`);",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.error('\u274c Failed to start monitoring:', error.message);",
          "type": "error"
        },
        {
          "line_number": 212,
          "content": "console.log('\u26a0\ufe0f Monitoring system is not running');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log('\ud83d\udeab Stopping Phase 4 performance monitoring...');",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.log('\u2705 Phase 4 monitoring stopped');",
          "type": "log"
        },
        {
          "line_number": 308,
          "content": "console.error('HTTP request error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 624,
          "content": "console.error('Fetch error:', error);",
          "type": "error"
        },
        {
          "line_number": 647,
          "content": "console.error('Refresh error:', error);",
          "type": "error"
        },
        {
          "line_number": 875,
          "content": "console.warn('\u26a0\ufe0f Could not load baselines:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 892,
          "content": "console.warn('\u26a0\ufe0f Could not load historical metrics:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 902,
          "content": "console.warn('\u26a0\ufe0f Could not load historical events:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 925,
          "content": "console.error('\u274c Error saving monitoring data:', error.message);",
          "type": "error"
        },
        {
          "line_number": 956,
          "content": "console.log(`\ud83d\udea8 [${event.severity.toUpperCase()}] ${event.type}: ${JSON.stringify(event.data)}`);",
          "type": "log"
        },
        {
          "line_number": 973,
          "content": "console.error(`\ud83d\udea8 CRITICAL: ${event.type} - ${JSON.stringify(event.data)}`);",
          "type": "error"
        },
        {
          "line_number": 982,
          "content": "console.log(`\ud83d\udea8 ALERT: ${alert.message}`);",
          "type": "log"
        },
        {
          "line_number": 1047,
          "content": "console.log('\\n\ud83d\udeab Shutting down monitoring...');",
          "type": "log"
        },
        {
          "line_number": 1058,
          "content": "console.log('Phase 4 Progress:', JSON.stringify(status, null, 2));",
          "type": "log"
        },
        {
          "line_number": 1063,
          "content": "console.log(`\\n\ud83d\udcca Phase 4 Real-time Performance Monitoring Dashboard\\n\\nUsage: node phase4-monitoring-dashboard.js <command>\\n\\nCommands:\\n  start      Start real-time monitoring dashboard\\n  monitor    Alias for start\\n  status     Show current Phase 4 progress status\\n  help       Show this help message\\n\\nDashboard Features:\\n  - Real-time bundle size monitoring\\n  - Performance regression detection\\n  - Phase 4 progress tracking\\n  - Automated alerting system\\n  - Web-based monitoring interface\\n\\nDefault dashboard URL: http://localhost:4007\\n        `);",
          "type": "log"
        },
        {
          "line_number": 1067,
          "content": "console.error('\u274c Monitoring dashboard error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/build-cache-optimizer.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/build-cache-optimizer.js",
      "console_count": 31,
      "console_lines": [
        {
          "line_number": 230,
          "content": "console.log('\ud83d\udcc2 Loading cache from disk...');",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.log('\ud83d\udcdd No existing cache index found, starting fresh');",
          "type": "log"
        },
        {
          "line_number": 262,
          "content": "console.warn(`\u26a0\ufe0f Failed to load cache entry ${key}:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 267,
          "content": "console.log(`\u2705 Loaded ${loadedCount} cache entries (${this.formatBytes(totalSize)}) in ${Math.round(loadTime)}ms`);",
          "type": "log"
        },
        {
          "line_number": 274,
          "content": "console.warn('\u26a0\ufe0f Failed to load cache from disk:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 283,
          "content": "console.log('\ud83d\udcbe Saving cache to disk...');",
          "type": "log"
        },
        {
          "line_number": 319,
          "content": "console.log(`\u2705 Saved ${this.cache.size} cache entries in ${Math.round(saveTime)}ms`);",
          "type": "log"
        },
        {
          "line_number": 322,
          "content": "console.error('\u274c Failed to save cache to disk:', error.message);",
          "type": "error"
        },
        {
          "line_number": 404,
          "content": "console.log(`\ud83d\uddd1\ufe0f Cleared ${clearedCount} entries of type '${type}' (${this.formatBytes(clearedSize)})`);",
          "type": "log"
        },
        {
          "line_number": 443,
          "content": "console.log(`\ud83d\uddd1\ufe0f Evicted ${evictedCount} entries (${this.formatBytes(freedSpace)})`);",
          "type": "log"
        },
        {
          "line_number": 474,
          "content": "console.log(`\ud83e\uddf9 Cleaned ${cleanedCount} expired entries (${this.formatBytes(cleanedSize)})`);",
          "type": "log"
        },
        {
          "line_number": 484,
          "content": "console.log('\u26a1 Optimizing cache performance...');",
          "type": "log"
        },
        {
          "line_number": 502,
          "content": "console.log(`\u2705 Cache optimization completed in ${Math.round(optimizationTime)}ms`);",
          "type": "log"
        },
        {
          "line_number": 503,
          "content": "console.log(`\ud83d\udcca Current cache: ${this.cache.size} entries, ${this.formatBytes(this.stats.stats.totalSize)}`);",
          "type": "log"
        },
        {
          "line_number": 545,
          "content": "console.log(`\ud83d\uddd1\ufe0f Removed ${orphanedCount} orphaned cache files (${this.formatBytes(orphanedSize)})`);",
          "type": "log"
        },
        {
          "line_number": 549,
          "content": "console.warn('\u26a0\ufe0f Disk storage optimization failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 561,
          "content": "console.log('\ud83d\udc41\ufe0f Starting cache monitoring...');",
          "type": "log"
        },
        {
          "line_number": 568,
          "content": "console.log('\u26a0\ufe0f Cache size approaching limit, triggering cleanup...');",
          "type": "log"
        },
        {
          "line_number": 582,
          "content": "console.log('\u2705 Cache monitoring stopped');",
          "type": "log"
        },
        {
          "line_number": 591,
          "content": "console.log(`\ud83d\udcca Cache Stats - Entries: ${stats.entryCount}, Size: ${this.formatBytes(stats.totalSize)}, Hit Rate: ${stats.hitRate.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 674,
          "content": "console.log('\ud83d\udd25 Warming up cache...');",
          "type": "log"
        },
        {
          "line_number": 696,
          "content": "console.log(`\ud83d\udd25 Cache warmed with ${warmedCount} entries in ${Math.round(warmTime)}ms`);",
          "type": "log"
        },
        {
          "line_number": 716,
          "content": "console.log('\ud83d\udd0c Shutting down cache optimizer...');",
          "type": "log"
        },
        {
          "line_number": 721,
          "content": "console.log('\u2705 Cache optimizer shutdown complete');",
          "type": "log"
        },
        {
          "line_number": 753,
          "content": "console.log('\ud83d\udcca === Cache Status Report ===');",
          "type": "log"
        },
        {
          "line_number": 754,
          "content": "console.log(JSON.stringify(report, null, 2));",
          "type": "log"
        },
        {
          "line_number": 769,
          "content": "console.log('\ud83d\uddd1\ufe0f Cache cleared completely');",
          "type": "log"
        },
        {
          "line_number": 781,
          "content": "console.log('\ud83d\udc41\ufe0f Cache monitoring started. Press Ctrl+C to stop.');",
          "type": "log"
        },
        {
          "line_number": 796,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 822,
          "content": "console.error('\u274c Error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 839,
          "content": "console.error('Cache optimizer failed:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/test-build-optimizations.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-build-optimizations.js",
      "console_count": 82,
      "console_lines": [
        {
          "line_number": 188,
          "content": "console.warn(`${colors.yellow}\u26a0\ufe0f  Warning: Could not analyze directory ${dirPath}: ${error.message}${colors.reset}`);",
          "type": "warn"
        },
        {
          "line_number": 226,
          "content": "console.warn(`${colors.yellow}\u26a0\ufe0f  Warning: Could not analyze bundle: ${error.message}${colors.reset}`);",
          "type": "warn"
        },
        {
          "line_number": 241,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udd28 Testing Development Build Performance${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('  \ud83d\udcc1 Cleaning previous builds...');",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log('  \ud83c\udfd7\ufe0f  Testing development build time...');",
          "type": "log"
        },
        {
          "line_number": 262,
          "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} Build time: ${utils.formatTime(buildTime)} (threshold: ${utils.formatTime(threshold)})`);",
          "type": "log"
        },
        {
          "line_number": 268,
          "content": "console.log(`    \u274c Build failed: ${buildResult.error}`);",
          "type": "log"
        },
        {
          "line_number": 272,
          "content": "console.log('  \ud83d\uddfa\ufe0f  Checking source maps generation...');",
          "type": "log"
        },
        {
          "line_number": 283,
          "content": "console.log(`    ${hasSourceMaps ? '\u2705' : '\u274c'} Source maps: ${hasSourceMaps ? 'Generated' : 'Missing'}`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\ude80 Testing Production Build Optimization${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 293,
          "content": "console.log('  \ud83d\udcc1 Cleaning previous builds...');",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log('  \ud83c\udfed Testing production build with optimizations...');",
          "type": "log"
        },
        {
          "line_number": 311,
          "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} Build time: ${utils.formatTime(buildTime)} (threshold: ${utils.formatTime(threshold)})`);",
          "type": "log"
        },
        {
          "line_number": 317,
          "content": "console.log(`    \u274c Production build failed: ${buildResult.error}`);",
          "type": "log"
        },
        {
          "line_number": 322,
          "content": "console.log('  \ud83d\udddc\ufe0f  Testing minification effectiveness...');",
          "type": "log"
        },
        {
          "line_number": 334,
          "content": "console.log(`    ${bundleAnalysisExists ? '\u2705' : '\u274c'} Bundle analysis: ${bundleAnalysisExists ? 'Generated' : 'Missing'}`);",
          "type": "log"
        },
        {
          "line_number": 337,
          "content": "console.log('  \ud83d\udce6 Testing code splitting effectiveness...');",
          "type": "log"
        },
        {
          "line_number": 349,
          "content": "console.log(`    ${(hasVendorChunk && hasAsyncChunks) ? '\u2705' : '\u274c'} Code splitting: ${chunkCount} chunks (vendor: ${hasVendorChunk}, async: ${hasAsyncChunks})`);",
          "type": "log"
        },
        {
          "line_number": 356,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udcca Testing Bundle Sizes${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 361,
          "content": "console.log('  \ud83d\udccf Analyzing total bundle size...');",
          "type": "log"
        },
        {
          "line_number": 372,
          "content": "console.log(`    ${totalPassed ? '\u2705' : '\u274c'} Total size: ${utils.formatBytes(totalSize)} (threshold: ${utils.formatBytes(totalThreshold)})`);",
          "type": "log"
        },
        {
          "line_number": 375,
          "content": "console.log('  \ud83e\udde9 Analyzing individual chunk sizes...');",
          "type": "log"
        },
        {
          "line_number": 388,
          "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} ${chunk}: ${utils.formatBytes(size)} (${chunkType}, threshold: ${utils.formatBytes(threshold)})`);",
          "type": "log"
        },
        {
          "line_number": 392,
          "content": "console.log('  \ud83d\uddbc\ufe0f  Analyzing asset optimization...');",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.log(`    ${imageOptimized ? '\u2705' : '\u274c'} Image optimization: ${imageAssets.length} images, avg ${utils.formatBytes(avgImageSize)}`);",
          "type": "log"
        },
        {
          "line_number": 412,
          "content": "console.log(`    \u23ed\ufe0f  No image assets to analyze`);",
          "type": "log"
        },
        {
          "line_number": 420,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udd25 Testing Hot Module Reload Performance${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 422,
          "content": "console.log('  \ud83d\udcdd Creating test component for HMR...');",
          "type": "log"
        },
        {
          "line_number": 433,
          "content": "console.log('  \ud83d\udda5\ufe0f  Testing HMR update speed (simulated)...');",
          "type": "log"
        },
        {
          "line_number": 450,
          "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} HMR simulation time: ${utils.formatTime(hmrTime)} (threshold: ${utils.formatTime(threshold)})`);",
          "type": "log"
        },
        {
          "line_number": 455,
          "content": "console.log(`    \u274c HMR test failed: ${typeCheckResult.error}`);",
          "type": "log"
        },
        {
          "line_number": 461,
          "content": "console.log('  \ud83e\uddf9 Cleaned up test component');",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.warn(`    \u26a0\ufe0f  Could not clean up test component: ${error.message}`);",
          "type": "warn"
        },
        {
          "line_number": 471,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83d\udd0d Testing Type Checking Integration${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 474,
          "content": "console.log('  \ud83d\udccb Testing standard type checking...');",
          "type": "log"
        },
        {
          "line_number": 488,
          "content": "console.log(`    ${passed ? '\u2705' : '\u274c'} Type check time: ${utils.formatTime(typeCheckTime)} (threshold: ${utils.formatTime(threshold)})`);",
          "type": "log"
        },
        {
          "line_number": 498,
          "content": "console.log(`    \u274c Type checking failed with errors`);",
          "type": "log"
        },
        {
          "line_number": 499,
          "content": "console.log(`    \ud83d\udcc4 First few errors: ${typeCheckResult.stderr.substring(0, 200)}...`);",
          "type": "log"
        },
        {
          "line_number": 501,
          "content": "console.log(`    \u26a0\ufe0f  Type check completed with warnings only`);",
          "type": "log"
        },
        {
          "line_number": 506,
          "content": "console.log('  \ud83d\udeaa Testing quality gate integration...');",
          "type": "log"
        },
        {
          "line_number": 515,
          "content": "console.log(`    ${qualityGateResult.success ? '\u2705' : '\u274c'} Quality gate: ${qualityGateResult.success ? 'PASSED' : 'FAILED'}`);",
          "type": "log"
        },
        {
          "line_number": 522,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\u26a1 Testing Development Server Performance${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 525,
          "content": "console.log('  \ud83d\uddc4\ufe0f  Testing build cache effectiveness...');",
          "type": "log"
        },
        {
          "line_number": 547,
          "content": "console.log(`    ${cacheWorking ? '\u2705' : '\u274c'} Build cache: ${Math.round(cacheEffectiveness * 100)}% improvement (${utils.formatTime(firstBuildTime)} \u2192 ${utils.formatTime(secondBuildTime)})`);",
          "type": "log"
        },
        {
          "line_number": 552,
          "content": "console.log(`    \u274c Could not test build cache - builds failed`);",
          "type": "log"
        },
        {
          "line_number": 556,
          "content": "console.log('  \ud83d\udce6 Analyzing dependency cache...');",
          "type": "log"
        },
        {
          "line_number": 564,
          "content": "console.log(`    \u2139\ufe0f  Vite cache: ${utils.formatBytes(viteCache.totalSize)} (${Object.keys(viteCache.files).length} files)`);",
          "type": "log"
        },
        {
          "line_number": 571,
          "content": "console.log(`\\n${colors.blue}${colors.bold}\ud83c\udfaf Testing Production Performance Metrics${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 574,
          "content": "console.log('  \ud83d\udddc\ufe0f  Testing gzip compression effectiveness...');",
          "type": "log"
        },
        {
          "line_number": 609,
          "content": "console.log(`    ${compressionEffective ? '\u2705' : '\u274c'} Gzip compression: ${Math.round(avgCompressionRatio * 100)}% average reduction`);",
          "type": "log"
        },
        {
          "line_number": 615,
          "content": "console.log(`    \u23ed\ufe0f  Skipped gzip test: ${error.message}`);",
          "type": "log"
        },
        {
          "line_number": 619,
          "content": "console.log('  \ud83c\udf33 Testing tree shaking effectiveness...');",
          "type": "log"
        },
        {
          "line_number": 641,
          "content": "console.log(`    ${treeshakeEffective ? '\u2705' : '\u26a0\ufe0f '} Tree shaking: ${treeshakeEffective ? 'Effective' : 'May have unused code'}`);",
          "type": "log"
        },
        {
          "line_number": 646,
          "content": "console.log(`    \u23ed\ufe0f  No main JS file to analyze`);",
          "type": "log"
        },
        {
          "line_number": 655,
          "content": "console.log(`${colors.cyan}${colors.bold}`);",
          "type": "log"
        },
        {
          "line_number": 656,
          "content": "console.log('\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557');",
          "type": "log"
        },
        {
          "line_number": 657,
          "content": "console.log('\u2551           \ud83d\ude80 BUILD OPTIMIZATION TEST SUITE \ud83d\ude80           \u2551');",
          "type": "log"
        },
        {
          "line_number": 658,
          "content": "console.log('\u2551     Comprehensive testing of build performance and      \u2551');",
          "type": "log"
        },
        {
          "line_number": 659,
          "content": "console.log('\u2551        optimization effectiveness across all modes      \u2551');",
          "type": "log"
        },
        {
          "line_number": 660,
          "content": "console.log('\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d');",
          "type": "log"
        },
        {
          "line_number": 661,
          "content": "console.log(`${colors.reset}\\n`);",
          "type": "log"
        },
        {
          "line_number": 676,
          "content": "console.log(`\\n${colors.cyan}${colors.bold}\ud83d\udcca COMPREHENSIVE TEST RESULTS${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 680,
          "content": "console.log(`${colors.white}${colors.bold}\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 681,
          "content": "console.log(`${colors.bold}\ud83d\udcc8 Summary:${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 682,
          "content": "console.log(`   Total Tests: ${summary.totalTests}`);",
          "type": "log"
        },
        {
          "line_number": 683,
          "content": "console.log(`   Passed: ${colors.green}${summary.passedTests}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 684,
          "content": "console.log(`   Failed: ${colors.red}${summary.failedTests}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 685,
          "content": "console.log(`   Success Rate: ${colors.cyan}${summary.successRate}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 686,
          "content": "console.log(`   Total Time: ${colors.yellow}${summary.totalTime}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 689,
          "content": "console.log(`\\n${colors.bold}\ud83d\udccb Detailed Results by Category:${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 694,
          "content": "console.log(`\\n${colors.blue}${colors.bold}  ${category.toUpperCase()}:${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 701,
          "content": "console.log(`    ${status}${colors.reset} ${test}`);",
          "type": "log"
        },
        {
          "line_number": 706,
          "content": "console.log(`      ${colors.white}${key}:${colors.reset} ${value}`);",
          "type": "log"
        },
        {
          "line_number": 714,
          "content": "console.log(`\\n${colors.yellow}${colors.bold}\ud83c\udfaf PERFORMANCE RECOMMENDATIONS:${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 725,
          "content": "console.log(`   ${colors.green}\ud83c\udf89 All optimization tests passed! Your build is well-optimized.${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 728,
          "content": "console.log(`   ${colors.red}\u2022${colors.reset} ${category}/${test}: ${result.details.error || 'Optimization needed'}`);",
          "type": "log"
        },
        {
          "line_number": 735,
          "content": "console.log(`\\n${colors.cyan}\ud83d\udcc4 Detailed report saved to: ${reportPath}${colors.reset}`);",
          "type": "log"
        },
        {
          "line_number": 739,
          "content": "console.log(`\\n${colors.bold}${hasFailures ? colors.red + '\u274c BUILD OPTIMIZATION TESTS COMPLETED WITH FAILURES' : colors.green + '\u2705 ALL BUILD OPTIMIZATION TESTS PASSED'}${colors.reset}\\n`);",
          "type": "log"
        },
        {
          "line_number": 744,
          "content": "console.error(`\\n${colors.red}${colors.bold}\ud83d\udca5 FATAL ERROR:${colors.reset} ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 745,
          "content": "console.error(error.stack);",
          "type": "error"
        },
        {
          "line_number": 758,
          "content": "console.log(`${colors.yellow}\ud83d\udcc4 Error report saved to: ./build-optimization-error-report.json${colors.reset}\\n`);",
          "type": "log"
        },
        {
          "line_number": 767,
          "content": "console.error('Failed to run build optimization tests:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/phase7-monitoring-dashboard.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase7-monitoring-dashboard.js",
      "console_count": 27,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.log('\ud83d\udcca Phase 7 Monitoring Dashboard Initialized');",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log(`\ud83c\udf10 Dashboard will be available at: http://localhost:${this.port}`);",
          "type": "log"
        },
        {
          "line_number": 102,
          "content": "console.log(`\ud83d\ude80 Phase 7 Monitoring Dashboard running on http://localhost:${this.port}`);",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log('\ud83d\udcca Available endpoints:');",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "console.log('   GET  / - Main dashboard');",
          "type": "log"
        },
        {
          "line_number": 105,
          "content": "console.log('   GET  /api/metrics - Current metrics JSON');",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log('   GET  /api/achievements - Achievement progress');",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "console.log('   GET  /api/alerts - Regression alerts');",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.log('   POST /api/update - Update metrics');",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.error('\u274c Dashboard request error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 327,
          "content": "console.error('Failed to fetch metrics:', error);",
          "type": "error"
        },
        {
          "line_number": 338,
          "content": "console.error('Failed to fetch achievements:', error);",
          "type": "error"
        },
        {
          "line_number": 348,
          "content": "console.error('Failed to fetch alerts:', error);",
          "type": "error"
        },
        {
          "line_number": 592,
          "content": "console.warn('\u26a0\ufe0f Failed to update metrics:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 708,
          "content": "console.log('\ud83d\udcca Starting automatic metrics collection...');",
          "type": "log"
        },
        {
          "line_number": 718,
          "content": "console.log('\u2705 Metrics collection started - updating every 60 seconds');",
          "type": "log"
        },
        {
          "line_number": 728,
          "content": "console.log('\ud83d\udcca Phase 7 Monitoring Dashboard stopped');",
          "type": "log"
        },
        {
          "line_number": 771,
          "content": "console.log(`\ud83d\udccb Monitoring report saved: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 824,
          "content": "console.log('\\n\ud83d\ude80 Phase 7 Monitoring Dashboard is running!');",
          "type": "log"
        },
        {
          "line_number": 825,
          "content": "console.log(`\ud83d\udcca Dashboard: http://localhost:${port}`);",
          "type": "log"
        },
        {
          "line_number": 826,
          "content": "console.log('\ud83d\udcc8 API endpoints: /api/metrics, /api/achievements, /api/alerts');",
          "type": "log"
        },
        {
          "line_number": 827,
          "content": "console.log('\\nPress Ctrl+C to stop the dashboard');",
          "type": "log"
        },
        {
          "line_number": 831,
          "content": "console.log('\\n\ud83d\uded1 Shutting down dashboard...');",
          "type": "log"
        },
        {
          "line_number": 839,
          "content": "console.log('\ud83d\udccb Generated monitoring report:', JSON.stringify(report, null, 2));",
          "type": "log"
        },
        {
          "line_number": 845,
          "content": "console.log('\ud83d\udcca Current achievements:', JSON.stringify(achievements, null, 2));",
          "type": "log"
        },
        {
          "line_number": 850,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 876,
          "content": "console.error('\u274c Dashboard error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/lint-parallel.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-parallel.js",
      "console_count": 10,
      "console_lines": [
        {
          "line_number": 60,
          "content": "console.error(`${prefix} \u274c ${message}`);",
          "type": "error"
        },
        {
          "line_number": 63,
          "content": "console.warn(`${prefix} \u26a0\ufe0f  ${message}`);",
          "type": "warn"
        },
        {
          "line_number": 66,
          "content": "console.log(`${prefix} \u2705 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "if (options.verbose) console.log(`${prefix} \u23f3 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log(`${prefix} ${message}`);",
          "type": "log"
        },
        {
          "line_number": 249,
          "content": "console.error(`Worker ${workerResult.workerId} stderr:`, workerResult.stderr);",
          "type": "error"
        },
        {
          "line_number": 301,
          "content": "console.log('\\n\ud83d\udccb Files with issues:');",
          "type": "log"
        },
        {
          "line_number": 303,
          "content": "console.log(`   ${fileResult.filePath}: ${fileResult.errorCount} errors, ${fileResult.warningCount} warnings`);",
          "type": "log"
        },
        {
          "line_number": 307,
          "content": "console.log(`   ... and ${aggregated.problemFiles.length - 10} more files`);",
          "type": "log"
        },
        {
          "line_number": 325,
          "content": "console.error(error.stack);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/lint-demo.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/lint-demo.js",
      "console_count": 31,
      "console_lines": [
        {
          "line_number": 73,
          "content": "console.log(`\\n\ud83d\ude80 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log('='.repeat(message.length + 4));",
          "type": "log"
        },
        {
          "line_number": 77,
          "content": "console.log(`[${timestamp}] \u2705 ${message}`);",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.error(`[${timestamp}] \u274c ${message}`);",
          "type": "error"
        },
        {
          "line_number": 83,
          "content": "console.log(`[${timestamp}] \u23f1\ufe0f  ${message}`);",
          "type": "log"
        },
        {
          "line_number": 86,
          "content": "console.log(`[${timestamp}] ${message}`);",
          "type": "log"
        },
        {
          "line_number": 91,
          "content": "console.log(`\\n\ud83d\udccb ${strategy.name}`);",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log(`   Command: ${strategy.command}`);",
          "type": "log"
        },
        {
          "line_number": 93,
          "content": "console.log(`   Description: ${strategy.description}`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log(`   Expected Time: ${strategy.expectedTime}`);",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.log(`   Best Use Case: ${strategy.useCase}`);",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log('This demo will showcase different linting strategies and their performance characteristics.\\n');",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log('\\n\ud83d\udcca Performance Summary');",
          "type": "log"
        },
        {
          "line_number": 163,
          "content": "console.log('=' .repeat(50));",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log(`${index + 1}. ${status} ${strategy.name}: ${durationSeconds}s`);",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log(`\\n\u26a1 Fastest strategy was ${speedup}x faster than slowest`);",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log('   - Use super-fast or syntax for real-time feedback');",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.log('   - Use fast or smart for regular development');",
          "type": "log"
        },
        {
          "line_number": 187,
          "content": "console.log('   - Use parallel for large codebases');",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log('   - Use full for comprehensive validation');",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log(`\\n\ud83d\udcd6 See docs/linting-strategies.md for detailed usage guide`);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('Linting Strategies Demo');",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('\\nUsage: npm run lint:demo [strategy]');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log('\\nAvailable strategies:');",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log(`  ${key.padEnd(12)} - ${strategies[key].description}`);",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('\\nExamples:');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('  npm run lint:demo              # Run all strategies');",
          "type": "log"
        },
        {
          "line_number": 208,
          "content": "console.log('  npm run lint:demo fast          # Run only fast strategy');",
          "type": "log"
        },
        {
          "line_number": 209,
          "content": "console.log('  npm run lint:demo super-fast    # Run only super-fast strategy');",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log('Available linting strategies:\\n');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/analyze-existing-bundle.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/analyze-existing-bundle.js",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 17,
          "content": "info: (msg, data) => console.log(`[BUNDLE-ANALYZER] ${msg}`, data || ''),",
          "type": "log"
        },
        {
          "line_number": 18,
          "content": "warn: (msg, data) => console.warn(`[BUNDLE-ANALYZER] ${msg}`, data || ''),",
          "type": "warn"
        },
        {
          "line_number": 19,
          "content": "error: (msg, data) => console.error(`[BUNDLE-ANALYZER] ${msg}`, data || ''),",
          "type": "error"
        },
        {
          "line_number": 20,
          "content": "success: (msg, data) => console.log(`[BUNDLE-SUCCESS] ${msg}`, data || '')",
          "type": "log"
        },
        {
          "line_number": 410,
          "content": "console.log('\\n\ud83c\udfaf Existing Bundle Analysis Complete!');",
          "type": "log"
        },
        {
          "line_number": 414,
          "content": "console.error('\u274c Analysis failed:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/vite-performance-plugin.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/vite-performance-plugin.js",
      "console_count": 21,
      "console_lines": [
        {
          "line_number": 55,
          "content": "console.log('\ud83d\udcca Vite Performance Plugin initialized');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('\ud83d\ude80 Build started with performance monitoring');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`\ud83d\udce6 Resolved ${moduleCount} modules...`);",
          "type": "log"
        },
        {
          "line_number": 144,
          "content": "console.log(`\ud83d\udce6 Generated ${Object.keys(bundle).length} output files`);",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log(`\ud83d\udcca Bundle analysis: ${bundleAnalysis.totalSize} bytes total`);",
          "type": "log"
        },
        {
          "line_number": 278,
          "content": "console.warn('\u26a0\ufe0f Final analysis failed:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 284,
          "content": "console.log('\\n\ud83c\udfaf === Vite Build Performance Summary ===');",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log(`\u23f1\ufe0f Total Build Time: ${Math.round(report.totalDuration)}ms`);",
          "type": "log"
        },
        {
          "line_number": 286,
          "content": "console.log(`\ud83d\udce6 Modules Processed: ${moduleCount}`);",
          "type": "log"
        },
        {
          "line_number": 287,
          "content": "console.log(`\ud83d\udd04 Modules Transformed: ${transformedModules}`);",
          "type": "log"
        },
        {
          "line_number": 288,
          "content": "console.log(`\ud83d\udcbe Peak Memory: ${Math.round(report.memory.peak.heapUsed / 1024 / 1024)}MB`);",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log(`\ud83d\udcca Bundle Files: ${stats.bundleCount}`);",
          "type": "log"
        },
        {
          "line_number": 295,
          "content": "console.log(`\u26a0\ufe0f Slow Transforms: ${stats.slowTransforms.length}`);",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log(`  \u2022 ${transform.id.split('/').pop()}: ${transform.duration}ms`);",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log('\ud83d\udcc8 Top Plugin Performance:');",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log(`  \u2022 ${plugin.name}: ${Math.round(plugin.totalDuration)}ms (${plugin.callCount} calls)`);",
          "type": "log"
        },
        {
          "line_number": 309,
          "content": "console.log('==========================================\\n');",
          "type": "log"
        },
        {
          "line_number": 337,
          "content": "console.log('\ud83d\udd04 Dev server WebSocket connected');",
          "type": "log"
        },
        {
          "line_number": 345,
          "content": "console.log(`\ud83d\udd04 HMR Update #${hmrUpdateCount}: ${payload.updates?.length || 0} modules`);",
          "type": "log"
        },
        {
          "line_number": 373,
          "content": "console.log(`\u26a0\ufe0f Slow dev server request: ${url} (${Math.round(duration)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 395,
          "content": "console.log(`\u26a0\ufe0f Slow HMR update: ${ctx.file} (${Math.round(duration)}ms)`);",
          "type": "log"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/performance-baseline.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/performance-baseline.js",
      "console_count": 40,
      "console_lines": [
        {
          "line_number": 53,
          "content": "console.log(`\ud83d\udcc1 Created directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.warn('\u26a0\ufe0f Could not get Git information:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 99,
          "content": "console.log('\u23f1\ufe0f Measuring build time...');",
          "type": "log"
        },
        {
          "line_number": 144,
          "content": "console.log(`\u2705 Build completed in ${buildTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log(`\ud83d\udcc4 Build data saved to: ${buildTimeFile}`);",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.error(`\u274c Build failed after ${buildTime}ms: ${error.message}`);",
          "type": "error"
        },
        {
          "line_number": 177,
          "content": "console.log('\ud83d\udcca Analyzing bundle size...');",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 247,
          "content": "console.log(`\ud83d\udcc4 Bundle analysis saved to: ${bundleFile}`);",
          "type": "log"
        },
        {
          "line_number": 335,
          "content": "console.log(`\ud83d\udd0d Comparing ${type} performance with baseline...`);",
          "type": "log"
        },
        {
          "line_number": 344,
          "content": "console.log(`\ud83d\udcdd No baseline found, creating new baseline for ${type}`);",
          "type": "log"
        },
        {
          "line_number": 377,
          "content": "console.log(`\u274c Performance regression detected in ${type}:`);",
          "type": "log"
        },
        {
          "line_number": 378,
          "content": "console.log(`   Change: ${comparison.changePercent.toFixed(2)}%`);",
          "type": "log"
        },
        {
          "line_number": 379,
          "content": "console.log(`   Threshold: ${this.thresholds[type] || 10}%`);",
          "type": "log"
        },
        {
          "line_number": 381,
          "content": "console.log(`\u2705 Performance improvement detected in ${type}:`);",
          "type": "log"
        },
        {
          "line_number": 382,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 386,
          "content": "console.log(`\u2705 ${type} performance within acceptable range:`);",
          "type": "log"
        },
        {
          "line_number": 387,
          "content": "console.log(`   Change: ${comparison.changePercent.toFixed(2)}%`);",
          "type": "log"
        },
        {
          "line_number": 469,
          "content": "console.log('\ud83d\udca1 Storing Lighthouse performance data...');",
          "type": "log"
        },
        {
          "line_number": 512,
          "content": "console.log(`\ud83d\udca1 Lighthouse data saved to: ${lighthouseFile}`);",
          "type": "log"
        },
        {
          "line_number": 513,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 524,
          "content": "console.log('\ud83d\udcca Generating comprehensive performance report...');",
          "type": "log"
        },
        {
          "line_number": 593,
          "content": "console.log(`\ud83d\udcca Performance report generated: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 609,
          "content": "console.warn(`\u26a0\ufe0f Could not load latest ${type} data:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 740,
          "content": "console.log('\\n\ud83d\udcca === Performance Report Summary ===');",
          "type": "log"
        },
        {
          "line_number": 741,
          "content": "console.log(`\ud83c\udfd7\ufe0f Build Time: ${report.summary.buildTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 742,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 745,
          "content": "console.log(`\ud83c\udfaf Performance Score: ${report.summary.performanceScore}/100`);",
          "type": "log"
        },
        {
          "line_number": 746,
          "content": "console.log(`\ud83d\udcca Total Size: ${this.formatBytes(report.summary.totalSize)}`);",
          "type": "log"
        },
        {
          "line_number": 749,
          "content": "console.log('\\n\ud83d\udca1 Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 751,
          "content": "console.log(`${i + 1}. [${rec.priority.toUpperCase()}] ${rec.message}`);",
          "type": "log"
        },
        {
          "line_number": 755,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 777,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 809,
          "content": "console.log(`\ud83e\uddf9 Cleaned ${cleanedFiles} old performance data files`);",
          "type": "log"
        },
        {
          "line_number": 840,
          "content": "console.log(`\u274c No data found for type: ${type}`);",
          "type": "log"
        },
        {
          "line_number": 848,
          "content": "console.error('\u274c Lighthouse report file not found');",
          "type": "error"
        },
        {
          "line_number": 871,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 896,
          "content": "console.error('\u274c Error:', error.message);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/test-lint-performance.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/test-lint-performance.js",
      "console_count": 11,
      "console_lines": [
        {
          "line_number": 33,
          "content": "console.log(`${emoji} ${message}`);",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 156,
          "content": "testFiles.forEach(file => console.log(`  - ${file}`));",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log();",
          "type": "log"
        },
        {
          "line_number": 209,
          "content": "console.log('\u2501'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log(`Baseline (no cache):     ${baselineTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log(`Cached run:             ${cachedTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`Improvement:            ${improvement}ms (${improvementPercent}%)`);",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log(`Cache size:             ${formatBytes(getCacheSize())}`);",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.error(error.stack);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/performance-budget-enforcement.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/performance-budget-enforcement.js",
      "console_count": 20,
      "console_lines": [
        {
          "line_number": 232,
          "content": "console.log('\ud83d\udcca Using bundle analysis from regression report');",
          "type": "log"
        },
        {
          "line_number": 240,
          "content": "console.log('\ud83d\udcca Using bundle analysis from baseline');",
          "type": "log"
        },
        {
          "line_number": 245,
          "content": "console.log('\ud83d\udcca Generating new bundle analysis...');",
          "type": "log"
        },
        {
          "line_number": 255,
          "content": "console.warn('Warning: Could not load bundle analysis:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 280,
          "content": "console.log(`\ud83d\udcca Budget report generated: ${reportPath}`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('\ud83c\udfaf Starting performance budget enforcement...');",
          "type": "log"
        },
        {
          "line_number": 297,
          "content": "console.log('\ud83d\udce6 Checking bundle size budgets...');",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log(`\ud83d\udcca Total bundle size: ${checker.formatSize(bundleAnalysis.totalSize)}`);",
          "type": "log"
        },
        {
          "line_number": 306,
          "content": "console.log(`  \ud83d\udce6 ${chunk}: ${checker.formatSize(size)}`);",
          "type": "log"
        },
        {
          "line_number": 311,
          "content": "console.log('\ud83d\ude80 Checking Web Vitals budgets...');",
          "type": "log"
        },
        {
          "line_number": 320,
          "content": "console.log('\u2705 All performance budgets are within limits');",
          "type": "log"
        },
        {
          "line_number": 322,
          "content": "console.log(`\u274c Found ${violations.length} performance budget violations:`);",
          "type": "log"
        },
        {
          "line_number": 326,
          "content": "console.log(`  ${icon} ${violation.description}`);",
          "type": "log"
        },
        {
          "line_number": 333,
          "content": "console.error('\ud83d\udca5 Critical performance budget violations detected - failing build');",
          "type": "error"
        },
        {
          "line_number": 336,
          "content": "console.log('\u26a0\ufe0f  Warning-level violations detected - build will continue');",
          "type": "log"
        },
        {
          "line_number": 341,
          "content": "console.log('\ud83c\udf89 Performance budget enforcement completed');",
          "type": "log"
        },
        {
          "line_number": 344,
          "content": "console.error('\ud83d\udca5 Error during budget enforcement:', error.message);",
          "type": "error"
        },
        {
          "line_number": 356,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 379,
          "content": "console.log(`\ud83d\udccb Using custom budget configuration: ${configPath}`);",
          "type": "log"
        },
        {
          "line_number": 381,
          "content": "console.error(`Error: Config file not found: ${configPath}`);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/validate-vixpiechart-progressive.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/validate-vixpiechart-progressive.js",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 30,
          "content": "success: (msg) => console.log(`${colors.green}\u2705 ${msg}${colors.reset}`),",
          "type": "log"
        },
        {
          "line_number": 31,
          "content": "error: (msg) => console.log(`${colors.red}\u274c ${msg}${colors.reset}`),",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "warn: (msg) => console.log(`${colors.yellow}\u26a0\ufe0f  ${msg}${colors.reset}`),",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "info: (msg) => console.log(`${colors.blue}\u2139\ufe0f  ${msg}${colors.reset}`),",
          "type": "log"
        },
        {
          "line_number": 34,
          "content": "header: (msg) => console.log(`${colors.bold}${colors.magenta}\\n\ud83d\ude80 ${msg}${colors.reset}\\n`),",
          "type": "log"
        },
        {
          "line_number": 35,
          "content": "section: (msg) => console.log(`${colors.bold}${colors.cyan}\\n\ud83d\udccb ${msg}${colors.reset}`)",
          "type": "log"
        },
        {
          "line_number": 586,
          "content": "console.error('Validation script failed:', error);",
          "type": "error"
        }
      ],
      "category": "build_scripts"
    },
    {
      "path": "scripts/phase4-regression-testing.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-regression-testing.js",
      "console_count": 39,
      "console_lines": [
        {
          "line_number": 197,
          "content": "console.log(`\ud83d\udcc1 Created regression test directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('\ud83e\uddea Starting comprehensive Phase 4 regression testing...');",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log('\ud83d\udd28 Building project for regression testing...');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log('\ud83e\uddea Running unit test regression suite...');",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log('\ud83d\udd17 Running integration test regression suite...');",
          "type": "log"
        },
        {
          "line_number": 224,
          "content": "console.log('\ud83c\udf10 Running E2E test regression suite...');",
          "type": "log"
        },
        {
          "line_number": 228,
          "content": "console.log('\u26a1 Running performance regression tests...');",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log('\ud83c\udfa8 Running visual regression tests...');",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.log('\u267f Running accessibility regression tests...');",
          "type": "log"
        },
        {
          "line_number": 243,
          "content": "console.log('\ud83c\udf10 Running cross-browser regression tests...');",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log('\ud83d\udccb Generating regression test report...');",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.log(`\u2705 Phase 4 regression testing completed. Session: ${this.currentSession.sessionId}`);",
          "type": "log"
        },
        {
          "line_number": 260,
          "content": "console.error('\u274c Regression testing failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 387,
          "content": "console.log(`  \ud83e\uddea Running ${suite.name}...`);",
          "type": "log"
        },
        {
          "line_number": 416,
          "content": "console.log(`    \u2705 ${suite.name} passed (${Math.round(duration)}ms, attempt ${attempt})`);",
          "type": "log"
        },
        {
          "line_number": 423,
          "content": "console.log(`    \ud83d\udd04 ${suite.name} failed, retrying (${attempt}/${retries})...`);",
          "type": "log"
        },
        {
          "line_number": 440,
          "content": "console.log(`    \u274c ${suite.name} failed after ${retries + 1} attempts (${Math.round(duration)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 452,
          "content": "console.log(`    \u274c ${suite.name} failed with error: ${error.message}`);",
          "type": "log"
        },
        {
          "line_number": 462,
          "content": "console.log(`  \u26a1 Running ${perfTest.name}...`);",
          "type": "log"
        },
        {
          "line_number": 479,
          "content": "console.log(`    \u2705 ${perfTest.name} passed (${Math.round(duration)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 481,
          "content": "console.log(`    \u274c ${perfTest.name} failed: ${result.reason}`);",
          "type": "log"
        },
        {
          "line_number": 493,
          "content": "console.log(`    \u274c ${perfTest.name} failed with error: ${error.message}`);",
          "type": "log"
        },
        {
          "line_number": 578,
          "content": "console.log('\u2705 Project built successfully for testing');",
          "type": "log"
        },
        {
          "line_number": 580,
          "content": "console.error('\u274c Build failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 605,
          "content": "console.log(`\ud83d\udccb Regression report saved: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 711,
          "content": "console.log(`\ud83d\udcbe Session results saved: ${sessionFile}`);",
          "type": "log"
        },
        {
          "line_number": 720,
          "content": "console.log('\\n\ud83e\uddea === Phase 4 Regression Test Summary ===');",
          "type": "log"
        },
        {
          "line_number": 721,
          "content": "console.log(`\ud83d\udcc8 Total Tests: ${session.summary.total}`);",
          "type": "log"
        },
        {
          "line_number": 722,
          "content": "console.log(`\u2705 Passed: ${session.summary.pass || 0}`);",
          "type": "log"
        },
        {
          "line_number": 723,
          "content": "console.log(`\u274c Failed: ${session.summary.fail || 0}`);",
          "type": "log"
        },
        {
          "line_number": 724,
          "content": "console.log(`\u23f1\ufe0f Timeout: ${session.summary.timeout || 0}`);",
          "type": "log"
        },
        {
          "line_number": 725,
          "content": "console.log(`\u23e9 Skipped: ${session.summary.skip || 0}`);",
          "type": "log"
        },
        {
          "line_number": 726,
          "content": "console.log(`\ud83c\udfc6 Overall Success: ${session.overallSuccess ? '\u2705 PASS' : '\u274c FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 727,
          "content": "console.log(`\ud83d\udea8 Regression Detected: ${session.regressionDetected ? '\u274c YES' : '\u2705 NO'}`);",
          "type": "log"
        },
        {
          "line_number": 731,
          "content": "console.log('\\n\ud83d\udea8 Critical Failures:');",
          "type": "log"
        },
        {
          "line_number": 733,
          "content": "console.log(`  \u274c ${failure.name}: ${failure.error}`);",
          "type": "log"
        },
        {
          "line_number": 737,
          "content": "console.log('=======================================\\n');",
          "type": "log"
        },
        {
          "line_number": 809,
          "content": "console.log(`\\n\ud83e\uddea Phase 4 Functionality Regression Testing Framework\\n\\nUsage: node phase4-regression-testing.js <command>\\n\\nCommands:\\n  unit              Run unit test regression suite\\n  integration       Run integration test regression suite\\n  e2e              Run E2E test regression suite  \\n  performance      Run performance regression tests\\n  full-regression  Run complete regression test suite\\n  regression       Alias for full-regression\\n  help            Show this help message\\n\\nPhase 4 Targets:\\n  - Tests focus on utils, useComparativeAnalysis, Securities\\n  - Critical failures block deployment\\n  - Performance regression detection\\n  - Cross-browser compatibility validation\\n        `);",
          "type": "log"
        },
        {
          "line_number": 813,
          "content": "console.error('\u274c Regression testing error:', error.message);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "scripts/phase4-validation-system.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/scripts/phase4-validation-system.js",
      "console_count": 43,
      "console_lines": [
        {
          "line_number": 108,
          "content": "console.log(`\ud83d\udcc1 Created Phase 4 validation directory: ${dir}`);",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log('\ud83d\udcca Loaded Phase 4 baselines from', baselineFile);",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.warn('\u26a0\ufe0f Could not load Phase 4 baselines:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 137,
          "content": "console.log('\ud83c\udfaf Generating Phase 4 optimization baselines...');",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log('\ud83d\udcca Phase 4 baselines saved to:', baselineFile);",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.log(`\ud83d\udce6 Mapped ${targetName} to bundle: ${matchingChunk}`);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.warn(`\u26a0\ufe0f Could not find bundle size for target: ${targetName}`);",
          "type": "warn"
        },
        {
          "line_number": 208,
          "content": "console.log('\ud83d\ude80 Starting comprehensive Phase 4 validation...');",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log('\ud83d\udce6 Building current state for validation...');",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log('\ud83d\udcca Analyzing bundle sizes...');",
          "type": "log"
        },
        {
          "line_number": 230,
          "content": "console.log('\u26a1 Assessing performance impact...');",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.log('\ud83e\uddea Running functionality regression tests...');",
          "type": "log"
        },
        {
          "line_number": 240,
          "content": "console.log('\ud83d\udccb Generating validation report...');",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log(`\u2705 Phase 4 validation completed. Session saved: ${sessionFile}`);",
          "type": "log"
        },
        {
          "line_number": 257,
          "content": "console.error('\u274c Phase 4 validation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 273,
          "content": "console.log('\ud83d\udce6 Validating Phase 4 bundle size reductions...');",
          "type": "log"
        },
        {
          "line_number": 308,
          "content": "console.log(`\ud83d\udcca ${target.name}: ${this.formatBytes(baseline)} \u2192 ${this.formatBytes(current)} (${this.formatBytes(result.reduction)} reduction, ${result.achievementPercentage.toFixed(1)}% of target)`);",
          "type": "log"
        },
        {
          "line_number": 325,
          "content": "console.log('\u26a1 Validating performance impact...');",
          "type": "log"
        },
        {
          "line_number": 350,
          "content": "console.log('\u26a1 Performance validation completed');",
          "type": "log"
        },
        {
          "line_number": 353,
          "content": "console.warn('\u26a0\ufe0f Performance validation encountered issues:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 364,
          "content": "console.log('\ud83e\uddea Validating functionality preservation...');",
          "type": "log"
        },
        {
          "line_number": 378,
          "content": "console.log('\ud83e\uddea Running unit tests...');",
          "type": "log"
        },
        {
          "line_number": 382,
          "content": "console.log('\ud83d\udd17 Running integration tests...');",
          "type": "log"
        },
        {
          "line_number": 386,
          "content": "console.log('\ud83c\udf10 Running E2E tests...');",
          "type": "log"
        },
        {
          "line_number": 395,
          "content": "console.log('\ud83e\uddea Functionality validation completed');",
          "type": "log"
        },
        {
          "line_number": 398,
          "content": "console.warn('\u26a0\ufe0f Functionality validation encountered issues:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 410,
          "content": "console.log('\ud83d\udccb Generating comprehensive Phase 4 validation report...');",
          "type": "log"
        },
        {
          "line_number": 432,
          "content": "console.log(`\ud83d\udccb Validation report saved: ${reportFile}`);",
          "type": "log"
        },
        {
          "line_number": 489,
          "content": "console.log('\ud83d\udd28 Building project for Phase 4 analysis...');",
          "type": "log"
        },
        {
          "line_number": 495,
          "content": "console.log('\u2705 Build completed successfully');",
          "type": "log"
        },
        {
          "line_number": 497,
          "content": "console.error('\u274c Build failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 537,
          "content": "console.log('\\n\ud83d\udcca === Phase 4 Baselines Summary ===');",
          "type": "log"
        },
        {
          "line_number": 539,
          "content": "console.log(`\ud83d\udce6 ${name}: ${this.formatBytes(data.size)} (Target: -${this.formatBytes(data.target.targetReduction)})`);",
          "type": "log"
        },
        {
          "line_number": 541,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 548,
          "content": "console.log('\\n\ud83c\udfaf === Phase 4 Validation Summary ===');",
          "type": "log"
        },
        {
          "line_number": 552,
          "content": "console.log(`\ud83d\udcca Bundle Optimization: ${bundleResults.summary.overallAchievementPercentage.toFixed(1)}% of target achieved`);",
          "type": "log"
        },
        {
          "line_number": 553,
          "content": "console.log(`\u2705 Successful targets: ${bundleResults.summary.successCount}`);",
          "type": "log"
        },
        {
          "line_number": 554,
          "content": "console.log(`\u274c Failed targets: ${bundleResults.summary.failureCount}`);",
          "type": "log"
        },
        {
          "line_number": 559,
          "content": "console.log(`\ud83e\uddea Functionality: ${functionalityResults.overallSuccess ? '\u2705 PASS' : '\u274c FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 562,
          "content": "console.log(`\ud83c\udfc6 Overall Success: ${validationSession.overallSuccess ? '\u2705 SUCCESS' : '\u274c FAILURE'}`);",
          "type": "log"
        },
        {
          "line_number": 563,
          "content": "console.log('====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 844,
          "content": "console.log(`",
          "type": "log"
        },
        {
          "line_number": 867,
          "content": "console.error('\u274c Phase 4 validation error:', error.message);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "dist-phase3-optimized/js/ForecastingDashboard-DgjDL2ac.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/ForecastingDashboard-DgjDL2ac.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{a as i,j as e}from\"./react-vendor-CWzyjU4N.js\";import{ForecastingService as Q}from\"./forecasting-DoG2if65.js\";import{ModelValidationService as W}from\"./predictionModels-lYeemE7T.js\";import{BarChart as Y}from\"./BarChart-CxJqIzgH.js\";import{LineChart as V}from\"./LineChart-CDcgKm6y.js\";import{ScatterPlot as Z}from\"./ScatterPlot-Cgok05ne.js\";import{B as R}from\"./Button-DBP6FnJb.js\";import{C as n}from\"./Card-CJqfKyPf.js\";import{a as J}from\"../assets/js/index-DarNXlp7.js\";import\"./vendor-BUtizv8l.js\";import\"./visx/math-array-utilities-micro-DJclFi1f.js\";import\"./visx/math-scale-utilities-micro-Ce9nmdPf.js\";import\"./visx/visx-group-isolated-DU4tDcRc.js\";import\"./visx/visx-line-shape-micro-BTDgNcMd.js\";import\"./visx/visx-shapes-misc-micro-EO-rkJxs.js\";import\"./BaseChart-DhctQFLb.js\";import\"./chartHelpers-Bmud7pk9.js\";import\"./visx/visx-responsive-micro-7kaiSFNA.js\";import\"./VixBarChart-ChzdvWbE.js\";import\"./VixTooltip-9uCOXxM-.js\";import\"./AxisProgressiveSimple-C3B_8_c8.js\";import\"./localpoint/localpoint-isolated-core-B2Fg9z_c.js\";import\"./visx/visx-events-misc-micro-CEQtRisV.js\";import\"./VixScatterPlot-ByuSH4Up.js\";const C=20;function Fe({symbol:x,priceData:d,earningsHistory:A,financialStatements:w,className:k=\"\",onExport:P}){var $;const{utilities:c,loadForContext:I}=J();i.useEffect(()=>{I(\"analytics\").catch(console.error)},[I]);const h=i.useCallback(r=>{var s;return((s=c.formatCurrency)==null?void 0:s.call(c,r))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(r)},[c]),o=i.useCallback(r=>{var s;return((s=c.formatPercentage)==null?void 0:s.call(c,r))||`${r.toFixed(2)}%`},[c]),g=i.useCallback((r,s)=>{var l;return((l=c.formatTimestamp)==null?void 0:l.call(c,r,s))||new Date(r).toLocaleDateString()},[c]),[a,M]=i.useState({loading:!1,error:null}),[m,S]=i.useState({horizon:30,confidenceLevel:.95,includeSeasonality:!0,ensembleMethods:[\"ARIMA\",\"TREND_ANALYSIS\",\"LINEAR_REGRESSION\"],backtestPeriods:20}),[p,b]=i.useState(\"price\"),v=i.useMemo(()=>new Q,[]),y=i.useMemo(()=>new W,[]),F=i.useCallback(async()=>{M(r=>({...r,loading:!0,error:null}));try{const r=await v.generatePriceForecast(d,m),s=await v.generateEarningsForecast(A,w,m),l=await v.generateVolatilityForecast(d,m),f=await Promise.all(m.ensembleMethods.map(async u=>{const N=d.at(-1),_=(N==null?void 0:N.close)??100,q=Array.from({length:C},()=>_*(1+(Math.random()-.5)*.1)),O=d.slice(-C).map(H=>H.close);return y.validateModel(u,q,O)})),t=d.at(-1),j=(t==null?void 0:t.close)??100,E=m.ensembleMethods.map((u,N)=>({modelType:u,predictions:Array.from({length:C},()=>j*(1+(Math.random()-.5)*.1)),actual:d.slice(-C).map(_=>_.close)})),U=await y.compareModels(E),B=await y.designEnsemble(f.map(u=>u.data));M({priceForecast:r,earningsForecast:s,volatilityForecast:l,modelValidation:f,modelComparison:U,ensembleConfig:B,loading:!1,error:null})}catch{M(r=>({...r,loading:!1,error:error instanceof Error?error.message:\"Unknown error occurred\"}))}},[d,A,w,m,v,y]);i.useEffect(()=>{d.length>0&&F()},[d,m,F]);const L=()=>{var r,s,l,f,t;if(P){const j={...((r=a.priceForecast)==null?void 0:r.data)&&{priceForecast:a.priceForecast.data},...((s=a.earningsForecast)==null?void 0:s.data)&&{earningsForecast:a.earningsForecast.data},...((l=a.volatilityForecast)==null?void 0:l.data)&&{volatilityForecast:a.volatilityForecast.data},...a.modelValidation&&{modelValidation:a.modelValidation.map(E=>E.data)},...((f=a.modelComparison)==null?void 0:f.data)&&{modelComparison:a.modelComparison.data},...((t=a.ensembleConfig)==null?void 0:t.data)&&{ensembleConfig:a.ensembleConfig.data}};P(j)}},T=i.useMemo(()=>{if(!a.priceForecast)return{type:\"line\",data:[],dimensions:{height:400}};const r=d.slice(-60).map(t=>({timestamp:t.timestamp,value:t.close,name:\"Historical Price\"})),s=a.priceForecast.data.predictions.map(t=>({timestamp:t.timestamp,value:t.predicted,name:\"Predicted Price\"})),l=a.priceForecast.data.predictions.map(t=>({timestamp:t.timestamp,value:t.confidenceInterval.upper,name:\"Upper Confidence\"})),f=a.priceForecast.data.predictions.map(t=>({timestamp:t.timestamp,value:t.confidenceInterval.lower,name:\"Lower Confidence\"}));return{type:\"line\",data:[...r,...s,...l,...f],dimensions:{height:400},title:`${x} Price Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:t=>g(Number(t),\"1M\")},yAxis:{enabled:!0,label:\"Price ($)\",tickFormatter:t=>h(Number(t))},colors:{primary:\"#3b82f6\",secondary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"},tooltip:{enabled:!0,formatter:(t,j)=>[h(Number(t)),j]},legend:{enabled:!0}}},[a.priceForecast,d,x,h,g]),z=i.useMemo(()=>a.earningsForecast?{type:\"bar\",data:a.earningsForecast.data.predictions.map(s=>({timestamp:Date.now(),value:s.predictedEPS,name:s.quarter,category:s.quarter})),dimensions:{height:300},title:`${x} Earnings Forecast`,xAxis:{enabled:!0,label:\"Quarter\",type:\"category\"},yAxis:{enabled:!0,label:\"EPS ($)\",tickFormatter:s=>h(Number(s))},colors:{primary:\"#10b981\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}:{type:\"bar\",data:[],dimensions:{height:300}},[a.earningsForecast,x,h]),D=i.useMemo(()=>a.volatilityForecast?{type:\"line\",data:a.volatilityForecast.data.predictions.map(s=>({timestamp:s.timestamp,value:s.predictedVolatility*100,name:\"Predicted Volatility\"})),dimensions:{height:300},title:`${x} Volatility Forecast`,xAxis:{enabled:!0,label:\"Date\",type:\"number\",tickFormatter:s=>g(Number(s),\"1M\")},yAxis:{enabled:!0,label:\"Volatility (%)\",tickFormatter:s=>o(Number(s)/100)},colors:{primary:\"#f59e0b\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}:{type:\"line\",data:[],dimensions:{height:300}},[a.volatilityForecast,x,o,g]),G=i.useMemo(()=>a.modelComparison?{type:\"scatter\",data:a.modelComparison.data.rankings.map(s=>({timestamp:s.rank,value:s.score*100,name:s.modelType,category:s.modelType})),dimensions:{height:350},title:\"Model Performance Comparison\",xAxis:{enabled:!0,label:\"Rank\",type:\"number\"},yAxis:{enabled:!0,label:\"Score (%)\",tickFormatter:s=>o(Number(s)/100)},colors:{primary:\"#8b5cf6\",grid:\"#f3f4f6\",background:\"#ffffff\",text:\"#1f2937\"}}:{type:\"scatter\",data:[],dimensions:{height:350}},[a.modelComparison,o]);return a.loading?e.jsx(n,{className:`forecasting-dashboard ${k}`,children:e.jsxs(\"div\",{className:\"forecasting-dashboard__loading\",children:[e.jsx(\"div\",{className:\"loading-spinner\"}),e.jsx(\"p\",{children:\"Generating forecasts...\"})]})}):a.error?e.jsx(n,{className:`forecasting-dashboard ${k}`,children:e.jsxs(\"div\",{className:\"forecasting-dashboard__error\",children:[e.jsx(\"h3\",{children:\"Error generating forecasts\"}),e.jsx(\"p\",{children:a.error}),e.jsx(R,{onClick:F,children:\"Retry\"})]})}):e.jsxs(\"div\",{className:`forecasting-dashboard ${k}`,children:[e.jsxs(n,{className:\"forecasting-dashboard__header\",children:[e.jsxs(\"div\",{className:\"forecasting-dashboard__title\",children:[e.jsxs(\"h2\",{children:[\"Forecasting Dashboard - \",x]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__actions\",children:[e.jsx(R,{onClick:F,disabled:a.loading,children:\"Refresh Forecasts\"}),P&&e.jsx(R,{onClick:L,variant:\"secondary\",children:\"Export Data\"})]})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__options\",children:[e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"forecast-horizon\",children:\"Forecast Horizon (days)\"}),e.jsx(\"input\",{id:\"forecast-horizon\",type:\"number\",value:m.horizon,onChange:r=>S(s=>({...s,horizon:Number.parseInt(r.target.value)})),min:\"1\",max:\"365\"})]}),e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"confidence-level\",children:\"Confidence Level\"}),e.jsxs(\"select\",{id:\"confidence-level\",value:m.confidenceLevel,onChange:r=>S(s=>({...s,confidenceLevel:Number.parseFloat(r.target.value)})),children:[e.jsx(\"option\",{value:.9,children:\"90%\"}),e.jsx(\"option\",{value:.95,children:\"95%\"}),e.jsx(\"option\",{value:.99,children:\"99%\"})]})]}),e.jsxs(\"div\",{className:\"option-group\",children:[e.jsx(\"label\",{htmlFor:\"include-seasonality\",children:\"Include Seasonality\"}),e.jsx(\"input\",{id:\"include-seasonality\",type:\"checkbox\",checked:m.includeSeasonality,onChange:r=>S(s=>({...s,includeSeasonality:r.target.checked}))})]})]})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__tabs\",children:[e.jsx(\"button\",{className:`tab ${p===\"price\"?\"active\":\"\"}`,onClick:()=>b(\"price\"),children:\"Price Forecast\"}),e.jsx(\"button\",{className:`tab ${p===\"earnings\"?\"active\":\"\"}`,onClick:()=>b(\"earnings\"),children:\"Earnings Forecast\"}),e.jsx(\"button\",{className:`tab ${p===\"volatility\"?\"active\":\"\"}`,onClick:()=>b(\"volatility\"),children:\"Volatility Forecast\"}),e.jsx(\"button\",{className:`tab ${p===\"validation\"?\"active\":\"\"}`,onClick:()=>b(\"validation\"),children:\"Model Validation\"})]}),e.jsxs(\"div\",{className:\"forecasting-dashboard__content\",children:[p===\"price\"&&a.priceForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(n,{className:\"chart-container\",children:e.jsx(V,{config:T})}),e.jsxs(\"div\",{className:\"forecast-metrics\",children:[e.jsxs(n,{className:\"metric-card\",children:[e.jsx(\"h4\",{children:\"Model Performance\"}),e.jsxs(\"div\",{className:\"metrics\",children:[e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Accuracy:\"}),e.jsx(\"span\",{children:o(a.priceForecast.data.accuracy)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"R\u00b2:\"}),e.jsx(\"span\",{children:a.priceForecast.data.accuracy_metrics.rmse.toFixed(3)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"MAPE:\"}),e.jsx(\"span\",{children:o(a.priceForecast.data.accuracy_metrics.mape)})]})]})]}),e.jsxs(n,{className:\"backtest-results\",children:[e.jsx(\"h4\",{children:\"Backtest Results\"}),e.jsxs(\"div\",{className:\"metrics\",children:[e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Period:\"}),e.jsx(\"span\",{children:a.priceForecast.data.backtestResults.period})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Accuracy:\"}),e.jsx(\"span\",{children:o(a.priceForecast.data.backtestResults.accuracy)})]}),e.jsxs(\"div\",{className:\"metric\",children:[e.jsx(\"span\",{children:\"Profitability:\"}),e.jsx(\"span\",{children:o(a.priceForecast.data.backtestResults.profitability)})]})]})]})]})]}),p===\"earnings\"&&a.earningsForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(n,{className:\"chart-container\",children:e.jsx(Y,{config:z})}),e.jsxs(n,{className:\"earnings-table\",children:[e.jsx(\"h4\",{children:\"Earnings Predictions\"}),e.jsxs(\"table\",{children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Quarter\"}),e.jsx(\"th\",{children:\"Predicted EPS\"}),e.jsx(\"th\",{children:\"Confidence Interval\"}),e.jsx(\"th\",{children:\"Growth Rate\"})]})}),e.jsx(\"tbody\",{children:a.earningsForecast.data.predictions.map((r,s)=>e.jsxs(\"tr\",{children:[e.jsx(\"td\",{children:r.quarter}),e.jsx(\"td\",{children:h(r.predictedEPS)}),e.jsxs(\"td\",{children:[h(r.confidenceInterval.lower),\" -\",\" \",h(r.confidenceInterval.upper)]}),e.jsx(\"td\",{children:o(r.growthRate)})]},r.quarter||`pred-${s}`))})]})]})]}),p===\"volatility\"&&a.volatilityForecast&&e.jsxs(\"div\",{className:\"forecast-section\",children:[e.jsx(n,{className:\"chart-container\",children:e.jsx(V,{config:D})}),e.jsxs(n,{className:\"garch-params\",children:[e.jsx(\"h4\",{children:\"GARCH Model Parameters\"}),e.jsx(\"div\",{className:\"params\",children:a.volatilityForecast.data.predictions[0]&&e.jsxs(e.Fragment,{children:[e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Alpha (\u03b1):\"}),e.jsx(\"span\",{children:a.volatilityForecast.data.predictions[0].garchParams.alpha.toFixed(4)})]}),e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Beta (\u03b2):\"}),e.jsx(\"span\",{children:a.volatilityForecast.data.predictions[0].garchParams.beta.toFixed(4)})]}),e.jsxs(\"div\",{className:\"param\",children:[e.jsx(\"span\",{children:\"Omega (\u03c9):\"}),e.jsx(\"span\",{children:a.volatilityForecast.data.predictions[0].garchParams.omega.toFixed(6)})]})]})})]})]}),p===\"validation\"&&a.modelComparison&&e.jsxs(\"div\",{className:\"validation-section\",children:[e.jsx(n,{className:\"chart-container\",children:e.jsx(Z,{config:G})}),e.jsxs(\"div\",{className:\"validation-results\",children:[e.jsxs(n,{className:\"model-rankings\",children:[e.jsx(\"h4\",{children:\"Model Rankings\"}),e.jsxs(\"table\",{children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Rank\"}),e.jsx(\"th\",{children:\"Model\"}),e.jsx(\"th\",{children:\"Score\"})]})}),e.jsx(\"tbody\",{children:a.modelComparison.data.rankings.map((r,s)=>e.jsxs(\"tr\",{children:[e.jsx(\"td\",{children:r.rank}),e.jsx(\"td\",{children:r.modelType}),e.jsx(\"td\",{children:o(r.score)})]},r.modelType||`ranking-${s}`))})]})]}),e.jsxs(n,{className:\"recommendations\",children:[e.jsx(\"h4\",{children:\"Recommendations\"}),e.jsx(\"ul\",{children:a.modelComparison.data.recommendations.map((r,s)=>e.jsx(\"li\",{children:r},r))})]}),a.ensembleConfig&&e.jsxs(n,{className:\"ensemble-config\",children:[e.jsx(\"h4\",{children:\"Ensemble Configuration\"}),e.jsxs(\"div\",{className:\"ensemble-details\",children:[e.jsxs(\"div\",{className:\"ensemble-method\",children:[e.jsx(\"span\",{children:\"Method:\"}),e.jsx(\"span\",{children:a.ensembleConfig.data.method})]}),e.jsxs(\"div\",{className:\"performance-gain\",children:[e.jsx(\"span\",{children:\"Expected Performance Gain:\"}),e.jsx(\"span\",{children:o(a.ensembleConfig.data.performanceGain)})]}),e.jsxs(\"div\",{className:\"model-weights\",children:[e.jsx(\"h5\",{children:\"Model Weights:\"}),($=a.ensembleConfig)==null?void 0:$.data.baseModels.map((r,s)=>{var l;return e.jsxs(\"div\",{className:\"weight-item\",children:[e.jsxs(\"span\",{children:[r,\":\"]}),e.jsx(\"span\",{children:o(((l=a.ensembleConfig)==null?void 0:l.data.weights[s])??0)})]},r)})]})]})]})]})]})]})]})}export{Fe as ForecastingDashboard,Fe as default};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/Login-UAG4lLeP.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/Login-UAG4lLeP.js",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 2,
          "content": "var I=Object.defineProperty;var A=(r,a,o)=>a in r?I(r,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[a]=o;var k=(r,a,o)=>A(r,typeof a!=\"symbol\"?a+\"\":a,o);import{a as c,j as e,R as T,H as F,N as P,L}from\"./react-vendor-CWzyjU4N.js\";import{u as B,a as _}from\"./authStore-BUclSJXC.js\";import{U as M}from\"./vendor-BUtizv8l.js\";import{B as $}from\"./Button-DBP6FnJb.js\";import{C as q}from\"./Card-CJqfKyPf.js\";import{I as R}from\"./Input-DrNFZbX-.js\";import\"./auth-DoOawKb9.js\";import\"./http-client-Kigo36r5.js\";import\"./logger-xpKBk56Z.js\";import\"./visx/math-array-utilities-micro-DJclFi1f.js\";import\"./visx/math-scale-utilities-micro-Ce9nmdPf.js\";import\"./visx/visx-group-isolated-DU4tDcRc.js\";import\"./visx/visx-line-shape-micro-BTDgNcMd.js\";import\"./visx/visx-shapes-misc-micro-EO-rkJxs.js\";const S=new Map,y=new Set;function V(r,a=!0,o={}){const[d,t]=c.useState({isLoaded:y.has(r),isLoading:!1,hasError:!1}),l=c.useRef(null),{preload:n=!1,trigger:m=\"condition\",onLoad:g,onError:f,fallbackStyles:b}=o,h=c.useCallback(async()=>{if(y.has(r)){t(s=>({...s,isLoaded:!0}));return}if(S.has(r))try{await S.get(r),t(s=>({...s,isLoaded:!0,isLoading:!1}));return}catch{t(s=>({...s,hasError:!0,error,isLoading:!1}));return}t(s=>({...s,isLoading:!0,hasError:!1})),l.current={loadStartTime:performance.now(),success:!1,cssPath:r,trigger:m||\"condition\"};const v=import(r).then(()=>{var j;const s=performance.now(),x=s-(((j=l.current)==null?void 0:j.loadStartTime)||0);l.current&&(l.current.loadEndTime=s,l.current.loadDuration=x,l.current.success=!0),y.add(r),t(w=>({...w,isLoaded:!0,isLoading:!1,loadTime:x})),g==null||g(),console.log(`\u2705 CSS loaded: ${r} (${x.toFixed(1)}ms)`)}).catch(s=>{throw l.current&&(l.current.success=!1,l.current.error=s),t(x=>({...x,hasError:!0,error:s,isLoading:!1})),f==null||f(s),s});return S.set(r,v),v},[r,g,f,m]),u=c.useCallback(async()=>h(),[h]);return c.useEffect(()=>{a&&!y.has(r)&&h().catch(()=>{})},[a,r,h]),c.useEffect(()=>{n&&!y.has(r)&&(\"requestIdleCallback\"in window?window.requestIdleCallback(()=>{u().catch(()=>{})}):setTimeout(()=>{u().catch(()=>{})},100))},[n,r,u]),{...d,loadCSS:h,preloadCSS:u,fallbackStyles:d.hasError?b:void 0}}function z(r,a=\"click\",o={}){const[d,t]=c.useState(!1);return{...V(r,d,{...o,trigger:\"interaction\"}),handlers:{onClick:a===\"click\"?()=>t(!0):void 0,onMouseEnter:a===\"hover\"?()=>t(!0):void 0,onFocus:a===\"focus\"?()=>t(!0):void 0},hasInteracted:d,triggerInteraction:()=>t(!0)}}const W=`",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "`;class U extends c.Component{constructor(o){super(o);k(this,\"retryTimeouts\",[]);k(this,\"applyFallbackStyles\",()=>{if(typeof document<\"u\"&&!document.getElementById(\"css-fallback-styles\")){const o=document.createElement(\"style\");o.id=\"css-fallback-styles\",o.textContent=W,document.head.appendChild(o),this.setState({fallbackApplied:!0})}});k(this,\"handleRetry\",()=>{this.setState({hasError:!1,errorMessage:void 0,cssPath:void 0,fallbackApplied:!1}),this.props.cssPath&&this.reloadCSS(this.props.cssPath)});k(this,\"reloadCSS\",async o=>{try{const d=document.querySelector(`link[href*=\"${o}\"]`);d&&d.remove(),await import(o)}catch{}});this.state={hasError:!1,fallbackApplied:!1}}static getDerivedStateFromError(o){return{hasError:!0,errorMessage:o.message,fallbackApplied:!1}}componentDidCatch(o,d){this.applyFallbackStyles(),this.props.onError&&this.props.onError(o,this.props.cssPath),typeof window<\"u\"&&window.console&&(console.group(\"\ud83c\udfa8 CSS Loading Error\"),console.groupEnd())}componentWillUnmount(){this.retryTimeouts.forEach(o=>clearTimeout(o))}render(){return this.state.hasError?this.props.fallbackComponent?this.props.fallbackComponent:e.jsxs(\"div\",{className:\"css-fallback-container\",children:[e.jsxs(\"div\",{className:\"css-fallback-message\",children:[\"CSS loading failed. Using fallback styles.\",this.state.errorMessage&&e.jsxs(\"details\",{style:{marginTop:\"0.5rem\",fontSize:\"0.75rem\"},children:[e.jsx(\"summary\",{children:\"Error details\"}),e.jsx(\"code\",{children:this.state.errorMessage})]})]}),e.jsx(\"button\",{className:\"css-fallback-retry\",onClick:this.handleRetry,type:\"button\",children:\"Retry Loading\"})]}):this.props.children}}const p=({width:r=\"100%\",height:a=\"1rem\",borderRadius:o=\"0.25rem\",className:d=\"\",animate:t=!0})=>{const l={width:r,height:a,borderRadius:o,backgroundColor:\"var(--skeleton-bg, #f3f4f6)\",backgroundImage:t?`linear-gradient(",
          "type": "group"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/AdvancedSearchFeatures-C3lctBLf.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/AdvancedSearchFeatures-C3lctBLf.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{a as l,j as e,E as S,G as C,X as F}from\"./react-vendor-CWzyjU4N.js\";import{B as t}from\"./Button-DBP6FnJb.js\";import\"./vendor-BUtizv8l.js\";import\"./visx/math-array-utilities-micro-DJclFi1f.js\";import\"./visx/math-scale-utilities-micro-Ce9nmdPf.js\";import\"./visx/visx-group-isolated-DU4tDcRc.js\";import\"./visx/visx-line-shape-micro-BTDgNcMd.js\";import\"./visx/visx-shapes-misc-micro-EO-rkJxs.js\";const w=({searchTerm:c})=>{const[a,o]=l.useState({sector:\"all\",exchange:\"all\",priceRange:[0,1e3],changeFilter:\"all\"}),[i,p]=l.useState(\"symbol\"),[v,h]=l.useState(\"asc\"),[d,g]=l.useState(!1),[u,x]=l.useState([]);l.useEffect(()=>{if(c.length>=2){const s=[`${c.toUpperCase()}`,`${c.toLowerCase()} stock`,`${c} analysis`,`${c} ETF`];x(s)}else x([])},[c]);const n=l.useCallback((s,r)=>{o(N=>({...N,[s]:r}))},[]),j=l.useCallback(s=>{i===s?h(r=>r===\"asc\"?\"desc\":\"asc\"):(p(s),h(\"asc\"))},[i]),m=l.useCallback(()=>{o({sector:\"all\",exchange:\"all\",priceRange:[0,1e3],changeFilter:\"all\"})},[]);return e.jsxs(\"div\",{className:\"securities__advanced-search\",children:[e.jsxs(\"div\",{className:\"advanced-search__header\",children:[e.jsx(\"h3\",{children:\"Advanced Search Features\"}),e.jsxs(t,{size:\"sm\",variant:\"outline\",onClick:()=>g(!d),children:[e.jsx(S,{className:\"w-4 h-4 mr-1\"}),\"Filters\"]})]}),u.length>0&&e.jsxs(\"div\",{className:\"advanced-search__suggestions\",children:[e.jsx(\"h4\",{children:\"Search Suggestions:\"}),e.jsx(\"div\",{className:\"suggestions-list\",children:u.map((s,r)=>e.jsx(\"button\",{className:\"suggestion-item\",onClick:()=>console.log(\"Search suggestion:\",s),children:s},r))})]}),e.jsxs(\"div\",{className:\"advanced-search__sorting\",children:[e.jsx(\"span\",{children:\"Sort by:\"}),[\"symbol\",\"price\",\"change\",\"volume\"].map(s=>e.jsxs(t,{size:\"sm\",variant:i===s?\"default\":\"outline\",onClick:()=>j(s),children:[s.charAt(0).toUpperCase()+s.slice(1),i===s&&e.jsx(C,{className:`w-3 h-3 ml-1 ${v===\"desc\"?\"rotate-180\":\"\"}`})]},s))]}),d&&e.jsxs(\"div\",{className:\"advanced-search__filters\",children:[e.jsxs(\"div\",{className:\"filters-header\",children:[e.jsx(\"h4\",{children:\"Filter Options\"}),e.jsxs(\"div\",{className:\"filters-controls\",children:[e.jsx(t,{size:\"sm\",variant:\"outline\",onClick:m,children:\"Clear All\"}),e.jsx(t,{size:\"sm\",variant:\"ghost\",onClick:()=>g(!1),children:e.jsx(F,{className:\"w-4 h-4\"})})]})]}),e.jsxs(\"div\",{className:\"filters-grid\",children:[e.jsxs(\"div\",{className:\"filter-group\",children:[e.jsx(\"label\",{children:\"Sector:\"}),e.jsxs(\"select\",{value:a.sector,onChange:s=>n(\"sector\",s.target.value),children:[e.jsx(\"option\",{value:\"all\",children:\"All Sectors\"}),e.jsx(\"option\",{value:\"Technology\",children:\"Technology\"}),e.jsx(\"option\",{value:\"Healthcare\",children:\"Healthcare\"}),e.jsx(\"option\",{value:\"Financial\",children:\"Financial\"}),e.jsx(\"option\",{value:\"Energy\",children:\"Energy\"}),e.jsx(\"option\",{value:\"Consumer\",children:\"Consumer\"})]})]}),e.jsxs(\"div\",{className:\"filter-group\",children:[e.jsx(\"label\",{children:\"Exchange:\"}),e.jsxs(\"select\",{value:a.exchange,onChange:s=>n(\"exchange\",s.target.value),children:[e.jsx(\"option\",{value:\"all\",children:\"All Exchanges\"}),e.jsx(\"option\",{value:\"NYSE\",children:\"NYSE\"}),e.jsx(\"option\",{value:\"NASDAQ\",children:\"NASDAQ\"}),e.jsx(\"option\",{value:\"AMEX\",children:\"AMEX\"})]})]}),e.jsxs(\"div\",{className:\"filter-group\",children:[e.jsxs(\"label\",{children:[\"Price Range: $\",a.priceRange[0],\" - $\",a.priceRange[1]]}),e.jsxs(\"div\",{className:\"price-range-inputs\",children:[e.jsx(\"input\",{type:\"number\",value:a.priceRange[0],onChange:s=>n(\"priceRange\",[Number(s.target.value),a.priceRange[1]]),placeholder:\"Min\"}),e.jsx(\"input\",{type:\"number\",value:a.priceRange[1],onChange:s=>n(\"priceRange\",[a.priceRange[0],Number(s.target.value)]),placeholder:\"Max\"})]})]}),e.jsxs(\"div\",{className:\"filter-group\",children:[e.jsx(\"label\",{children:\"Price Change:\"}),e.jsx(\"div\",{className:\"radio-group\",children:[\"all\",\"positive\",\"negative\"].map(s=>e.jsxs(\"label\",{className:\"radio-option\",children:[e.jsx(\"input\",{type:\"radio\",name:\"changeFilter\",value:s,checked:a.changeFilter===s,onChange:r=>n(\"changeFilter\",r.target.value)}),s.charAt(0).toUpperCase()+s.slice(1)]},s))})]})]})]}),e.jsx(\"div\",{className:\"advanced-search__status\",children:e.jsx(\"p\",{children:\"Advanced search features loaded. Filters and sorting active.\"})})]})};export{w as default};",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/http-client-Kigo36r5.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/http-client-Kigo36r5.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "var E=Object.defineProperty;var _=(c,e,t)=>e in c?E(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var i=(c,e,t)=>_(c,typeof e!=\"symbol\"?e+\"\":e,t);import{ac as R}from\"./vendor-BUtizv8l.js\";const d={OK:200,MULTIPLE_CHOICES:300,REQUEST_TIMEOUT:408,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500},u={BASE_DELAY_MS:1e3,MAX_DELAY_MS:3e4,JITTER_PERCENTAGE:.25,BACKOFF_MULTIPLIER:2},f={TRUNCATE_LENGTH:11},T={enabled:!0,enableRequestTransformation:!0,enableResponseNormalization:!0,enableAnalytics:!0,enablePerformanceMetrics:!0,enableCaching:!0,maxRetries:3,retryDelay:1e3,debug:!1};class w{static transform(e){var r,s,a,o;if(!e.data)return e;const t={...e};return(s=(r=e.headers)==null?void 0:r[\"Content-Type\"])!=null&&s.includes(\"multipart/form-data\")?t.data=this.transformFormData(e.data):(o=(a=e.headers)==null?void 0:a[\"Content-Type\"])!=null&&o.includes(\"application/json\")&&(t.data=this.transformJsonData(e.data)),t.metadata={...e.metadata??{},transformedAt:new Date().toISOString(),originalDataType:typeof e.data},t}static transformFormData(e){if(e instanceof FormData)return e;const t=new FormData;return e&&typeof e==\"object\"&&Object.entries(e).forEach(([r,s])=>{s!=null&&(s instanceof File||s instanceof Blob?t.append(r,s):t.append(r,String(s)))}),t}static transformJsonData(e){if(!e||typeof e!=\"object\")return e;const t=this.sanitizeObject(e);return this.applyFieldTransformations(t)}static sanitizeObject(e){const t={};return Object.entries(e).forEach(([r,s])=>{s!=null&&(t[r]=typeof s==\"object\"&&!Array.isArray(s)?this.sanitizeObject(s):s)}),t}static applyFieldTransformations(e){const t={};return Object.entries(e).forEach(([r,s])=>{const a=r.replaceAll(/[A-Z]/g,o=>`_${o.toLowerCase()}`);s instanceof Date?t[a]=s.toISOString():typeof s==\"string\"&&this.isDateString(s)?t[a]=new Date(s).toISOString():t[a]=s}),t}static isDateString(e){return/^\\d{4}-\\d{2}-\\d{2}/.test(e)&&!Number.isNaN(Date.parse(e))}}class M{static normalize(e){const t=e.data;if(t&&typeof t==\"object\"&&\"success\"in t)return t;const r={success:e.status>=d.OK&&e.status<d.MULTIPLE_CHOICES,data:this.normalizeData(e.data),metadata:{status:e.status,statusText:e.statusText,headers:this.normalizeHeaders(e.headers),timestamp:new Date().toISOString(),requestId:e.headers[\"x-request-id\"]??this.generateRequestId()}};return this.hasPaginationHeaders(e.headers)&&(r.pagination=this.extractPaginationInfo(e.headers)),r}static normalizeData(e){if(!e||typeof e!=\"object\")return e;if(Array.isArray(e))return e.map(r=>this.normalizeData(r));const t={};return Object.entries(e).forEach(([r,s])=>{const a=r.replaceAll(/_([a-z])/g,(o,h)=>h.toUpperCase());t[a]=s&&typeof s==\"object\"?this.normalizeData(s):s}),t}static normalizeHeaders(e){const t={};return Object.entries(e).forEach(([r,s])=>{typeof s==\"string\"&&(t[r.toLowerCase()]=s)}),t}static hasPaginationHeaders(e){return!!(e[\"x-total-count\"]??e[\"x-page\"]??e[\"x-per-page\"]??e.link)}static extractPaginationInfo(e){return{totalCount:e[\"x-total-count\"]?Number(e[\"x-total-count\"]):void 0,page:e[\"x-page\"]?Number(e[\"x-page\"]):void 0,perPage:e[\"x-per-page\"]?Number(e[\"x-per-page\"]):void 0,totalPages:e[\"x-total-pages\"]?Number(e[\"x-total-pages\"]):void 0,hasNext:e[\"x-has-next\"]===\"true\",hasPrev:e[\"x-has-prev\"]===\"true\"}}static generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,f.TRUNCATE_LENGTH)}`}}class p{static transform(e,t){const r={error_code:\"UNKNOWN_ERROR\",message:\"An unexpected error occurred\",timestamp:new Date().toISOString(),request_id:t.requestId};if(e.response){const s=e.response.data;r.error_code=this.extractErrorCode(e.response.status,s),r.message=this.extractErrorMessage(e,s);const a=this.extractErrorDetails(s);a!==void 0&&(r.details=a),r.status=e.response.status,this.isRetryableError(e.response.status)&&(r.retryable=!0,r.retry_after=this.calculateRetryDelay(t.metadata.retryCount??0))}else e.request?(r.error_code=\"NETWORK_ERROR\",r.message=\"Network error - please check your connection\",r.retryable=!0,r.retry_after=5e3):(r.error_code=\"REQUEST_ERROR\",r.message=e.message);return r}static extractErrorCode(e,t){return t!=null&&t.error_code&&typeof t.error_code==\"string\"?t.error_code:{400:\"BAD_REQUEST\",401:\"UNAUTHORIZED\",403:\"FORBIDDEN\",404:\"NOT_FOUND\",408:\"REQUEST_TIMEOUT\",409:\"CONFLICT\",422:\"VALIDATION_ERROR\",429:\"RATE_LIMITED\",500:\"INTERNAL_SERVER_ERROR\",502:\"BAD_GATEWAY\",503:\"SERVICE_UNAVAILABLE\",504:\"GATEWAY_TIMEOUT\"}[e]??`HTTP_${e}`}static extractErrorMessage(e,t){return t!=null&&t.message&&typeof t.message==\"string\"?t.message:t!=null&&t.error&&typeof t.error==\"string\"?t.error:e.message??\"An unexpected error occurred\"}static extractErrorDetails(e){const t={};return e!=null&&e.errors&&Array.isArray(e.errors)&&(t.validationErrors=e.errors),e!=null&&e.field_errors&&typeof e.field_errors==\"object\"&&(t.fieldErrors=e.field_errors),e!=null&&e.context&&typeof e.context==\"object\"&&(t.context=e.context),Object.keys(t).length>0?t:void 0}static isRetryableError(e){return e>=d.INTERNAL_SERVER_ERROR||e===d.REQUEST_TIMEOUT||e===d.TOO_MANY_REQUESTS}static calculateRetryDelay(e){const t=Math.min(u.BASE_DELAY_MS*Math.pow(u.BACKOFF_MULTIPLIER,e),u.MAX_DELAY_MS),r=t*u.JITTER_PERCENTAGE*(Math.random()-.5);return Math.round(t+r)}}class y{constructor(e={}){i(this,\"requestMiddlewares\",[]);i(this,\"responseMiddlewares\",[]);i(this,\"errorMiddlewares\",[]);i(this,\"config\");i(this,\"requestTransformationMiddleware\",e=>({...e,config:w.transform(e.config)}));i(this,\"responseNormalizationMiddleware\",e=>{if(e.response){const t={...e.response,data:M.normalize(e.response).data};return{...e,response:t}}return e});i(this,\"errorTransformationMiddleware\",(e,t)=>p.transform(e,t));this.config={...T,...e},this.setupDefaultMiddlewares()}setupDefaultMiddlewares(){this.config.enabled&&(this.config.enableRequestTransformation&&this.addRequestMiddleware(this.requestTransformationMiddleware),this.config.enableResponseNormalization&&this.addResponseMiddleware(this.responseNormalizationMiddleware),this.addErrorMiddleware(this.errorTransformationMiddleware))}addRequestMiddleware(e){this.requestMiddlewares.push(e)}addResponseMiddleware(e){this.responseMiddlewares.push(e)}addErrorMiddleware(e){this.errorMiddlewares.push(e)}async processRequest(e){if(!this.config.enabled)return e;let r={requestId:this.generateRequestId(),timestamp:Date.now(),metadata:{retryCount:0},config:e};for(const s of this.requestMiddlewares)r=await s(r);return r.config}async processResponse(e){if(!this.config.enabled)return e;let r={requestId:e.headers[\"x-request-id\"]??this.generateRequestId(),timestamp:Date.now(),duration:0,metadata:{},response:e};for(const s of this.responseMiddlewares)r=await s(r);return r.response??e}async processError(e,t){let r=p.transform(e,t);if(this.config.enabled)for(const s of this.errorMiddlewares)r=await s(e,t);return r}generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,f.TRUNCATE_LENGTH)}`}updateConfig(e){this.config={...this.config,...e}}getConfig(){return{...this.config}}}const C=new y,I={enabled:!0,maxStoredEvents:1e3,maxStoredMetrics:500,maxStoredErrors:100,enableRealTimeMonitoring:!0,enablePerformanceTracking:!0,enableErrorTracking:!0,enableUsageAnalytics:!0,reportingInterval:6e4,healthCheckInterval:3e4};class A{constructor(e={}){i(this,\"storage\");i(this,\"config\");i(this,\"reportingTimer\");i(this,\"healthCheckTimer\");i(this,\"sessionId\");this.config={...I,...e},this.sessionId=this.generateSessionId(),this.storage={events:[],metrics:[],errors:[],usage:new Map,healthMetrics:this.initializeHealthMetrics()},this.config.enabled&&(this.startReporting(),this.startHealthChecks())}trackEvent(e,t,r={}){if(!this.config.enabled)return;const s={id:this.generateEventId(),type:e,timestamp:Date.now(),requestId:t.requestId,endpoint:this.extractEndpoint(t),method:this.extractMethod(t),metadata:{...r,sessionId:this.sessionId,userAgent:navigator.userAgent}};this.addEvent(s),this.updateUsageAnalytics(s),this.config.enableRealTimeMonitoring&&this.emitRealtimeEvent(s)}trackPerformance(e){var a;if(!this.config.enablePerformanceTracking)return;const t=e.response,r=t==null?void 0:t.config;if(!r||!t)return;const s={requestId:e.requestId,method:((a=r.method)==null?void 0:a.toUpperCase())??\"GET\",endpoint:this.extractEndpointFromConfig(r),startTime:e.timestamp-e.duration,endTime:e.timestamp,duration:e.duration,responseSize:this.calculateResponseSize(t),requestSize:this.calculateRequestSize(r),statusCode:t.status,fromCache:this.isFromCache(t),retryCount:e.metadata.retryCount||0};this.addMetrics(s),this.updateHealthMetrics(s)}trackError(e,t){var s,a;if(!this.config.enableErrorTracking)return;const r={errorId:this.generateErrorId(),errorCode:this.extractErrorCode(e),message:e.message,endpoint:this.extractEndpoint(t),method:((s=t.config.method)==null?void 0:s.toUpperCase())??\"GET\",statusCode:((a=e.response)==null?void 0:a.status)??0,timestamp:Date.now(),stackTrace:e.stack,userAgent:navigator.userAgent,sessionId:this.sessionId,retryable:this.isRetryableError(e),context:{requestId:t.requestId,url:t.config.url,headers:t.config.headers,metadata:t.metadata}};this.addError(r),this.updateErrorMetrics(r)}getPerformanceMetrics(e){let t=this.storage.metrics;return e&&(t=t.filter(r=>r.startTime>=e.start&&r.endTime<=e.end)),[...t]}getUsageAnalytics(){return[...this.storage.usage.values()]}getErrorAnalytics(e){let t=this.storage.errors;return e&&(t=t.filter(r=>r.timestamp>=e.start&&r.timestamp<=e.end)),[...t]}getHealthMetrics(){return{...this.storage.healthMetrics}}analyzePerformance(){const e=this.getUsageAnalytics(),t=e.filter(n=>n.requestCount>5).sort((n,m)=>m.averageResponseTime-n.averageResponseTime).slice(0,10).map(n=>({endpoint:n.endpoint,averageTime:n.averageResponseTime})),r=e.filter(n=>n.errorRate>.05).sort((n,m)=>m.errorRate-n.errorRate).slice(0,10).map(n=>({endpoint:n.endpoint,errorRate:n.errorRate})),s=Date.now()-1440*60*1e3,a=this.storage.metrics.filter(n=>n.startTime>=s),o=this.calculatePerformanceTrends(a),h=this.generatePerformanceRecommendations(e,r);return{slowestEndpoints:t,errorProneEndpoints:r,performanceTrends:o,recommendations:h}}createAnalyticsMiddleware(){return{request:e=>(this.trackEvent(\"request_started\",e),e),response:e=>(this.trackEvent(\"request_completed\",e),this.trackPerformance(e),e),error:(e,t)=>{throw this.trackEvent(\"request_failed\",t,{error:e.message}),this.trackError(e,t),e}}}updateConfig(e){this.config={...this.config,...e},this.config.enabled&&!this.reportingTimer?(this.startReporting(),this.startHealthChecks()):this.config.enabled||(this.stopReporting(),this.stopHealthChecks())}cleanup(){this.stopReporting(),this.stopHealthChecks()}addEvent(e){this.storage.events.push(e),this.storage.events.length>this.config.maxStoredEvents&&(this.storage.events=this.storage.events.slice(-this.config.maxStoredEvents))}addMetrics(e){this.storage.metrics.push(e),this.storage.metrics.length>this.config.maxStoredMetrics&&(this.storage.metrics=this.storage.metrics.slice(-this.config.maxStoredMetrics))}addError(e){this.storage.errors.push(e),this.storage.errors.length>this.config.maxStoredErrors&&(this.storage.errors=this.storage.errors.slice(-this.config.maxStoredErrors))}updateUsageAnalytics(e){if(!this.config.enableUsageAnalytics)return;const t=`${e.method}:${e.endpoint}`,r=this.storage.usage.get(t);r?(r.requestCount++,e.type===\"request_completed\"?r.successCount++:e.type===\"request_failed\"&&r.errorCount++,r.errorRate=r.errorCount/r.requestCount,r.lastAccessed=e.timestamp):this.storage.usage.set(t,{endpoint:e.endpoint,method:e.method,requestCount:1,successCount:e.type===\"request_completed\"?1:0,errorCount:e.type===\"request_failed\"?1:0,averageResponseTime:0,p95ResponseTime:0,p99ResponseTime:0,errorRate:e.type===\"request_failed\"?1:0,lastAccessed:e.timestamp})}updateHealthMetrics(e){const t=this.storage.healthMetrics,s=this.storage.metrics.filter(a=>a.startTime>Date.now()-3e5);if(s.length>0){t.average_response_time=s.reduce((h,n)=>h+n.duration,0)/s.length,t.requests_per_minute=s.length/5;const a=s.filter(h=>h.statusCode>=200&&h.statusCode<300);t.success_rate=a.length/s.length,t.error_rate=1-t.success_rate;const o=s.filter(h=>h.fromCache);t.cache_hit_rate=o.length/s.length}t.last_updated=Date.now(),t.overall_score=this.calculateHealthScore(t)}updateErrorMetrics(e){const t=this.storage.healthMetrics,r=this.storage.errors.filter(s=>s.timestamp>Date.now()-3e5);r.length>0&&(t.error_rate=Math.min(r.length/t.requests_per_minute,1),t.success_rate=1-t.error_rate)}calculateHealthScore(e){const t={success_rate:.4,response_time:.3,error_rate:.2,cache_hit_rate:.1},r=e.success_rate*100,s=Math.max(0,100-e.average_response_time/1e3*10),a=Math.max(0,100-e.error_rate*100),o=e.cache_hit_rate*100;return r*t.success_rate+s*t.response_time+a*t.error_rate+o*t.cache_hit_rate}calculatePerformanceTrends(e){const t=new Map;return e.forEach(r=>{const s=Math.floor(r.startTime/36e5)*60*60*1e3;t.has(s)||t.set(s,[]),t.get(s).push(r.duration)}),[...t.entries()].map(([r,s])=>({timestamp:r,averageResponseTime:s.reduce((a,o)=>a+o,0)/s.length})).sort((r,s)=>r.timestamp-s.timestamp)}generatePerformanceRecommendations(e,t){const r=[],s=e.filter(o=>o.averageResponseTime>2e3);return s.length>0&&r.push(`Consider optimizing ${s.length} slow endpoints (>2s response time)`),t.length>0&&r.push(`Review ${t.length} endpoints with high error rates (>5%)`),1-this.storage.healthMetrics.cache_hit_rate>.7&&r.push(\"Consider improving caching strategy - high cache miss rate detected\"),this.storage.healthMetrics.overall_score<80&&r.push(\"Overall API health is below optimal - consider performance improvements\"),r}extractEndpoint(e){return\"config\"in e?this.extractEndpointFromConfig(e.config):\"response\"in e&&e.response?e.response.config.url??\"\":\"\"}extractEndpointFromConfig(e){const t=e.url??\"\";return(t.split(\"?\")[0]??t).replaceAll(/\\/\\d+/g,\"/:id\")}extractMethod(e){var t,r;return\"config\"in e?((t=e.config.method)==null?void 0:t.toUpperCase())||\"GET\":\"response\"in e&&e.response&&((r=e.response.config.method)==null?void 0:r.toUpperCase())||\"GET\"}calculateResponseSize(e){const t=e.headers[\"content-length\"];return t?Number.parseInt(t,10):e.data?JSON.stringify(e.data).length:0}calculateRequestSize(e){return e.data?typeof e.data==\"string\"?e.data.length:JSON.stringify(e.data).length:0}isFromCache(e){return!!(e.headers[\"x-cache\"]??e.headers[\"cache-control\"])}extractErrorCode(e){var t;return(t=e.response)!=null&&t.data&&typeof e.response.data==\"object\"?e.response.data.error_code||`HTTP_${e.response.status}`:e.code??\"UNKNOWN_ERROR\"}isRetryableError(e){if(!e.response)return!0;const t=e.response.status;return t>=500||t===408||t===429}emitRealtimeEvent(e){typeof window<\"u\"&&window.dispatchEvent&&window.dispatchEvent(new CustomEvent(\"api-analytics-event\",{detail:e}))}startReporting(){this.reportingTimer||(this.reportingTimer=window.setInterval(()=>{this.generateReport()},this.config.reportingInterval))}stopReporting(){this.reportingTimer&&(window.clearInterval(this.reportingTimer),this.reportingTimer=void 0)}startHealthChecks(){this.healthCheckTimer||(this.healthCheckTimer=window.setInterval(()=>{this.updateSystemHealth()},this.config.healthCheckInterval))}stopHealthChecks(){this.healthCheckTimer&&(window.clearInterval(this.healthCheckTimer),this.healthCheckTimer=void 0)}generateReport(){this.getPerformanceMetrics(),this.getUsageAnalytics(),this.getErrorAnalytics(),this.getHealthMetrics(),this.analyzePerformance()}updateSystemHealth(){this.storage.healthMetrics.last_updated=Date.now();const e=[...this.storage.usage.values()].reduce((r,s)=>r+s.requestCount,0),t=[...this.storage.usage.values()].reduce((r,s)=>r+s.successCount,0);e>0&&(this.storage.healthMetrics.uptime_percentage=t/e*100)}initializeHealthMetrics(){return{overall_score:100,uptime_percentage:100,average_response_time:0,error_rate:0,success_rate:1,requests_per_minute:0,cache_hit_rate:0,active_connections:0,last_updated:Date.now()}}generateEventId(){return`evt_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}generateErrorId(){return`err_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}generateSessionId(){return`sess_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}trackRequestStart(e,t,r){if(!this.config.enabled)return;const s={requestId:e,timestamp:Date.now(),metadata:{url:t,method:r.toUpperCase()},config:{url:t,method:r.toUpperCase()}};this.trackEvent(\"request_started\",s,{url:t,method:r.toUpperCase()})}trackRequestComplete(e,t,r){if(!this.config.enabled)return;const s={requestId:e,timestamp:Date.now(),duration:0,metadata:{status:t,responseSize:r}};this.trackEvent(\"request_completed\",s,{status:t,responseSize:r})}trackRequestError(e,t,r){if(!this.config.enabled)return;const s={requestId:e,timestamp:Date.now(),metadata:{error:t.message},config:{}};this.trackEvent(\"request_failed\",s,{error:t.message,errorCode:r,stack:t.stack})}trackPerformanceEvent(e,t={}){if(!this.config.enabled)return;const r={requestId:this.generateEventId(),timestamp:Date.now()};this.trackEvent(\"request_started\",r,{eventName:e,...t})}on(e,t){}getEvents(){return this.storage.events}getRequestMetrics(){return this.storage.metrics}getBatches(){return[]}destroy(){this.reportingTimer&&(clearInterval(this.reportingTimer),this.reportingTimer=void 0),this.healthCheckTimer&&(clearInterval(this.healthCheckTimer),this.healthCheckTimer=void 0),this.storage.events=[],this.storage.metrics=[],this.storage.errors=[],this.storage.usage.clear()}}const l=new A,S={TRUNCATE_LENGTH:11},b={baseURL:\"http://localhost:4006\",timeout:3e4,retryAttempts:3,retryDelay:1e3,enableLogging:!1,enableMiddleware:!0,enableAnalytics:!0};class g{static getAccessToken(){return localStorage.getItem(this.ACCESS_TOKEN_KEY)}static setAccessToken(e){localStorage.setItem(this.ACCESS_TOKEN_KEY,e)}static getRefreshToken(){return localStorage.getItem(this.REFRESH_TOKEN_KEY)}static setRefreshToken(e){localStorage.setItem(this.REFRESH_TOKEN_KEY,e)}static clearTokens(){localStorage.removeItem(this.ACCESS_TOKEN_KEY),localStorage.removeItem(this.REFRESH_TOKEN_KEY)}}i(g,\"ACCESS_TOKEN_KEY\",\"finance_ai_access_token\"),i(g,\"REFRESH_TOKEN_KEY\",\"finance_ai_refresh_token\");class q{constructor(e={}){i(this,\"axiosInstance\");i(this,\"config\");i(this,\"middleware\");this.config={...b,...e},this.middleware=this.config.enableMiddleware?C:{},this.axiosInstance=this.createAxiosInstance(),this.setupInterceptors(),this.setupMiddleware()}createAxiosInstance(){return R.create({baseURL:this.config.baseURL,timeout:this.config.timeout,headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}})}setupInterceptors(){this.axiosInstance.interceptors.request.use(async e=>{var t;if(this.config.enableMiddleware){const r=await this.middleware.processRequest(e);Object.assign(e,r)}return this.config.enableLogging&&console.log(`[HTTP Request] ${(t=e.method)==null?void 0:t.toUpperCase()} ${e.url}`,{headers:e.headers,data:e.data}),e},async e=>Promise.reject(error)),this.axiosInstance.interceptors.response.use(async e=>(this.config.enableMiddleware&&(e=await this.middleware.processResponse(e)),e),async e=>{if(this.config.enableMiddleware&&e.config){const t={requestId:this.generateRequestId(),timestamp:Date.now(),metadata:{},config:e.config};throw await this.middleware.processError(e,t)}throw this.transformError(e)})}setupMiddleware(){if(!this.config.enableMiddleware||!this.config.enableAnalytics||!this.middleware||typeof this.middleware.addRequestMiddleware!=\"function\")return;const e=l.createAnalyticsMiddleware();this.middleware.addRequestMiddleware(e.request),this.middleware.addResponseMiddleware(e.response),this.middleware.addErrorMiddleware(e.error)}generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,S.TRUNCATE_LENGTH)}`}transformError(e){const t={error_code:\"UNKNOWN_ERROR\",message:\"An unexpected error occurred\",timestamp:new Date().toISOString()};if(e.response){const r=e.response.data;t.error_code=(r==null?void 0:r.error_code)??`HTTP_${e.response.status}`,t.message=(r==null?void 0:r.message)??e.message,t.details=r==null?void 0:r.details,t.request_id=r==null?void 0:r.request_id}else e.request?(t.error_code=\"NETWORK_ERROR\",t.message=\"Network error - please check your connection\"):t.message=e.message;return t}async get(e,t){const r=await this.axiosInstance.get(e,t);return this.wrapResponse(r)}async post(e,t,r){const s=await this.axiosInstance.post(e,t,r);return this.wrapResponse(s)}async put(e,t,r){const s=await this.axiosInstance.put(e,t,r);return this.wrapResponse(s)}async patch(e,t,r){const s=await this.axiosInstance.patch(e,t,r);return this.wrapResponse(s)}async delete(e,t){const r=await this.axiosInstance.delete(e,t);return this.wrapResponse(r)}wrapResponse(e){const t=e.data;return t&&typeof t==\"object\"&&\"success\"in t?t:{success:!0,data:e.data,metadata:{status:e.status,statusText:e.statusText,headers:Object.fromEntries(Object.entries(e.headers).map(([r,s])=>[r,String(s??\"\")])),timestamp:new Date().toISOString(),requestId:crypto.randomUUID()}}}setToken(e){g.setAccessToken(e)}clearTokens(){g.clearTokens()}getBaseURL(){return this.config.baseURL}updateConfig(e){this.config={...this.config,...e},this.axiosInstance.defaults.baseURL=this.config.baseURL,this.axiosInstance.defaults.timeout=this.config.timeout,this.config.enableMiddleware&&this.middleware&&this.middleware.updateConfig({enableRequestTransformation:this.config.enableMiddleware,enableResponseNormalization:this.config.enableMiddleware,enableAnalytics:this.config.enableAnalytics,debug:this.config.enableLogging})}getMiddleware(){return this.middleware}getAnalytics(){return l}getPerformanceMetrics(e){return l.getPerformanceMetrics(e)}getUsageAnalytics(){return l.getUsageAnalytics()}getErrorAnalytics(e){return l.getErrorAnalytics(e)}getHealthMetrics(){return l.getHealthMetrics()}analyzePerformance(){return l.analyzePerformance()}cleanup(){this.config.enableAnalytics&&l.cleanup()}}const D=new q;export{D as h};",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/vendor-BUtizv8l.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/vendor-BUtizv8l.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 9,
          "content": "*/var Ps;function rf(){return Ps||(Ps=1,(function(e){function t(_,L){var F=_.length;_.push(L);e:for(;0<F;){var B=F-1>>>1,X=_[B];if(0<i(X,L))_[B]=L,_[F]=X,F=B;else break e}}function n(_){return _.length===0?null:_[0]}function r(_){if(_.length===0)return null;var L=_[0],F=_.pop();if(F!==L){_[0]=F;e:for(var B=0,X=_.length,re=X>>>1;B<re;){var ie=2*(B+1)-1,Te=_[ie],Ce=ie+1,Ft=_[Ce];if(0>i(Te,F))Ce<X&&0>i(Ft,Te)?(_[B]=Ft,_[Ce]=F,B=Ce):(_[B]=Te,_[ie]=F,B=ie);else if(Ce<X&&0>i(Ft,F))_[B]=Ft,_[Ce]=F,B=Ce;else break e}}return L}function i(_,L){var F=_.sortIndex-L.sortIndex;return F!==0?F:_.id-L.id}if(typeof performance==\"object\"&&typeof performance.now==\"function\"){var a=performance;e.unstable_now=function(){return a.now()}}else{var s=Date,o=s.now();e.unstable_now=function(){return s.now()-o}}var u=[],l=[],f=1,c=null,h=3,g=!1,v=!1,m=!1,d=typeof setTimeout==\"function\"?setTimeout:null,x=typeof clearTimeout==\"function\"?clearTimeout:null,y=typeof setImmediate<\"u\"?setImmediate:null;typeof navigator<\"u\"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(_){for(var L=n(l);L!==null;){if(L.callback===null)r(l);else if(L.startTime<=_)r(l),L.sortIndex=L.expirationTime,t(u,L);else break;L=n(l)}}function b(_){if(m=!1,w(_),!v)if(n(u)!==null)v=!0,W(T);else{var L=n(l);L!==null&&te(b,L.startTime-_)}}function T(_,L){v=!1,m&&(m=!1,x(P),P=-1),g=!0;var F=h;try{for(w(L),c=n(u);c!==null&&(!(c.expirationTime>L)||_&&!k());){var B=c.callback;if(typeof B==\"function\"){c.callback=null,h=c.priorityLevel;var X=B(c.expirationTime<=L);L=e.unstable_now(),typeof X==\"function\"?c.callback=X:c===n(u)&&r(u),w(L)}else r(u);c=n(u)}if(c!==null)var re=!0;else{var ie=n(l);ie!==null&&te(b,ie.startTime-L),re=!1}return re}finally{c=null,h=F,g=!1}}var O=!1,E=null,P=-1,M=5,U=-1;function k(){return!(e.unstable_now()-U<M)}function A(){if(E!==null){var _=e.unstable_now();U=_;var L=!0;try{L=E(!0,_)}finally{L?D():(O=!1,E=null)}}else O=!1}var D;if(typeof y==\"function\")D=function(){y(A)};else if(typeof MessageChannel<\"u\"){var $=new MessageChannel,ee=$.port2;$.port1.onmessage=A,D=function(){ee.postMessage(null)}}else D=function(){d(A,0)};function W(_){E=_,O||(O=!0,D())}function te(_,L){P=d(function(){_(e.unstable_now())},L)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(_){_.callback=null},e.unstable_continueExecution=function(){v||g||(v=!0,W(T))},e.unstable_forceFrameRate=function(_){0>_||125<_?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):M=0<_?Math.floor(1e3/_):5},e.unstable_getCurrentPriorityLevel=function(){return h},e.unstable_getFirstCallbackNode=function(){return n(u)},e.unstable_next=function(_){switch(h){case 1:case 2:case 3:var L=3;break;default:L=h}var F=h;h=L;try{return _()}finally{h=F}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(_,L){switch(_){case 1:case 2:case 3:case 4:case 5:break;default:_=3}var F=h;h=_;try{return L()}finally{h=F}},e.unstable_scheduleCallback=function(_,L,F){var B=e.unstable_now();switch(typeof F==\"object\"&&F!==null?(F=F.delay,F=typeof F==\"number\"&&0<F?B+F:B):F=B,_){case 1:var X=-1;break;case 2:X=250;break;case 5:X=1073741823;break;case 4:X=1e4;break;default:X=5e3}return X=F+X,_={id:f++,callback:L,priorityLevel:_,startTime:F,expirationTime:X,sortIndex:-1},F>B?(_.sortIndex=F,t(l,_),n(u)===null&&_===n(l)&&(m?(x(P),P=-1):m=!0,te(b,F-B))):(_.sortIndex=X,t(u,_),v||g||(v=!0,W(T))),_},e.unstable_shouldYield=k,e.unstable_wrapCallback=function(_){var L=h;return function(){var F=h;h=L;try{return _.apply(this,arguments)}finally{h=F}}}})(Ur)),Ur}var ks;function db(){return ks||(ks=1,Lr.exports=rf()),Lr.exports}/**",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/PerformanceWidget-DKyUgQAz.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/PerformanceWidget-DKyUgQAz.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{j as e,s as b,A as h,a as u,i as y,q as B,I as M,B as T,T as z,c as A}from\"./react-vendor-CWzyjU4N.js\";import{d as W,f as E}from\"./useFinancialData-DNAd8qWf.js\";import{E as F}from\"./ErrorBoundary-DabFdawX.js\";import{B as N}from\"./Button-DBP6FnJb.js\";import{C as g,a as x,b as w}from\"./Card-CJqfKyPf.js\";function I(r,n){const c=l=>e.jsx(F,{...n,children:e.jsx(r,{...l})});return c.displayName=`withErrorBoundary(${r.displayName??r.name})`,c}const Y=({security:r,portfolioMode:n=!1,className:c=\"\",timeRange:l=\"1Y\",showBenchmark:m=!0,compact:i=!1})=>{const[d,k]=u.useState(l),[j,R]=u.useState(!1),{isLoading:P,error:$}=W(r==null?void 0:r.symbol),{formatCurrency:D,formatPercentage:o}=E(),a={totalReturn:15847.32,totalReturnPercent:18.45,annualizedReturn:12.8,volatility:22.4,sharpeRatio:1.47,maxDrawdown:-12.8,alpha:3.2,beta:1.15,informationRatio:.85,calmarRatio:1.02},_={benchmark:\"S&P 500\",outperformance:4.2,correlation:.78},C=[{value:\"1D\",label:\"1D\"},{value:\"1W\",label:\"1W\"},{value:\"1M\",label:\"1M\"},{value:\"3M\",label:\"3M\"},{value:\"6M\",label:\"6M\"},{value:\"1Y\",label:\"1Y\"},{value:\"YTD\",label:\"YTD\"}],f=(s,p=0)=>s>p?e.jsx(z,{className:\"performance-widget__trend-icon performance-widget__trend-icon--up\"}):s<p?e.jsx(A,{className:\"performance-widget__trend-icon performance-widget__trend-icon--down\"}):e.jsx(h,{className:\"performance-widget__trend-icon performance-widget__trend-icon--neutral\"}),t=(s,p=0)=>s>p?\"performance-widget__value--positive\":s<p?\"performance-widget__value--negative\":\"performance-widget__value--neutral\",S=s=>({level:\"Good\",color:\"performance-widget__risk--good\"});if($)return e.jsxs(g,{className:`performance-widget performance-widget--error ${c}`,variant:\"outlined\",children:[e.jsx(x,{children:e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:n?\"Portfolio Performance\":`${r==null?void 0:r.symbol} Performance`}),e.jsx(b,{className:\"performance-widget__error-icon\"})]})}),e.jsx(w,{children:e.jsxs(\"div\",{className:\"performance-widget__error-content\",children:[e.jsx(\"p\",{children:\"Unable to load performance data\"}),e.jsxs(N,{variant:\"outline\",size:\"sm\",children:[e.jsx(y,{className:\"performance-widget__refresh-icon\"}),\"Retry\"]})]})})]});if(P)return e.jsxs(g,{className:`performance-widget performance-widget--loading ${c}`,variant:\"outlined\",children:[e.jsx(x,{children:e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:n?\"Portfolio Performance\":`${r==null?void 0:r.symbol} Performance`}),e.jsx(h,{className:\"performance-widget__icon\"})]})}),e.jsx(w,{children:e.jsxs(\"div\",{className:\"performance-widget__loading-content\",children:[e.jsx(\"div\",{className:\"performance-widget__skeleton performance-widget__skeleton--large\"}),e.jsx(\"div\",{className:\"performance-widget__skeleton performance-widget__skeleton--medium\"}),e.jsx(\"div\",{className:\"performance-widget__skeleton performance-widget__skeleton--small\"})]})})]});const v=S();return e.jsxs(g,{className:`performance-widget ${i?\"performance-widget--compact\":\"\"} ${c}`,variant:\"outlined\",children:[e.jsxs(x,{children:[e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsxs(\"div\",{className:\"performance-widget__title-section\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:n?\"Portfolio Performance\":`${(r==null?void 0:r.symbol)??\"Performance\"}`}),e.jsxs(\"div\",{className:\"performance-widget__subtitle\",children:[e.jsxs(\"span\",{className:\"performance-widget__timerange\",children:[d,\" Performance\"]}),!i&&e.jsxs(\"div\",{className:`performance-widget__risk-indicator ${v.color}`,children:[e.jsx(B,{className:\"performance-widget__risk-icon\"}),e.jsx(\"span\",{children:v.level})]})]})]}),e.jsxs(\"div\",{className:\"performance-widget__controls\",children:[e.jsx(N,{variant:\"ghost\",size:\"sm\",onClick:()=>R(!j),className:\"performance-widget__details-button\",title:j?\"Hide details\":\"Show details\",children:e.jsx(M,{className:\"performance-widget__info-icon\"})}),e.jsx(h,{className:\"performance-widget__icon\"})]})]}),e.jsx(\"div\",{className:\"performance-widget__time-range\",children:C.map(s=>e.jsx(N,{variant:d===s.value?\"primary\":\"ghost\",size:\"sm\",onClick:()=>k(s.value),className:\"performance-widget__range-button\",children:s.label},s.value))})]}),e.jsx(w,{children:e.jsxs(\"div\",{className:\"performance-widget__content\",children:[e.jsxs(\"div\",{className:\"performance-widget__primary-metrics\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-item performance-widget__metric-item--primary\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-header\",children:[e.jsx(\"span\",{className:\"performance-widget__metric-label\",children:\"Total Return\"}),f(a.totalReturnPercent)]}),e.jsxs(\"div\",{className:\"performance-widget__metric-values\",children:[e.jsx(\"span\",{className:`performance-widget__metric-value ${t(a.totalReturn)}`,children:D(a.totalReturn)}),e.jsx(\"span\",{className:`performance-widget__metric-percent ${t(a.totalReturnPercent)}`,children:o(a.totalReturnPercent)})]})]}),e.jsxs(\"div\",{className:\"performance-widget__metric-item\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-header\",children:[e.jsx(\"span\",{className:\"performance-widget__metric-label\",children:\"Annualized Return\"}),f(a.annualizedReturn)]}),e.jsx(\"span\",{className:`performance-widget__metric-value ${t(a.annualizedReturn)}`,children:o(a.annualizedReturn)})]}),e.jsxs(\"div\",{className:\"performance-widget__metric-item\",children:[e.jsxs(\"div\",{className:\"performance-widget__metric-header\",children:[e.jsx(\"span\",{className:\"performance-widget__metric-label\",children:\"Sharpe Ratio\"}),f(a.sharpeRatio,1)]}),e.jsx(\"span\",{className:`performance-widget__metric-value ${t(a.sharpeRatio,1)}`,children:a.sharpeRatio.toFixed(2)})]})]}),m&&!i&&e.jsxs(\"div\",{className:\"performance-widget__benchmark\",children:[e.jsxs(\"div\",{className:\"performance-widget__benchmark-header\",children:[e.jsxs(\"span\",{className:\"performance-widget__benchmark-label\",children:[\"vs \",_.benchmark]}),e.jsx(T,{className:\"performance-widget__benchmark-icon\"})]}),e.jsxs(\"div\",{className:\"performance-widget__benchmark-metrics\",children:[e.jsxs(\"div\",{className:\"performance-widget__benchmark-item\",children:[e.jsx(\"span\",{className:\"performance-widget__benchmark-metric-label\",children:\"Outperformance\"}),e.jsxs(\"span\",{className:`performance-widget__benchmark-value ${t(_.outperformance)}`,children:[f(_.outperformance),o(_.outperformance)]})]}),e.jsxs(\"div\",{className:\"performance-widget__benchmark-item\",children:[e.jsx(\"span\",{className:\"performance-widget__benchmark-metric-label\",children:\"Correlation\"}),e.jsx(\"span\",{className:\"performance-widget__benchmark-value\",children:_.correlation.toFixed(2)})]})]})]}),j&&!i&&e.jsxs(\"div\",{className:\"performance-widget__detailed-metrics\",children:[e.jsx(\"div\",{className:\"performance-widget__details-header\",children:e.jsx(\"h4\",{className:\"performance-widget__details-title\",children:\"Risk Metrics\"})}),e.jsxs(\"div\",{className:\"performance-widget__details-grid\",children:[e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Volatility\"}),e.jsx(\"span\",{className:\"performance-widget__detail-value\",children:o(a.volatility)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Max Drawdown\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.maxDrawdown)}`,children:o(a.maxDrawdown)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Beta\"}),e.jsx(\"span\",{className:\"performance-widget__detail-value\",children:a.beta.toFixed(2)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Alpha\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.alpha)}`,children:o(a.alpha)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Information Ratio\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.informationRatio)}`,children:a.informationRatio.toFixed(2)})]}),e.jsxs(\"div\",{className:\"performance-widget__detail-item\",children:[e.jsx(\"span\",{className:\"performance-widget__detail-label\",children:\"Calmar Ratio\"}),e.jsx(\"span\",{className:`performance-widget__detail-value ${t(a.calmarRatio)}`,children:a.calmarRatio.toFixed(2)})]})]})]}),!i&&e.jsx(\"div\",{className:\"performance-widget__chart\",children:e.jsx(\"div\",{className:\"performance-widget__chart-container\",children:e.jsx(U,{isPositive:a.totalReturnPercent>0})})})]})})]})},U=({isPositive:r})=>{const n=Array.from({length:20},(l,m)=>{const i=r?1:-1,d=(Math.random()-.5)*.3;return 50+m*i*2+d*10}),c=n.map((l,m)=>{const i=m/(n.length-1)*100,d=100-(l-Math.min(...n))/(Math.max(...n)-Math.min(...n))*100;return`${i},${d}`}).join(\" L \");return e.jsx(\"svg\",{width:\"100%\",height:\"40\",viewBox:\"0 0 100 100\",preserveAspectRatio:\"none\",className:\"performance-widget__sparkline\",children:e.jsx(\"path\",{d:`M ${c}`,fill:\"none\",stroke:r?\"#10b981\":\"#ef4444\",strokeWidth:\"2\",className:\"performance-widget__sparkline-path\"})})},V=I(Y,{level:\"component\",enableRecovery:!0,onError:(r,n)=>{console.error(\"PerformanceWidget Error:\",{error:r.message,componentStack:n.componentStack,timestamp:new Date().toISOString()})},fallback:e.jsxs(g,{className:\"performance-widget performance-widget--error\",variant:\"outlined\",children:[e.jsx(x,{children:e.jsxs(\"div\",{className:\"performance-widget__header\",children:[e.jsx(\"h3\",{className:\"performance-widget__title\",children:\"Performance Widget\"}),e.jsx(b,{style:{color:\"#f59e0b\"}})]})}),e.jsx(w,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(h,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"h4\",{style:{margin:\"0 0 8px\",fontSize:\"14px\",fontWeight:\"600\"},children:\"Performance Data Unavailable\"}),e.jsx(\"p\",{style:{margin:0,fontSize:\"12px\",opacity:.7},children:\"Unable to load performance metrics\"})]})})]})});export{V as P,I as w};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/Dashboard-BISRAKVm.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/Dashboard-BISRAKVm.js",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{R as ie,j as e,a as L,i as de,m as le,t as he,D as me,T as Z,B as pe,A as V,b as xe}from\"./react-vendor-CWzyjU4N.js\";import{u as J,C as _e,N as ue}from\"./ConnectionStatus-CpFbjicm.js\";import{PriceChart as ge}from\"./PriceChart-jhsraZep.js\";import{E as H,A as X,C as ee}from\"./ErrorBoundary-DabFdawX.js\";import{B as Y}from\"./Button-DBP6FnJb.js\";import{C as M,a as R,b as A}from\"./Card-CJqfKyPf.js\";import{w as be,P as je}from\"./PerformanceWidget-DKyUgQAz.js\";import{a as ve,b as Ne,u as fe,c as ye,g as Pe}from\"./useFinancialData-DNAd8qWf.js\";import{a as Se}from\"../assets/js/index-DarNXlp7.js\";import{validateDashboardData as Ce}from\"./financialValidators-Cb37Plo7.js\";import\"./vendor-BUtizv8l.js\";import\"./visx/math-array-utilities-micro-DJclFi1f.js\";import\"./visx/math-scale-utilities-micro-Ce9nmdPf.js\";import\"./visx/visx-group-isolated-DU4tDcRc.js\";import\"./visx/visx-line-shape-micro-BTDgNcMd.js\";import\"./visx/visx-shapes-misc-micro-EO-rkJxs.js\";import\"./authStore-BUclSJXC.js\";import\"./auth-DoOawKb9.js\";import\"./http-client-Kigo36r5.js\";import\"./logger-xpKBk56Z.js\";import\"./api-DujulmW2.js\";import\"./messages-DkI0amMe.js\";import\"./genericValidators-CzHuieRV.js\";const ae=150,se=50,re=10,te=n=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(n),De=n=>`${n>=0?\"+\":\"\"}${n.toFixed(2)}%`,oe=({symbol:n,showChange:_=!0,className:x=\"\"})=>{const{lastMessage:g,connectionState:G,error:D}=J({symbols:[n],autoConnect:!0}),l=ie.useMemo(()=>{var y;if(g&&g.symbol===n&&g.message_type===\"price_update\"&&((y=g.data)!=null&&y.price_data)){const w=g.data.price_data,v=w.price??ae+Math.random()*se,T=w.change??(Math.random()-.5)*re,h=w.change_percent??T/v*100;return{price:v,change:T,changePercent:h,isPositive:T>=0,lastUpdate:new Date(g.timestamp).toISOString()}}const C=ae+Math.random()*se,j=(Math.random()-.5)*re;return{price:C,change:j,changePercent:j/C*100,isPositive:j>=0,lastUpdate:new Date().toISOString()}},[g,n]),r=G===\"connected\",c=l.price>0;return e.jsxs(\"div\",{className:`live-price-display ${x} ${r?\"\":\"disconnected\"}`,\"data-testid\":\"live-price-element\",children:[e.jsxs(\"div\",{className:\"price-main\",children:[e.jsx(\"span\",{className:`live-price-value ${c?\"loaded\":\"loading\"}`,\"data-testid\":\"formatted-price\",children:c?te(l.price):\"--\"}),!r&&e.jsx(\"span\",{className:\"connection-indicator offline\",title:\"Disconnected\",children:\"\u26a1\"})]}),_&&c&&e.jsxs(\"div\",{className:\"price-change-section\",children:[e.jsxs(\"span\",{className:`live-price-change ${l.isPositive?\"positive\":\"negative\"}`,\"data-testid\":\"price-change-indicator\",children:[e.jsxs(\"span\",{className:\"change-amount\",children:[l.change>=0?\"+\":\"\",te(l.change)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",De(l.changePercent),\")\"]})]}),e.jsx(\"div\",{className:\"price-trend-arrow\",children:l.isPositive?\"\u2197\":\"\u2198\"})]}),D&&e.jsx(\"div\",{className:\"price-error\",title:D.message,children:\"\u26a0\ufe0f Error loading price\"}),e.jsx(\"div\",{className:\"last-update\",title:`Last updated: ${l.lastUpdate}`,children:e.jsx(\"span\",{className:`update-indicator ${r?\"live\":\"stale\"}`,children:r?\"\ud83d\udd34 LIVE\":\"\u23f8\ufe0f PAUSED\"})})]})},ne={positions:[{symbol:\"AAPL\",shares:50,costBasis:150,currentPrice:175.5,marketValue:8775,unrealizedGain:1275,unrealizedGainPercent:17,dayChange:125.5,dayChangePercent:1.45},{symbol:\"MSFT\",shares:30,costBasis:280,currentPrice:295.75,marketValue:8872.5,unrealizedGain:472.5,unrealizedGainPercent:5.63,dayChange:89.25,dayChangePercent:1.02},{symbol:\"GOOGL\",shares:25,costBasis:2100,currentPrice:2250,marketValue:56250,unrealizedGain:3750,unrealizedGainPercent:7.14,dayChange:675,dayChangePercent:1.21}]},k=n=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(n),q=n=>`${n>=0?\"+\":\"\"}${n.toFixed(2)}%`,we=({className:n=\"\"})=>{const _=ne.positions.map(c=>c.symbol),{lastMessage:x,connectionState:g,error:G}=J({symbols:_,autoConnect:!0}),l=(()=>{const c=ne.positions.map(h=>{var s;let i=h.currentPrice;x&&x.symbol===h.symbol&&x.message_type===\"price_update\"&&((s=x.data)!=null&&s.price_data)&&(i=x.data.price_data.price??h.currentPrice);const I=h.shares*i,B=I-h.shares*h.costBasis,U=B/(h.shares*h.costBasis)*100,O=(i-h.currentPrice)*h.shares,o=(i-h.currentPrice)/h.currentPrice*100;return{...h,currentPrice:i,marketValue:I,unrealizedGain:B,unrealizedGainPercent:U,dayChange:O,dayChangePercent:o}}),C=c.reduce((h,i)=>h+i.marketValue,0),j=c.reduce((h,i)=>h+i.shares*i.costBasis,0),y=C-j,w=y/j*100,v=c.reduce((h,i)=>h+i.dayChange,0),T=v/(C-v)*100;return{totalValue:C,totalCost:j,totalGain:y,totalGainPercent:w,dayChange:v,dayChangePercent:T,positions:c}})(),r=g===\"connected\";return e.jsxs(\"div\",{className:`live-portfolio-summary ${n} ${r?\"\":\"disconnected\"}`,\"data-testid\":\"portfolio-elements\",children:[e.jsxs(\"div\",{className:\"portfolio-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(\"div\",{className:`connection-status ${g}`,children:e.jsx(\"span\",{className:\"status-indicator\",children:r?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})})]}),e.jsxs(\"div\",{className:\"portfolio-totals\",\"data-testid\":\"live-data-elements\",children:[e.jsxs(\"div\",{className:\"total-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"value\",\"data-testid\":\"portfolio-total-value\",children:k(l.totalValue)})]}),e.jsxs(\"div\",{className:\"total-gain\",children:[e.jsx(\"span\",{className:\"label\",children:\"Total Gain/Loss\"}),e.jsxs(\"div\",{className:`gain-section ${l.totalGain>=0?\"positive\":\"negative\"}`,children:[e.jsx(\"span\",{className:\"gain-amount\",\"data-testid\":\"portfolio-total-gain\",children:k(l.totalGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",q(l.totalGainPercent),\")\"]})]})]}),e.jsxs(\"div\",{className:\"day-change\",children:[e.jsx(\"span\",{className:\"label\",children:\"Today's Change\"}),e.jsxs(\"div\",{className:`change-section ${l.dayChange>=0?\"positive\":\"negative\"}`,children:[e.jsxs(\"span\",{className:\"change-amount\",\"data-testid\":\"portfolio-day-change\",children:[l.dayChange>=0?\"+\":\"\",k(l.dayChange)]}),e.jsxs(\"span\",{className:\"change-percent\",children:[\"(\",q(l.dayChangePercent),\")\"]})]})]})]}),e.jsxs(\"div\",{className:\"portfolio-positions\",children:[e.jsx(\"h3\",{children:\"Holdings\"}),e.jsx(\"div\",{className:\"positions-grid\",\"data-testid\":\"portfolio-positions\",children:l.positions.map(c=>e.jsxs(\"div\",{className:\"position-card\",\"data-testid\":`position-${c.symbol}`,children:[e.jsxs(\"div\",{className:\"position-header\",children:[e.jsx(\"span\",{className:\"symbol\",children:c.symbol}),e.jsxs(\"span\",{className:\"shares\",children:[c.shares,\" shares\"]})]}),e.jsx(\"div\",{className:\"position-price\",children:e.jsx(oe,{symbol:c.symbol,showChange:!0,className:\"compact\"})}),e.jsxs(\"div\",{className:\"position-value\",children:[e.jsx(\"span\",{className:\"label\",children:\"Market Value\"}),e.jsx(\"span\",{className:\"value\",children:k(c.marketValue)})]}),e.jsxs(\"div\",{className:`position-gain ${c.unrealizedGain>=0?\"positive\":\"negative\"}`,children:[e.jsx(\"span\",{className:\"gain-amount\",children:k(c.unrealizedGain)}),e.jsxs(\"span\",{className:\"gain-percent\",children:[\"(\",q(c.unrealizedGainPercent),\")\"]})]})]},c.symbol))})]}),G&&e.jsxs(\"div\",{className:\"portfolio-error\",\"data-testid\":\"portfolio-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading live data: \",G.message]})]}),e.jsxs(\"div\",{className:\"portfolio-footer\",children:[e.jsxs(\"div\",{className:\"last-update\",children:[\"Last updated: \",new Date().toLocaleTimeString()]}),e.jsx(\"div\",{className:\"data-status\",children:r?\"Real-time data\":\"Delayed data\"})]})]})},Q=50,Ie=6e4,Me=.02,Ae=.01,Te=1e6,Le=1e5,ce=150,Ee=(n,_)=>{const x=[],g=Date.now(),G=_||100;for(let D=Q-1;D>=0;D--){const l=g-D*Ie,r=Me,c=(Math.random()-.5)*r,C=G*(1+c*(D/Q)),j=Math.floor(Math.random()*Te)+Le;x.push({timestamp:l,price:Math.max(C,Ae),volume:j})}return x},$e=({symbol:n,height:_=300,width:x=500,timeframe:g=\"1m\",showVolume:G=!1,className:D=\"\"})=>{const l=L.useRef(null),[r,c]=L.useState(null),[C,j]=L.useState(!1),[y,w]=L.useState(null),{lastMessage:v,connectionState:T,error:h}=J({symbols:[n],autoConnect:!0}),i=ie.useMemo(()=>{var o;return v&&v.symbol===n&&v.message_type===\"price_update\"&&((o=v.data)!=null&&o.price_data)?v.data.price_data.price??ce+Math.random()*Q:ce+Math.random()*Q},[v,n]),I=T===\"connected\";L.useEffect(()=>{var o;if(i>0){const s=Ee(n,i),u=s.map(p=>p.price),N=Math.min(...u),m=Math.max(...u),t=m-N,P=((o=s[0])==null?void 0:o.price)??i,b=i-P,d=P!==0?b/P*100:0;c({points:s,minPrice:N,maxPrice:m,priceRange:t,currentPrice:i,change:b,changePercent:d})}},[n,i]),L.useEffect(()=>{if(r&&i>0&&I){const o={timestamp:Date.now(),price:i,volume:Math.floor(Math.random()*1e6)+1e5};c(s=>{var f;if(!s)return null;const u=[...s.points.slice(1),o],N=u.map(E=>E.price),m=Math.min(...N),t=Math.max(...N),P=t-m,b=((f=u[0])==null?void 0:f.price)??i,d=i-b,p=b!==0?d/b*100:0;return{points:u,minPrice:m,maxPrice:t,priceRange:P,currentPrice:i,change:d,changePercent:p}})}},[i,I,r]),L.useEffect(()=>{const o=l.current;if(!o||!r)return;const s=o.getContext(\"2d\");if(!s)return;o.width=x,o.height=_,s.clearRect(0,0,x,_);const{points:u,maxPrice:N,priceRange:m}=r;if(u.length===0||m===0)return;const t=40,P=x-t*2,b=_-t*2;s.strokeStyle=\"#e1e5e9\",s.lineWidth=1,s.setLineDash([2,2]);for(let d=0;d<=4;d++){const p=t+b*d/4;s.beginPath(),s.moveTo(t,p),s.lineTo(x-t,p),s.stroke()}for(let d=0;d<=4;d++){const p=t+P*d/4;s.beginPath(),s.moveTo(p,t),s.lineTo(p,_-t),s.stroke()}if(s.setLineDash([]),s.strokeStyle=r.change>=0?\"#28a745\":\"#dc3545\",s.lineWidth=2,s.beginPath(),u.forEach((d,p)=>{const f=t+p/(u.length-1)*P,E=t+(N-d.price)/m*b;p===0?s.moveTo(f,E):s.lineTo(f,E)}),s.stroke(),s.fillStyle=r.change>=0?\"rgba(40, 167, 69, 0.1)\":\"rgba(220, 53, 69, 0.1)\",s.beginPath(),u.forEach((d,p)=>{const f=t+p/(u.length-1)*P,E=t+(N-d.price)/m*b;p===0?s.moveTo(f,E):s.lineTo(f,E)}),s.lineTo(x-t,_-t),s.lineTo(t,_-t),s.closePath(),s.fill(),u.length>0){const d=u.at(-1);if(d){const p=x-t,f=t+(N-d.price)/m*b;s.fillStyle=r.change>=0?\"#28a745\":\"#dc3545\",s.beginPath(),s.arc(p,f,4,0,2*Math.PI),s.fill(),I&&(s.strokeStyle=r.change>=0?\"#28a745\":\"#dc3545\",s.lineWidth=2,s.beginPath(),s.arc(p,f,8,0,2*Math.PI),s.stroke())}}s.fillStyle=\"#6c757d\",s.font=\"12px Monaco, Menlo, monospace\",s.textAlign=\"right\";for(let d=0;d<=4;d++){const p=N-m*d/4,f=t+b*d/4;s.fillText(`$${p.toFixed(2)}`,t-10,f+4)}},[r,x,_,I]);const B=o=>{if(!r||!l.current)return;const u=l.current.getBoundingClientRect(),N=o.clientX-u.left,m=40,t=x-m*2;if(N>=m&&N<=x-m){const P=Math.round((N-m)/t*(r.points.length-1)),b=r.points[P];b&&(w(b),j(!0))}else j(!1),w(null)},U=o=>new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:2,maximumFractionDigits:2}).format(o),O=o=>new Date(o).toLocaleTimeString();return e.jsxs(\"div\",{className:`live-price-chart ${D} ${I?\"\":\"disconnected\"}`,\"data-testid\":\"live-charts\",children:[e.jsxs(\"div\",{className:\"chart-header\",children:[e.jsxs(\"div\",{className:\"chart-title\",children:[e.jsxs(\"h3\",{children:[n,\" Live Chart\"]}),e.jsx(\"span\",{className:`connection-indicator ${T}`,children:I?\"\ud83d\udfe2 Live\":\"\ud83d\udd34 Offline\"})]}),r&&e.jsxs(\"div\",{className:`price-summary ${r.change>=0?\"positive\":\"negative\"}`,children:[e.jsx(\"span\",{className:\"current-price\",\"data-testid\":\"chart-current-price\",children:U(r.currentPrice)}),e.jsxs(\"span\",{className:\"price-change\",children:[r.change>=0?\"+\":\"\",U(r.change),\"(\",r.change>=0?\"+\":\"\",r.changePercent.toFixed(2),\"%)\"]})]})]}),e.jsxs(\"div\",{className:\"chart-container\",children:[e.jsx(\"canvas\",{ref:l,width:x,height:_,onMouseMove:B,onMouseLeave:()=>{j(!1),w(null)},style:{cursor:\"crosshair\"}}),C&&y&&e.jsxs(\"div\",{className:\"chart-tooltip\",\"data-testid\":\"chart-tooltip\",children:[e.jsx(\"div\",{className:\"tooltip-price\",children:U(y.price)}),e.jsx(\"div\",{className:\"tooltip-time\",children:O(y.timestamp)}),y.volume&&e.jsxs(\"div\",{className:\"tooltip-volume\",children:[\"Volume: \",y.volume.toLocaleString()]})]})]}),h&&e.jsxs(\"div\",{className:\"chart-error\",\"data-testid\":\"chart-error\",children:[e.jsx(\"span\",{className:\"error-icon\",children:\"\u26a0\ufe0f\"}),e.jsxs(\"span\",{className:\"error-message\",children:[\"Error loading chart data: \",h.message]})]}),e.jsx(\"div\",{className:\"chart-controls\",children:e.jsx(\"div\",{className:\"timeframe-selector\",children:[\"1m\",\"5m\",\"15m\",\"1h\",\"1d\"].map(o=>e.jsx(\"button\",{className:`timeframe-btn ${g===o?\"active\":\"\"}`,onClick:()=>{},\"data-testid\":`timeframe-${o}`,children:o},o))})})]})},Re=({className:n=\"\",initialSelectedSymbol:_=\"AAPL\",showDebugInfo:x=!1})=>{const[g,G]=L.useState(_),[D,l]=L.useState(new Date),{loadForContext:r}=Se();L.useEffect(()=>{r(\"dashboard\").catch(console.error)},[r]);const{performance:c,isLoading:C,error:j}=ve(),{marketSummary:y,isLoading:w,error:v}=Ne(),{gainers:T,losers:h,isLoading:i,error:I}=fe(),{insights:B,isLoading:U,error:O}=ye(),{watchlist:o,isLoading:s,error:u}=Pe(),N=L.useMemo(()=>{const a=C||w||i||U||s,S=[j,v,I,O,u];return S.forEach(($,z)=>{}),Ce({performance:c,marketSummary:y,gainers:T,losers:h,insights:B,watchlist:o,isLoading:a,errors:S})},[c,y,T,h,B,o,C,w,i,U,s,j,v,I,O,u]),{performance:m,marketSummary:t,gainers:P,losers:b,insights:d,watchlist:p}=N,f=()=>{l(new Date),window.location.reload()},E=[{symbol:\"AAPL\",name:\"Apple Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",sector:\"Technology\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",sector:\"Consumer Discretionary\",exchange:\"NASDAQ\",currency:\"USD\",security_type:\"stock\",is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}];return e.jsxs(\"div\",{className:`dashboard ${n}`.trim(),\"data-testid\":\"dashboard-container\",children:[e.jsxs(\"div\",{className:\"dashboard__header\",children:[e.jsxs(\"div\",{className:\"dashboard__title-section\",children:[e.jsx(\"h1\",{className:\"dashboard__title\",children:\"Dashboard\"}),e.jsx(\"p\",{className:\"dashboard__subtitle\",children:\"Welcome to your Finance AI Research Platform\"})]}),e.jsxs(\"div\",{className:\"dashboard__header-actions\",children:[e.jsx(\"div\",{className:\"live-indicators\",\"data-testid\":\"realtime-indicators\",children:e.jsx(_e,{showDetails:!1,className:\"dashboard__connection-status\",\"data-testid\":\"connection-status-elements\"})}),e.jsx(\"div\",{className:\"dashboard__last-updated\",children:e.jsxs(\"span\",{className:\"dashboard__update-time\",children:[\"Last updated: \",D.toLocaleTimeString()]})}),e.jsx(Y,{variant:\"ghost\",size:\"sm\",onClick:f,className:\"dashboard__refresh-button\",\"data-testid\":\"dashboard__refresh-button\",children:e.jsx(de,{className:\"dashboard__refresh-icon\"})}),e.jsx(\"div\",{className:\"dashboard__notification-wrapper\",\"data-testid\":\"notification-system\",children:e.jsx(ue,{})}),e.jsx(Y,{variant:\"ghost\",size:\"sm\",className:\"dashboard__analytics-button\",title:\"Open Analytics Dashboard\",children:e.jsx(le,{className:\"dashboard__analytics-icon\"})}),e.jsx(Y,{variant:\"ghost\",size:\"sm\",className:\"dashboard__settings-button\",children:e.jsx(he,{className:\"dashboard__settings-icon\"})})]})]}),e.jsx(H,{level:\"section\",enableRecovery:!0,onError:(a,S)=>{},children:e.jsxs(\"div\",{className:\"dashboard__metrics-grid\",\"data-testid\":\"dashboard__metrics-grid\",children:[e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Portfolio Value\"}),e.jsx(me,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"live-price-element\",children:m.totalValue}),e.jsx(\"span\",{className:`dashboard__metric-change ${m.isPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"}`,\"data-testid\":\"formatted-price\",children:m.totalGainLossPercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total portfolio value\"})]})]}),e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Daily Change\"}),e.jsx(Z,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsxs(\"div\",{className:\"dashboard__metric\",children:[e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:m.dayChange}),e.jsx(\"span\",{className:`dashboard__metric-change ${m.isDayPositive?\"dashboard__metric-change--positive\":\"dashboard__metric-change--negative\"}`,\"data-testid\":\"dashboard__metric-change--positive\",children:m.dayChangePercent})]}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Since yesterday\"})]})]}),e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Market Cap\"}),e.jsx(pe,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsxs(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:[\"$\",(t.totalMarketCap/1e12).toFixed(1),\"T\"]})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"Total market cap\"})]})]}),e.jsxs(M,{className:\"dashboard__metric-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(V,{className:\"dashboard__card-icon\"})]})}),e.jsxs(A,{children:[e.jsx(\"div\",{className:\"dashboard__metric\",children:e.jsx(\"span\",{className:\"dashboard__metric-value\",\"data-testid\":\"dashboard__metric-value\",children:d.length})}),e.jsx(\"p\",{className:\"dashboard__metric-label\",children:\"New recommendations\"})]})]})]})}),e.jsxs(\"div\",{className:\"dashboard__main-grid\",\"data-testid\":\"dashboard__main-grid\",children:[e.jsxs(\"div\",{className:\"dashboard__left-column\",\"data-testid\":\"dashboard__left-column\",children:[e.jsx(\"div\",{className:\"live-data-grid\",\"data-testid\":\"live-data-elements\",children:e.jsx(X,{children:e.jsx(we,{className:\"dashboard__portfolio-summary\",\"data-testid\":\"portfolio-elements\"})})}),e.jsx(H,{level:\"component\",enableRecovery:!0,onError:(a,S)=>{},fallback:e.jsxs(M,{className:\"dashboard__performance-widget\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Performance Widget\"})}),e.jsx(A,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(V,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"Performance data temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Please try refreshing the page\"})]})})]}),children:e.jsx(je,{portfolioMode:!0,className:\"dashboard__performance-widget\",timeRange:\"1Y\",showBenchmark:!0})}),e.jsx(X,{children:e.jsxs(M,{className:\"dashboard__watchlist-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Watchlist\"}),e.jsx(xe,{className:\"dashboard__card-icon\"})]})}),e.jsx(A,{children:e.jsxs(\"div\",{className:\"dashboard__watchlist\",children:[p.slice(0,5).map((a,S)=>{var K;const $=((K=a==null?void 0:a.security)==null?void 0:K.symbol)??\"N/A\",z=(a==null?void 0:a.formattedPrice)??\"$0.00\",F=(a==null?void 0:a.formattedChangePercent)??\"0.00%\",W=!!(a!=null&&a.isPositive);return e.jsxs(\"div\",{className:\"dashboard__watchlist-item\",children:[e.jsxs(\"div\",{className:\"dashboard__watchlist-info\",children:[e.jsx(\"span\",{className:\"dashboard__watchlist-symbol\",children:$}),e.jsx(\"span\",{className:\"dashboard__watchlist-price\",children:z})]}),e.jsxs(\"div\",{className:`dashboard__watchlist-change ${W?\"dashboard__watchlist-change--positive\":\"dashboard__watchlist-change--negative\"}`,children:[W?\"+\":\"\",F]})]},(a==null?void 0:a.id)??S)}),p.length===0&&e.jsx(\"div\",{className:\"dashboard__watchlist-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No watchlist items\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__center-column\",\"data-testid\":\"dashboard__center-column\",children:[e.jsx(ee,{children:e.jsx($e,{symbol:g,height:300,width:500,timeframe:\"1m\",showVolume:!0,className:\"dashboard__live-chart\",\"data-testid\":\"live-charts\"})}),e.jsx(ee,{children:e.jsxs(M,{className:\"dashboard__chart-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__chart-header\",children:[e.jsx(\"h3\",{className:\"dashboard__chart-title\",children:\"Market Analysis\"}),e.jsx(\"div\",{className:\"dashboard__chart-controls\",children:e.jsx(\"select\",{value:g,onChange:a=>G(a.target.value),className:\"dashboard__symbol-selector\",children:E.map(a=>e.jsxs(\"option\",{value:a.symbol,children:[a.symbol,\" - \",a.name]},a.symbol))})})]})}),e.jsx(A,{children:e.jsx(ge,{symbol:g,height:350,showTimeRange:!0,showVolume:!0,initialRange:\"1M\"})})]})}),e.jsx(H,{level:\"component\",enableRecovery:!0,onError:(a,S)=>{},fallback:e.jsxs(M,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(V,{className:\"dashboard__card-icon\"})]})}),e.jsx(A,{children:e.jsxs(\"div\",{style:{padding:\"20px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"8px\"},children:[e.jsx(V,{style:{width:\"32px\",height:\"32px\",margin:\"0 auto 12px\",opacity:.5}}),e.jsx(\"p\",{children:\"AI insights temporarily unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"12px\",marginTop:\"8px\"},children:\"Analysis engine will be back shortly\"})]})})]}),children:e.jsxs(M,{className:\"dashboard__insights-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsxs(\"div\",{className:\"dashboard__card-header\",children:[e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"AI Insights\"}),e.jsx(V,{className:\"dashboard__card-icon\"})]})}),e.jsx(A,{children:e.jsxs(\"div\",{className:\"dashboard__insights\",children:[d.slice(0,3).map(a=>{const S=(a==null?void 0:a.id)??`insight-${Math.random()}`,$=(a==null?void 0:a.type)??\"unknown\",z=(a==null?void 0:a.title)??\"No title\",F=(a==null?void 0:a.message)??\"No message available\",W=typeof(a==null?void 0:a.confidence)==\"number\"?a.confidence:0;return e.jsxs(\"div\",{className:\"dashboard__insight-item\",children:[e.jsxs(\"div\",{className:\"dashboard__insight-header\",children:[e.jsx(\"span\",{className:`dashboard__insight-type dashboard__insight-type--${$}`,children:$}),e.jsxs(\"span\",{className:\"dashboard__insight-confidence\",children:[Math.round(W*100),\"% confidence\"]})]}),e.jsx(\"h4\",{className:\"dashboard__insight-title\",children:z}),e.jsx(\"p\",{className:\"dashboard__insight-message\",children:F})]},S)}),d.length===0&&e.jsx(\"div\",{className:\"dashboard__insights-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No AI insights available\"})})]})})]})})]}),e.jsxs(\"div\",{className:\"dashboard__right-column\",\"data-testid\":\"dashboard__right-column\",children:[e.jsx(X,{children:e.jsxs(M,{className:\"dashboard__movers-card\",variant:\"outlined\",children:[e.jsx(R,{children:e.jsx(\"h3\",{className:\"dashboard__card-title\",children:\"Top Movers\"})}),e.jsx(A,{children:e.jsxs(\"div\",{className:\"dashboard__movers\",children:[e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--gainers\",children:\"Top Gainers\"}),P.slice(0,3).map((a,S)=>{const $=(a==null?void 0:a.symbol)??\"N/A\",z=typeof(a==null?void 0:a.price)==\"number\"?a.price:0,F=typeof(a==null?void 0:a.changePercent)==\"number\"?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:$}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",z.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--positive\",children:[\"+\",F.toFixed(2),\"%\"]})]},(a==null?void 0:a.symbol)??S)}),P.length===0&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No gainers data\"})})]}),e.jsxs(\"div\",{className:\"dashboard__movers-section\",children:[e.jsx(\"h4\",{className:\"dashboard__movers-title dashboard__movers-title--losers\",children:\"Top Losers\"}),b.slice(0,3).map((a,S)=>{const $=(a==null?void 0:a.symbol)??\"N/A\",z=typeof(a==null?void 0:a.price)==\"number\"?a.price:0,F=typeof(a==null?void 0:a.changePercent)==\"number\"?a.changePercent:0;return e.jsxs(\"div\",{className:\"dashboard__mover-item\",children:[e.jsxs(\"div\",{className:\"dashboard__mover-info\",children:[e.jsx(\"span\",{className:\"dashboard__mover-symbol\",children:$}),e.jsxs(\"span\",{className:\"dashboard__mover-price\",children:[\"$\",z.toFixed(2)]})]}),e.jsxs(\"div\",{className:\"dashboard__mover-change dashboard__mover-change--negative\",children:[F.toFixed(2),\"%\"]})]},(a==null?void 0:a.symbol)??S)}),b.length===0&&e.jsx(\"div\",{className:\"dashboard__movers-empty\",children:e.jsx(\"p\",{className:\"dashboard__empty-message\",children:\"No losers data\"})})]})]})})]})}),e.jsx(\"div\",{className:\"dashboard__featured-stocks\",children:E.slice(0,2).map(a=>e.jsx(H,{level:\"component\",enableRecovery:!0,onError:(S,$)=>{},fallback:e.jsx(M,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(A,{children:e.jsxs(\"div\",{style:{padding:\"16px\",textAlign:\"center\",color:\"#6b7280\",backgroundColor:\"#f9fafb\",borderRadius:\"6px\"},children:[e.jsx(Z,{style:{width:\"24px\",height:\"24px\",margin:\"0 auto 8px\",opacity:.5}}),e.jsx(\"p\",{style:{fontSize:\"14px\",margin:0},children:a.symbol}),e.jsx(\"p\",{style:{fontSize:\"12px\",margin:\"4px 0 0\",opacity:.7},children:\"Data unavailable\"})]})})}),children:e.jsx(M,{className:\"dashboard__featured-stock\",variant:\"outlined\",children:e.jsx(A,{children:e.jsxs(\"div\",{className:\"featured-stock-content\",children:[e.jsxs(\"div\",{className:\"stock-info\",children:[e.jsx(\"h4\",{children:a.symbol}),e.jsx(\"p\",{children:a.name})]}),e.jsx(oe,{symbol:a.symbol,showChange:!0,className:\"featured-stock-price\"})]})})})},a.symbol))})]})]})]})},ca=be(Re,{level:\"page\",enableRecovery:!0,onError:(n,_)=>{console.error(\"Critical Dashboard Error:\",{error:n.message,stack:n.stack,componentStack:_.componentStack,timestamp:new Date().toISOString()})},fallback:e.jsx(\"div\",{className:\"dashboard\",children:e.jsxs(\"div\",{className:\"dashboard__error-page\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"60vh\",padding:\"40px\",textAlign:\"center\",backgroundColor:\"#fef2f2\",border:\"1px solid #fecaca\",borderRadius:\"12px\",margin:\"20px\"},children:[e.jsx(\"div\",{style:{fontSize:\"64px\",marginBottom:\"24px\",opacity:.6},children:\"\ud83d\udcca\"}),e.jsx(\"h1\",{style:{fontSize:\"24px\",fontWeight:\"bold\",color:\"#dc2626\",marginBottom:\"16px\"},children:\"Dashboard Temporarily Unavailable\"}),e.jsx(\"p\",{style:{fontSize:\"16px\",color:\"#7f1d1d\",marginBottom:\"24px\",maxWidth:\"500px\",lineHeight:\"1.5\"},children:\"We're experiencing technical difficulties with the dashboard. Our team has been notified and is working to resolve the issue.\"}),e.jsxs(\"div\",{style:{display:\"flex\",gap:\"12px\"},children:[e.jsx(\"button\",{style:{backgroundColor:\"#dc2626\",color:\"white\",border:\"none\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.location.reload(),children:\"Reload Dashboard\"}),e.jsx(\"button\",{style:{backgroundColor:\"white\",color:\"#dc2626\",border:\"1px solid #dc2626\",padding:\"12px 24px\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"500\"},onClick:()=>window.history.back(),children:\"Go Back\"})]}),e.jsx(\"p\",{style:{fontSize:\"12px\",color:\"#9ca3af\",marginTop:\"24px\"},children:\"If the problem persists, please contact support.\"})]})})});export{ca as default};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/Portfolio-RM0yYuj1.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/Portfolio-RM0yYuj1.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 1,
          "content": "import{a as r,j as e,i as M,n as F,P as R,o as k,T as _,c as b,B as Y,s as $,t as B,J as H,z as J}from\"./react-vendor-CWzyjU4N.js\";import{B as o}from\"./Button-DBP6FnJb.js\";import{C as g,a as D,b as y}from\"./Card-CJqfKyPf.js\";import{I as P}from\"./Input-DrNFZbX-.js\";import{a as q}from\"../assets/js/index-DarNXlp7.js\";import\"./vendor-BUtizv8l.js\";import\"./visx/math-array-utilities-micro-DJclFi1f.js\";import\"./visx/math-scale-utilities-micro-Ce9nmdPf.js\";import\"./visx/visx-group-isolated-DU4tDcRc.js\";import\"./visx/visx-line-shape-micro-BTDgNcMd.js\";import\"./visx/visx-shapes-misc-micro-EO-rkJxs.js\";const E={REFRESH_DELAY_MS:1500,REMOVE_POSITION_DELAY_MS:500},K=[{symbol:\"AAPL\",name:\"Apple Inc.\",shares:150,averagePrice:145.32,currentPrice:175.84,marketValue:26376,unrealizedGain:4578,unrealizedGainPercent:21,allocation:42.1,lastUpdated:new Date().toISOString()},{symbol:\"MSFT\",name:\"Microsoft Corporation\",shares:75,averagePrice:320.15,currentPrice:378.85,marketValue:28413.75,unrealizedGain:4402.5,unrealizedGainPercent:18.3,allocation:45.3,lastUpdated:new Date().toISOString()},{symbol:\"GOOGL\",name:\"Alphabet Inc.\",shares:50,averagePrice:125.8,currentPrice:142.56,marketValue:7128,unrealizedGain:838,unrealizedGainPercent:13.3,allocation:11.4,lastUpdated:new Date().toISOString()},{symbol:\"TSLA\",name:\"Tesla, Inc.\",shares:25,averagePrice:280.45,currentPrice:254.22,marketValue:6355.5,unrealizedGain:-656.25,unrealizedGainPercent:-9.3,allocation:10.1,lastUpdated:new Date().toISOString()}],le=()=>{const[l]=r.useState(K),[L,h]=r.useState(!1),[f,S]=r.useState(\"\"),[x,C]=r.useState(\"\"),[j,w]=r.useState(\"\"),[c,d]=r.useState(!1),[T,z]=r.useState(new Date),{utilities:m,loadForContext:A}=q();r.useEffect(()=>{A(\"portfolio\").catch(console.error)},[A]);const s=r.useMemo(()=>{const a=l.reduce((v,u)=>v+u.marketValue,0),t=l.reduce((v,u)=>v+u.shares*u.averagePrice,0),p=a-t,n=t>0?p/t*100:0;return{totalValue:a,todayChange:3847.21,todayChangePercent:3.2,totalReturn:p,totalReturnPercent:n,totalCost:t,availableCash:15420.75}},[l]),I=async()=>{!f||!x||!j||(d(!0),await new Promise(a=>setTimeout(a,1e3)),S(\"\"),C(\"\"),w(\"\"),h(!1),d(!1))},O=async a=>{d(!0),await new Promise(t=>setTimeout(t,E.REMOVE_POSITION_DELAY_MS)),d(!1)},G=async()=>{d(!0),await new Promise(a=>setTimeout(a,E.REFRESH_DELAY_MS)),z(new Date),d(!1)},U=()=>{},V=()=>{const a={summary:s,positions:l,exportDate:new Date().toISOString()},t=new Blob([JSON.stringify(a,null,2)],{type:\"application/json\"}),p=URL.createObjectURL(t),n=document.createElement(\"a\");n.href=p,n.download=`portfolio-export-${new Date().toISOString().split(\"T\")[0]}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(p)},i=a=>{var t;return((t=m.formatCurrency)==null?void 0:t.call(m,a))||new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"}).format(a)},N=a=>{var t;return((t=m.formatPercentage)==null?void 0:t.call(m,a))||`${a>=0?\"+\":\"\"}${a.toFixed(2)}%`};return e.jsxs(\"div\",{className:\"portfolio\",\"data-testid\":\"portfolio-page\",children:[e.jsxs(\"div\",{className:\"portfolio__header\",children:[e.jsx(\"h1\",{className:\"portfolio__title\",\"data-testid\":\"portfolio-heading\",children:\"Portfolio Management\"}),e.jsx(\"p\",{className:\"portfolio__subtitle\",children:\"Track and manage your investment portfolio with real-time performance metrics\"}),e.jsxs(\"div\",{className:\"portfolio__controls\",children:[e.jsxs(o,{variant:\"outline\",onClick:G,disabled:c,\"data-testid\":\"refresh-portfolio-button\",children:[e.jsx(M,{className:`portfolio__control-icon ${c?\"spinning\":\"\"}`}),\"Refresh Data\"]}),e.jsxs(o,{variant:\"outline\",onClick:V,\"data-testid\":\"export-portfolio-button\",children:[e.jsx(F,{className:\"portfolio__control-icon\"}),\"Export\"]}),e.jsxs(o,{onClick:()=>h(!0),\"data-testid\":\"add-position-button\",children:[e.jsx(R,{className:\"portfolio__control-icon\"}),\"Add Position\"]})]})]}),e.jsx(\"div\",{className:\"portfolio__summary\",children:e.jsxs(g,{className:\"portfolio__summary-card\",children:[e.jsx(D,{children:e.jsxs(\"div\",{className:\"portfolio__summary-header\",children:[e.jsx(\"h2\",{children:\"Portfolio Summary\"}),e.jsx(k,{className:\"portfolio__summary-icon\"})]})}),e.jsx(y,{children:e.jsxs(\"div\",{className:\"portfolio__metrics\",\"data-testid\":\"portfolio-metrics\",children:[e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Value\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"total-value\",children:i(s.totalValue)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Cost\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"total-cost\",children:i(s.totalCost)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Today's Change\"}),e.jsxs(\"span\",{className:`portfolio__metric-value ${s.todayChange>=0?\"portfolio__metric-value--positive\":\"portfolio__metric-value--negative\"}`,\"data-testid\":\"today-change\",children:[s.todayChange>=0?e.jsx(_,{className:\"portfolio__trend-icon\"}):e.jsx(b,{className:\"portfolio__trend-icon\"}),i(s.todayChange),\" (\",N(s.todayChangePercent),\")\"]})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Total Return\"}),e.jsxs(\"span\",{className:`portfolio__metric-value ${s.totalReturn>=0?\"portfolio__metric-value--positive\":\"portfolio__metric-value--negative\"}`,\"data-testid\":\"total-return\",children:[s.totalReturn>=0?e.jsx(_,{className:\"portfolio__trend-icon\"}):e.jsx(b,{className:\"portfolio__trend-icon\"}),i(s.totalReturn),\" (\",N(s.totalReturnPercent),\")\"]})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Available Cash\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"available-cash\",children:i(s.availableCash)})]}),e.jsxs(\"div\",{className:\"portfolio__metric\",children:[e.jsx(\"span\",{className:\"portfolio__metric-label\",children:\"Last Updated\"}),e.jsx(\"span\",{className:\"portfolio__metric-value\",\"data-testid\":\"last-updated\",children:T.toLocaleTimeString()})]})]})})]})}),e.jsx(\"div\",{className:\"portfolio__actions\",children:e.jsx(g,{className:\"portfolio__actions-card\",children:e.jsx(y,{children:e.jsxs(\"div\",{className:\"portfolio__action-buttons\",children:[e.jsxs(o,{variant:\"outline\",onClick:U,\"data-testid\":\"rebalance-button\",children:[e.jsx(Y,{className:\"portfolio__action-icon\"}),\"Rebalance Portfolio\"]}),e.jsxs(o,{variant:\"outline\",\"data-testid\":\"performance-analysis-button\",children:[e.jsx(_,{className:\"portfolio__action-icon\"}),\"Performance Analysis\"]}),e.jsxs(o,{variant:\"outline\",\"data-testid\":\"risk-analysis-button\",children:[e.jsx($,{className:\"portfolio__action-icon\"}),\"Risk Analysis\"]}),e.jsxs(o,{variant:\"outline\",\"data-testid\":\"settings-button\",children:[e.jsx(B,{className:\"portfolio__action-icon\"}),\"Settings\"]})]})})})}),e.jsxs(g,{className:\"portfolio__positions-card\",children:[e.jsx(D,{children:e.jsxs(\"div\",{className:\"portfolio__positions-header\",children:[e.jsxs(\"h2\",{children:[\"Holdings (\",l.length,\" positions)\"]}),e.jsx(_,{className:\"portfolio__positions-icon\"})]})}),e.jsx(y,{children:e.jsx(\"div\",{className:\"portfolio__positions-table\",\"data-testid\":\"portfolio-positions\",children:l.length>0?e.jsxs(\"table\",{className:\"portfolio__table\",children:[e.jsx(\"thead\",{children:e.jsxs(\"tr\",{children:[e.jsx(\"th\",{children:\"Symbol\"}),e.jsx(\"th\",{children:\"Name\"}),e.jsx(\"th\",{children:\"Shares\"}),e.jsx(\"th\",{children:\"Avg Price\"}),e.jsx(\"th\",{children:\"Current Price\"}),e.jsx(\"th\",{children:\"Market Value\"}),e.jsx(\"th\",{children:\"Unrealized Gain/Loss\"}),e.jsx(\"th\",{children:\"Allocation\"}),e.jsx(\"th\",{children:\"Actions\"})]})}),e.jsx(\"tbody\",{children:l.map(a=>e.jsxs(\"tr\",{\"data-testid\":\"position-row\",children:[e.jsx(\"td\",{className:\"portfolio__symbol\",children:a.symbol}),e.jsx(\"td\",{className:\"portfolio__name\",children:a.name}),e.jsx(\"td\",{className:\"portfolio__shares\",children:a.shares.toLocaleString()}),e.jsx(\"td\",{className:\"portfolio__avg-price\",children:i(a.averagePrice)}),e.jsx(\"td\",{className:\"portfolio__current-price\",children:i(a.currentPrice)}),e.jsx(\"td\",{className:\"portfolio__market-value\",children:i(a.marketValue)}),e.jsxs(\"td\",{className:`portfolio__unrealized-gain ${a.unrealizedGain>=0?\"positive\":\"negative\"}`,children:[a.unrealizedGain>=0?e.jsx(_,{className:\"portfolio__gain-icon\"}):e.jsx(b,{className:\"portfolio__gain-icon\"}),i(a.unrealizedGain),\" (\",N(a.unrealizedGainPercent),\")\"]}),e.jsxs(\"td\",{className:\"portfolio__allocation\",children:[a.allocation.toFixed(1),\"%\"]}),e.jsxs(\"td\",{className:\"portfolio__actions\",children:[e.jsxs(o,{size:\"sm\",variant:\"outline\",\"data-testid\":\"view-position-button\",children:[e.jsx(H,{className:\"portfolio__action-icon\"}),\"View\"]}),e.jsxs(o,{size:\"sm\",variant:\"outline\",onClick:()=>O(),disabled:c,\"data-testid\":\"remove-position-button\",children:[e.jsx(J,{className:\"portfolio__action-icon\"}),\"Remove\"]})]})]},a.symbol))})]}):e.jsxs(\"div\",{className:\"portfolio__empty-state\",\"data-testid\":\"empty-portfolio\",children:[e.jsx(k,{className:\"portfolio__empty-icon\"}),e.jsx(\"h3\",{children:\"No Holdings Yet\"}),e.jsx(\"p\",{children:\"Start building your portfolio by adding your first position.\"}),e.jsxs(o,{onClick:()=>h(!0),children:[e.jsx(R,{className:\"portfolio__control-icon\"}),\"Add Your First Position\"]})]})})})]}),L&&e.jsx(\"div\",{className:\"portfolio__modal-overlay\",\"data-testid\":\"add-position-modal\",children:e.jsxs(\"div\",{className:\"portfolio__modal\",children:[e.jsxs(\"div\",{className:\"portfolio__modal-header\",children:[e.jsx(\"h3\",{children:\"Add New Position\"}),e.jsx(o,{variant:\"outline\",size:\"sm\",onClick:()=>h(!1),\"data-testid\":\"close-modal-button\",children:\"\u00d7\"})]}),e.jsxs(\"div\",{className:\"portfolio__modal-body\",children:[e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"symbol\",children:\"Stock Symbol\"}),e.jsx(P,{id:\"symbol\",type:\"text\",placeholder:\"e.g., AAPL\",value:f,onChange:a=>S(a.target.value.toUpperCase()),\"data-testid\":\"symbol-input\"})]}),e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"shares\",children:\"Number of Shares\"}),e.jsx(P,{id:\"shares\",type:\"number\",placeholder:\"e.g., 100\",value:x,onChange:a=>C(a.target.value),\"data-testid\":\"shares-input\"})]}),e.jsxs(\"div\",{className:\"portfolio__form-group\",children:[e.jsx(\"label\",{htmlFor:\"price\",children:\"Average Price\"}),e.jsx(P,{id:\"price\",type:\"number\",step:\"0.01\",placeholder:\"e.g., 150.00\",value:j,onChange:a=>w(a.target.value),\"data-testid\":\"price-input\"})]})]}),e.jsxs(\"div\",{className:\"portfolio__modal-footer\",children:[e.jsx(o,{variant:\"outline\",onClick:()=>h(!1),disabled:c,\"data-testid\":\"cancel-add-button\",children:\"Cancel\"}),e.jsx(o,{onClick:I,disabled:c||!f||!x||!j,\"data-testid\":\"confirm-add-button\",children:c?\"Adding...\":\"Add Position\"})]})]})})]})};export{le as default};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/js/Securities-kgTmjlxb.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/js/Securities-kgTmjlxb.js",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 2,
          "content": "import{a as s,j as e,S as D}from\"./react-vendor-CWzyjU4N.js\";import{U as i}from\"./vendor-BUtizv8l.js\";import{B as O}from\"./Button-DBP6FnJb.js\";import{C as T,a as k,b as L}from\"./Card-CJqfKyPf.js\";import{a as F}from\"../assets/js/index-DarNXlp7.js\";import{G as z}from\"./GridOptimizationProvider-tZMCdxtE.js\";import\"./visx/math-array-utilities-micro-DJclFi1f.js\";import\"./visx/math-scale-utilities-micro-Ce9nmdPf.js\";import\"./visx/visx-group-isolated-DU4tDcRc.js\";import\"./visx/visx-line-shape-micro-BTDgNcMd.js\";import\"./visx/visx-shapes-misc-micro-EO-rkJxs.js\";const M=s.lazy(()=>i(()=>import(\"./ProgressiveResultsRenderer-Dpr4t32p.js\"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]))),U=s.lazy(()=>i(()=>import(\"./AdvancedSearchFeatures-C3lctBLf.js\"),__vite__mapDeps([10,2,1,3,4,5,6,7,8,9]))),B=()=>i(()=>import(\"./SearchProcessor-DJiPEL16.js\"),[]),$=({mockSecurities:c,securitiesLoaded:n,onUpgrade:l})=>{const[t,j]=s.useState(\"\"),[_,f]=s.useState(null),[a,S]=s.useState(!1),[d,m]=s.useState(\"\"),[v,x]=s.useState(!1),[y,E]=s.useState(!1),b=s.useCallback(u=>`$${u.toFixed(2)}`,[]),C=s.useCallback(async u=>{if(u.preventDefault(),!t.trim()){m(\"Please enter a search term\");return}m(\"\"),S(!0);try{const{processSearch:o}=await B(),p=await o(t,c);f(p),v||x(!0)}catch{m(\"Search failed. Please try again.\")}finally{S(!1)}},[t,c,v]),g=s.useCallback(u=>{const o=u.target.value;j(o),d&&m(\"\"),o.length===0&&f(null)},[d]),N=s.useCallback(()=>{E(!0),l&&l()},[l]);return e.jsxs(\"div\",{className:\"securities-core\",\"data-testid\":\"securities-core\",children:[e.jsxs(\"div\",{className:\"securities__header\",children:[e.jsx(\"h1\",{className:\"securities__title\",\"data-testid\":\"securities-heading\",children:\"Securities Research\"}),e.jsx(\"p\",{className:\"securities__subtitle\",children:\"Search and analyze financial securities\"})]}),e.jsxs(T,{className:\"securities__search-card\",children:[e.jsx(k,{children:e.jsx(\"h2\",{children:\"Security Search\"})}),e.jsx(L,{children:e.jsx(\"form\",{onSubmit:C,className:\"securities__search-form\",children:e.jsxs(\"div\",{className:\"securities__search\",children:[e.jsxs(\"div\",{className:\"securities__search-input\",children:[e.jsx(D,{className:\"securities__search-icon\"}),e.jsx(\"input\",{type:\"text\",value:t,onChange:g,placeholder:\"Search for stocks, ETFs, or other securities...\",className:`securities__input ${validationError?\"securities__input--error\":\"\"}`,\"data-testid\":\"securities-search-input\",disabled:a}),e.jsx(O,{type:\"submit\",disabled:a||!t.trim(),loading:a,\"data-testid\":\"securities-search-button\",className:\"securities__search-button\",children:a?\"Searching...\":\"Search\"})]}),d&&e.jsx(\"span\",{className:\"securities__error\",\"data-testid\":\"search-error\",children:d})]})})})]}),e.jsxs(T,{className:\"securities__results-card\",children:[e.jsx(k,{children:e.jsx(\"h2\",{children:\"Search Results\"})}),e.jsx(L,{children:e.jsxs(\"div\",{className:\"securities__results\",\"data-testid\":\"securities-results\",children:[a&&e.jsx(\"div\",{className:\"securities__loading\",\"data-testid\":\"securities-loading\",children:e.jsx(\"p\",{children:\"Searching securities...\"})}),!a&&!n&&e.jsx(\"div\",{className:\"securities__loading\",\"data-testid\":\"securities-data-loading\",children:e.jsx(\"p\",{children:\"Loading securities data...\"})}),_===null&&e.jsxs(\"div\",{className:\"securities__placeholder\",\"data-testid\":\"securities-placeholder\",children:[e.jsx(\"p\",{children:\"Search results will appear here.\"}),e.jsx(\"p\",{children:\"Advanced features load progressively.\"})]}),_!==null&&e.jsx(s.Suspense,{fallback:e.jsx(\"div\",{className:\"loading-skeleton\",\"data-testid\":\"results-loading\",children:e.jsx(\"p\",{children:\"Loading search results...\"})}),children:e.jsx(M,{results:_,searchTerm:t,onUpgrade:N,basicFormat:b})}),y&&e.jsx(s.Suspense,{fallback:e.jsx(\"div\",{className:\"loading-skeleton\",\"data-testid\":\"advanced-loading\",children:e.jsx(\"p\",{children:\"Loading advanced features...\"})}),children:e.jsx(U,{searchTerm:t})})]})})]})]})},G=s.lazy(()=>i(()=>import(\"./SecuritiesMetrics-onMvUzmC.js\"),__vite__mapDeps([11,2,1,3,4,5,6,7]))),H=s.lazy(()=>i(()=>import(\"./SecuritiesCharts-_zUo1M-k.js\"),__vite__mapDeps([12,1,2,3,4,5,6,7,13,14]))),q=(c,n)=>s.useMemo(()=>{const l=c.length;return n.userPreference===\"performance\"||n.deviceType===\"mobile\"?\"core\":l>5||n.userPreference===\"full\"?\"advanced\":l>1?\"enhanced\":\"core\"},[c.length,n]),J=({variant:c=\"auto\",enableProgressiveUpgrade:n=!0,progressiveContext:l={}})=>{const[t,j]=s.useState(\"core\"),[_,f]=s.useState(!1),[a,S]=s.useState([]),[d,m]=s.useState([]),[v,x]=s.useState(!1),[y,E]=s.useState(null),[b,C]=s.useState(null),{loadForContext:g}=F(),N=s.useMemo(()=>({userPreference:\"balanced\",dataComplexity:a.length>10?\"complex\":a.length>3?\"standard\":\"simple\",interactionLevel:\"basic\",deviceType:\"desktop\",...l}),[a.length,l]),u=q(a,N),o=c===\"auto\"?u:c;s.useEffect(()=>{(async()=>{try{const{loadMockSecurities:h}=await i(async()=>{const{loadMockSecurities:w}=await import(\"./mockSecurities-DYJjGDEN.js\");return{loadMockSecurities:w}},[]),V=await h();m(V),x(!0)}catch{x(!0)}})()},[]),s.useEffect(()=>{(t===\"enhanced\"||t===\"advanced\")&&(async()=>{try{const h=await i(()=>import(\"./technicalIndicators-81uo0pAF.js\"),[]);E(h)}catch{}})()},[t]),s.useEffect(()=>{t===\"advanced\"&&(async()=>{try{const h=await i(()=>import(\"./chartConfigs-BK5J46Tl.js\"),__vite__mapDeps([15,1,2,3,4,5,6,7]));C(h)}catch{}})()},[t]),s.useEffect(()=>{g(\"charts\").catch(console.error)},[g]);const p=s.useCallback(async r=>{!_&&n&&(f(!0),r===\"enhanced\"?await i(()=>import(\"./SecuritiesMetrics-onMvUzmC.js\"),__vite__mapDeps([11,2,1,3,4,5,6,7])):await Promise.all([i(()=>import(\"./SecuritiesMetrics-onMvUzmC.js\"),__vite__mapDeps([11,2,1,3,4,5,6,7])),i(()=>import(\"./SecuritiesCharts-_zUo1M-k.js\"),__vite__mapDeps([12,1,2,3,4,5,6,7,13,14]))]),j(r))},[_,n]);s.useCallback(()=>{o===\"core\"&&t===\"core\"&&p(\"enhanced\")},[o,t,p]);const P=s.useCallback(()=>{(o===\"enhanced\"||o===\"core\")&&t!==\"advanced\"&&p(\"advanced\")},[o,t,p]),A=s.useCallback(r=>{S(r),r.length>0&&t===\"core\"&&P()},[t,P]),I=()=>{const r=[];return r.push(e.jsx($,{mockSecurities:d,securitiesLoaded:v,onUpgrade:()=>{const h=d.slice(0,3);A(h)}},\"core\")),(t===\"enhanced\"||t===\"advanced\")&&r.push(e.jsx(s.Suspense,{fallback:e.jsx(R,{title:\"Loading metrics...\"}),children:e.jsx(G,{securities:a})},\"metrics\")),t===\"advanced\"&&r.push(e.jsx(s.Suspense,{fallback:e.jsx(R,{title:\"Loading charts...\"}),children:e.jsx(H,{securities:a,technicalUtils:y,chartConfigs:b})},\"charts\")),r};return e.jsx(z,{userBehavior:\"high\",deviceCapability:\"medium\",enableAnalytics:!1,children:e.jsx(\"div\",{className:\"securities securities-progressive\",\"data-testid\":\"securities-progressive\",\"data-variant\":t,\"data-progressive-enabled\":n,children:I()})})},R=({title:c})=>e.jsx(\"div\",{className:\"component-skeleton animate-pulse bg-gray-100 rounded-lg p-8 m-4\",children:e.jsxs(\"div\",{className:\"text-gray-500 text-center\",children:[e.jsx(\"div\",{className:\"loading-spinner w-8 h-8 border-2 border-gray-300 border-t-blue-500 rounded-full animate-spin mx-auto mb-2\"}),e.jsx(\"p\",{children:c})]})}),ie=()=>e.jsx(J,{});export{ie as default};",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "dist-phase3-optimized/assets/js/index-DarNXlp7.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/dist-phase3-optimized/assets/js/index-DarNXlp7.js",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 32,
          "content": "`})]}),Ue=({children:a,enablePreloading:e=!0,enableAssetOptimization:t=!1,loadingStrategy:i=\"idle\",fallbackComponent:r=Ne})=>{const[c,o]=d.useState(!1),[n,u]=d.useState(null);return d.useEffect(()=>{const m=async()=>{try{const p=[];e&&p.push(l(()=>import(\"../../js/PreloadingProvider.production-BeBtQJOV.js\"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]))),t&&p.push(l(()=>import(\"../../js/AssetOptimizationProvider.production-4_76W_ac.js\"),__vite__mapDeps([10,2,1,3,4,5,6,7,11,12]))),p.length>0&&await Promise.all(p),o(!0)}catch{u(error),o(!0)}};switch(i){case\"immediate\":m();break;case\"idle\":typeof window<\"u\"&&(window.navigator.userAgent.includes(\"Playwright\")||window.location.search.includes(\"playwright=true\"))?setTimeout(m,100):\"requestIdleCallback\"in window?requestIdleCallback(m,{timeout:2e3}):setTimeout(m,100);break;case\"interaction\":if(typeof window<\"u\"&&(window.navigator.userAgent.includes(\"Playwright\")||window.location.search.includes(\"playwright=true\"))){m();break}const b=()=>{m(),document.removeEventListener(\"click\",b),document.removeEventListener(\"keydown\",b),document.removeEventListener(\"scroll\",b)};document.addEventListener(\"click\",b,{passive:!0}),document.addEventListener(\"keydown\",b,{passive:!0}),document.addEventListener(\"scroll\",b,{passive:!0});const h=setTimeout(m,3e3);return()=>{document.removeEventListener(\"click\",b),document.removeEventListener(\"keydown\",b),document.removeEventListener(\"scroll\",b),clearTimeout(h)}}},[e,t,i]),c?n?s.jsx(r,{children:a}):s.jsx(d.Suspense,{fallback:s.jsx(Ve,{}),children:s.jsx(Fe,{enablePreloading:e,enableAssetOptimization:t,children:a})}):s.jsx(r,{children:a})},Fe=({children:a,enablePreloading:e,enableAssetOptimization:t})=>t&&e?s.jsx(U,{children:s.jsx(V,{enableIdlePreloading:!0,enableInteractionPreloading:!0,enableRoutePreloading:!0,idleDelay:5e3,children:a})}):t&&!e?s.jsx(U,{children:a}):!t&&e?s.jsx(V,{enableIdlePreloading:!0,enableInteractionPreloading:!0,enableRoutePreloading:!0,idleDelay:5e3,children:a}):s.jsx(s.Fragment,{children:a}),$e=(a,e={})=>{const{showCents:t=!0,compact:i=!1,currency:r=\"USD\"}=e;if(i)return a>=1e9?`$${(a/1e9).toFixed(1)}B`:a>=1e6?`$${(a/1e6).toFixed(1)}M`:a>=1e3?`$${(a/1e3).toFixed(1)}K`:`$${a.toFixed(0)}`;try{return new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:r,minimumFractionDigits:t?2:0,maximumFractionDigits:t?2:0}).format(a)}catch{return`$${a.toFixed(t?2:0)}`}},ze=(a,e=2)=>{try{return new Intl.NumberFormat(\"en-US\",{style:\"percent\",minimumFractionDigits:e,maximumFractionDigits:e}).format(a/100)}catch{return`${a.toFixed(e)}%`}},Be=(a,e={})=>{const{decimals:t=2,compact:i=!1}=e;try{return new Intl.NumberFormat(\"en-US\",{minimumFractionDigits:t,maximumFractionDigits:t,notation:i?\"compact\":\"standard\",compactDisplay:\"short\"}).format(a)}catch{if(i){if(a>=1e9)return`${(a/1e9).toFixed(1)}B`;if(a>=1e6)return`${(a/1e6).toFixed(1)}M`;if(a>=1e3)return`${(a/1e3).toFixed(1)}K`}return a.toFixed(t)}},He=a=>typeof a==\"number\"&&!isNaN(a)&&isFinite(a),Ke=a=>typeof a==\"string\"&&a.length>0,Ye=a=>Array.isArray(a),qe=a=>a!==null&&typeof a==\"object\"&&!Array.isArray(a),Ge=a=>a.length===0?0:a.reduce((e,t)=>e+t,0)/a.length,Qe=(a,e,t)=>Math.min(Math.max(a,e),t),Je=(a,e)=>{const t=Math.pow(10,e);return Math.round(a*t)/t},We=(a,e,t)=>{try{const i=Array.isArray(e)?e:e.split(\".\");let r=a;for(const c of i){if(r==null||typeof r!=\"object\")return t;r=r[c]}return r??t}catch{return t}},Xe=(a,e)=>{},F={formatCurrency:$e,formatPercentage:ze,formatNumber:Be,isValidNumber:He,isValidString:Ke,isValidArray:Ye,isValidObject:qe,mean:Ge,clamp:Qe,roundToDecimalPlaces:Je,safeAccess:We,handleDataError:Xe};class Ze{constructor(){f(this,\"loadedChunks\",new Set);f(this,\"loadingPromises\",new Map);f(this,\"utilities\");this.utilities={...F}}get current(){return this.utilities}isLoaded(e){return this.loadedChunks.has(e)}async loadChunk(e){if(!this.loadedChunks.has(e)){this.loadingPromises.has(e)||this.loadingPromises.set(e,this.importChunk(e));try{const t=await this.loadingPromises.get(e);this.loadedChunks.add(e),Object.assign(this.utilities,t)}catch{throw this.loadingPromises.delete(e),error}}}async preload(e){await Promise.all(e.map(t=>this.loadChunk(t)))}async loadForContext(e){const t=this.getRequiredChunks(e);await this.preload(t)}async getUtilities(e){return e&&e.length>0&&await this.preload(e),this.utilities}async importChunk(e){switch(e){case\"math\":return(await l(()=>import(\"../../js/visx/math-utilities-Dy-I6SXR.js\"),[])).MathUtilities;case\"chart\":return(await l(()=>import(\"../../js/chart-utilities-CeW6ryh4.js\"),[])).ChartUtilities;case\"analytics\":return(await l(()=>import(\"../../js/advanced-analytics-BrfBTapc.js\"),[])).AdvancedAnalytics;default:throw new Error(`Unknown utility chunk: ${e}`)}}getRequiredChunks(e){switch(e){case\"dashboard\":return[\"chart\",\"math\"];case\"analytics\":return[\"math\",\"chart\",\"analytics\"];case\"portfolio\":return[\"math\",\"analytics\"];case\"charts\":return[\"chart\",\"math\"];case\"reports\":return[\"math\",\"chart\"];case\"risk-analysis\":return[\"analytics\",\"math\"];default:return[]}}clear(){this.loadedChunks.clear(),this.loadingPromises.clear(),this.utilities={...F}}getStatus(){return{loadedChunks:Array.from(this.loadedChunks),loadingChunks:Array.from(this.loadingPromises.keys()),availableUtilities:Object.keys(this.utilities)}}}const v=new Ze,$t=()=>({utilities:v.current,loadChunk:v.loadChunk.bind(v),preload:v.preload.bind(v),loadForContext:v.loadForContext.bind(v),getUtilities:v.getUtilities.bind(v),isLoaded:v.isLoaded.bind(v),getStatus:v.getStatus.bind(v)});class et{constructor(){f(this,\"routeConfigs\",new Map);f(this,\"routeLoadingState\",new Map);f(this,\"preloadStrategy\",\"adaptive\");f(this,\"userProfile\",null);f(this,\"utilityManager\",v);this.initializeRouteConfigs(),this.initializeUserProfile()}initializeRouteConfigs(){this.routeConfigs.set(\"/\",{immediate:[],progressive:[],optional:[\"math\"]}),this.routeConfigs.set(\"/dashboard\",{immediate:[],progressive:[\"math\"],optional:[\"chart\"]}),this.routeConfigs.set(\"/securities\",{immediate:[\"chart\"],progressive:[\"math\"],optional:[\"analytics\"]}),this.routeConfigs.set(\"/portfolio\",{immediate:[\"math\"],progressive:[\"analytics\"],optional:[\"chart\"]}),this.routeConfigs.set(\"/analysis\",{immediate:[\"math\",\"analytics\"],progressive:[\"chart\"],optional:[]}),this.routeConfigs.set(\"/comparison\",{immediate:[\"math\",\"chart\"],progressive:[\"analytics\"],optional:[]}),this.routeConfigs.set(\"/settings\",{immediate:[],progressive:[],optional:[]}),this.routeConfigs.set(\"/ai-insights\",{immediate:[],progressive:[\"chart\"],optional:[\"math\",\"analytics\"]})}initializeUserProfile(){try{const e=localStorage.getItem(\"userBehaviorProfile\");e?this.userProfile=JSON.parse(e):this.userProfile={visitCount:1,averageSessionTime:0,commonRoutes:[\"/\"],featureUsage:{},deviceCapability:this.detectDeviceCapability(),connectionSpeed:this.detectConnectionSpeed()}}catch{this.userProfile={visitCount:1,averageSessionTime:0,commonRoutes:[\"/\"],featureUsage:{},deviceCapability:\"medium\",connectionSpeed:\"moderate\"}}}async initializeForRoute(e,t={}){const{priority:i=\"adaptive\",userInteracted:r=!1,prefetchNext:c=!1}=t,o=this.routeConfigs.get(e)||{immediate:[],progressive:[]},n=this.routeLoadingState.get(e)||new Set,u=o.immediate.filter(m=>!n.has(m)).map(m=>this.utilityManager.loadChunk(m));if(u.length>0&&(await Promise.all(u),o.immediate.forEach(m=>n.add(m))),i===\"immediate\"||i===\"adaptive\"&&this.shouldLoadProgressively(e,r)){const m=o.progressive.filter(p=>!n.has(p)).map(p=>this.utilityManager.loadChunk(p));m.length>0&&(await Promise.all(m),o.progressive.forEach(p=>n.add(p)))}else o.progressive.length>0&&this.loadProgressiveChunks(e,o.progressive,n);this.routeLoadingState.set(e,n),c&&this.prefetchNextRouteUtilities(e),this.updateUserBehavior(e,r)}async loadOptionalUtilities(e,t){const i=this.routeConfigs.get(e);if(!i||i.optional.length===0)return;const r=this.routeLoadingState.get(e)||new Set,n=({\"chart-interaction\":[\"chart\"],\"analysis-request\":[\"analytics\"],\"calculation-needed\":[\"math\"],\"advanced-features\":[\"analytics\",\"chart\"]}[t]||[]).filter(u=>i.optional.includes(u)&&!r.has(u));n.length>0&&(await Promise.all(n.map(u=>this.utilityManager.loadChunk(u))),n.forEach(u=>r.add(u)),this.routeLoadingState.set(e,r),this.userProfile&&(n.forEach(u=>{this.userProfile.featureUsage[u]=(this.userProfile.featureUsage[u]||0)+1}),this.saveUserProfile()))}async prefetchNextRouteUtilities(e){const r=({\"/\":[{route:\"/securities\",probability:.4},{route:\"/dashboard\",probability:.3},{route:\"/portfolio\",probability:.2}],\"/dashboard\":[{route:\"/securities\",probability:.3},{route:\"/portfolio\",probability:.3},{route:\"/analysis\",probability:.2}],\"/securities\":[{route:\"/analysis\",probability:.3},{route:\"/comparison\",probability:.2},{route:\"/portfolio\",probability:.2}],\"/portfolio\":[{route:\"/analysis\",probability:.4},{route:\"/comparison\",probability:.3}],\"/analysis\":[{route:\"/comparison\",probability:.3},{route:\"/securities\",probability:.2}]}[e]||[]).filter(c=>c.probability>.25);for(const{route:c}of r){const o=this.routeConfigs.get(c);if(o){const n=o.immediate.map(u=>this.utilityManager.loadChunk(u));\"requestIdleCallback\"in window?window.requestIdleCallback(()=>{Promise.allSettled(n)}):setTimeout(()=>Promise.allSettled(n),2e3)}}}shouldLoadProgressively(e,t){return this.userProfile?t||this.userProfile.deviceCapability===\"high\"||this.userProfile.visitCount>3&&this.userProfile.commonRoutes.includes(e)?!0:this.userProfile.visitCount<=2||this.userProfile.connectionSpeed===\"slow\"?!1:this.preloadStrategy===\"aggressive\":!1}loadProgressiveChunks(e,t,i){var c;const r=((c=this.userProfile)==null?void 0:c.connectionSpeed)===\"slow\"?3e3:1500;setTimeout(async()=>{const o=t.filter(n=>!i.has(n));if(o.length>0)try{await Promise.all(o.map(n=>this.utilityManager.loadChunk(n))),o.forEach(n=>i.add(n)),this.routeLoadingState.set(e,i)}catch{}},r)}updateUserBehavior(e,t){if(this.userProfile){if(this.userProfile.commonRoutes.includes(e)||(this.userProfile.commonRoutes.push(e),this.userProfile.commonRoutes.length>5&&(this.userProfile.commonRoutes=this.userProfile.commonRoutes.slice(-5))),t){const i=`${e}-interaction`;this.userProfile.featureUsage[i]=(this.userProfile.featureUsage[i]||0)+1}this.saveUserProfile()}}saveUserProfile(){if(this.userProfile)try{localStorage.setItem(\"userBehaviorProfile\",JSON.stringify(this.userProfile))}catch{}}detectDeviceCapability(){if(typeof window>\"u\")return\"medium\";const e=navigator.deviceMemory,t=navigator.hardwareConcurrency||1;return e>=8&&t>=8?\"high\":e>=4&&t>=4?\"medium\":\"low\"}detectConnectionSpeed(){if(typeof window>\"u\")return\"moderate\";const e=navigator.connection||navigator.mozConnection||navigator.webkitConnection;if(!e)return\"moderate\";const t=e.effectiveType,i=e.downlink;return t===\"4g\"&&i>=10?\"fast\":t===\"3g\"||i>=2?\"moderate\":\"slow\"}getRouteUtilizationStats(){const e={};for(const[t,i]of this.routeLoadingState.entries()){const r=this.routeConfigs.get(t)||{immediate:[],progressive:[],optional:[]},c=[...r.immediate,...r.progressive,...r.optional];e[t]={loaded:Array.from(i),pending:c.filter(o=>!i.has(o)),totalSize:this.estimateRouteSize(t,i)}}return e}estimateRouteSize(e,t){const i={math:4500,chart:5e3,analytics:3500};return`${(Array.from(t).reduce((o,n)=>o+(i[n]||0),6e3)/1024).toFixed(1)}kB`}setPreloadStrategy(e){this.preloadStrategy=e}getUserProfile(){return this.userProfile}}const tt=new et,at=({children:a,fallback:e,route:t})=>(E.useEffect(()=>{t&&tt.initializeForRoute(t,{priority:\"progressive\",prefetchNext:!0})},[t]),s.jsx(d.Suspense,{fallback:e||s.jsxs(\"div\",{className:\"page-loading\",children:[s.jsx(\"div\",{className:\"loading-spinner\"}),s.jsx(\"p\",{children:\"Loading page...\"})]}),children:a})),g=(a,e,t=[])=>{const i=d.lazy(a);return r=>s.jsx(at,{route:e,children:s.jsx(i,{...r})})},x={Dashboard:g(()=>l(()=>import(\"../../js/Dashboard-BISRAKVm.js\"),__vite__mapDeps([14,2,1,3,4,5,6,7,15,16,17,18,19,20,21,11,22,23,24,25,26,27,28,29,30,31,32])),\"/dashboard\",[\"utils-core\",\"comparative-analysis-light\"]),SimplifiedDashboard:g(()=>l(()=>import(\"../../js/SimplifiedDashboard-DkBpyt18.js\"),__vite__mapDeps([33,2,1,3,4,5,6,7,15,16,30,11,26,27,28,29,18,19,20,21,22,23,24,25,34])),\"/simplified-dashboard\",[\"utils-core\"]),Securities:g(()=>l(()=>import(\"../../js/Securities-kgTmjlxb.js\"),__vite__mapDeps([35,2,1,3,4,5,6,7,26,27,28,29,36,37])),\"/securities\",[\"utils-core\",\"utils-chart\",\"utils-math\",\"comparative-analysis-standard\",\"securities-charts\"]),Portfolio:g(()=>l(()=>import(\"../../js/Portfolio-RM0yYuj1.js\"),__vite__mapDeps([38,2,1,3,4,5,6,7,26,27,28,29,39,40,41])),\"/portfolio\",[\"utils-core\",\"utils-math\",\"utils-analytics\",\"comparative-analysis-light\"]),Analysis:g(()=>l(()=>import(\"../../js/Analysis-Dj7f0eXX.js\"),__vite__mapDeps([42,2,1,3,4,5,6,7,43,44,22,23,21,26,27,28,29,45,46,47,39,40])),\"/analysis\",[\"utils-core\",\"utils-math\",\"comparative-analysis-light\"]),Comparison:g(()=>l(()=>import(\"../../js/Comparison-C1CDN7px.js\"),__vite__mapDeps([48,2,1,3,4,5,6,7,43,44,22,23,21,26,27,28,29,45,46,47,39,40,49])),\"/comparison\",[\"utils-core\",\"utils-math\",\"utils-chart\",\"utils-analytics\",\"comparative-analysis-complete\"]),AIInsights:g(()=>l(()=>import(\"../../js/AIInsights-B6TUCuxD.js\"),__vite__mapDeps([50,2,1,3,4,5,6,7,28,29])),\"/ai-insights\",[\"utils-core\",\"comparative-analysis-light\"]),DataExplorer:g(()=>l(()=>import(\"../../js/DataExplorer-BwzHtxAN.js\"),__vite__mapDeps([51,2,1,3,4,5,6,7,52,53,54,55,56,57,58,59,21,26,27,28,29,60,61,23,30,11,39,40])),\"/data-explorer\",[]),BundleAnalytics:g(()=>l(()=>import(\"../../js/BundleAnalytics-CBSIUqpr.js\"),__vite__mapDeps([62,2,1,3,4,5,6,7,28,29,26,27])),\"/bundle-analytics\",[]),Settings:g(()=>l(()=>import(\"../../js/Settings-DNR9xj8g.js\"),__vite__mapDeps([63,2,1,3,4,5,6,7,28,29,64])),\"/settings\",[])};g(()=>l(()=>import(\"../../js/ComparisonDashboard-D3J9rA7I.js\"),__vite__mapDeps([65,2,1,3,4,5,6,7,44,22,23,21,66,67,68,60,69,26,27,28,29,45,46,70])),\"/comparison\",[\"comparative-analysis-complete\",\"utils-analytics\",\"utils-chart\"]),g(()=>l(()=>import(\"../../js/EventDashboard-DSRlqPBd.js\"),__vite__mapDeps([71,1,2,3,4,5,6,7,26,27,28,29,45,46,11])),\"/analysis\",[\"utils-chart\",\"utils-analytics\"]),g(()=>l(()=>import(\"../../js/CreditRiskDashboard-B6Zvab9B.js\"),__vite__mapDeps([72,2,1,3,4,5,6,7,73,74,75,28,29,76,11,18,19,20,21,22,23,24,25])),\"/analysis\",[\"utils-math\",\"utils-analytics\"]),g(()=>l(()=>import(\"../../js/ForecastingDashboard-DgjDL2ac.js\"),__vite__mapDeps([77,2,1,3,4,5,6,7,78,79,66,67,68,60,69,80,81,82,54,55,83,84,26,27,28,29,85])),\"/analysis\",[\"utils-math\",\"utils-analytics\",\"utils-chart\"]);g(()=>l(()=>import(\"../../js/VixComposedChart-C2RFHiJx.js\"),__vite__mapDeps([86,2,1,3,4,5,6,7])),\"/charts\",[\"utils-chart\"]),g(()=>l(()=>import(\"../../js/VixBarChart-ChzdvWbE.js\"),__vite__mapDeps([69,1,2,3,4,5,6,7])),\"/charts\",[\"utils-chart\"]),g(()=>l(()=>import(\"../../js/VixScatterPlot-ByuSH4Up.js\"),__vite__mapDeps([84,1,2,3,4,5,6,7,68,81,54,55])),\"/charts\",[\"utils-chart\",\"utils-math\"]),g(()=>l(()=>import(\"../../js/SecuritiesCharts-C0UD55Tk.js\"),__vite__mapDeps([87,1,2,3,4,5,6,7,60])),\"/securities\",[\"utils-chart\",\"visx-chart-components\"]),d.lazy(()=>l(()=>import(\"../../js/LineChart-CDcgKm6y.js\"),__vite__mapDeps([80,2,1,3,4,5,6,7,67,68,60,81,82,54,55]))),d.lazy(()=>l(()=>import(\"../../js/BarChart-CxJqIzgH.js\"),__vite__mapDeps([66,2,1,3,4,5,6,7,67,68,60,69]))),d.lazy(()=>l(()=>import(\"../../js/PriceChart-jhsraZep.js\"),__vite__mapDeps([17,2,1,3,4,5,6,7,18,19,20,21,11,22,23,24,25,26,27,28,29])));const $=x.Dashboard,it=x.Securities,st=x.Portfolio,rt=x.Analysis,z=x.Comparison,ot=x.DataExplorer,nt=x.BundleAnalytics,lt=x.AIInsights,ct=x.Settings,dt=E.lazy(()=>l(()=>import(\"../../js/Dashboard-BISRAKVm.js\"),__vite__mapDeps([14,2,1,3,4,5,6,7,15,16,17,18,19,20,21,11,22,23,24,25,26,27,28,29,30,31,32]))),B=E.lazy(()=>l(()=>import(\"../../js/SecuritiesResearch-CAyMLmzB.js\"),__vite__mapDeps([88,2,1,3,4,5,6,7,17,18,19,20,21,11,22,23,24,25,26,27,28,29,30,39,40,34]))),I=E.lazy(()=>l(()=>import(\"../../js/PortfolioManagement-C960dMW_.js\"),__vite__mapDeps([89,2,1,3,4,5,6,7,30,11,26,27,28,29,39,40,31,18,19,20,21,22,23,24,25,34]))),ut=E.lazy(()=>l(()=>import(\"../../js/Login-UAG4lLeP.js\"),__vite__mapDeps([90,2,1,3,4,5,6,7,19,20,21,11,26,27,28,29,39,40,91]))),mt=E.lazy(()=>l(()=>import(\"../../js/Register-C4XVYkfG.js\"),__vite__mapDeps([92,2,1,3,4,5,6,7,19,20,21,11,26,27,28,29,39,40,93]))),ht=()=>s.jsxs(\"div\",{className:\"loading-container\",\"data-testid\":\"loading-spinner\",children:[s.jsx(\"div\",{className:\"loading-spinner\",\"aria-label\":\"Loading page...\",children:s.jsx(\"div\",{className:\"spinner\"})}),s.jsx(\"p\",{children:\"Loading...\"})]});function pt(){return s.jsx(Ue,{enablePreloading:!0,enableAssetOptimization:typeof process<\"u\"&&!1,loadingStrategy:\"idle\",children:s.jsxs(Me,{children:[s.jsx(\"div\",{className:\"app\",children:s.jsx(d.Suspense,{fallback:s.jsx(ht,{}),children:s.jsxs(fe,{children:[s.jsx(y,{path:\"/login\",element:s.jsx(ut,{})}),s.jsx(y,{path:\"/register\",element:s.jsx(mt,{})}),s.jsxs(y,{path:\"/\",element:s.jsx(Le,{}),children:[s.jsx(y,{index:!0,element:s.jsx($,{})}),s.jsx(y,{path:\"dashboard\",element:s.jsx($,{})}),s.jsx(y,{path:\"dashboard/detailed\",element:s.jsx(dt,{})}),s.jsx(y,{path:\"securities\",element:s.jsx(it,{})}),s.jsx(y,{path:\"securities/search\",element:s.jsx(B,{})}),s.jsx(y,{path:\"securities/research\",element:s.jsx(B,{})}),s.jsx(y,{path:\"portfolio\",element:s.jsx(st,{})}),s.jsx(y,{path:\"portfolio/manage\",element:s.jsx(I,{})}),s.jsx(y,{path:\"portfolio/add-stock\",element:s.jsx(I,{})}),s.jsx(y,{path:\"portfolio/performance\",element:s.jsx(I,{})}),s.jsx(y,{path:\"analysis\",element:s.jsx(rt,{})}),s.jsx(y,{path:\"comparison\",element:s.jsx(z,{})}),s.jsx(y,{path:\"comparison/:symbol\",element:s.jsx(z,{})}),s.jsx(y,{path:\"data-explorer\",element:s.jsx(ot,{})}),s.jsx(y,{path:\"bundle-analytics\",element:s.jsx(nt,{})}),s.jsx(y,{path:\"ai-insights\",element:s.jsx(lt,{})}),s.jsx(y,{path:\"settings\",element:s.jsx(ct,{})})]}),s.jsx(y,{path:\"*\",element:s.jsxs(\"div\",{className:\"not-found\",children:[s.jsx(\"h1\",{children:\"404 - Page Not Found\"}),s.jsx(\"p\",{children:\"The page you are looking for does not exist.\"})]})})]})})}),!1]})})}function H(a){return a.replaceAll(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function K(a){return new RegExp(a)}const yt=1024,ft=1024,Y=yt*ft,q=100;class gt{constructor(e={}){f(this,\"cache\",new Map);f(this,\"accessOrder\",new Set);f(this,\"stats\",{hits:0,misses:0,evictions:0,compressionSaves:0});this.options=e,this.options={maxSize:50,defaultTTL:300*1e3,maxEntries:1e3,compressionThreshold:10240,enableCompression:!0,...e}}set(e,t,i){const r=Date.now()+(i??this.options.defaultTTL),c=JSON.stringify(t),o=new Blob([c]).size;let n=t,u=!1,m=o;if(this.options.enableCompression&&o>this.options.compressionThreshold)try{n=this.compress(c),m=new Blob([n]).size,u=!0,this.stats.compressionSaves+=o-m}catch{n=t}const p={data:n,timestamp:Date.now(),expiry:r,hits:0,size:m,compressed:u};this.cache.has(e)&&this.accessOrder.delete(e),this.cache.set(e,p),this.accessOrder.add(e),this.evictIfNecessary()}get(e){const t=this.cache.get(e);if(!t)return this.stats.misses++,null;if(Date.now()>t.expiry)return this.delete(e),this.stats.misses++,null;if(this.accessOrder.delete(e),this.accessOrder.add(e),t.hits++,this.stats.hits++,t.compressed)try{const i=this.decompress(t.data);return JSON.parse(i)}catch{return this.delete(e),this.stats.misses++,null}return t.data}has(e){const t=this.cache.get(e);return t?Date.now()>t.expiry?(this.delete(e),!1):!0:!1}delete(e){const t=this.cache.delete(e);return this.accessOrder.delete(e),t}clear(){this.cache.clear(),this.accessOrder.clear(),this.stats={hits:0,misses:0,evictions:0,compressionSaves:0}}getStats(){const e=this.stats.hits+this.stats.misses,t=[...this.cache.values()].reduce((r,c)=>r+c.size,0),i=t+this.stats.compressionSaves;return{totalEntries:this.cache.size,totalSize:Math.round(t/Y*q)/q,hitRate:e>0?this.stats.hits/e:0,missRate:e>0?this.stats.misses/e:0,compressionRatio:i>0?t/i:1,evictions:this.stats.evictions}}keys(){return[...this.cache.keys()]}getKeysByPattern(e){return[...this.cache.keys()].filter(t=>e.test(t))}invalidatePattern(e){const t=this.getKeysByPattern(e);return t.forEach(i=>this.delete(i)),t.length}touch(e,t){const i=this.cache.get(e);return i?(i.expiry=Date.now()+(t??this.options.defaultTTL),!0):!1}async getOrSet(e,t,i){const r=this.get(e);if(r!==null)return r;const c=await t();return this.set(e,c,i),c}evictIfNecessary(){const e=[...this.cache.values()].reduce((i,r)=>i+r.size,0),t=this.options.maxSize*Y;e>t&&this.evictLRU(),this.cache.size>this.options.maxEntries&&this.evictLRU()}evictLRU(){const e=this.accessOrder.values().next().value;e&&(this.delete(e),this.stats.evictions++)}compress(e){return btoa(e)}decompress(e){return atob(e)}}const G=new gt({maxSize:100,defaultTTL:600*1e3,maxEntries:2e3,enableCompression:!0}),D={comparativeAnalysis:(a,e)=>`comparative:${a}:${e}`,sectorAnalysis:(a,e)=>`sector:${a}:${e}`,portfolioAnalysis:a=>`portfolio:${a}`,priceData:(a,e)=>`price:${a}:${e}`,fundamentals:(a,e)=>`fundamentals:${a}:${e}`,symbolPattern:a=>K(`^[^:]+:${H(a)}:`),sectorPattern:a=>K(`^sector:[^:]+:${H(a)}`)},_t={currentSymbol:\"AAPL\",previousSymbol:null,symbolHistory:[\"AAPL\"],bookmarkedSymbols:[\"AAPL\",\"MSFT\",\"GOOGL\",\"AMZN\",\"TSLA\"],isLoading:!1,error:null};function vt(a,e){switch(e.type){case\"SET_SYMBOL\":return{...a,previousSymbol:a.currentSymbol,currentSymbol:e.payload.symbol,error:null};case\"ADD_TO_HISTORY\":return a.symbolHistory.includes(e.payload)?{...a,symbolHistory:[e.payload,...a.symbolHistory.filter(t=>t!==e.payload)].slice(0,20)}:{...a,symbolHistory:[e.payload,...a.symbolHistory].slice(0,20)};case\"TOGGLE_BOOKMARK\":return a.bookmarkedSymbols.includes(e.payload)?{...a,bookmarkedSymbols:a.bookmarkedSymbols.filter(t=>t!==e.payload)}:{...a,bookmarkedSymbols:[...a.bookmarkedSymbols,e.payload]};case\"CLEAR_HISTORY\":return{...a,symbolHistory:[a.currentSymbol]};case\"SET_LOADING\":return{...a,isLoading:e.payload};case\"SET_ERROR\":return{...a,error:e.payload,isLoading:!1};case\"CLEAR_ERROR\":return{...a,error:null};default:return a}}const bt=d.createContext(null);function k(a){const e=a.toUpperCase().trim();return e?/^[A-Z]{1,5}$/.test(e)?{isValid:!0}:{isValid:!1,error:\"Symbol must be 1-5 letters\"}:{isValid:!1,error:\"Symbol cannot be empty\"}}function St({children:a,initialSymbol:e=\"AAPL\"}){const[t,i]=d.useReducer(vt,{..._t,currentSymbol:e,symbolHistory:[e]}),r=ge();d.useEffect(()=>{try{const h=localStorage.getItem(\"finance-ai-symbol-state\");if(h){const _=JSON.parse(h);_.currentSymbol&&i({type:\"SET_SYMBOL\",payload:{symbol:_.currentSymbol}}),_.symbolHistory&&_.symbolHistory.forEach(S=>{i({type:\"ADD_TO_HISTORY\",payload:S})}),_.bookmarkedSymbols&&_.bookmarkedSymbols.forEach(S=>{i({type:\"TOGGLE_BOOKMARK\",payload:S})})}}catch{}},[]),d.useEffect(()=>{try{const h={currentSymbol:t.currentSymbol,symbolHistory:t.symbolHistory,bookmarkedSymbols:t.bookmarkedSymbols};localStorage.setItem(\"finance-ai-symbol-state\",JSON.stringify(h))}catch{}},[t.currentSymbol,t.symbolHistory,t.bookmarkedSymbols]);const c=d.useCallback(h=>{r.invalidateQueries({predicate:S=>{const P=S.queryKey;return Array.isArray(P)&&P.includes(h)}});const _=D.symbolPattern(h);G.invalidatePattern(_)},[r]),o=d.useCallback((h,_=\"manual\")=>{const S=k(h);if(!S.isValid){i({type:\"SET_ERROR\",payload:S.error??\"Invalid symbol\"});return}const P=h.toUpperCase().trim();P!==t.currentSymbol&&(i({type:\"SET_LOADING\",payload:!0}),i({type:\"SET_SYMBOL\",payload:{symbol:P,source:_}}),i({type:\"ADD_TO_HISTORY\",payload:P}),t.currentSymbol&&c(t.currentSymbol),i({type:\"SET_LOADING\",payload:!1}))},[t.currentSymbol,c]),n=d.useCallback(h=>{k(h).isValid&&i({type:\"ADD_TO_HISTORY\",payload:h.toUpperCase().trim()})},[]),u=d.useCallback(h=>{k(h).isValid&&i({type:\"TOGGLE_BOOKMARK\",payload:h.toUpperCase().trim()})},[]),m=d.useCallback(()=>{i({type:\"CLEAR_HISTORY\"})},[]),p=d.useCallback(()=>{i({type:\"CLEAR_ERROR\"})},[]),L=d.useCallback(h=>{const _=[D.comparativeAnalysis(h,JSON.stringify({})),D.sectorAnalysis(h,\"Technology\"),D.priceData(h,\"1d\"),D.fundamentals(h,\"annual\")],S=D.symbolPattern(h),ee=G.keys().filter(te=>S.test(te));return[..._,...ee]},[]),b=d.useMemo(()=>({...t,setSymbol:o,addToHistory:n,toggleBookmark:u,clearHistory:m,clearError:p,getSymbolCacheKeys:L,invalidateSymbolCache:c}),[t,o,n,u,m,p,L,c]);return s.jsx(bt.Provider,{value:b,children:a})}const T={STALE_TIME_MS:30*1e3,MAX_RETRY_DELAY_MS:3e4,RETRY_BASE_DELAY_MS:1e3,BACKOFF_MULTIPLIER:2,MAX_RETRIES:3,MUTATION_RETRIES:1};function Et(){return new Pe({defaultOptions:{queries:{staleTime:T.STALE_TIME_MS,gcTime:300*1e3,retry:(a,e)=>{if(e&&typeof e==\"object\"&&\"status\"in e){const t=e.status;if(t===401||t===403)return!1}return a<T.MAX_RETRIES},retryDelay:a=>Math.min(T.RETRY_BASE_DELAY_MS*T.BACKOFF_MULTIPLIER**a,T.MAX_RETRY_DELAY_MS),refetchOnWindowFocus:!0,refetchOnReconnect:!1},mutations:{retry:T.MUTATION_RETRIES,retryDelay:T.RETRY_BASE_DELAY_MS}}})}class xt{constructor(){f(this,\"loadedDomains\",new Set);f(this,\"domainCache\",new Map)}async loadDomain(e){if(this.domainCache.has(e))return this.domainCache.get(e);try{const t=await this.importDomain(e);return this.domainCache.set(e,t),this.loadedDomains.add(e),t}catch{throw new Error(`Query domain '${e}' could not be loaded`)}}async importDomain(e){switch(e){case\"securities\":return l(()=>import(\"../../js/securities-CtsqQpmG.js\"),[]);case\"prices\":return l(()=>import(\"../../js/prices-BC8ItLvJ.js\"),[]);case\"fundamentals\":return l(()=>import(\"../../js/fundamentals-C-mZIXYy.js\"),[]);case\"technical\":return l(()=>import(\"../../js/technical-Czql7Lvf.js\"),[]);case\"ai\":return l(()=>import(\"../../js/ai-jNfZQtps.js\"),[]);default:throw new Error(`Unknown query domain: ${e}`)}}isLoaded(e){return this.loadedDomains.has(e)}getLoadedDomains(){return Array.from(this.loadedDomains)}clearCache(){this.domainCache.clear(),this.loadedDomains.clear()}}const A=Et(),Pt=new xt,Z=a=>{if(a&&typeof a==\"object\"&&\"status\"in a)switch(a.status){case 401:window.location.href=\"/login\";break}};A.setMutationDefaults([\"auth\",\"login\"],{onError:Z});A.setMutationDefaults([\"auth\",\"logout\"],{onError:Z});A.setQueryDefaults([\"auth\"],{retry:(a,e)=>{if(e&&typeof e==\"object\"&&\"status\"in e){const t=e.status;if(t===401||t===403)return!1}return a<2}});class Tt{constructor(){f(this,\"cache\",new Map);f(this,\"loadedServices\",new Set);f(this,\"preloadStrategies\",{\"dashboard-mode\":[\"core\",\"validation\",\"market\",\"portfolio\"],\"analytics-mode\":[\"core\",\"validation\",\"analytics\",\"forecasting\",\"risk\"],\"portfolio-mode\":[\"core\",\"validation\",\"portfolio\",\"risk\"],\"market-mode\":[\"core\",\"validation\",\"market\",\"analytics\"],\"export-mode\":[\"core\",\"validation\",\"export\"]});f(this,\"services\",{core:[{id:\"query-client-core\",loader:async()=>({queryClient:A,queryDomainLoader:Pt,alreadyLoaded:!0})},{id:\"auth-services\",loader:()=>l(()=>import(\"../../js/auth-DoOawKb9.js\"),__vite__mapDeps([20,21,1,2,3,4,5,6,7,11]))},{id:\"basic-validation\",loader:()=>l(()=>import(\"../../js/core-Cm2jqr1a.js\"),__vite__mapDeps([94,25]))}],validation:[{id:\"portfolio-validation\",loader:()=>l(()=>import(\"../../js/portfolioValidator-CQubpkzp.js\"),__vite__mapDeps([95,25])),preloadContexts:[\"dashboard-mode\",\"portfolio-mode\"]},{id:\"market-validation\",loader:()=>l(()=>import(\"../../js/marketValidator-DTXGp46r.js\"),__vite__mapDeps([96,25])),preloadContexts:[\"dashboard-mode\",\"market-mode\"]},{id:\"financial-validation\",loader:()=>l(()=>import(\"../../js/financialValidators-Cb37Plo7.js\"),__vite__mapDeps([24,25])),preloadContexts:[\"analytics-mode\"]}],analytics:[{id:\"analytics-core\",loader:()=>l(()=>import(\"../../js/core-C4C_-LRZ.js\"),__vite__mapDeps([97,1,2,3,4,5,6,7])),preloadContexts:[\"analytics-mode\"]},{id:\"analytics-domains\",loader:()=>l(()=>import(\"../../js/domains-BtaAES8m.js\"),__vite__mapDeps([75,1,2,3,4,5,6,7])),dependencies:[\"analytics-core\"]}],market:[{id:\"openbb-api-client\",loader:()=>l(()=>import(\"../../js/openbbService-B9aVnx_Y.js\"),__vite__mapDeps([59,21,1,2,3,4,5,6,7])),preloadContexts:[\"dashboard-mode\",\"market-mode\"]},{id:\"market-data-services\",loader:()=>l(()=>import(\"../../js/market-data-CEjLab09.js\"),[]),dependencies:[\"openbb-api-client\"]},{id:\"real-time-services\",loader:()=>l(()=>import(\"../../js/websocket-qC_zSTq0.js\"),__vite__mapDeps([98,11])),preloadContexts:[\"dashboard-mode\"]}],portfolio:[{id:\"portfolio-analytics\",loader:()=>l(()=>import(\"../../js/portfolioOptimization-DA0ieXY0.js\"),[]),preloadContexts:[\"dashboard-mode\",\"portfolio-mode\"]},{id:\"portfolio-data-services\",loader:()=>l(()=>import(\"../../js/portfolio-data-MiraEQQK.js\"),[]),dependencies:[\"portfolio-analytics\"]}],forecasting:[{id:\"forecasting-models\",loader:()=>l(()=>import(\"../../js/forecasting-DoG2if65.js\"),[]),preloadContexts:[\"analytics-mode\"]},{id:\"prediction-services\",loader:()=>l(()=>import(\"../../js/predictionModels-lYeemE7T.js\"),[]),dependencies:[\"forecasting-models\"]}],risk:[{id:\"risk-analytics\",loader:()=>l(()=>import(\"../../js/riskAnalysis-DGHurBuW.js\"),__vite__mapDeps([99,100])),preloadContexts:[\"analytics-mode\",\"portfolio-mode\"]},{id:\"credit-risk\",loader:()=>l(()=>import(\"../../js/creditRisk-DNFDXcxJ.js\"),[]),dependencies:[\"risk-analytics\"]}],export:[{id:\"report-generation\",loader:()=>l(()=>import(\"../../js/reportGeneration-BYsmFF2U.js\"),[]),preloadContexts:[\"export-mode\"]},{id:\"data-export-services\",loader:()=>l(()=>import(\"../../js/export-services-C6Cg6KjL.js\"),[]),dependencies:[\"report-generation\"]}],advanced:[{id:\"advanced-analytics\",loader:()=>l(()=>import(\"../../js/advanced-BLGl33a5.js\"),[])},{id:\"machine-learning-services\",loader:()=>l(()=>import(\"../../js/ml-services-cANsKKye.js\"),[]),dependencies:[\"advanced-analytics\"]}]})}async loadForContext(e){const t=this.preloadStrategies[e];if(!t)return;const i=t.flatMap(r=>{var c;return((c=this.services[r])==null?void 0:c.map(o=>this.loadService(o.id)))||[]});await Promise.allSettled(i)}async loadService(e){var r;if(this.cache.has(e))return this.cache.get(e);const t=this.findServiceById(e);if(!t)throw new Error(`Data service not found: ${e}`);(r=t.dependencies)!=null&&r.length&&await Promise.all(t.dependencies.map(c=>this.loadService(c)));const i=this.loadServiceWithErrorHandling(t);this.cache.set(e,i);try{const c=await i;return this.loadedServices.add(e),c}catch{throw this.cache.delete(e),error}}async preloadForContext(e){if(!this.preloadStrategies[e])return;Object.values(this.services).flat().filter(r=>{var c;return((c=r.preloadContexts)==null?void 0:c.includes(e))&&!this.loadedServices.has(r.id)}).forEach(r=>{this.loadService(r.id).catch(c=>console.warn(`Failed to preload service ${r.id}:`,c))})}getLoadingStatus(e){const t=this.services[e]||[];return{loaded:t.map(i=>i.id).filter(i=>this.loadedServices.has(i)),pending:t.map(i=>i.id).filter(i=>this.cache.has(i)&&!this.loadedServices.has(i)),failed:t.map(i=>i.id).filter(i=>!this.cache.has(i)&&!this.loadedServices.has(i))}}clearCache(e){if(!e){this.cache.clear(),this.loadedServices.clear();return}if(this.cache.has(e)){this.cache.delete(e),this.loadedServices.delete(e);return}const t=this.services[e];t&&t.forEach(i=>{this.cache.delete(i.id),this.loadedServices.delete(i.id)})}isServiceLoaded(e){return this.loadedServices.has(e)}getLoadedServices(){return Array.from(this.loadedServices)}async loadServiceWithErrorHandling(e){try{return await e.loader()}catch{return{__serviceError:!0,__serviceId:e.id,__error:error}}}findServiceById(e){for(const t of Object.values(this.services)){const i=t.find(r=>r.id===e);if(i)return i}return null}}const C=new Tt,R={DASHBOARD:\"dashboard-mode\",ANALYTICS:\"analytics-mode\",PORTFOLIO:\"portfolio-mode\",MARKET:\"market-mode\",EXPORT:\"export-mode\"},Ct=d.createContext(null),Dt=a=>a.includes(\"/dashboard\")?R.DASHBOARD:a.includes(\"/analytics\")?R.ANALYTICS:a.includes(\"/portfolio\")?R.PORTFOLIO:a.includes(\"/market\")?R.MARKET:a.includes(\"/export\")||a.includes(\"/reports\")?R.EXPORT:null;function Rt({children:a,enableContextualPreloading:e=!0,preloadingDelay:t=100}){const{pathname:i}=Ie(),r=d.useRef(),c=d.useRef(null);d.useEffect(()=>{if(!e)return;const n=Dt(i);n&&n!==c.current&&(c.current=n,r.current&&clearTimeout(r.current),r.current=setTimeout(()=>{C.preloadForContext(n).catch(u=>console.warn(`Failed to preload services for context ${n}:`,u))},t))},[i,e,t]),d.useEffect(()=>()=>{r.current&&clearTimeout(r.current)},[]);const o={loadService:n=>C.loadService(n),loadForContext:n=>C.loadForContext(n),preloadForContext:n=>C.preloadForContext(n),isServiceLoaded:n=>C.isServiceLoaded(n),getLoadingStatus:n=>C.getLoadingStatus(n),clearCache:n=>C.clearCache(n)};return s.jsx(Ct.Provider,{value:o,children:a})}function At({children:a}){return s.jsx(_e,{client:A,children:s.jsx(Rt,{enableContextualPreloading:!1,children:s.jsxs(St,{children:[a,!1]})})})}ve.createRoot(document.querySelector(\"#root\")).render(s.jsx(E.StrictMode,{children:s.jsx(At,{children:s.jsx(be,{future:{v7_startTransition:!0,v7_relativeSplatPath:!0},children:s.jsx(Oe,{children:s.jsx(pt,{})})})})}));export{D as C,Vt as F,ke as P,bt as S,Ut as V,$t as a,Ft as b,G as g,tt as r,Ie as u};",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/main-phase7.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/main-phase7.tsx",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 191,
          "content": "console.error('[Phase7] Application error:', error, errorInfo);",
          "type": "error"
        },
        {
          "line_number": 195,
          "content": "console.group('[Phase7] Error Details');",
          "type": "group"
        },
        {
          "line_number": 196,
          "content": "console.error('Error:', error);",
          "type": "error"
        },
        {
          "line_number": 197,
          "content": "console.error('Error Info:', errorInfo);",
          "type": "error"
        },
        {
          "line_number": 198,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/phase7-bundle-optimization-demo.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/phase7-bundle-optimization-demo.ts",
      "console_count": 37,
      "console_lines": [
        {
          "line_number": 71,
          "content": "console.error('\u274c Phase 7 demonstration failed:', error);",
          "type": "error"
        },
        {
          "line_number": 80,
          "content": "console.log('-'.repeat(40));",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log('-'.repeat(40));",
          "type": "log"
        },
        {
          "line_number": 150,
          "content": "console.log('-'.repeat(40));",
          "type": "log"
        },
        {
          "line_number": 178,
          "content": "console.log(`   \ud83d\udce6 Bundles loaded: ${bundleStatus.loaded.length} (${context.expectedSize})`);",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log(`   \ud83d\udccb Active bundles: ${bundleStatus.loaded.slice(0, 3).join(', ')}${bundleStatus.loaded.length > 3 ? '...' : ''}`);",
          "type": "log"
        },
        {
          "line_number": 193,
          "content": "console.log('-'.repeat(40));",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log(`   \u26a1 Response time: ${triggerTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log('-'.repeat(40));",
          "type": "log"
        },
        {
          "line_number": 231,
          "content": "console.log(`\u2705 Validation completed in ${validationTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log(`   Bundle Reduction: ${result.actualReduction.toFixed(1)}% (Target: ${result.targetReduction}-75%)`);",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log(`   Load Time Improvement: ${result.loadTimeImprovement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.log(`   Network Savings: ${(result.networkSavings / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 239,
          "content": "console.log(`   Caching Efficiency: ${result.cachingEfficiency.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 240,
          "content": "console.log(`   User Experience Score: ${result.userExperienceScore.toFixed(1)}/100`);",
          "type": "log"
        },
        {
          "line_number": 245,
          "content": "console.log(`   ${tier.toUpperCase()}: ${tierResult.reduction.toFixed(1)}% reduction, ${tierResult.loadTime.toFixed(2)}ms avg load time`);",
          "type": "log"
        },
        {
          "line_number": 261,
          "content": "console.log('-'.repeat(40));",
          "type": "log"
        },
        {
          "line_number": 270,
          "content": "console.log('='.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 272,
          "content": "console.log(`   Performance Gain: ${optimizationStatus.performanceGain.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 273,
          "content": "console.log(`   Bundle Reduction: ${metrics.bundleReductionPercent.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.log(`   Average Load Time: ${metrics.averageLoadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 276,
          "content": "console.log(`   Cache Hit Rate: ${(metrics.cacheHitRate * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 278,
          "content": "console.log(`   User Experience Score: ${metrics.userExperienceScore.toFixed(1)}/100`);",
          "type": "log"
        },
        {
          "line_number": 283,
          "content": "console.log(`   ${strategy}: ${count} requests (${percentage.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 288,
          "content": "console.log(`   Bundle Reduction: ${this.validationResults.actualReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log(`   Optimized Size: ${((79603 - this.validationResults.networkSavings) / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 291,
          "content": "console.log(`   Savings: ${(this.validationResults.networkSavings / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 294,
          "content": "console.log('   \u2705 Progressive loading architecture (Essential \u2192 Standard \u2192 Advanced)');",
          "type": "log"
        },
        {
          "line_number": 295,
          "content": "console.log('   \u2705 Context-aware optimization (Dashboard 15-20kB vs Analytics 30-35kB)');",
          "type": "log"
        },
        {
          "line_number": 296,
          "content": "console.log('   \u2705 Smart loading triggers (hover, viewport, interaction)');",
          "type": "log"
        },
        {
          "line_number": 298,
          "content": "console.log(`\\n\u23f1\ufe0f  TOTAL DEMO TIME: ${totalDemoTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 300,
          "content": "console.log(`   \ud83d\udce6 Bundle Reduction: ${this.validationResults?.actualReduction.toFixed(1) || '0'}%`);",
          "type": "log"
        },
        {
          "line_number": 301,
          "content": "console.log(`   \u26a1 Load Time Improvement: ${this.validationResults?.loadTimeImprovement.toFixed(1) || '0'}%`);",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log(`   \ud83c\udf10 Network Savings: ${((this.validationResults?.networkSavings || 0) / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 306,
          "content": "console.log('\\n' + phase7Validator.generateValidationReport());",
          "type": "log"
        },
        {
          "line_number": 343,
          "content": "console.error('\u274c Quick demo failed:', error);",
          "type": "error"
        },
        {
          "line_number": 371,
          "content": "console.error('Phase 7 demo auto-run failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test-chart-import.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test-chart-import.js",
      "console_count": 29,
      "console_lines": [
        {
          "line_number": 7,
          "content": "console.log('\ud83d\udd0d Testing OpenBBChart dynamic import...');",
          "type": "log"
        },
        {
          "line_number": 12,
          "content": "console.log('\u23f3 Starting import test...');",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log('\u2705 Import successful!');",
          "type": "log"
        },
        {
          "line_number": 21,
          "content": "console.log(`\u23f1\ufe0f  Load time: ${loadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 22,
          "content": "console.log('\ud83d\udce6 Module exports:', Object.keys(module));",
          "type": "log"
        },
        {
          "line_number": 23,
          "content": "console.log('\ud83c\udfaf Default export exists:', !!module.default);",
          "type": "log"
        },
        {
          "line_number": 24,
          "content": "console.log('\ud83c\udfaf Named export exists:', !!module.OpenBBChart);",
          "type": "log"
        },
        {
          "line_number": 28,
          "content": "console.log('\ud83d\udd0d Default export type:', typeof module.default);",
          "type": "log"
        },
        {
          "line_number": 29,
          "content": "console.log('\ud83d\udd0d Default export name:', module.default.name || 'anonymous');",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "console.log('\ud83d\udd0d Named export type:', typeof module.OpenBBChart);",
          "type": "log"
        },
        {
          "line_number": 34,
          "content": "console.log('\ud83d\udd0d Named export name:', module.OpenBBChart.name || 'anonymous');",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.error('\u274c Import failed!');",
          "type": "error"
        },
        {
          "line_number": 41,
          "content": "console.error('Error details:', error);",
          "type": "error"
        },
        {
          "line_number": 42,
          "content": "console.error('Stack trace:', error.stack);",
          "type": "error"
        },
        {
          "line_number": 49,
          "content": "console.log('\\n\ud83d\udd04 Testing with retry logic (simulating LazyCharts.Advanced)...');",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log(`\ud83d\udcdd Attempt ${retryCount + 1}/${retryAttempts + 1}`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log(`\u2705 Retry test successful on attempt ${retryCount + 1}!`);",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log(`\u23f1\ufe0f  Load time: ${loadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.error(`\u274c All ${retryAttempts + 1} attempts failed!`);",
          "type": "error"
        },
        {
          "line_number": 72,
          "content": "console.error('This reproduces the AdvancedChartLoadError');",
          "type": "error"
        },
        {
          "line_number": 73,
          "content": "console.error('Final error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 79,
          "content": "console.warn(`\u26a0\ufe0f  Attempt ${retryCount} failed, retrying in ${delay.toFixed(0)}ms...`);",
          "type": "warn"
        },
        {
          "line_number": 80,
          "content": "console.warn(`Error: ${error.message}`);",
          "type": "warn"
        },
        {
          "line_number": 89,
          "content": "console.log('\ud83d\ude80 Starting chart import diagnostics...\\n');",
          "type": "log"
        },
        {
          "line_number": 97,
          "content": "console.log('\\n\ud83d\udcca Test Results Summary:');",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log('Direct import:', result1.success ? '\u2705 PASS' : '\u274c FAIL');",
          "type": "log"
        },
        {
          "line_number": 99,
          "content": "console.log('Retry import:', result2.success ? '\u2705 PASS' : '\u274c FAIL');",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log('\\n\ud83c\udfc1 Chart import diagnostics complete!', results);",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.error('\ud83d\udea8 Test suite failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/validate-essential-bundle.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/validate-essential-bundle.ts",
      "console_count": 29,
      "console_lines": [
        {
          "line_number": 31,
          "content": "console.log('\ud83c\udfaf ESSENTIAL TIER BUNDLE VALIDATION');",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log('==================================');",
          "type": "log"
        },
        {
          "line_number": 50,
          "content": "console.log('\u2705 Essential Tier Components Loaded');",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log(`   - Core Bundle: ${essentialComponents.bundle ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log(`   - Core Component: ${essentialComponents.core ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`   - UI Components: ${essentialComponents.ui ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log(`   - Router: ${essentialComponents.router ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log('\u2705 Optimized Analytics Registry Loaded');",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log(`   - Registry: ${optimizedComponents.registry ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`   - Wrapper: ${optimizedComponents.wrapper ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`   - Preloader: ${optimizedComponents.preloader ? 'OK' : 'FAIL'}`);",
          "type": "log"
        },
        {
          "line_number": 64,
          "content": "console.log('\u2705 Progressive Loading: OK');",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log('\u26a0\ufe0f  Progressive Loading: Expected to fail in build context');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log('\ud83d\udcca BUNDLE TARGET METRICS');",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log('========================');",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log('Original Bundle: 7.42kB (analytics-lazy-CXrmrUxh.js)');",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log('Target Bundle: \u22643kB (Essential Tier)');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log('Target Reduction: 60%+');",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log('\ud83d\ude80 OPTIMIZATION STRATEGY');",
          "type": "log"
        },
        {
          "line_number": 77,
          "content": "console.log('========================');",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log('1. Essential Core: <1kB (basic components, hooks)');",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log('2. Essential UI: <1kB (minimal UI primitives)');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log('3. Essential Routes: <1kB (routing, navigation)');",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log('4. Progressive Loading: Defers heavy components');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log('\u2705 Essential Bundle Validation Complete:', result);",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.error('\u274c Essential Bundle Validation Failed:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/core/progressive/Phase7ProgressiveOrchestrator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/core/progressive/Phase7ProgressiveOrchestrator.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 476,
          "content": "console.error(`[Phase7Orchestrator] Loading failed for ${this.config.componentName}:`, error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/core/progressive/UPAPerformanceMonitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/core/progressive/UPAPerformanceMonitor.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 218,
          "content": "console.error(`UPA: Component ${componentId}:${variant} failed to load (${loadTime.toFixed(1)}ms)`);",
          "type": "error"
        },
        {
          "line_number": 220,
          "content": "console.warn(`UPA: Component ${componentId}:${variant} slow load (${loadTime.toFixed(1)}ms)`);",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/core/progressive/UPABundleConfig.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/core/progressive/UPABundleConfig.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 255,
          "content": "pure_funcs: ['console.log', 'console.debug']",
          "type": "log"
        },
        {
          "line_number": 408,
          "content": "console.warn('UPA bundle analysis file write failed (browser environment)');",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/core/progressive/UPAProgressiveComponent.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/core/progressive/UPAProgressiveComponent.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 153,
          "content": "console.error(`UPA: Failed to load ${finalComponentId}:${variant}:`, error);",
          "type": "error"
        },
        {
          "line_number": 179,
          "content": "console.error('UPA: Initial variant loading failed:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/core/progressive/UPACore.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/core/progressive/UPACore.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 463,
          "content": "console.error(`Failed to load ${definition.id}:${variant} from ${importPath}:`, error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/test/vitest-globals-validation.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/vitest-globals-validation.test.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 32,
          "content": "console.log('\u2705 All vitest globals are properly configured and available');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/setup.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/setup.ts",
      "console_count": 10,
      "console_lines": [
        {
          "line_number": 148,
          "content": "console.error('Cleanup error:', error);",
          "type": "error"
        },
        {
          "line_number": 934,
          "content": "console.warn = vi.fn();",
          "type": "warn"
        },
        {
          "line_number": 936,
          "content": "console.error = vi.fn();",
          "type": "error"
        },
        {
          "line_number": 938,
          "content": "console.log = vi.fn();",
          "type": "log"
        },
        {
          "line_number": 940,
          "content": "console.info = vi.fn();",
          "type": "info"
        },
        {
          "line_number": 942,
          "content": "console.debug = vi.fn();",
          "type": "debug"
        },
        {
          "line_number": 944,
          "content": "// Only restore console.error for actual test failures",
          "type": "error"
        },
        {
          "line_number": 946,
          "content": "if (vi.isMockFunction(console.error)) {",
          "type": "error"
        },
        {
          "line_number": 947,
          "content": "console.error = originalConsole.error;",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/framework-validation.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/framework-validation.test.tsx",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 206,
          "content": "console.log('Test log');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.warn('Test warning');",
          "type": "warn"
        },
        {
          "line_number": 208,
          "content": "console.error('Test error');",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/integration/user-workflows.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/user-workflows.test.tsx",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 322,
          "content": "console.error('Registration failed:', error);",
          "type": "error"
        },
        {
          "line_number": 336,
          "content": "console.error('Login failed:', error);",
          "type": "error"
        },
        {
          "line_number": 505,
          "content": "console.error('Search failed:', error);",
          "type": "error"
        },
        {
          "line_number": 677,
          "content": "console.error('Failed to add position:', error);",
          "type": "error"
        },
        {
          "line_number": 891,
          "content": "console.error('AI analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 1041,
          "content": "console.error('Failed to save preferences:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/integration/ContextAwareOptimizationIntegration.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/ContextAwareOptimizationIntegration.test.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 834,
          "content": "console.log('\ud83c\udfaf SUBAGENT 8 Integration Validation Complete:', integrationReport);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/integration/business-processes.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/business-processes.test.tsx",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 203,
          "content": "console.error('Performance calculation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 295,
          "content": "console.error('Rebalance failed:', error);",
          "type": "error"
        },
        {
          "line_number": 398,
          "content": "console.error('Risk calculation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 502,
          "content": "console.error('Trade validation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 704,
          "content": "console.error('Market data processing failed:', error);",
          "type": "error"
        },
        {
          "line_number": 855,
          "content": "console.error('Financial calculations failed:', error);",
          "type": "error"
        },
        {
          "line_number": 982,
          "content": "console.error('Validation test failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/integration/enhanced-user-workflows.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/integration/enhanced-user-workflows.test.tsx",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 336,
          "content": "console.error('Rebalancing analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 343,
          "content": "console.log('Executing rebalancing trades...');",
          "type": "log"
        },
        {
          "line_number": 509,
          "content": "console.error('Failed to set alert:', error);",
          "type": "error"
        },
        {
          "line_number": 684,
          "content": "console.error('Comparative analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 1056,
          "content": "console.error('Export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 1066,
          "content": "console.log('Downloaded data:', data);",
          "type": "log"
        },
        {
          "line_number": 1069,
          "content": "console.error('Download failed:', error);",
          "type": "error"
        },
        {
          "line_number": 1290,
          "content": "console.error('Report generation failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/e2e/first-test-debug.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/e2e/first-test-debug.test.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 100,
          "content": "console.log('Container HTML:', container.innerHTML);",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log('Document body:', document.body.innerHTML);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/e2e/complete-user-journeys.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/e2e/complete-user-journeys.test.tsx",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 468,
          "content": "console.error('Analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 498,
          "content": "console.error('Optimization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 515,
          "content": "console.error('Rebalance failed:', error);",
          "type": "error"
        },
        {
          "line_number": 752,
          "content": "console.log('Research Journey Rendered HTML:', container.innerHTML);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/test/e2e/test-debug.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/test/e2e/test-debug.test.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 64,
          "content": "console.log('Container HTML:', container.innerHTML);",
          "type": "log"
        },
        {
          "line_number": 65,
          "content": "console.log('Document body:', document.body.innerHTML);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/providers/ProviderWrapper.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/providers/ProviderWrapper.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 190,
          "content": "console.error('Failed to load providers:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/providers/DataProgressiveProvider.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/providers/DataProgressiveProvider.tsx",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 140,
          "content": "console.group('[Phase 7] Performance Report');",
          "type": "group"
        },
        {
          "line_number": 142,
          "content": "console.log('\u23f1\ufe0f  Average load time:', `${report.averageLoadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 144,
          "content": "console.log('\ud83c\udfaf Cache hit rate:', `${(report.cacheHitRate * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 171,
          "content": "console.error('[Phase 7] Context loading failed:', error);",
          "type": "error"
        },
        {
          "line_number": 343,
          "content": "console.warn(`[Phase 7] Failed to load data for trigger ${trigger}:`, error)",
          "type": "warn"
        },
        {
          "line_number": 377,
          "content": "console.warn(`[Phase 7] Viewport trigger failed for ${componentId}:`, error)",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/providers/DataServiceProvider.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/providers/DataServiceProvider.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 84,
          "content": "console.warn(`Failed to preload services for context ${newContext}:`, error)",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/stores/portfolioStore.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/stores/portfolioStore.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 383,
          "content": "console.error('Price update failed:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/stores/__tests__/preferencesStore.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/stores/__tests__/preferencesStore.test.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 103,
          "content": "console.warn('Normal reset failed, attempting aggressive reset');",
          "type": "warn"
        },
        {
          "line_number": 288,
          "content": "console.log('Effective theme:', effectiveTheme);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/StandardBundleOptimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/StandardBundleOptimization.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 251,
          "content": "console.error('Standard Bundle optimization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 534,
          "content": "console.group('\ud83c\udfc6 SUBAGENT 4: Standard Bundle Optimization - OUTSTANDING SUCCESS');",
          "type": "group"
        },
        {
          "line_number": 560,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 567,
          "content": "console.group('\ud83d\udcca Standard Bundle Optimization Progress');",
          "type": "group"
        },
        {
          "line_number": 575,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 698,
          "content": "console.error('Bundle optimization failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chart-bundle-analyzer.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chart-bundle-analyzer.ts",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 320,
          "content": "console.log(`[ChartAnalyzer] ${componentType} (${variant}) loaded: ${sizeMB}kB in ${metrics.loadTime.toFixed(0)}ms`);",
          "type": "log"
        },
        {
          "line_number": 449,
          "content": "console.log(`[ChartAnalyzer] ${chartType} render time: ${renderTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 588,
          "content": "console.log(`[ChartAnalyzer] ${metrics.componentType} ${metrics.variant}: ${achievementLevel} (${reductionPercentage.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 617,
          "content": "console.group('[ChartAnalyzer] Chart Optimization Progress');",
          "type": "group"
        },
        {
          "line_number": 619,
          "content": "console.log(`Total Bundle Reduction: ${report.bundleAnalysis.percentageReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 622,
          "content": "console.log(`  ${component}: ${result.reductionPercentage.toFixed(1)}% reduction (${result.targetAchievement})`);",
          "type": "log"
        },
        {
          "line_number": 625,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/StandardBundlePerformanceMonitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/StandardBundlePerformanceMonitor.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 230,
          "content": "console.log('\ud83c\udfaf Monitoring 50-70% standard bundle reduction (26.31kB \u2192 8-12kB)');",
          "type": "log"
        },
        {
          "line_number": 329,
          "content": "console.log(`[StandardBundleMonitor] ${bundleType} (${context}) loaded: ${sizekB}kB in ${metrics.loadTime.toFixed(0)}ms (${reductionPercentage}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 618,
          "content": "console.log(`[StandardBundleMonitor] ${metrics.bundleType} (${metrics.context}): ${achievementLevel} (${reductionPercentage.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 622,
          "content": "console.log(`\u2705 Phase 7 Standard Bundle Success: ${reductionPercentage.toFixed(1)}% reduction achieved (target: 50-70%)`);",
          "type": "log"
        },
        {
          "line_number": 624,
          "content": "console.log(`\u26a0\ufe0f Phase 7 Standard Bundle Warning: ${reductionPercentage.toFixed(1)}% reduction below 50% target`);",
          "type": "log"
        },
        {
          "line_number": 638,
          "content": "console.group('[StandardBundleMonitor] Standard Bundle Optimization Progress');",
          "type": "group"
        },
        {
          "line_number": 640,
          "content": "console.log(`Phase 7 Compliance: ${report.phase7Validation.complianceStatus} (${report.phase7Validation.achievedReduction.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 643,
          "content": "console.log(`  ${bundleType}: ${result.reductionPercentage.toFixed(1)}% reduction (${result.targetAchievement}) - ${(result.current/1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 646,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/UtilityManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/UtilityManager.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 42,
          "content": "console.error('Failed to load core utilities:', error);",
          "type": "error"
        },
        {
          "line_number": 83,
          "content": "console.error(`Failed to load utility chunk '${chunk}':`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/RouteAwareUtilityManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/RouteAwareUtilityManager.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 456,
          "content": "console.error('Failed to initialize route utilities:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase7-smart-initialization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7-smart-initialization.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 296,
          "content": "console.error(`[Phase7] Failed to load chunk ${chunkName}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/text-analysis-context-loader.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/text-analysis-context-loader.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 86,
          "content": "console.log('\ud83d\udd04 Phase 5: Loading Dashboard context (3-5kB minimal)');",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log('\ud83d\udd04 Phase 5: Loading News Analysis context (8-10kB with NLP)');",
          "type": "log"
        },
        {
          "line_number": 152,
          "content": "console.log('\ud83d\udd04 Phase 5: Loading Full Analysis context (13-15kB comprehensive)');",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('\ud83d\udd04 Phase 5: Loading Export context (10-12kB export-focused)');",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log('\ud83d\udd04 Phase 5: Loading Validation context (5-7kB validation-focused)');",
          "type": "log"
        },
        {
          "line_number": 313,
          "content": "console.log(`\ud83d\ude80 Phase 5: Preloading ${context} context chunks: ${strategy.chunks.join(', ')}`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/activate-utils-progressive.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/activate-utils-progressive.js",
      "console_count": 26,
      "console_lines": [
        {
          "line_number": 19,
          "content": "console.log('\ud83d\ude80 [Utils Progressive] Starting architecture activation...');",
          "type": "log"
        },
        {
          "line_number": 28,
          "content": "console.log('\ud83d\udce6 [Utils Progressive] Creating backup of current index...');",
          "type": "log"
        },
        {
          "line_number": 30,
          "content": "console.log('\u2705 [Utils Progressive] Backup created:', backupPath);",
          "type": "log"
        },
        {
          "line_number": 35,
          "content": "console.log('\ud83d\udd04 [Utils Progressive] Replacing index with optimized version...');",
          "type": "log"
        },
        {
          "line_number": 37,
          "content": "console.log('\u2705 [Utils Progressive] Index replaced successfully');",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log('\ud83d\udd0d [Utils Progressive] Verifying activation...');",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log(`\u2705 [Utils Progressive] ${check}: VERIFIED`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log(`\u274c [Utils Progressive] ${check}: FAILED`);",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log('\\n\ud83c\udf89 [Utils Progressive] Architecture activation SUCCESSFUL!');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('\\n\ud83d\udcca [Utils Progressive] Optimization Results:');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log('   \u2022 Chunking: ENABLED (dynamic imports active)');",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log('   \u2022 Immediate Access: \u22641kB (critical utils only)');",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log('   \u2022 Essential Variant: 3-5kB (82-85% reduction)');",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log('   \u2022 Standard Variant: 6-8kB (70-78% reduction)');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log('   \u2022 Advanced Variant: 10-12kB (58-64% reduction)');",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log('   \u2022 Original Size: 26.71kB');",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log('   \u2022 Target Reduction: 58-88%');",
          "type": "log"
        },
        {
          "line_number": 77,
          "content": "console.log('\\n\ud83d\ude80 [Utils Progressive] Next Steps:');",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log('   1. Run `npm run build` to verify chunk generation');",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log('   2. Check bundle analyzer for size improvements');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log('   3. Test progressive loading in application');",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.error('\u274c [Utils Progressive] Activation failed:', error.message);",
          "type": "error"
        },
        {
          "line_number": 102,
          "content": "console.log('\ud83d\udd04 [Utils Progressive] Restoring backup...');",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "console.log('\u2705 [Utils Progressive] Backup restored');",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "console.log('\\n\ud83d\udccb [Utils Progressive] Activation Summary:', result);",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.error('\ud83d\udca5 [Utils Progressive] Unexpected error:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/Phase4PreloadManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/Phase4PreloadManager.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 660,
          "content": "console.error('Phase 4 preloading failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/bundleAnalyzer.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/bundleAnalyzer.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 234,
          "content": "console.group('\ud83c\udfaf Essential Analytics Bundle Analysis');",
          "type": "group"
        },
        {
          "line_number": 239,
          "content": "console.log('\ud83d\udcca Bundle Comparison:', comparison);",
          "type": "log"
        },
        {
          "line_number": 240,
          "content": "console.log('\u2705 Validation Results:', validation);",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.log('\ud83d\udccb Performance Report:\\n' + generatePerformanceReport());",
          "type": "log"
        },
        {
          "line_number": 243,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/StandardBundleContextManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/StandardBundleContextManager.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 585,
          "content": "console.log(`\ud83d\ude80 Phase 7 Context Optimization: ${reductionPercentage.toFixed(1)}% reduction for ${context}`);",
          "type": "log"
        },
        {
          "line_number": 586,
          "content": "console.log(`\ud83d\udcca Bundle: ${optimization.recommendedVariant} (${(optimization.expectedSize/1024).toFixed(1)}kB)`);",
          "type": "log"
        },
        {
          "line_number": 594,
          "content": "console.error('Failed to load optimized bundle:', error);",
          "type": "error"
        },
        {
          "line_number": 672,
          "content": "console.error(`Bundle loading failed for ${context}-${variant} after ${loadTime.toFixed(0)}ms:`, error);",
          "type": "error"
        },
        {
          "line_number": 895,
          "content": "console.error('Failed to load context bundle:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/UtilsProgressiveStandard.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/UtilsProgressiveStandard.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 368,
          "content": "console.log(`\ud83d\ude80 Phase 7 Utils Optimization: ${reductionPercentage.toFixed(1)}% reduction (26.31kB \u2192 ${bundleSize}kB)`);",
          "type": "log"
        },
        {
          "line_number": 458,
          "content": "console.error('Failed to load utils variant:', currentVariant, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase7-bundle-analyzer.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7-bundle-analyzer.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 147,
          "content": "console.log(`[Phase7] Bundle loaded: ${bundleName}`, {",
          "type": "log"
        },
        {
          "line_number": 261,
          "content": "console.group('[Phase7] Bundle Optimization Status');",
          "type": "group"
        },
        {
          "line_number": 262,
          "content": "console.log(`Total Reduction: ${Math.round(report.totalReduction / 1024)}kB (${Math.round(report.percentageReduction)}%)`);",
          "type": "log"
        },
        {
          "line_number": 263,
          "content": "console.log(`Load Time Improvement: ${Math.round(report.loadTimeImprovement)}ms`);",
          "type": "log"
        },
        {
          "line_number": 265,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase5b-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase5b-validation.js",
      "console_count": 38,
      "console_lines": [
        {
          "line_number": 17,
          "content": "console.log('\ud83d\ude80 Phase 5B Validation Test Starting...\\n');",
          "type": "log"
        },
        {
          "line_number": 24,
          "content": "console.log(`\u2705 ${description}: EXISTS`);",
          "type": "log"
        },
        {
          "line_number": 27,
          "content": "console.log(`\u274c ${description}: MISSING`);",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log('=== File Structure Validation ===');",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log(`\\n=== Structure Validation Result ===`);",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log('\u2705 All required files exist for Phase 5B implementation');",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log('\u274c Some files are missing - Phase 5B incomplete');",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log('\\n=== Content Validation ===');",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log(`\u274c ${description}: File missing`);",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`\u2705 ${description}: Content validation passed`);",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.log(`\u274c ${description}: Content validation failed`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log(`   Missing: ${r.description}`);",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log(`\\n=== Content Validation Result ===`);",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log('\u2705 All file contents are properly structured for Phase 5B');",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log('\u274c Some file contents are missing required elements');",
          "type": "log"
        },
        {
          "line_number": 136,
          "content": "console.log('\\n=== Bundle Size Estimation ===');",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.log(`Core utilities: ~${(coreSize / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log(`Progressive loader: ~${(progressiveLoaderSize / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log('\\nContext chunks:');",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log(`  ${name}: ~${(size / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 166,
          "content": "console.log(`\\nTotal context chunks: ~${(totalContextSize / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 167,
          "content": "console.log(`Estimated full bundle: ~${((coreSize + totalContextSize + progressiveLoaderSize) / 1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log('\\n=== Phase 5B Implementation Summary ===');",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.log('\u2705 Core utilities with essential 4-6kB functionality');",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log('\u2705 Progressive loader with context-aware loading');",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('\u2705 Specialized context chunks for different use cases');",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "console.log('\u2705 Route-based preloading system');",
          "type": "log"
        },
        {
          "line_number": 175,
          "content": "console.log('\u2705 Performance optimization with connection awareness');",
          "type": "log"
        },
        {
          "line_number": 176,
          "content": "console.log('\u2705 Backward compatibility maintained');",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log('\u2705 TypeScript support with proper type exports');",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log('\\n\ud83c\udf89 Phase 5B Implementation Validation: PASSED');",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log('\\n\ud83d\udcca Phase 5B Achievements:');",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log('   \u2022 Target: 60-75% bundle reduction (27.996kB \u2192 7-11kB)');",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log('   \u2022 Context-aware micro-chunking system');",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log('   \u2022 Progressive loading with intelligent preloading');",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log('   \u2022 Phase 4 comparative analysis patterns applied');",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log('   \u2022 Production-ready utilities with full TypeScript support');",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.error('\u274c Phase 5B Validation failed with error:', error.message);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/phase7d-validation.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7d-validation.ts",
      "console_count": 27,
      "console_lines": [
        {
          "line_number": 59,
          "content": "console.log('\ud83d\ude80 Starting Phase 7D Utils Bundle Validation...\\n');",
          "type": "log"
        },
        {
          "line_number": 384,
          "content": "console.log(`${status} ${testName}: ${details || (passed ? 'PASSED' : 'FAILED')}`);",
          "type": "log"
        },
        {
          "line_number": 387,
          "content": "console.log(`   \ud83d\udcca Performance - Load: ${performance.loadTime.toFixed(2)}ms, Size: ${performance.bundleSize}B, Reduction: ${performance.reduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 438,
          "content": "console.log('\\n' + '='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 439,
          "content": "console.log('\ud83d\udccb PHASE 7D VALIDATION SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 440,
          "content": "console.log('='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 442,
          "content": "console.log(`\\n\ud83d\udcca Test Results:`);",
          "type": "log"
        },
        {
          "line_number": 443,
          "content": "console.log(`   Total Tests: ${summary.totalTests}`);",
          "type": "log"
        },
        {
          "line_number": 444,
          "content": "console.log(`   Passed: ${summary.passedTests} \u2705`);",
          "type": "log"
        },
        {
          "line_number": 445,
          "content": "console.log(`   Failed: ${summary.failedTests} ${summary.failedTests > 0 ? '\u274c' : '\u2705'}`);",
          "type": "log"
        },
        {
          "line_number": 446,
          "content": "console.log(`   Overall: ${summary.overallPassed ? 'PASSED \u2705' : 'FAILED \u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 448,
          "content": "console.log(`\\n\ud83c\udfaf Phase 7D Targets:`);",
          "type": "log"
        },
        {
          "line_number": 449,
          "content": "console.log(`   Bundle Size: ${summary.metrics.averageBundleSize.toFixed(0)} bytes (target: \u2264${VALIDATION_CONFIG.targetBundleSize})`);",
          "type": "log"
        },
        {
          "line_number": 450,
          "content": "console.log(`   Reduction: ${summary.metrics.averageReduction.toFixed(1)}% (target: \u2265${VALIDATION_CONFIG.targetReduction}%)`);",
          "type": "log"
        },
        {
          "line_number": 451,
          "content": "console.log(`   Load Time: ${summary.metrics.averageLoadTime.toFixed(2)}ms (target: \u2264${VALIDATION_CONFIG.maxLoadTime}ms)`);",
          "type": "log"
        },
        {
          "line_number": 452,
          "content": "console.log(`   Target Status: ${summary.targetAchieved ? 'ACHIEVED \u2705' : 'NOT ACHIEVED \u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 457,
          "content": "console.log(`\\n\u274c Failed Tests:`);",
          "type": "log"
        },
        {
          "line_number": 459,
          "content": "console.log(`   \u2022 ${test.testName}: ${test.details || 'No details'}`);",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.log(`\\n\ud83d\ude80 Phase 7D Implementation Status:`);",
          "type": "log"
        },
        {
          "line_number": 465,
          "content": "console.log('   \u2705 Phase 7D SUCCESSFULLY IMPLEMENTED');",
          "type": "log"
        },
        {
          "line_number": 466,
          "content": "console.log('   \u2705 70% bundle reduction target ACHIEVED');",
          "type": "log"
        },
        {
          "line_number": 467,
          "content": "console.log('   \u2705 All validation tests PASSED');",
          "type": "log"
        },
        {
          "line_number": 469,
          "content": "console.log('   \u26a0\ufe0f  Phase 7D implementation needs refinement');",
          "type": "log"
        },
        {
          "line_number": 471,
          "content": "console.log('   \u274c Bundle reduction target not yet achieved');",
          "type": "log"
        },
        {
          "line_number": 474,
          "content": "console.log(`   \u274c ${summary.failedTests} validation test(s) failed`);",
          "type": "log"
        },
        {
          "line_number": 478,
          "content": "console.log('\\n' + '='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 487,
          "content": "console.error('\u274c Phase 7D validation failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/logger.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/logger.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 156,
          "content": "console.error(logMessage, entry.data);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/css-lazy-loading-monitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/css-lazy-loading-monitor.ts",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 279,
          "content": "console.group('\ud83c\udfa8 CSS Phase 2 Lazy Loading Performance Report');",
          "type": "group"
        },
        {
          "line_number": 281,
          "content": "console.group('\ud83d\udce6 Bundle Metrics');",
          "type": "group"
        },
        {
          "line_number": 287,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 289,
          "content": "console.group('\u26a1 Loading Performance');",
          "type": "group"
        },
        {
          "line_number": 295,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 297,
          "content": "console.group('\ud83c\udf1f Core Web Vitals Impact');",
          "type": "group"
        },
        {
          "line_number": 301,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 303,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/openbb-analytics.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/openbb-analytics.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 485,
          "content": "console.error(",
          "type": "error"
        },
        {
          "line_number": 567,
          "content": "console.warn(",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/build-optimization.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/build-optimization.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 21,
          "content": "console.error(`[BuildOptimization] ${message}`, error);",
          "type": "error"
        },
        {
          "line_number": 222,
          "content": "console.error('Error analyzing dependencies:', error);",
          "type": "error"
        },
        {
          "line_number": 786,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 789,
          "content": "console.log(`   Gzipped: ${this.formatBytes(report.analysis.gzippedSize)}`);",
          "type": "log"
        },
        {
          "line_number": 791,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 848,
          "content": "console.error('\u274c Build optimization failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/bundle-performance-monitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/bundle-performance-monitor.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 270,
          "content": "const logMethod = type === 'error' ? console.error : console.warn;",
          "type": "error"
        },
        {
          "line_number": 282,
          "content": "console.error('Performance observer error:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/core/export-interface.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/export-interface.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 183,
          "content": "console.warn(`Failed to preload ${format} export chunk:`, error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/core/error-handler.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/error-handler.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 34,
          "content": "console.error('Data Error:', {",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/core/export-chunk-loader.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/export-chunk-loader.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 176,
          "content": "console.warn(`Failed to preload ${format} chunk:`, error);",
          "type": "warn"
        },
        {
          "line_number": 187,
          "content": "console.warn(`Failed to preload ${format} chunk:`, error);",
          "type": "warn"
        },
        {
          "line_number": 261,
          "content": "console.warn(`Retry ${retryCount}/${strategy.retries} for ${chunkName}:`, lastError.message);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/core/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/core/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 134,
          "content": "console.error(`Data error in ${componentName}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chartExport/core/ErrorHandler.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/core/ErrorHandler.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 236,
          "content": "console.error('[ChartExport Error]', logData);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chartExport/core/ExportInterface.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/core/ExportInterface.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 131,
          "content": "console.warn(`Failed to preload ${format} export chunk`);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chartExport/chunks/PDFExportChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/PDFExportChunk.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 38,
          "content": "console.log(`[PDF Export] Starting PDF generation for ${options.filename || 'chart'}`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`[PDF Export] Canvas generated: ${canvas.width}x${canvas.height}`);",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.log(`[PDF Export] Successfully exported ${filename} in ${processingTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "console.error('[PDF Export] Export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 156,
          "content": "console.log('[PDF Export] Watermark added successfully');",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.warn('[PDF Export] Failed to add watermark:', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chartExport/chunks/DataExportChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/DataExportChunk.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 40,
          "content": "console.log(`[${this.exportFormat.toUpperCase()} Export] Processing ${data.length} data records`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`[${this.exportFormat.toUpperCase()} Export] Successfully exported ${result.filename} (${result.size} bytes) in ${processingTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.error(`[${this.exportFormat.toUpperCase()} Export] Export failed:`, error);",
          "type": "error"
        },
        {
          "line_number": 90,
          "content": "console.log(`[CSV Export] Processing ${records.length} records with fields: ${headers.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "console.warn(`[CSV Export] Skipping malformed record at index ${index}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 129,
          "content": "console.log(`[JSON Export] Serializing ${data.length} records`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chartExport/chunks/SVGExportChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/SVGExportChunk.ts",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 37,
          "content": "console.log(`[SVG Export] Starting SVG extraction for ${options.filename || 'chart'}`);",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log(`[SVG Export] Successfully exported ${filename} (${blob.size} bytes) in ${processingTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.error('[SVG Export] Export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 145,
          "content": "console.warn('[SVG Export] Failed to embed styles for element:', styleError);",
          "type": "warn"
        },
        {
          "line_number": 149,
          "content": "console.log('[SVG Export] Computed styles embedded successfully');",
          "type": "log"
        },
        {
          "line_number": 152,
          "content": "console.warn('[SVG Export] Failed to embed computed styles:', error);",
          "type": "warn"
        },
        {
          "line_number": 175,
          "content": "console.log(`[SVG Export] Background color ${backgroundColor} applied`);",
          "type": "log"
        },
        {
          "line_number": 178,
          "content": "console.warn('[SVG Export] Failed to apply background color:', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chartExport/chunks/PNGExportChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chartExport/chunks/PNGExportChunk.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 50,
          "content": "console.log(`[PNG Export] Starting canvas generation for ${options.filename || 'chart'}`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`[PNG Export] Canvas generated: ${canvas.width}x${canvas.height}`);",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.log(`[PNG Export] Successfully exported ${filename} (${blob.size} bytes) in ${processingTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 97,
          "content": "console.error('[PNG Export] Export failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/critical-css/CriticalCSS.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/critical-css/CriticalCSS.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 245,
          "content": "console.error('Critical CSS extraction failed:', error);",
          "type": "error"
        },
        {
          "line_number": 465,
          "content": "console.error('Failed to inline critical CSS:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase2/UtilsPhase2Manager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase2/UtilsPhase2Manager.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 250,
          "content": "console.error(`Phase 2 Utils: Failed to load chunk ${chunkId}:`, error);",
          "type": "error"
        },
        {
          "line_number": 254,
          "content": "console.warn(`Phase 2 Utils: Attempting fallback for ${chunkId}`);",
          "type": "warn"
        },
        {
          "line_number": 311,
          "content": "console.error(`Phase 2 Utils: Fallback loading also failed:`, fallbackError);",
          "type": "error"
        },
        {
          "line_number": 352,
          "content": "console.log(`Phase 2 Utils: Cleaned up chunk ${chunk.id} (${chunk.size} bytes)`);",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log(`Phase 2 Utils Bundle Optimization:",
          "type": "log"
        },
        {
          "line_number": 460,
          "content": "console.warn('Phase 2 Utils: Preloading failed (non-critical):', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase2/useUtilsPhase2.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase2/useUtilsPhase2.tsx",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 90,
          "content": "console.warn('Phase 2 Utils: Preloading failed (non-critical):', error);",
          "type": "warn"
        },
        {
          "line_number": 149,
          "content": "console.error(`Phase 2 Utils: Failed to load chunk ${chunkId}:`, error);",
          "type": "error"
        },
        {
          "line_number": 171,
          "content": "console.warn(`Phase 2 Utils: Using fallback for ${chunkId}`);",
          "type": "warn"
        },
        {
          "line_number": 184,
          "content": "console.error(`Phase 2 Utils: Fallback also failed for ${chunkId}:`, fallbackError);",
          "type": "error"
        },
        {
          "line_number": 256,
          "content": "console.warn(`Phase 2 Utils: Failed to preload chunk ${chunkId}:`, error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase2/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase2/index.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 97,
          "content": "console.log(`\ud83d\ude80 Phase 2 Utils Bundle Optimization initialized",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.warn('Phase 2: Duplicate chunk priorities detected');",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/lazy-loading/ChunkErrorBoundary.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/lazy-loading/ChunkErrorBoundary.tsx",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 118,
          "content": "console.group(`\ud83d\udea8 Chunk Loading Error - ${chunkName}`);",
          "type": "group"
        },
        {
          "line_number": 120,
          "content": "console.error('Error:', error);",
          "type": "error"
        },
        {
          "line_number": 122,
          "content": "console.error('Error Info:', errorInfo);",
          "type": "error"
        },
        {
          "line_number": 124,
          "content": "console.error('Component Stack:', errorInfo.componentStack);",
          "type": "error"
        },
        {
          "line_number": 126,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 171,
          "content": "console.warn(`Maximum retry attempts (${maxRetries}) reached for chunk: ${chunkName}`);",
          "type": "warn"
        },
        {
          "line_number": 201,
          "content": "console.log(`\ud83d\udd04 Retrying chunk load for ${chunkName} (attempt ${retryCount + 1}/${maxRetries}) in ${delay}ms`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/lazy-loading/PreloadingProvider.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/lazy-loading/PreloadingProvider.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 341,
          "content": "console.error(`Failed to preload ${type} components:`, error);",
          "type": "error"
        },
        {
          "line_number": 360,
          "content": "console.error('Failed to get preloading status:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/lazy-loading/createLazyComponent.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/lazy-loading/createLazyComponent.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 93,
          "content": "console.warn(`Chunk loading failed (attempt ${attempt + 1}/${retryAttempts + 1}):`, error);",
          "type": "warn"
        },
        {
          "line_number": 205,
          "content": "console.error('Failed to preload component:', error);",
          "type": "error"
        },
        {
          "line_number": 236,
          "content": "console.error('Failed to preload component during idle time:', error);",
          "type": "error"
        },
        {
          "line_number": 261,
          "content": "console.error(`Failed to preload component for route ${pattern}:`, error);",
          "type": "error"
        },
        {
          "line_number": 295,
          "content": "console.error('Failed to preload component on intersection:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/chunks/text-analysis-progressive-manager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/chunks/text-analysis-progressive-manager.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 95,
          "content": "console.log(`\ud83d\udcbe Phase 5 Cache Hit: ${chunkName} (${cached.accessCount} accesses)`);",
          "type": "log"
        },
        {
          "line_number": 137,
          "content": "console.log(`\u2705 Phase 5 Chunk Loaded: ${chunkName} (${metrics.loadTime.toFixed(1)}ms, ${Math.round(chunkSize/1024)}kB)`);",
          "type": "log"
        },
        {
          "line_number": 143,
          "content": "console.error(`\u274c Phase 5 Chunk Load Failed: ${chunkName}`, error);",
          "type": "error"
        },
        {
          "line_number": 304,
          "content": "console.error(`Coordination callback error for ${chunkName}:`, error);",
          "type": "error"
        },
        {
          "line_number": 332,
          "content": "console.log(`\ud83d\uddd1\ufe0f Phase 5: Evicted chunk ${chunkName} (${Math.round(cached.size/1024)}kB)`);",
          "type": "log"
        },
        {
          "line_number": 418,
          "content": "console.error(`Failed to load text analysis chunk: ${chunkName}`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase6-micro-chunking/progressive-loader.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase6-micro-chunking/progressive-loader.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 236,
          "content": "console.log(`[Phase6] Loaded utility micro-chunk: ${chunk.id} (${chunk.size} bytes)`);",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.error(`[Phase6] Failed to load utility chunk: ${chunk.id}`, error);",
          "type": "error"
        },
        {
          "line_number": 341,
          "content": "console.log('[Phase6] Utils Progressive Loader initialized - Micro-chunking architecture active');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/__tests__/StandardBundleOptimization.validation.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/StandardBundleOptimization.validation.test.ts",
      "console_count": 35,
      "console_lines": [
        {
          "line_number": 158,
          "content": "console.log('\u2705 VALIDATION SUCCESS: 54-87% bundle reduction achieved');",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log(`\ud83d\udcca Essential: ${essentialResult.metrics.bundlePerformance.reductionPercentage.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.log(`\ud83d\udcca Standard: ${standardResult.metrics.bundlePerformance.reductionPercentage.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log('\u2705 VALIDATION: 3-tier progressive architecture confirmed');",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.log('\u2705 VALIDATION: Performance monitoring system initialized');",
          "type": "log"
        },
        {
          "line_number": 256,
          "content": "console.log('\u2705 VALIDATION: Comprehensive reporting system operational');",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log('\u2705 VALIDATION: Performance targets configured correctly');",
          "type": "log"
        },
        {
          "line_number": 317,
          "content": "console.log('\u2705 VALIDATION: Context-aware optimization working');",
          "type": "log"
        },
        {
          "line_number": 337,
          "content": "console.log('\u2705 VALIDATION: Device/network constraints handled');",
          "type": "log"
        },
        {
          "line_number": 356,
          "content": "console.log('\u2705 VALIDATION: User behavior tracking operational');",
          "type": "log"
        },
        {
          "line_number": 371,
          "content": "console.log(`\u2705 VALIDATION: Essential variant achieves ${reductionPercentage.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 386,
          "content": "console.log(`\u2705 VALIDATION: Standard variant achieves ${reductionPercentage.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 401,
          "content": "console.log(`\u2705 VALIDATION: Advanced variant achieves ${reductionPercentage.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 431,
          "content": "console.log('\u2705 VALIDATION: Full system integration successful');",
          "type": "log"
        },
        {
          "line_number": 455,
          "content": "console.log('\u2705 VALIDATION: React hooks integration working');",
          "type": "log"
        },
        {
          "line_number": 470,
          "content": "console.log('\u2705 VALIDATION: Error handling and fallbacks working');",
          "type": "log"
        },
        {
          "line_number": 507,
          "content": "console.log(`\u2705 VALIDATION: Business value confirmed`);",
          "type": "log"
        },
        {
          "line_number": 508,
          "content": "console.log(`\ud83d\udcca Average reduction: ${averageReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 509,
          "content": "console.log(`\ud83d\udcb0 Estimated annual value: $${estimatedAnnualValue.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 524,
          "content": "console.log('\u2705 VALIDATION: User experience impact confirmed');",
          "type": "log"
        },
        {
          "line_number": 525,
          "content": "console.log(`\ud83d\udcca UX Score: ${result.metrics.userExperience.score}/100`);",
          "type": "log"
        },
        {
          "line_number": 550,
          "content": "console.log('\u2705 BREAKTHROUGH SUCCESS VALIDATED');",
          "type": "log"
        },
        {
          "line_number": 551,
          "content": "console.log(`\ud83c\udfc6 Achievement: ${achievement}`);",
          "type": "log"
        },
        {
          "line_number": 564,
          "content": "console.log('\u2705 VALIDATION: Production-ready configuration confirmed');",
          "type": "log"
        },
        {
          "line_number": 581,
          "content": "console.log('\u2705 VALIDATION: Immediate deployment capability confirmed');",
          "type": "log"
        },
        {
          "line_number": 587,
          "content": "console.group('\ud83c\udfaf SUBAGENT 5 VALIDATION SUMMARY: Standard Bundle Optimization');",
          "type": "group"
        },
        {
          "line_number": 606,
          "content": "console.log(`${passed ? '\u2705' : '\u274c'} ${metric}: ${passed ? 'PASSED' : 'FAILED'}`);",
          "type": "log"
        },
        {
          "line_number": 610,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 611,
          "content": "console.log('\ud83c\udfc6 BREAKTHROUGH SUCCESS CONFIRMED:');",
          "type": "log"
        },
        {
          "line_number": 612,
          "content": "console.log(`\ud83d\udcca Bundle Reduction: ${result.metrics.bundlePerformance.reductionPercentage.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 613,
          "content": "console.log(`\u26a1 Bundle Size: ${(result.metrics.bundlePerformance.currentSize/1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 614,
          "content": "console.log(`\ud83c\udfaf Phase 7 Status: ${result.metrics.phase7Compliance.status.toUpperCase()}`);",
          "type": "log"
        },
        {
          "line_number": 615,
          "content": "console.log(`\ud83d\udcb0 Business Value: $500K-1M annually`);",
          "type": "log"
        },
        {
          "line_number": 616,
          "content": "console.log('\ud83d\ude80 Status: PRODUCTION READY - IMMEDIATE DEPLOYMENT');",
          "type": "log"
        },
        {
          "line_number": 619,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/__tests__/openbb-analytics.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/openbb-analytics.test.ts",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 159,
          "content": "expect(mockConsole.log).toHaveBeenCalledWith(",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "expect(mockConsole.log).not.toHaveBeenCalled();",
          "type": "log"
        },
        {
          "line_number": 274,
          "content": "expect(mockConsole.log).toHaveBeenCalledWith(",
          "type": "log"
        },
        {
          "line_number": 288,
          "content": "expect(mockConsole.error).toHaveBeenCalledWith(",
          "type": "error"
        },
        {
          "line_number": 736,
          "content": "expect(mockConsole.warn).toHaveBeenCalledWith(",
          "type": "warn"
        },
        {
          "line_number": 757,
          "content": "expect(mockConsole.warn).toHaveBeenCalledWith(",
          "type": "warn"
        },
        {
          "line_number": 779,
          "content": "expect(mockConsole.warn).not.toHaveBeenCalled();",
          "type": "warn"
        },
        {
          "line_number": 801,
          "content": "expect(mockConsole.warn).not.toHaveBeenCalled();",
          "type": "warn"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/__tests__/bundle-size-validation.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/bundle-size-validation.test.ts",
      "console_count": 31,
      "console_lines": [
        {
          "line_number": 12,
          "content": "console.log('\\n\ud83c\udfaf REAL BUNDLE SIZE VALIDATION');",
          "type": "log"
        },
        {
          "line_number": 13,
          "content": "console.log('=====================================');",
          "type": "log"
        },
        {
          "line_number": 30,
          "content": "console.log(`\ud83d\udcca ${variant.toUpperCase()} Variant:`);",
          "type": "log"
        },
        {
          "line_number": 31,
          "content": "console.log(`   Original: ${(BASELINE_SIZE/1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log(`   Target: ${(targetSize/1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "console.log(`   Reduction: ${reductionPercentage.toFixed(1)}% (${(reduction/1024).toFixed(1)}kB saved)`);",
          "type": "log"
        },
        {
          "line_number": 38,
          "content": "console.log(`   \u2705 BREAKTHROUGH: Exceeds 54% minimum target`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`   \u2705 SUCCESS: Within 54-70% target range`);",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log(`   \u2705 EFFICIENT: Significant optimization achieved`);",
          "type": "log"
        },
        {
          "line_number": 47,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log('\ud83d\udcb0 BUSINESS VALUE CALCULATION:');",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`   Average Reduction: ${avgReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`   Estimated Annual Value: $${estimatedValue.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log(`   Minimum Target: $500,000`);",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "console.log(`   Status: ${estimatedValue >= 500000 ? '\u2705 EXCEEDS TARGET' : '\u26a0\ufe0f BELOW TARGET'}`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log('\ud83c\udfc6 VALIDATION SUMMARY:');",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log('=====================================');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('\u2705 Essential: 86.4% reduction (EXCEEDS 54% target)');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log('\u2705 Standard: 65.0% reduction (WITHIN 54-70% range)');",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log('\u2705 Advanced: 37.3% reduction (SIGNIFICANT optimization)');",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log(`\u2705 Business Value: $${estimatedValue.toLocaleString()} annually`);",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log('\ud83d\ude80 BREAKTHROUGH SUCCESS MATHEMATICALLY CONFIRMED');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log('=====================================\\n');",
          "type": "log"
        },
        {
          "line_number": 89,
          "content": "console.log('\ud83d\udcca CONTEXT-SPECIFIC OPTIMIZATION VALIDATION:');",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log(`${context.toUpperCase()}: ${(targetSize/1024).toFixed(1)}kB (${reduction.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log('\u2705 All contexts achieve significant bundle optimization');",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.log('\u26a1 PERFORMANCE TARGETS VALIDATION:');",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log(`${variant.toUpperCase()} loading: <${target}ms`);",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log(`${variant.toUpperCase()} utilization: >${target}%`);",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log('\u2705 Performance targets are production-ready');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/__tests__/StandardBundle.integration.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/StandardBundle.integration.test.ts",
      "console_count": 17,
      "console_lines": [
        {
          "line_number": 125,
          "content": "console.log(`\u2705 Essential variant: ${essentialReduction.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log(`\u2705 Standard variant: ${standardReduction.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log('\u2705 Progressive loading architecture validated');",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "console.log(`\ud83d\udcb0 Estimated annual value: $${estimatedValue.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 175,
          "content": "console.log(`\ud83d\udcca Average reduction: ${averageReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log('\u2705 Production-ready configuration validated');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log('\u2705 All system components initialized successfully');",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log('\\n\ud83c\udfaf SUBAGENT 5 VALIDATION SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log('=====================================');",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log('\u2705 System Architecture: VALIDATED');",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log('\u2705 Bundle Reduction Targets: ACHIEVABLE (54-87%)');",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log('\u2705 Performance Monitoring: OPERATIONAL');",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log('\u2705 Context-Aware Loading: CONFIGURED');",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log('\u2705 Production Readiness: CONFIRMED');",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.log('\u2705 Business Value: VALIDATED ($500K-1M annually)');",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.log('\ud83d\ude80 Status: BREAKTHROUGH SUCCESS - READY FOR DEPLOYMENT');",
          "type": "log"
        },
        {
          "line_number": 224,
          "content": "console.log('=====================================');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/__tests__/StandardBundleOptimization.success.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/__tests__/StandardBundleOptimization.success.test.ts",
      "console_count": 31,
      "console_lines": [
        {
          "line_number": 43,
          "content": "console.log(`\ud83c\udfaf Target Exceedance: ${exceedancePercentage.toFixed(1)}% beyond minimum target`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`\ud83d\udc8e Optimal Exceedance: ${exceedancePercentage.toFixed(1)}% beyond optimal target`);",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log(`\ud83c\udf1f Stretch Goal Exceedance: ${exceedancePercentage.toFixed(1)}% beyond stretch target`);",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log(`\ud83d\udcca Size Achievement: ${(currentSize/1024).toFixed(1)}kB vs ${(targetRange.min/1024).toFixed(1)}-${(targetRange.max/1024).toFixed(1)}kB target`);",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log(`\ud83c\udfc6 Below Target: ${reductionFromTarget.toFixed(1)}% smaller than minimum target`);",
          "type": "log"
        },
        {
          "line_number": 90,
          "content": "console.log(`\u26a1 Loading Performance: ${result.metrics.bundlePerformance.loadingTime.toFixed(0)}ms`);",
          "type": "log"
        },
        {
          "line_number": 91,
          "content": "console.log(`\ud83d\ude0a User Experience: ${result.metrics.userExperience.score}/100`);",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log(`\ud83c\udfaf Context ${context}: ${result.optimization.confidenceScore}% confidence`);",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log(`\ud83d\udcc8 UX Score: ${report.performanceValidation.userExperienceScore}/100`);",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`\ud83d\uddc4\ufe0f Cache Efficiency: ${report.performanceValidation.cacheEfficiency.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 136,
          "content": "console.log(`\ud83c\udfc6 ${variant.toUpperCase()} SUCCESS: ${(result.metrics.bundlePerformance.currentSize/1024).toFixed(1)}kB (${result.metrics.phase7Compliance.achievedReduction.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log(`\ud83c\udf1f INDUSTRY LEADERSHIP:`);",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.log(`   Reduction Advantage: +${reductionAdvantage.toFixed(1)}% beyond industry excellence`);",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log(`   Size Advantage: ${sizeAdvantage.toFixed(1)}% smaller than industry excellence`);",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log(`\ud83c\udfaf Consistency: ${variationPercentage.toFixed(1)}% variation across ${iterations} optimizations`);",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log(`\ud83d\udcca Average Size: ${(avgSize/1024).toFixed(1)}kB`);",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.log(`\ud83d\udccb SUCCESS REPORT GENERATED:`);",
          "type": "log"
        },
        {
          "line_number": 199,
          "content": "console.log(`   Phase 7 Achievement: ${report.optimizationSummary.phase7Achievement}`);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log(`   Reduction Summary: ${report.optimizationSummary.reductionSummary}`);",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log(`   Performance Summary: ${report.optimizationSummary.performanceSummary}`);",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log(`\u2705 COMPLIANCE STATUS: ${complianceStatus.status.toUpperCase()}`);",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log(`\ud83d\udcca FINAL ACHIEVEMENT: ${complianceStatus.reductionPercentage.toFixed(1)}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log('\\n\ud83c\udfc6 SUBAGENT 4: STANDARD BUNDLE OPTIMIZATION SUCCESS SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log('================================================================');",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log(`\ud83c\udfaf TARGET: 26.31kB \u2192 8-13kB (50-70% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log(`\ud83c\udf1f ACHIEVED: 26.31kB \u2192 6.94kB (73.6% reduction) - OUTSTANDING!`);",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log(`\ud83d\udc8e EXCEEDANCE: Far exceeded all targets by significant margins`);",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.log(`\ud83d\ude80 STATUS: OUTSTANDING SUCCESS - Setting new industry benchmarks`);",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.log('================================================================\\n');",
          "type": "log"
        },
        {
          "line_number": 253,
          "content": "console.log('\ud83d\udcca SUBAGENT 4 vs Industry Performance:');",
          "type": "log"
        },
        {
          "line_number": 258,
          "content": "console.log(`   vs ${tier}: +${reductionAdvantage.toFixed(1)}% reduction, ${sizeAdvantage.toFixed(1)}% smaller`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/progressive/BundleSplitConfig.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/BundleSplitConfig.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 217,
          "content": "pure_funcs: ['console.log', 'console.debug']",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsEssential.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsEssential.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 290,
          "content": "console.error(`[${context}] Error:`, error.message);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/Phase7DEnhancement.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/Phase7DEnhancement.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 43,
          "content": "console.log('\ud83d\ude80 Phase 7D enhancement enabled for existing progressive utils system');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.warn('Phase 7D loading failed, falling back to original system:', error);",
          "type": "warn"
        },
        {
          "line_number": 99,
          "content": "console.warn('Phase 7D route loading failed, falling back:', error);",
          "type": "warn"
        },
        {
          "line_number": 124,
          "content": "console.warn('Phase 7D context loading failed, falling back:', error);",
          "type": "warn"
        },
        {
          "line_number": 272,
          "content": "console.warn('Phase 7D route creation failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 293,
          "content": "console.warn('Phase 7D optimization failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 328,
          "content": "console.log('\ud83d\udd04 Phase 7D gradual migration enabled - existing APIs will be enhanced progressively');",
          "type": "log"
        },
        {
          "line_number": 344,
          "content": "console.warn('Phase 7D enhancement failed, using original function:', error);",
          "type": "warn"
        },
        {
          "line_number": 391,
          "content": "console.warn('Phase 7D performance validation failed:', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/useProgressiveLoading.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/useProgressiveLoading.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 94,
          "content": "console.error(`Progressive loading failed for ${bundleId}:`, loadError);",
          "type": "error"
        },
        {
          "line_number": 105,
          "content": "console.error(`Fallback failed for ${bundleId}:`, fallbackError);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsContext.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsContext.tsx",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 64,
          "content": "console.log('\ud83d\ude80 [UtilsProvider] Initializing Utils progressive architecture...');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`\ud83d\udccb [UtilsProvider] Loading strategy for ${progressive.context.applicationContext}:`, {",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log('\u2705 [UtilsProvider] Utils progressive architecture initialized successfully', {",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.error('\u274c [UtilsProvider] Utils initialization failed:', err);",
          "type": "error"
        },
        {
          "line_number": 140,
          "content": "console.log(`\ud83d\udd04 [UtilsProvider] Context adapted for ${progressive.context.applicationContext}`);",
          "type": "log"
        },
        {
          "line_number": 144,
          "content": "console.warn('\u26a0\ufe0f [UtilsProvider] Context adaptation warning:', err);",
          "type": "warn"
        },
        {
          "line_number": 160,
          "content": "console.warn('\u26a0\ufe0f [UtilsProvider] Low chunk success rate:', metrics.chunkSuccessRate);",
          "type": "warn"
        },
        {
          "line_number": 164,
          "content": "console.warn('\u26a0\ufe0f [UtilsProvider] Total load time exceeds target:', metrics.totalLoadTime);",
          "type": "warn"
        },
        {
          "line_number": 277,
          "content": "console.error('\ud83d\udea8 [UtilsLoadingBoundary] Utils loading error:', error, errorInfo);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsProgressiveLoader.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsProgressiveLoader.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 110,
          "content": "console.error(this.state.error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsPerformanceValidator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsPerformanceValidator.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 112,
          "content": "console.log('\ud83d\udd0d [UtilsValidator] Starting performance validation...');",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "console.log(`\u2705 [UtilsValidator] Performance validation complete (${validationTime.toFixed(2)}ms):`, {",
          "type": "log"
        },
        {
          "line_number": 397,
          "content": "console.error('\u274c [UtilsValidator] Monitoring validation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 401,
          "content": "console.log(`\ud83d\udd04 [UtilsValidator] Continuous monitoring started (${intervalMs}ms interval)`);",
          "type": "log"
        },
        {
          "line_number": 413,
          "content": "console.log('\u23f9\ufe0f [UtilsValidator] Continuous monitoring stopped');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/fallbacks.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/fallbacks.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 64,
          "content": "console.error(`Progressive loading error in ${this.props.bundleId || 'unknown bundle'}:`, error, errorInfo);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/activateArchitecture.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/activateArchitecture.ts",
      "console_count": 15,
      "console_lines": [
        {
          "line_number": 36,
          "content": "console.log('\ud83d\udfe2 [UtilsArchitecture] Progressive architecture already activated');",
          "type": "log"
        },
        {
          "line_number": 48,
          "content": "console.log('\ud83d\ude80 [UtilsArchitecture] Starting progressive architecture activation...');",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log('\ud83d\udce6 [UtilsArchitecture] Phase 1: Initializing progressive loading system...');",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log('\u26a1 [UtilsArchitecture] Phase 2: Activating enhanced bundle architecture...');",
          "type": "log"
        },
        {
          "line_number": 64,
          "content": "console.log('\ud83c\udfad [UtilsArchitecture] Phase 3: Initializing progressive orchestrator...');",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log('\u2705 [UtilsArchitecture] Phase 4: Validating architecture activation...');",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log('\ud83c\udfaf [UtilsArchitecture] Progressive architecture activation SUCCESSFUL!', {",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.log('\ud83d\udcca [UtilsArchitecture] Bundle optimization summary:', {",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.error('\u274c [UtilsArchitecture] Progressive architecture activation FAILED:', activationResult.errors);",
          "type": "error"
        },
        {
          "line_number": 152,
          "content": "console.error('\ud83d\udca5 [UtilsArchitecture] Architecture activation error:', error);",
          "type": "error"
        },
        {
          "line_number": 185,
          "content": "console.log('\ud83d\udd04 [UtilsArchitecture] Forcing architecture reactivation...');",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.log('\ud83c\udf1f [UtilsArchitecture] Auto-activating progressive architecture...');",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log('\u2728 [UtilsArchitecture] Auto-activation complete:', {",
          "type": "log"
        },
        {
          "line_number": 257,
          "content": "console.log('\ud83d\udd27 [UtilsArchitecture] Debug: window.__utilsArchitectureStatus() available');",
          "type": "log"
        },
        {
          "line_number": 262,
          "content": "console.error('\u274c [UtilsArchitecture] Auto-activation failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsProgressiveOrchestrator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsProgressiveOrchestrator.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 144,
          "content": "console.log(`[UtilsOrchestrator] Variant selected: ${result.selectedVariant} (${selectionTime.toFixed(2)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 378,
          "content": "console.log(`[UtilsOrchestrator] Loaded ${variant} variant (${loadTime.toFixed(2)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 398,
          "content": "console.log(`[UtilsOrchestrator] Upgrading variant: ${this.currentVariant} -> ${targetVariant} (${reason})`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/ProgressiveLoadingManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/ProgressiveLoadingManager.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 535,
          "content": "console.error(`Fallback failed for ${bundleId}:`, fallbackError);",
          "type": "error"
        },
        {
          "line_number": 694,
          "content": "console.error(`Error in progressive loading event handler:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/phase5d-integration-test.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/phase5d-integration-test.js",
      "console_count": 48,
      "console_lines": [
        {
          "line_number": 12,
          "content": "console.log('\ud83d\ude80 Phase 5D Integration Test Starting...\\n');",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log('=== Bundle Size Validation ===');",
          "type": "log"
        },
        {
          "line_number": 21,
          "content": "console.log(`Original Bundle: ${(originalBundleSize / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 22,
          "content": "console.log(`Optimized Bundle: ${(optimizedBundleSize / 1024).toFixed(2)}kB`);",
          "type": "log"
        },
        {
          "line_number": 23,
          "content": "console.log(`Reduction: ${(reduction / 1024).toFixed(2)}kB (${reductionPercentage.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 30,
          "content": "console.log(`Target Met: ${targetMet ? '\u2705 YES' : '\u274c NO'}`);",
          "type": "log"
        },
        {
          "line_number": 31,
          "content": "console.log(`Grade: ${grade}\\n`);",
          "type": "log"
        },
        {
          "line_number": 34,
          "content": "console.log('=== System Architecture Validation ===');",
          "type": "log"
        },
        {
          "line_number": 48,
          "content": "console.log(`${component.status} ${component.name}: ${component.size}`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log(`\\nTotal System: ~35kB across 8 chunks (vs ${(originalBundleSize/1024).toFixed(1)}kB monolith)`);",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log('\\n=== Loading Strategy Validation ===');",
          "type": "log"
        },
        {
          "line_number": 65,
          "content": "console.log(`${strategy.status} ${strategy.route}: ${strategy.strategy} (${strategy.size})`);",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('\\n=== Performance Metrics Validation ===');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`${metric.status} ${metric.metric}: ${metric.achieved} (target: ${metric.target})`);",
          "type": "log"
        },
        {
          "line_number": 91,
          "content": "console.log('\\n=== Overall Phase 5 Validation Results ===');",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log(`Bundle Size Optimization: ${bundleTargetMet ? '\u2705 PASSED' : '\u274c FAILED'}`);",
          "type": "log"
        },
        {
          "line_number": 93,
          "content": "console.log(`System Architecture: ${architectureComplete ? '\u2705 COMPLETE' : '\u274c INCOMPLETE'}`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log(`Loading Strategies: ${loadingStrategiesValid ? '\u2705 VALID' : '\u274c INVALID'}`);",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.log(`Performance Metrics: ${allTargetsMet ? '\u2705 TARGETS MET' : '\u274c TARGETS MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 99,
          "content": "console.log(`\\n\ud83c\udfaf PHASE 5 OVERALL RESULT: ${overallPassed ? '\u2705 PASSED' : '\u274c FAILED'}`);",
          "type": "log"
        },
        {
          "line_number": 102,
          "content": "console.log('\\n\ud83c\udf89 PHASE 5 UTILS PROGRESSIVE LOADING SYSTEM - IMPLEMENTATION COMPLETE!');",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log('\\n\ud83d\udcca Key Achievements:');",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "console.log('   \u2022 66% bundle reduction (27.996kB \u2192 9.5kB target)');",
          "type": "log"
        },
        {
          "line_number": 105,
          "content": "console.log('   \u2022 Context-aware micro-chunking with intelligent loading');",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log('   \u2022 Behavior prediction with 80% accuracy');",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "console.log('   \u2022 Production-ready bundle splitting configuration');",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.log('   \u2022 Comprehensive performance validation framework');",
          "type": "log"
        },
        {
          "line_number": 109,
          "content": "console.log('   \u2022 Real-time monitoring and quality gates');",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log('   \u2022 Cross-browser and device compatibility');",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log('\\n\ud83d\ude80 System Status: PRODUCTION READY');",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log('\\n\ud83d\udccb Phase Completion Summary:');",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log('   \u2705 Phase 5A: UtilsProgressiveLoader with context-aware loading');",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log('   \u2705 Phase 5B: Micro-chunking system (essential/context/advanced levels)');",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log('   \u2705 Phase 5C: Intelligent behavior prediction (70-85% accuracy)');",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log('   \u2705 Phase 5D: Bundle splitting configuration & validation');",
          "type": "log"
        },
        {
          "line_number": 119,
          "content": "console.log('\\n\ud83d\udd04 Integration Points:');",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "console.log('   \u2705 React hooks with enhanced tracking');",
          "type": "log"
        },
        {
          "line_number": 121,
          "content": "console.log('   \u2705 Route-based preloading with smart caching');",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log('   \u2705 Device-aware loading strategies');",
          "type": "log"
        },
        {
          "line_number": 123,
          "content": "console.log('   \u2705 Error handling and fallback mechanisms');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('   \u2705 Performance monitoring and alerting');",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log('\\n\ud83c\udfaf Business Impact:');",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log('   \u2022 50-70% faster perceived loading times');",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log('   \u2022 60-75% reduction in bundle sizes');",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log('   \u2022 Improved user experience through predictive loading');",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log('   \u2022 Reduced bandwidth usage and server load');",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log('   \u2022 Enhanced developer productivity with automated optimization');",
          "type": "log"
        },
        {
          "line_number": 135,
          "content": "console.log('\\n\u274c Phase 5 validation failed - check critical issues');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/progressive/PerformanceValidator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/PerformanceValidator.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 536,
          "content": "console.log(`Overall Grade: ${result.overall.grade} (${result.overall.score.toFixed(1)}%)`);",
          "type": "log"
        },
        {
          "line_number": 540,
          "content": "console.log(`\\n\ud83d\udce6 Bundle Size: ${(bs.original/1024).toFixed(1)}kB \u2192 ${(bs.optimized/1024).toFixed(1)}kB (${(bs.reductionPercentage*100).toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 545,
          "content": "result.criticalIssues.forEach(issue => console.log(`   ${issue}`));",
          "type": "log"
        },
        {
          "line_number": 550,
          "content": "result.recommendations.forEach(rec => console.log(`   ${rec}`));",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/index.ts",
      "console_count": 10,
      "console_lines": [
        {
          "line_number": 124,
          "content": "console.log(`\ud83d\udcca Progressive Loading Success: ${event.bundleId}`, {",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.group('\ud83d\udcc8 Progressive Loading Performance Report');",
          "type": "group"
        },
        {
          "line_number": 147,
          "content": "console.log('Bundle Reduction:', `${(report.performanceImprovements.bundleReduction * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 148,
          "content": "console.log('Load Time Improvement:', `${(report.performanceImprovements.loadTimeImprovement * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 149,
          "content": "console.log('Cache Efficiency:', `${(report.performanceImprovements.cacheEfficiency * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 154,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 160,
          "content": "console.log('\ud83d\ude80 Progressive Loading System Initialized', {",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": ".catch(error => console.debug(`Preload failed for ${bundleId}:`, error))",
          "type": "debug"
        },
        {
          "line_number": 405,
          "content": "console.log('\ud83d\ude80 [ProgressiveIndex] Enhanced Utils architecture activation triggered');",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.error('\u274c [ProgressiveIndex] Failed to trigger architecture activation:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsBundleActivator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsBundleActivator.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 173,
          "content": "console.error(`\u274c [UtilsBundleActivator] Failed to activate ${config.id}:`, bundleResult.errors);",
          "type": "error"
        },
        {
          "line_number": 178,
          "content": "console.error(`\u274c [UtilsBundleActivator] ${errorMessage}`);",
          "type": "error"
        },
        {
          "line_number": 363,
          "content": "console.error(`\u274c [UtilsBundleActivator] Failed to load shared resource ${resourceId}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/UtilsMetrics.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/UtilsMetrics.ts",
      "console_count": 11,
      "console_lines": [
        {
          "line_number": 128,
          "content": "console.log(`${status} [UtilsMetrics] ${chunkName} in ${context}: ${loadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 140,
          "content": "console.log(`\ud83d\udd04 [UtilsMetrics] Context switch: ${from} \u2192 ${to}`);",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.log('\ud83d\udd04 [UtilsMetrics] Metrics reset');",
          "type": "log"
        },
        {
          "line_number": 407,
          "content": "console.group('\ud83d\udcca Utils Performance Insights');",
          "type": "group"
        },
        {
          "line_number": 408,
          "content": "console.log('Bundle Reduction:', `${report.summary.bundleReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 409,
          "content": "console.log('Average Load Time:', `${report.summary.averageLoadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 410,
          "content": "console.log('Success Rate:', `${report.summary.successRate.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 411,
          "content": "console.log('Context Switches:', report.summary.contextSwitches);",
          "type": "log"
        },
        {
          "line_number": 414,
          "content": "console.log('\ud83c\udfaf Optimization Recommendations:');",
          "type": "log"
        },
        {
          "line_number": 416,
          "content": "console.log(`  \u2022 ${rec.description} (${rec.expectedImprovement})`);",
          "type": "log"
        },
        {
          "line_number": 420,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/progressive/__tests__/UtilsProgressiveArchitecture.validation.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/__tests__/UtilsProgressiveArchitecture.validation.test.ts",
      "console_count": 46,
      "console_lines": [
        {
          "line_number": 103,
          "content": "console.log('\u2705 Architecture activation result:', result);",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('\u2705 Bundle activation coverage:', {",
          "type": "log"
        },
        {
          "line_number": 142,
          "content": "console.log('\u2705 Activation status metrics:', status);",
          "type": "log"
        },
        {
          "line_number": 156,
          "content": "console.log('\u2705 Bundle size reduction validation:', {",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log(`\u2705 ${variant} variant reduction:`, {",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('\u2705 Bundle size accuracy validation:', {",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log('\u2705 Performance validation result:', {",
          "type": "log"
        },
        {
          "line_number": 260,
          "content": "console.log('\u2705 Performance issues analysis:', {",
          "type": "log"
        },
        {
          "line_number": 279,
          "content": "console.log(`\u2705 Monitoring validation #${validationCount}:`, {",
          "type": "log"
        },
        {
          "line_number": 292,
          "content": "console.log('\u2705 Architecture activated for monitoring test');",
          "type": "log"
        },
        {
          "line_number": 425,
          "content": "console.log(`\u2705 ${testCase.name} context optimization:`, {",
          "type": "log"
        },
        {
          "line_number": 457,
          "content": "console.log('\u2705 Optimal utils loading result:', {",
          "type": "log"
        },
        {
          "line_number": 480,
          "content": "console.log('\u2705 Architecture health check:', {",
          "type": "log"
        },
        {
          "line_number": 504,
          "content": "console.log('\u2705 Architecture status information:', {",
          "type": "log"
        },
        {
          "line_number": 529,
          "content": "console.log('\u2705 Cross-bundle coordination validation:', {",
          "type": "log"
        },
        {
          "line_number": 541,
          "content": "console.log('\\n\ud83c\udfaf ========================================');",
          "type": "log"
        },
        {
          "line_number": 542,
          "content": "console.log('   UTILS PROGRESSIVE ARCHITECTURE VALIDATION SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 543,
          "content": "console.log('\ud83c\udfaf ========================================\\n');",
          "type": "log"
        },
        {
          "line_number": 546,
          "content": "console.log('\ud83d\udce6 Activating progressive architecture...');",
          "type": "log"
        },
        {
          "line_number": 550,
          "content": "console.log('\ud83d\udd0d Validating performance metrics...');",
          "type": "log"
        },
        {
          "line_number": 590,
          "content": "console.log('\u2705 ACTIVATION RESULTS:');",
          "type": "log"
        },
        {
          "line_number": 591,
          "content": "console.log(`   \u2022 Success: ${summary.activation.success}`);",
          "type": "log"
        },
        {
          "line_number": 592,
          "content": "console.log(`   \u2022 Bundles Activated: ${summary.activation.bundlesActivated}`);",
          "type": "log"
        },
        {
          "line_number": 593,
          "content": "console.log(`   \u2022 Reduction Achieved: ${summary.activation.reductionAchieved}`);",
          "type": "log"
        },
        {
          "line_number": 594,
          "content": "console.log(`   \u2022 Network Savings: ${summary.activation.networkSavings}\\n`);",
          "type": "log"
        },
        {
          "line_number": 596,
          "content": "console.log('\ud83d\udcca PERFORMANCE METRICS:');",
          "type": "log"
        },
        {
          "line_number": 597,
          "content": "console.log(`   \u2022 Performance Score: ${summary.performance.score}`);",
          "type": "log"
        },
        {
          "line_number": 598,
          "content": "console.log(`   \u2022 Grade: ${summary.performance.grade}`);",
          "type": "log"
        },
        {
          "line_number": 599,
          "content": "console.log(`   \u2022 Bundle Reduction: ${summary.performance.bundleReduction}`);",
          "type": "log"
        },
        {
          "line_number": 600,
          "content": "console.log(`   \u2022 Load Time: ${summary.performance.loadTime}`);",
          "type": "log"
        },
        {
          "line_number": 601,
          "content": "console.log(`   \u2022 Memory Usage: ${summary.performance.memoryUsage}`);",
          "type": "log"
        },
        {
          "line_number": 602,
          "content": "console.log(`   \u2022 Selected Variant: ${summary.performance.selectedVariant}\\n`);",
          "type": "log"
        },
        {
          "line_number": 604,
          "content": "console.log('\ud83c\udfaf TARGET ACHIEVEMENT:');",
          "type": "log"
        },
        {
          "line_number": 605,
          "content": "console.log(`   \u2022 Original Size: ${summary.targets.originalSize}`);",
          "type": "log"
        },
        {
          "line_number": 606,
          "content": "console.log(`   \u2022 Current Size: ${summary.targets.currentSize}`);",
          "type": "log"
        },
        {
          "line_number": 607,
          "content": "console.log(`   \u2022 Target Reduction: ${summary.targets.targetReduction}`);",
          "type": "log"
        },
        {
          "line_number": 608,
          "content": "console.log(`   \u2022 Actual Reduction: ${summary.targets.actualReduction}`);",
          "type": "log"
        },
        {
          "line_number": 609,
          "content": "console.log(`   \u2022 Meets Minimum (58%): ${summary.targets.meetsMinimumTarget ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 610,
          "content": "console.log(`   \u2022 Meets Optimal (75%): ${summary.targets.meetsOptimalTarget ? '\u2705' : '\u274c'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 612,
          "content": "console.log('\ud83c\udfe5 HEALTH STATUS:');",
          "type": "log"
        },
        {
          "line_number": 613,
          "content": "console.log(`   \u2022 Overall Health: ${summary.health.isHealthy ? '\u2705 Healthy' : '\u26a0\ufe0f Issues Detected'}`);",
          "type": "log"
        },
        {
          "line_number": 614,
          "content": "console.log(`   \u2022 Issues: ${summary.health.issues}`);",
          "type": "log"
        },
        {
          "line_number": 615,
          "content": "console.log(`   \u2022 Recommendations: ${summary.health.recommendations}`);",
          "type": "log"
        },
        {
          "line_number": 616,
          "content": "console.log(`   \u2022 Performance Score: ${summary.health.performanceScore}\\n`);",
          "type": "log"
        },
        {
          "line_number": 618,
          "content": "console.log('\ud83c\udf89 PROGRESSIVE ARCHITECTURE STATUS: ACTIVE AND VALIDATED');",
          "type": "log"
        },
        {
          "line_number": 619,
          "content": "console.log('\ud83c\udfaf ========================================\\n');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/progressive/validation/UtilsBundleValidator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/progressive/validation/UtilsBundleValidator.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 304,
          "content": "console.error(`[${variant}] Functionality validation error:`, error);",
          "type": "error"
        },
        {
          "line_number": 387,
          "content": "console.error(`[${variant}] TypeScript compatibility error:`, error);",
          "type": "error"
        },
        {
          "line_number": 522,
          "content": "console.error('Orchestrator validation error:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/micro-chunks/ExportUtilitiesChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/ExportUtilitiesChunk.ts",
      "console_count": 10,
      "console_lines": [
        {
          "line_number": 40,
          "content": "console.warn('No data provided for CSV export');",
          "type": "warn"
        },
        {
          "line_number": 80,
          "content": "console.error('CSV export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 105,
          "content": "console.error('JSON export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 157,
          "content": "console.error('Excel CSV export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 197,
          "content": "console.warn(`Transformer failed for column ${column}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 239,
          "content": "console.warn('No datasets provided for batch export');",
          "type": "warn"
        },
        {
          "line_number": 258,
          "content": "console.warn(`Unknown format '${format}' for dataset ${index}`);",
          "type": "warn"
        },
        {
          "line_number": 267,
          "content": "console.error(`Batch export failed for dataset ${index}:`, error);",
          "type": "error"
        },
        {
          "line_number": 282,
          "content": "console.error('Data URL export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 343,
          "content": "console.error('File download failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/micro-chunks/PerformanceMonitorChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/PerformanceMonitorChunk.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 34,
          "content": "console.warn('Performance timer start failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 81,
          "content": "console.warn('Performance timer end failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 197,
          "content": "console.warn('Memory tracking failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 295,
          "content": "console.warn('Connection info failed:', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/micro-chunks/CoreEssentialChunk.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/CoreEssentialChunk.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 181,
          "content": "console.error(`Data error in ${componentName}:`, error);",
          "type": "error"
        },
        {
          "line_number": 183,
          "content": "console.warn(`Error in ${componentName}:`, error.message);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/micro-chunks/phase7d/Phase7DOrchestrator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/phase7d/Phase7DOrchestrator.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 380,
          "content": "console.warn(`Unknown micro-chunk: ${chunkName}`);",
          "type": "warn"
        },
        {
          "line_number": 388,
          "content": "console.error(`Failed to load micro-chunk ${chunkName}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/micro-chunks/phase7d/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/micro-chunks/phase7d/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 61,
          "content": "console.log('\ud83d\ude80 Phase 7D Utils Optimization initialized');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase7/DashboardPerformanceMonitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase7/DashboardPerformanceMonitor.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 148,
          "content": "console.log(`Phase 7 ${variant} Bundle:`, {",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log('Phase 7 LCP:', `${entry.startTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log('Phase 7 FID:', `${fid.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.log('Phase 7 CLS:', cls.toFixed(4));",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log(`Phase 7 ${variant} Load:`, {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase8/Phase8Manager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/Phase8Manager.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 114,
          "content": "console.error('Phase 8 loading failed:', error);",
          "type": "error"
        },
        {
          "line_number": 317,
          "content": "console.warn(`Phase 8: Load time ${loadTime}ms exceeds threshold ${this.config.maxLoadTime}ms`);",
          "type": "warn"
        },
        {
          "line_number": 391,
          "content": "console.log('\ud83d\ude80 Phase 8 Optimization Result:', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase8/compatibility/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/compatibility/index.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 115,
          "content": "console.error(`Migration failed for ${functionName}:`, error);",
          "type": "error"
        },
        {
          "line_number": 203,
          "content": "console.warn('Phase 8 rollback completed - reverted to Phase 7 legacy system');",
          "type": "warn"
        },
        {
          "line_number": 207,
          "content": "console.error('Rollback failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/phase8/demo/Phase8Integration.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/demo/Phase8Integration.tsx",
      "console_count": 14,
      "console_lines": [
        {
          "line_number": 40,
          "content": "console.log(`\ud83d\ude80 Phase 8: Loaded utilities for ${route} in ${loadTime.toFixed(1)}ms`);",
          "type": "log"
        },
        {
          "line_number": 47,
          "content": "console.error('Phase 8 loading failed:', error);",
          "type": "error"
        },
        {
          "line_number": 55,
          "content": "console.log('\ud83d\udcca Starting performance comparison...');",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log(`\ud83d\udcca Performance Comparison:",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log('\u269b\ufe0f Phase 8 Atoms Demo:');",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.log(`Currency formatting: ${formatted}`);",
          "type": "log"
        },
        {
          "line_number": 90,
          "content": "console.log(`Number validation: ${isValid}`);",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log(`Basic stats:`, stats);",
          "type": "log"
        },
        {
          "line_number": 102,
          "content": "console.log(`Change calculation: ${(change * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.log('\ud83d\ude80 Activating Phase 8 optimization...');",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.log(`\ud83d\udcc8 Phase 8 Activation Result:",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('\ud83d\udd27 Phase 8 Compatibility Layer Demo:');",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.log(`Legacy API powered by Phase 8:",
          "type": "log"
        },
        {
          "line_number": 143,
          "content": "console.log('Compatibility layer metadata:', compatibilityUtils._compatibilityLayer);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/phase8/progressive/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/phase8/progressive/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 78,
          "content": "console.error('Phase 8 loading error:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/utils/validation/core.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/validation/core.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 35,
          "content": "console.error(`Validation error in ${context}:`, error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/utils/validation/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/utils/validation/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 46,
          "content": "console.error(`Data error in ${componentName}:`, error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/styles/css-in-js/index.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/styles/css-in-js/index.tsx",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 126,
          "content": "console.log(`\ud83d\udcca CSS Bundle Analysis:",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log(`\ud83c\udfac Animation Performance:`, animationEntries);",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log(`\ud83d\udcf1 Responsive Layout Performance: ${(endTime - startTime).toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log('\ud83d\udd27 CSS-in-JS Debug Mode Enabled');",
          "type": "log"
        },
        {
          "line_number": 196,
          "content": "console.log(`\u26a1 ${entry.name}: ${entry.duration.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`\ud83d\udccb Migration Status for ${componentPath}:`);",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log(`  \u2022 ${component}: ${target}`);",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.log(`\ud83d\udce6 Bundle Size Comparison:",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/styles/css-in-js/CriticalStylesProvider.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/styles/css-in-js/CriticalStylesProvider.tsx",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 270,
          "content": "console.warn('Failed to load animation styles:', error);",
          "type": "warn"
        },
        {
          "line_number": 280,
          "content": "console.warn('Failed to load responsive styles:', error);",
          "type": "warn"
        },
        {
          "line_number": 290,
          "content": "console.warn('Failed to load dashboard styles:', error);",
          "type": "warn"
        },
        {
          "line_number": 295,
          "content": "console.warn(`Unknown component style requested: ${component}`);",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/styles/css-in-js/ResponsiveLayoutEngine.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/styles/css-in-js/ResponsiveLayoutEngine.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 459,
          "content": "console.warn(`Failed to load responsive feature: ${featureName}`, error);",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/styles/css-in-js/demo.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/styles/css-in-js/demo.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 138,
          "content": "console.log('Demo: Dynamic styles loading simulated');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/styles/css-in-js/AnimationEngine.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/styles/css-in-js/AnimationEngine.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 249,
          "content": "console.warn(`Animation '${animationName}' not found`);",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/components/demo/LazyPortfolioDemo.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/demo/LazyPortfolioDemo.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 36,
          "content": "console.error('\u274c Portfolio Demo CSS failed to load:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/ui/CSSErrorBoundary.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/CSSErrorBoundary.tsx",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 248,
          "content": "console.error('CSS Error Boundary caught an error:', error, errorInfo);",
          "type": "error"
        },
        {
          "line_number": 260,
          "content": "console.group('\ud83c\udfa8 CSS Loading Error');",
          "type": "group"
        },
        {
          "line_number": 261,
          "content": "console.error('Error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 262,
          "content": "console.error('CSS Path:', this.props.cssPath);",
          "type": "error"
        },
        {
          "line_number": 263,
          "content": "console.error('Component Stack:', errorInfo.componentStack);",
          "type": "error"
        },
        {
          "line_number": 264,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 306,
          "content": "console.error(`\u274c CSS reload failed: ${cssPath}`, error);",
          "type": "error"
        },
        {
          "line_number": 383,
          "content": "console.error(`CSS loading error for ${cssPath}:`, error);",
          "type": "error"
        },
        {
          "line_number": 396,
          "content": "console.error(`CSS retry failed for ${cssPath}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/ui/vix-tooltip/context/ChartTooltipProvider.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/context/ChartTooltipProvider.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 89,
          "content": "console.debug(`[ChartTooltipProvider] Successfully preloaded tooltip: ${chartType}`);",
          "type": "debug"
        },
        {
          "line_number": 91,
          "content": "console.warn(`[ChartTooltipProvider] Failed to preload tooltip: ${chartType}`, error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/ui/vix-tooltip/progressive/ProgressiveFeatureLoader.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/progressive/ProgressiveFeatureLoader.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 270,
          "content": "console.error(`Failed to import feature module: ${featureId}`, error);",
          "type": "error"
        },
        {
          "line_number": 474,
          "content": "console.warn('Memory pressure detected, consider increasing memory budget or reducing feature usage');",
          "type": "warn"
        },
        {
          "line_number": 485,
          "content": "console.error('Error in feature loading event listener:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/ui/vix-tooltip/progressive/LoadingOrchestrator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/progressive/LoadingOrchestrator.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 218,
          "content": "console.warn('Loading orchestration timeout, proceeding with loaded features');",
          "type": "warn"
        },
        {
          "line_number": 225,
          "content": "console.error('Loading orchestration failed:', error);",
          "type": "error"
        },
        {
          "line_number": 269,
          "content": "console.warn(`Optional phase ${phase.phase} failed:`, error);",
          "type": "warn"
        },
        {
          "line_number": 497,
          "content": "console.warn(`Failed to load essential feature ${featureId}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 515,
          "content": "console.warn(`Failed to load basic feature ${featureId}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 523,
          "content": "console.error('Fallback strategy failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/ui/vix-tooltip/hooks/useProgressiveTooltipV2.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/hooks/useProgressiveTooltipV2.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 305,
          "content": "console.warn('Failed to load essential features:', error);",
          "type": "warn"
        },
        {
          "line_number": 368,
          "content": "console.error('Failed to analyze and load features:', error);",
          "type": "error"
        },
        {
          "line_number": 455,
          "content": "console.error('Failed to initialize essential features:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/ui/vix-tooltip/factory/useSmartTooltip.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/factory/useSmartTooltip.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 162,
          "content": "console.debug(`[useSmartTooltip] Preloaded tooltip: ${effectiveConfig.chartType}`);",
          "type": "debug"
        },
        {
          "line_number": 164,
          "content": "console.warn(`[useSmartTooltip] Failed to preload tooltip: ${effectiveConfig.chartType}`, error);",
          "type": "warn"
        },
        {
          "line_number": 208,
          "content": "console.warn(`[useSmartTooltip] Failed to load tooltip variant: ${targetVariant}`, error);",
          "type": "warn"
        },
        {
          "line_number": 270,
          "content": "console.warn(`[useSmartTooltip] Loading timeout for tooltip: ${effectiveConfig.chartType}`);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/ui/vix-tooltip/factory/createChartTooltip.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/ui/vix-tooltip/factory/createChartTooltip.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 73,
          "content": "console.warn(`Failed to preload tooltip for chart type: ${chartType}`, error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/securities/SecuritiesCharts.Progressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/securities/SecuritiesCharts.Progressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 224,
          "content": "console.log('SecuritiesCharts Progressive Selection:', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/securities/SecuritiesCharts.Advanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/securities/SecuritiesCharts.Advanced.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 180,
          "content": "console.error('Failed to load technical indicators:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/securities/SecuritiesProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/securities/SecuritiesProgressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 239,
          "content": "console.error(`Failed to load ${feature}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/css-optimization/ResponsiveLayoutEngine.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/css-optimization/ResponsiveLayoutEngine.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 246,
          "content": "console.warn(`Layout generator '${type}' not found`);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/css-optimization/demo.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/css-optimization/demo.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.warn('Animation failed:', error);",
          "type": "warn"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/LocalPointPhase3Progressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LocalPointPhase3Progressive.tsx",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 283,
          "content": "console.error('Failed to process point:', error);",
          "type": "error"
        },
        {
          "line_number": 366,
          "content": "console.error('Failed to preload chart:', error);",
          "type": "error"
        },
        {
          "line_number": 485,
          "content": "console.error('Failed to preload:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/VixBarChartPhase3LocalPoint.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/VixBarChartPhase3LocalPoint.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 132,
          "content": "console.log('Phase 3 LocalPoint Metrics:', {",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.warn('Phase 3 LocalPoint failed:', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/LazyCharts.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LazyCharts.tsx",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 209,
          "content": "console.warn('Failed to preload charts:', error);",
          "type": "warn"
        },
        {
          "line_number": 220,
          "content": "console.warn('Failed to preload core charts:', error);",
          "type": "warn"
        },
        {
          "line_number": 231,
          "content": "console.warn('Failed to preload basic charts:', error);",
          "type": "warn"
        },
        {
          "line_number": 240,
          "content": "console.warn('Failed to get preload status:', error);",
          "type": "warn"
        },
        {
          "line_number": 365,
          "content": "console.log('\ud83d\ude80 LazyCharts Phase 6 Progressive Architecture Initialized:', {",
          "type": "log"
        },
        {
          "line_number": 374,
          "content": "console.log('\ud83d\udcca Device Context Detection:', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/LocalPointPhase3MicroChunking.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LocalPointPhase3MicroChunking.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 321,
          "content": "console.error('Failed to load micro chunk:', error);",
          "type": "error"
        },
        {
          "line_number": 405,
          "content": "console.error('Failed to load chunk:', chunkId, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/ChartInfrastructureIntegration.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/ChartInfrastructureIntegration.tsx",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 459,
          "content": "console.group('\ud83d\udcca Chart Infrastructure Migration Metrics');",
          "type": "group"
        },
        {
          "line_number": 460,
          "content": "console.table(metrics.bundleReduction);",
          "type": "table"
        },
        {
          "line_number": 461,
          "content": "console.log('\ud83d\ude80', metrics.loadingImprovement);",
          "type": "log"
        },
        {
          "line_number": 462,
          "content": "console.log('\u2705', metrics.compatibilityStatus);",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/LazyCharts.Standard.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LazyCharts.Standard.tsx",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 71,
          "content": "console.error(`Failed to load ${chunkName}:`, error);",
          "type": "error"
        },
        {
          "line_number": 82,
          "content": "console.error(`\ud83d\udea8 Failed to load ${chunkName} after ${maxRetries} attempts`);",
          "type": "error"
        },
        {
          "line_number": 103,
          "content": "link.onload = () => console.log(`\ud83d\udce6 Prefetched ${chunkName}`);",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "link.onerror = () => console.warn(`\u26a0\ufe0f Failed to prefetch ${chunkName}`);",
          "type": "warn"
        },
        {
          "line_number": 232,
          "content": "console.error(`Standard chart error in ${componentName}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/PriceChart.Progressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/PriceChart.Progressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 225,
          "content": "console.log('PriceChart Progressive Selection:', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/PriceChart.Advanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/PriceChart.Advanced.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 153,
          "content": "console.error('Failed to load technical indicators:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/LocalPointPhase3Unified.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LocalPointPhase3Unified.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 204,
          "content": "console.error('Failed to get enhanced point:', error);",
          "type": "error"
        },
        {
          "line_number": 285,
          "content": "console.error('Failed to initialize unified system:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/LazyCharts.Advanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/LazyCharts.Advanced.tsx",
      "console_count": 20,
      "console_lines": [
        {
          "line_number": 117,
          "content": "console.warn('Performance monitoring not available:', error);",
          "type": "warn"
        },
        {
          "line_number": 138,
          "content": "console.log(`[${operationId}] \ud83d\ude80 Starting advanced chart import: ${chunkName}`);",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.log(`[${operationId}] \ud83d\udcdd Import attempt ${retryCount + 1}/${retryAttempts + 1} for ${chunkName}`);",
          "type": "log"
        },
        {
          "line_number": 175,
          "content": "console.log(`[${operationId}] \u2705 Advanced Chart Loaded: ${chunkName} in ${totalTime.toFixed(2)}ms (${retryCount} retries, attempt time: ${attemptTime.toFixed(2)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 176,
          "content": "console.log(`[${operationId}] \ud83d\udce6 Module exports:`, Object.keys(module));",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.warn(`[${operationId}] \u26a0\ufe0f Advanced Chart Import Failed: ${chunkName} attempt ${retryCount}/${retryAttempts + 1}`);",
          "type": "warn"
        },
        {
          "line_number": 187,
          "content": "console.warn(`[${operationId}] \ud83d\udca5 Error:`, error.message);",
          "type": "warn"
        },
        {
          "line_number": 188,
          "content": "console.warn(`[${operationId}] \u23f0 Time so far: ${currentTime.toFixed(2)}ms`);",
          "type": "warn"
        },
        {
          "line_number": 211,
          "content": "console.error(`[${operationId}] \u274c FINAL FAILURE: Advanced chart loading for ${chunkName}`);",
          "type": "error"
        },
        {
          "line_number": 212,
          "content": "console.error(`[${operationId}] \ud83d\udcca Total time: ${totalTime.toFixed(2)}ms`);",
          "type": "error"
        },
        {
          "line_number": 213,
          "content": "console.error(`[${operationId}] \ud83d\udd04 Retry attempts: ${retryCount - 1}`);",
          "type": "error"
        },
        {
          "line_number": 214,
          "content": "console.error(`[${operationId}] \ud83d\udea8 Last error:`, lastError);",
          "type": "error"
        },
        {
          "line_number": 225,
          "content": "console.warn(`[${operationId}] \u23f3 Retrying ${chunkName} in ${delay.toFixed(0)}ms...`);",
          "type": "warn"
        },
        {
          "line_number": 242,
          "content": "console.log(`\ud83d\udd04 Advanced Preload Started: ${chunkName}`);",
          "type": "log"
        },
        {
          "line_number": 386,
          "content": "console.warn('\ud83d\udd04 Primary OpenBBChart import failed, trying alternative paths:', error.message);",
          "type": "warn"
        },
        {
          "line_number": 394,
          "content": "console.error('\ud83d\udea8 All OpenBBChart import attempts failed');",
          "type": "error"
        },
        {
          "line_number": 395,
          "content": "console.error('Primary error:', error.message);",
          "type": "error"
        },
        {
          "line_number": 396,
          "content": "console.error('Fallback error:', fallbackError.message);",
          "type": "error"
        },
        {
          "line_number": 440,
          "content": "console.error(`\ud83d\udea8 Advanced Chart Error in ${componentName}:`, error);",
          "type": "error"
        },
        {
          "line_number": 445,
          "content": "console.warn(`\ud83d\udd04 Enabling fallback mode for ${componentName}`);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/BaseChart.Advanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/BaseChart.Advanced.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 87,
          "content": "console.log(`[BaseChart-Advanced] Render #${metrics.renderCount + 1}: ${renderTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log(`[Analytics] Chart Error: ${props.analyticsId}`, { error });",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/OpenBBChartOptimized.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/OpenBBChartOptimized.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 298,
          "content": "console.log('OpenBB Chart Performance:', metrics);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/__tests__/LazyCharts.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/__tests__/LazyCharts.test.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 288,
          "content": "vi.mocked(console.warn).mockImplementation(() => {});",
          "type": "warn"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/axis/AxisProgressivePhase7.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/axis/AxisProgressivePhase7.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 496,
          "content": "console.error('Failed to load progressive axis variant:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixBarChart-Progressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixBarChart-Progressive.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 224,
          "content": "console.error('Failed to load layer:', layer, error);",
          "type": "error"
        },
        {
          "line_number": 420,
          "content": "onExport={(type) => console.log(`Exported as ${type}`)}",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixResponsiveWrapper.Advanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixResponsiveWrapper.Advanced.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 237,
          "content": "console.log('[VixResponsiveWrapper Advanced] Resize complete:', {",
          "type": "log"
        },
        {
          "line_number": 252,
          "content": "console.log('[VixResponsiveWrapper Advanced] Resize started');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixResponsiveWrapper.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixResponsiveWrapper.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 170,
          "content": "*   onVariantChange={(variant, reason) => console.log('Using:', variant)}",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixScatterPlotProgressiveEnhanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixScatterPlotProgressiveEnhanced.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 204,
          "content": "console.log('Upgrade to advanced scatter plot');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixPieChartProgressivePhase7.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixPieChartProgressivePhase7.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 192,
          "content": "console.log('Upgrade to advanced pie chart');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixComposedChart.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixComposedChart.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 460,
          "content": "console.log('\ud83d\ude80 VixComposedChart Ultra-Optimized: Target 16.40kB \u2192 3.3-4.1kB (75-80% reduction)');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixBaseChart.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixBaseChart.test.tsx",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 28,
          "content": "console.log('\ud83e\uddea VixBaseChart Phase 6 Optimization - Validation Tests');",
          "type": "log"
        },
        {
          "line_number": 29,
          "content": "console.log('='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 39,
          "content": "console.log(`\u2705 ${variant} - Implementation completed`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log('='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log('\ud83d\udcca Bundle Size Projections:');",
          "type": "log"
        },
        {
          "line_number": 44,
          "content": "console.log('\u2022 Original VixBaseChart: ~13.9kB');",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log('\u2022 Essential variant: ~1.0kB (92% reduction)');",
          "type": "log"
        },
        {
          "line_number": 46,
          "content": "console.log('\u2022 Standard variant: ~2.5kB (82% reduction)');",
          "type": "log"
        },
        {
          "line_number": 47,
          "content": "console.log('\u2022 Advanced variant: ~4.0kB (71% reduction)');",
          "type": "log"
        },
        {
          "line_number": 48,
          "content": "console.log('\u2022 Progressive orchestrator: ~0.3kB');",
          "type": "log"
        },
        {
          "line_number": 49,
          "content": "console.log('='.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 50,
          "content": "console.log('\ud83c\udfaf Phase 6 Success: 71-92% bundle size reduction achieved');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/VixComposedChartProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixComposedChartProgressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 322,
          "content": "console.log('[Phase7] VixComposedChart orchestrator initialized:', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/VixScatterPlotProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/VixScatterPlotProgressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 385,
          "content": "console.error('[VixScatterPlotProgressive] Loading failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/variants/VixComposedChartEssential.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/variants/VixComposedChartEssential.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 239,
          "content": "console.log('[Phase7] VixComposedChartEssential loaded - Target: 1.5-2kB (85%+ reduction)');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/__tests__/VixLegendProgressive.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/__tests__/VixLegendProgressive.test.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 412,
          "content": "// Mock console.error to suppress error output",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/AnalyticsRiskCore.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/AnalyticsRiskCore.tsx",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 94,
          "content": "onError={(error) => console.error('RiskIndicators error:', error)}",
          "type": "error"
        },
        {
          "line_number": 109,
          "content": "onError={(error) => console.error('RiskMetrics error:', error)}",
          "type": "error"
        },
        {
          "line_number": 124,
          "content": "onError={(error) => console.error('RiskCalculations error:', error)}",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/AnalyticsTabsCore.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/AnalyticsTabsCore.tsx",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 157,
          "content": "onError={(error) => console.error('TabContent error:', error)}",
          "type": "error"
        },
        {
          "line_number": 172,
          "content": "onError={(error) => console.error('TabVisuals error:', error)}",
          "type": "error"
        },
        {
          "line_number": 187,
          "content": "onError={(error) => console.error('TabUtils error:', error)}",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/integration-validation.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/integration-validation.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 158,
          "content": "console.error('System validation failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/final-integration-test.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/final-integration-test.js",
      "console_count": 73,
      "console_lines": [
        {
          "line_number": 10,
          "content": "console.log('\ud83c\udfaf Phase 7D Complete System Integration Test');",
          "type": "log"
        },
        {
          "line_number": 11,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log('\ud83d\udce6 COMPONENT ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`${index + 1}. ${component.name}`);",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`   Path: ${component.path.split('/').pop()}`);",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.log(`   Size: ${analysis.size.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.log(`   Target: ${component.target.min}-${component.target.max} bytes`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log(`   Status: ${status}`);",
          "type": "log"
        },
        {
          "line_number": 86,
          "content": "console.log(`   Critical: ${component.critical ? 'YES' : 'NO'}`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 97,
          "content": "console.log('\ud83d\udcca SYSTEM INTEGRATION METRICS');",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 106,
          "content": "console.log(`Original Bundle Size:     ${originalBundleSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 107,
          "content": "console.log(`Current Total Size:       ${totalSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.log(`Bundle Reduction:         ${reductionPercentage.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 109,
          "content": "console.log(`Target Reduction:         60-67%`);",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log(`Target Status:            ${targetMet ? '\u2705 ACHIEVED' : '\u274c MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log(`Components Passing:       ${passingComponents}/${components.length}`);",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.log(`Critical Components:      ${criticalComponents}/2`);",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log('\u26a1 PERFORMANCE PROJECTIONS');",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log(`Estimated Load Time (3G): ${estimatedLoadTime}ms (vs ${originalLoadTime}ms)`);",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log(`Load Time Improvement:    ${loadTimeImprovement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log(`Estimated Memory Usage:   ${estimatedMemory}MB (vs ${originalMemory}MB)`);",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log(`Memory Improvement:       ${memoryImprovement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log('\ud83c\udfad DEPLOYMENT READINESS');",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 141,
          "content": "console.log(`Essential Components:     ${criticalComponents >= 2 ? '\u2705 READY' : '\u274c NOT READY'}`);",
          "type": "log"
        },
        {
          "line_number": 142,
          "content": "console.log(`Performance Targets:      ${performanceTarget ? '\u2705 MET' : '\u274c MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 143,
          "content": "console.log(`System Integrity:         ${systemIntegrity ? '\u2705 GOOD' : '\u274c ISSUES'}`);",
          "type": "log"
        },
        {
          "line_number": 149,
          "content": "console.log(`Deployment Status:        ${deploymentStatus}`);",
          "type": "log"
        },
        {
          "line_number": 151,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 152,
          "content": "console.log('\ud83d\udd2c ARCHITECTURE VALIDATION');",
          "type": "log"
        },
        {
          "line_number": 153,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log(`${index + 1}. ${layer.layer}`);",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log(`   Size: ${layer.size.toLocaleString()}B (target: ${layer.target.toLocaleString()}B)`);",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log(`   Efficiency: ${efficiency > 0 ? '+' : ''}${efficiency.toFixed(1)}% vs target`);",
          "type": "log"
        },
        {
          "line_number": 184,
          "content": "console.log(`   Status: ${status}`);",
          "type": "log"
        },
        {
          "line_number": 185,
          "content": "console.log(`   Features: ${layer.functionality}`);",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 189,
          "content": "console.log('\ud83d\udcc8 BUSINESS IMPACT ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 190,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.log(`Estimated Daily Users:    ${dailyUsers.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 199,
          "content": "console.log(`Average Sessions/User:    ${averageSessions}`);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log(`Daily Data Savings:       ${dailySavings}MB`);",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log(`Monthly Data Savings:     ${(monthlySavings / 1024).toFixed(1)}GB`);",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log(`Load Time Improvement:    ${loadTimeImprovement.toFixed(1)}% faster`);",
          "type": "log"
        },
        {
          "line_number": 203,
          "content": "console.log(`User Experience Impact:   ${loadTimeImprovement > 50 ? 'SIGNIFICANT' : 'MODERATE'}`);",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('\ud83c\udfc6 FINAL INTEGRATION ASSESSMENT');",
          "type": "log"
        },
        {
          "line_number": 207,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 224,
          "content": "console.log(`Bundle Size Reduction:    ${reductionPercentage.toFixed(1)}% (target: 60-67%)`);",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log(`Performance Improvement:  ${loadTimeImprovement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.log(`Memory Efficiency:        ${memoryImprovement.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 227,
          "content": "console.log(`System Integration:       ${passingComponents}/${components.length} components passing`);",
          "type": "log"
        },
        {
          "line_number": 228,
          "content": "console.log(`Production Readiness:     ${deploymentStatus}`);",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.log(`Overall Grade:            ${overallGrade}`);",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log('\ud83d\udccb RECOMMENDATIONS:');",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.log(`   ${index + 1}. ${rec}`);",
          "type": "log"
        },
        {
          "line_number": 239,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.log('\ud83c\udf89 INTEGRATION SUCCESS: Phase 7D optimization achieved excellent results!');",
          "type": "log"
        },
        {
          "line_number": 242,
          "content": "console.log('\ud83d\ude80 Ready for production deployment with outstanding performance gains.');",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log('\u2705 INTEGRATION GOOD: Phase 7D optimization shows good progress.');",
          "type": "log"
        },
        {
          "line_number": 245,
          "content": "console.log('\ud83d\udd04 Consider additional optimizations before production deployment.');",
          "type": "log"
        },
        {
          "line_number": 247,
          "content": "console.log('\u26a0\ufe0f INTEGRATION NEEDS WORK: Phase 7D requires further optimization.');",
          "type": "log"
        },
        {
          "line_number": 248,
          "content": "console.log('\ud83d\udee0\ufe0f Address critical issues before proceeding to production.');",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 252,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 253,
          "content": "console.log('\ud83d\udcca Integration Test Complete - See results above');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/complete-system-demo.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/complete-system-demo.js",
      "console_count": 84,
      "console_lines": [
        {
          "line_number": 5,
          "content": "console.log('\ud83c\udfaf Phase 7D Complete System Demonstration');",
          "type": "log"
        },
        {
          "line_number": 6,
          "content": "console.log('='.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log('\ud83d\udcca PHASE 7D ACHIEVEMENT MATRIX');",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log('-'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log('\ud83c\udfc6 ORIGINAL vs OPTIMIZED COMPARISON:');",
          "type": "log"
        },
        {
          "line_number": 46,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log(`${index + 1}. ${item.category}`);",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log(`   Original:     ${item.original}`);",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`   Optimized:    ${item.optimized}`);",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.log(`   Improvement:  ${item.improvement} faster/smaller`);",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.log(`   Status:       ${item.status}`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log('\ud83d\ude80 DEPLOYMENT TIER ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 89,
          "content": "console.log('-'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.log(`${index + 1}. ${tier.tier}`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log(`   Bundle Size:      ${tier.bundleSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log(`   Target Users:     ${tier.targetUsers}`);",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log(`   Features:         ${tier.features}`);",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.log(`   Reduction:        ${typeof tier.reduction === 'number' ? tier.reduction + '%' : tier.reduction}`);",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log(`   Load Time (3G):   ${tier.loadTime}ms`);",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log(`   Status:           ${tier.deploymentStatus}`);",
          "type": "log"
        },
        {
          "line_number": 132,
          "content": "console.log(`   Production Ready: ${tier.productionReady ? '\u2705 YES' : '\u26a0\ufe0f NEEDS OPTIMIZATION'}`);",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 136,
          "content": "console.log('\ud83d\udcc8 BUSINESS IMPACT PROJECTION');",
          "type": "log"
        },
        {
          "line_number": 137,
          "content": "console.log('-'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "console.log('\ud83d\udcca Daily Impact Projections:');",
          "type": "log"
        },
        {
          "line_number": 158,
          "content": "console.log(`   Daily Users:          ${businessMetrics.dailyUsers.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 159,
          "content": "console.log(`   Daily Sessions:       ${dailyImpact.totalSessions.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 160,
          "content": "console.log(`   Time Saved Daily:     ${(dailyImpact.timeSaved / 3600).toFixed(1)} hours`);",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log(`   Data Saved Daily:     ${dailyImpact.dataSaved.toFixed(1)} MB`);",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log(`   Monthly Data Savings: ${(dailyImpact.dataSaved * 30 / 1024).toFixed(1)} GB`);",
          "type": "log"
        },
        {
          "line_number": 163,
          "content": "console.log(`   Server Load Reduction: ${dailyImpact.serverLoadReduction}`);",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log(`   User Satisfaction:    ${dailyImpact.userSatisfactionIncrease}`);",
          "type": "log"
        },
        {
          "line_number": 166,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 167,
          "content": "console.log('\ud83d\udd27 TECHNICAL EXCELLENCE METRICS');",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.log('-'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log(`\ud83d\udccb ${category.toUpperCase()}:`);",
          "type": "log"
        },
        {
          "line_number": 195,
          "content": "console.log(`   ${label}:`.padEnd(25) + value);",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('\ud83c\udfaf VALIDATION SCORECARD');",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('-'.repeat(60));",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log(`${index + 1}. ${score.category}`);",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log(`   Target:    ${score.target}`);",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log(`   Achieved:  ${score.achieved}`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`   Grade:     ${score.grade}`);",
          "type": "log"
        },
        {
          "line_number": 219,
          "content": "console.log(`   Status:    \u2705 ${score.status}`);",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 224,
          "content": "console.log(`\ud83d\udcca OVERALL VALIDATION GRADE: ${averageGrade} (${averageGrade === 'A+' ? 'OUTSTANDING' : 'EXCELLENT'} SUCCESS)`);",
          "type": "log"
        },
        {
          "line_number": 226,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 227,
          "content": "console.log('\ud83c\udfc6 PHASE 7D INTEGRATION SUCCESS SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 228,
          "content": "console.log('='.repeat(80));",
          "type": "log"
        },
        {
          "line_number": 230,
          "content": "console.log('\ud83c\udf89 MISSION ACCOMPLISHED: COMPLETE SUCCESS');",
          "type": "log"
        },
        {
          "line_number": 231,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.log('\u2705 KEY ACHIEVEMENTS:');",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log(`   \ud83d\udce6 Bundle Reduction:      ${phase7DResults.performanceGains.bundleReduction}% (EXCEEDS TARGET)`);",
          "type": "log"
        },
        {
          "line_number": 234,
          "content": "console.log(`   \u26a1 Load Time Improvement: ${phase7DResults.performanceGains.loadTimeImprovement}% faster`);",
          "type": "log"
        },
        {
          "line_number": 235,
          "content": "console.log(`   \ud83d\udcbe Memory Efficiency:     ${phase7DResults.performanceGains.memoryReduction}% reduction`);",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log(`   \ud83c\udf10 Browser Compatibility: 100% support`);",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.log(`   \ud83e\uddea Test Coverage:         94.7% comprehensive`);",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.log(`   \ud83d\udd27 Code Quality:          100% compliance`);",
          "type": "log"
        },
        {
          "line_number": 239,
          "content": "console.log(`   \ud83d\ude80 Production Readiness:  Tiers 1-2 IMMEDIATE deployment`);",
          "type": "log"
        },
        {
          "line_number": 240,
          "content": "console.log(`   \ud83d\udc69\u200d\ud83d\udcbb Developer Experience:  EXCELLENT (Modular architecture)`);",
          "type": "log"
        },
        {
          "line_number": 242,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 243,
          "content": "console.log('\ud83d\udcc8 BUSINESS VALUE:');",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log(`   \ud83d\udcb0 Cost Savings:         HIGH (65% server load reduction)`);",
          "type": "log"
        },
        {
          "line_number": 245,
          "content": "console.log(`   \ud83d\udcf1 User Experience:       SIGNIFICANTLY IMPROVED`);",
          "type": "log"
        },
        {
          "line_number": 246,
          "content": "console.log(`   \ud83d\udd04 Maintainability:       OUTSTANDING (Micro-chunk system)`);",
          "type": "log"
        },
        {
          "line_number": 247,
          "content": "console.log(`   \ud83d\udcca Competitive Advantage: INDUSTRY-LEADING optimization`);",
          "type": "log"
        },
        {
          "line_number": 249,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 250,
          "content": "console.log('\ud83d\ude80 DEPLOYMENT RECOMMENDATION:');",
          "type": "log"
        },
        {
          "line_number": 251,
          "content": "console.log('   \u2705 PROCEED WITH IMMEDIATE PRODUCTION DEPLOYMENT');",
          "type": "log"
        },
        {
          "line_number": 252,
          "content": "console.log('   \ud83d\udcc5 Timeline: Deploy Tiers 1-2 within 24-48 hours');",
          "type": "log"
        },
        {
          "line_number": 253,
          "content": "console.log('   \ud83d\udd04 Strategy: Continue Tier 3 optimization in parallel');",
          "type": "log"
        },
        {
          "line_number": 254,
          "content": "console.log('   \ud83d\udcca Monitoring: Track performance metrics and user analytics');",
          "type": "log"
        },
        {
          "line_number": 256,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 257,
          "content": "console.log('\ud83c\udfc6 SUBAGENT 4 MISSION STATUS: COMPLETE SUCCESS');",
          "type": "log"
        },
        {
          "line_number": 258,
          "content": "console.log('   Phase 7D Data Bundle Optimization achieved OUTSTANDING results');",
          "type": "log"
        },
        {
          "line_number": 259,
          "content": "console.log('   Ready for production with exceptional performance gains');",
          "type": "log"
        },
        {
          "line_number": 260,
          "content": "console.log('   This represents the most successful optimization in project history');",
          "type": "log"
        },
        {
          "line_number": 262,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 263,
          "content": "console.log('\ud83e\udd16 Generated by SUBAGENT 4 - Integration & Validation Specialist');",
          "type": "log"
        },
        {
          "line_number": 264,
          "content": "console.log('\ud83d\udcc5 Completed: August 26, 2025');",
          "type": "log"
        },
        {
          "line_number": 265,
          "content": "console.log('\u2705 Status: MISSION ACCOMPLISHED');",
          "type": "log"
        },
        {
          "line_number": 266,
          "content": "console.log('='.repeat(80));",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/accurate-integration-assessment.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/accurate-integration-assessment.js",
      "console_count": 88,
      "console_lines": [
        {
          "line_number": 5,
          "content": "console.log('\ud83c\udfaf Phase 7D ACCURATE Integration Assessment');",
          "type": "log"
        },
        {
          "line_number": 6,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 38,
          "content": "console.log('\ud83d\udce6 ACCURATE BUNDLE SIZE ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 39,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log('\ud83c\udfc6 LAYER 1 - ESSENTIAL CORE');",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log(`   Original Size:        ${actualResults.essential.originalSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 44,
          "content": "console.log(`   Optimized Size:       ${actualResults.essential.optimizedSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log(`   Reduction:           ${actualResults.essential.reduction}%`);",
          "type": "log"
        },
        {
          "line_number": 46,
          "content": "console.log(`   Target Range:        800-1,200 bytes`);",
          "type": "log"
        },
        {
          "line_number": 47,
          "content": "console.log(`   Status:              \u2705 ${actualResults.essential.status} (EXCELLENT)`);",
          "type": "log"
        },
        {
          "line_number": 48,
          "content": "console.log(`   Production Ready:    \u2705 IMMEDIATE DEPLOYMENT`);",
          "type": "log"
        },
        {
          "line_number": 49,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log('\ud83d\ude80 LAYER 2 - PROGRESSIVE ENHANCEMENTS');",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`   Bundle Size:         ${actualResults.progressive.bundleSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log(`   Target Range:        ${actualResults.progressive.target.min}-${actualResults.progressive.target.max} bytes`);",
          "type": "log"
        },
        {
          "line_number": 55,
          "content": "console.log(`   Efficiency:          ${actualResults.progressive.efficiency}% vs target`);",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log(`   Status:              \u2705 ${actualResults.progressive.status} (EXCELLENT)`);",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log(`   Production Ready:    \u2705 IMMEDIATE DEPLOYMENT`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 64,
          "content": "console.log('\ud83c\udfaf COMBINED PRODUCTION SYSTEM (LAYERS 1+2)');",
          "type": "log"
        },
        {
          "line_number": 65,
          "content": "console.log(`   Combined Size:       ${combinedSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log(`   Original Size:       ${actualResults.essential.originalSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log(`   Total Reduction:     ${combinedReduction.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log(`   Target Achievement:  \u2705 EXCEEDS 60-67% target`);",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log(`   Status:              \ud83c\udfc6 OUTSTANDING SUCCESS`);",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log('\u26a1 LAYER 3 - ADVANCED FEATURES (SPECIALIZED)');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log(`   Bundle Size:         ${actualResults.advanced.bundleSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log(`   Target Size:         ${actualResults.advanced.target.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log(`   Efficiency:          ${actualResults.advanced.efficiency}% of target`);",
          "type": "log"
        },
        {
          "line_number": 77,
          "content": "console.log(`   Status:              \u26a0\ufe0f ${actualResults.advanced.status} (FOR OPTIMIZATION)`);",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log(`   Usage:               \ud83c\udfaf SPECIALIZED POWER USERS ONLY`);",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 81,
          "content": "console.log('\ud83c\udfc6 PRODUCTION DEPLOYMENT STRATEGY');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 109,
          "content": "console.log(`${index + 1}. ${tier.name}`);",
          "type": "log"
        },
        {
          "line_number": 110,
          "content": "console.log(`   Bundle Size:      ${typeof tier.size === 'number' ? tier.size.toLocaleString() + ' bytes' : 'Variable'}`);",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log(`   Reduction:        ${typeof tier.reduction === 'number' ? tier.reduction.toFixed(1) + '%' : tier.reduction}`);",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.log(`   Target Users:     ${tier.target}`);",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log(`   Status:           ${tier.status}`);",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log('\u26a1 PERFORMANCE IMPACT ANALYSIS');",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 137,
          "content": "console.log(`\ud83d\udcca ${metric.tier}`);",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.log(`   Load Time (3G):      ${metric.loadTime3G}ms (vs 180ms baseline)`);",
          "type": "log"
        },
        {
          "line_number": 139,
          "content": "console.log(`   Improvement:         ${metric.improvement.toFixed(1)}% faster`);",
          "type": "log"
        },
        {
          "line_number": 140,
          "content": "console.log(`   Memory Reduction:    ~85% less memory usage`);",
          "type": "log"
        },
        {
          "line_number": 141,
          "content": "console.log(`   Network Savings:     ${((9160 - metric.size) / 1024).toFixed(1)}KB per load`);",
          "type": "log"
        },
        {
          "line_number": 142,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 145,
          "content": "console.log('\ud83c\udfaf BUSINESS IMPACT VALIDATION');",
          "type": "log"
        },
        {
          "line_number": 146,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 158,
          "content": "console.log(`   ${label}:`.padEnd(25) + value);",
          "type": "log"
        },
        {
          "line_number": 161,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 162,
          "content": "console.log('\ud83d\udccb QUALITY ASSURANCE METRICS');",
          "type": "log"
        },
        {
          "line_number": 163,
          "content": "console.log('-'.repeat(50));",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log(`   ${key}:`.padEnd(25) + value);",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 181,
          "content": "console.log('\ud83c\udfc6 FINAL VALIDATION SCORECARD');",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log(`${category}:`.padEnd(25) + grade);",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.log(`OVERALL GRADE: ${overallGrade} (${overallGrade === 'A+' ? 'OUTSTANDING' : 'EXCELLENT'} SUCCESS)`);",
          "type": "log"
        },
        {
          "line_number": 204,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 205,
          "content": "console.log('\u2705 INTEGRATION SUCCESS SUMMARY');",
          "type": "log"
        },
        {
          "line_number": 206,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        },
        {
          "line_number": 208,
          "content": "console.log('\ud83c\udf89 PHASE 7D INTEGRATION: COMPLETE SUCCESS');",
          "type": "log"
        },
        {
          "line_number": 209,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 210,
          "content": "console.log('KEY ACHIEVEMENTS:');",
          "type": "log"
        },
        {
          "line_number": 211,
          "content": "console.log(`\u2705 Bundle Reduction:      ${combinedReduction.toFixed(1)}% (EXCEEDS 60-67% target)`);",
          "type": "log"
        },
        {
          "line_number": 212,
          "content": "console.log(`\u2705 Load Time Improvement: ${combinedReduction.toFixed(1)}% faster`);",
          "type": "log"
        },
        {
          "line_number": 213,
          "content": "console.log(`\u2705 Memory Efficiency:     85% reduction`);",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log(`\u2705 Production Ready:      Layers 1-2 ready for immediate deployment`);",
          "type": "log"
        },
        {
          "line_number": 215,
          "content": "console.log(`\u2705 Code Quality:          100% compliance with all standards`);",
          "type": "log"
        },
        {
          "line_number": 216,
          "content": "console.log(`\u2705 Test Coverage:         94.7% comprehensive validation`);",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log(`\u2705 Compatibility:         100% browser support`);",
          "type": "log"
        },
        {
          "line_number": 218,
          "content": "console.log(`\u2705 Developer Experience:  Modular micro-chunk architecture`);",
          "type": "log"
        },
        {
          "line_number": 220,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 221,
          "content": "console.log('\ud83d\ude80 DEPLOYMENT RECOMMENDATION:');",
          "type": "log"
        },
        {
          "line_number": 222,
          "content": "console.log('   PROCEED WITH IMMEDIATE PRODUCTION DEPLOYMENT');",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.log('   - Deploy Essential + Progressive layers (3.8kB total)');",
          "type": "log"
        },
        {
          "line_number": 224,
          "content": "console.log('   - Continue optimizing Advanced layer in parallel');",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log('   - Monitor performance and gather usage analytics');",
          "type": "log"
        },
        {
          "line_number": 227,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 228,
          "content": "console.log('\ud83c\udfc6 PHASE 7D: MISSION ACCOMPLISHED');",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.log('   Outstanding success with industry-leading optimization results');",
          "type": "log"
        },
        {
          "line_number": 230,
          "content": "console.log('   Ready for production with exceptional performance gains');",
          "type": "log"
        },
        {
          "line_number": 231,
          "content": "console.log('');",
          "type": "log"
        },
        {
          "line_number": 232,
          "content": "console.log('='.repeat(70));",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/TabUtils.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/TabUtils.tsx",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 84,
          "content": "action: () => console.log('Refreshing data...')",
          "type": "log"
        },
        {
          "line_number": 91,
          "content": "action: () => console.log('Sharing analysis...')",
          "type": "log"
        },
        {
          "line_number": 102,
          "content": "action: () => console.log('Setting alerts...')",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "action: () => console.log('Adding peer...')",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "action: () => console.log('Opening model settings...')",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "action: () => console.log('Generating risk report...')",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "action: () => console.log('Adding indicators...')",
          "type": "log"
        },
        {
          "line_number": 147,
          "content": "action: () => console.log('Opening earnings calendar...')",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/AdvancedTierDemo.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/AdvancedTierDemo.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 208,
          "content": "onError={(error) => console.error('Risk Analytics error:', error)}",
          "type": "error"
        },
        {
          "line_number": 238,
          "content": "onError={(error) => console.error('Tabs System error:', error)}",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/advanced-grid-index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced-grid-index.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 178,
          "content": "console.log('[Phase7C] Initializing complete advanced grid optimization system...');",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.log('[Phase7C] Advanced grid optimization system ready');",
          "type": "log"
        },
        {
          "line_number": 309,
          "content": "console.log('[Phase7C] Shutting down advanced grid optimization system...');",
          "type": "log"
        },
        {
          "line_number": 317,
          "content": "console.log('[Phase7C] Advanced grid optimization system shutdown complete');",
          "type": "log"
        },
        {
          "line_number": 336,
          "content": "console.log(`[Phase7C] Advanced Grid Optimization Framework v${PHASE7C_VERSION} loaded with ${PHASE7C_FEATURES.length} features`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/GridOptimizationFramework.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/GridOptimizationFramework.ts",
      "console_count": 23,
      "console_lines": [
        {
          "line_number": 109,
          "content": "console.log('[GridOptimizationFramework] Comprehensive grid optimization framework initialized');",
          "type": "log"
        },
        {
          "line_number": 117,
          "content": "console.log('[GridOptimizationFramework] Initializing comprehensive optimization framework...');",
          "type": "log"
        },
        {
          "line_number": 131,
          "content": "console.log('[GridOptimizationFramework] Framework initialization complete');",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.error('[GridOptimizationFramework] Framework initialization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 143,
          "content": "console.log('[GridOptimizationFramework] All subsystems initialized');",
          "type": "log"
        },
        {
          "line_number": 150,
          "content": "console.log('[GridOptimizationFramework] Integration points established');",
          "type": "log"
        },
        {
          "line_number": 157,
          "content": "console.log('[GridOptimizationFramework] Analytics and monitoring active');",
          "type": "log"
        },
        {
          "line_number": 170,
          "content": "console.log('[GridOptimizationFramework] Starting comprehensive grid optimization for', request.chartType);",
          "type": "log"
        },
        {
          "line_number": 200,
          "content": "console.log('[GridOptimizationFramework] Cache hit - returning cached optimization');",
          "type": "log"
        },
        {
          "line_number": 269,
          "content": "console.log('[GridOptimizationFramework] Optimization completed successfully:', {",
          "type": "log"
        },
        {
          "line_number": 282,
          "content": "console.error('[GridOptimizationFramework] Optimization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 319,
          "content": "console.warn('[GridOptimizationFramework] Cache check failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 333,
          "content": "console.error('[GridOptimizationFramework] Complexity analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 357,
          "content": "console.error('[GridOptimizationFramework] Chart optimization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 382,
          "content": "console.error('[GridOptimizationFramework] Loading strategy generation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 431,
          "content": "console.error('[GridOptimizationFramework] Advanced grid creation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 461,
          "content": "console.log('[GridOptimizationFramework] Viewport optimization set up for', request.chartId);",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.error('[GridOptimizationFramework] Viewport optimization setup failed:', error);",
          "type": "error"
        },
        {
          "line_number": 500,
          "content": "console.error('[GridOptimizationFramework] Optimization caching failed:', error);",
          "type": "error"
        },
        {
          "line_number": 522,
          "content": "console.error('[GridOptimizationFramework] Analytics tracking failed:', error);",
          "type": "error"
        },
        {
          "line_number": 622,
          "content": "console.log('[GridOptimizationFramework] Configuration updated');",
          "type": "log"
        },
        {
          "line_number": 628,
          "content": "console.log('[GridOptimizationFramework] Optimization history cleared');",
          "type": "log"
        },
        {
          "line_number": 642,
          "content": "console.log('[GridOptimizationFramework] Framework destroyed and resources cleaned up');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/advanced/advanced.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced/advanced.test.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 243,
          "content": "console.log(`Advanced features loaded: ${footprint.features.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 244,
          "content": "console.log(`Advanced layer size: ${footprint.loaded} bytes`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/advanced/usage-examples.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced/usage-examples.tsx",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 11,
          "content": "console.log('[Example] Loading animation features...');",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "console.log('[Example] Animations enabled with advanced features');",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log(`[Example] Loading accessibility features for ${level} mode`);",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.log(`Data point ${i}: ${data[i]}`);",
          "type": "log"
        },
        {
          "line_number": 134,
          "content": "console.log('[Example] Loading export capabilities...');",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log(`[Example] Triggering predictive preload for: ${interaction}`);",
          "type": "log"
        },
        {
          "line_number": 259,
          "content": "console.log(`[ProgressiveStack] Loading ${layer} layer...`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/advanced/bundle-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/advanced/bundle-validation.js",
      "console_count": 30,
      "console_lines": [
        {
          "line_number": 25,
          "content": "console.log('\ud83d\udd0d Advanced Features Bundle Size Validation');",
          "type": "log"
        },
        {
          "line_number": 26,
          "content": "console.log('===========================================');",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log(`${status} ${filename}: ${actualSize} bytes (${percentage}% of ${target}B target)`);",
          "type": "log"
        },
        {
          "line_number": 46,
          "content": "console.log(`\u274c ${filename}: File not found`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log('\\n\ud83d\udcca Advanced Features Summary:');",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log(`Total Size: ${totalSize} bytes`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`Target Size: ${TOTAL_TARGET} bytes`);",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log(`Efficiency: ${((totalSize / TOTAL_TARGET) * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 55,
          "content": "console.log(`Status: ${totalSize <= TOTAL_TARGET ? '\u2705 Within Target' : '\u26a0\ufe0f Exceeds Target'}`);",
          "type": "log"
        },
        {
          "line_number": 66,
          "content": "console.log(`\\n\ud83c\udf9b\ufe0f Orchestrator Size: ${orchestratorSize} bytes`);",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log(`\ud83d\udce6 Total with Orchestrator: ${totalWithOrchestrator} bytes`);",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log('\\n\ud83c\udfd7\ufe0f Complete Progressive Stack:');",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log(`Essential Core: ${ESSENTIAL_SIZE} bytes`);",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log(`Progressive Enhancements: ${ENHANCEMENTS_SIZE} bytes`);",
          "type": "log"
        },
        {
          "line_number": 77,
          "content": "console.log(`Advanced Features: ${totalWithOrchestrator} bytes`);",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log(`Complete Stack: ${completeStackSize} bytes`);",
          "type": "log"
        },
        {
          "line_number": 79,
          "content": "console.log(`Target Stack (\u22647kB): ${completeStackSize <= 7000 ? '\u2705 Within Target' : '\u26a0\ufe0f Exceeds Target'}`);",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log('\u274c AdvancedOrchestrator.ts: File not found');",
          "type": "log"
        },
        {
          "line_number": 87,
          "content": "console.log('\\n\ud83e\udde0 Memory Efficiency Analysis:');",
          "type": "log"
        },
        {
          "line_number": 88,
          "content": "console.log('On-Demand Loading Benefits:');",
          "type": "log"
        },
        {
          "line_number": 89,
          "content": "console.log(`- Minimum Load: ${Math.min(...Object.values(TARGET_SIZES))} bytes (single feature)`);",
          "type": "log"
        },
        {
          "line_number": 90,
          "content": "console.log(`- Common Features: ~900 bytes (transitions + easing + screenReader)`);",
          "type": "log"
        },
        {
          "line_number": 91,
          "content": "console.log(`- Memory Cleanup: Automatic unloading of unused features`);",
          "type": "log"
        },
        {
          "line_number": 92,
          "content": "console.log(`- Smart Preloading: Predictive loading based on user interactions`);",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('\\n\ud83d\udcc8 Progressive Loading Efficiency:');",
          "type": "log"
        },
        {
          "line_number": 95,
          "content": "console.log(`Layer 1 (Essential): 1.2kB \u2192 Basic functionality`);",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log(`Layer 2 (Enhanced): +2.7kB \u2192 Interactive features`);",
          "type": "log"
        },
        {
          "line_number": 97,
          "content": "console.log(`Layer 3 (Advanced): +${(totalWithOrchestrator/1000).toFixed(1)}kB \u2192 Advanced capabilities`);",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log(`Total Growth: ${((completeStackSize/ESSENTIAL_SIZE - 1) * 100).toFixed(0)}% size increase for ${((Object.keys(TARGET_SIZES).length + 1) * 100 / 3).toFixed(0)}% more features`);",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log(`\\n\ud83c\udfaf Final Validation: ${finalStatus ? '\u2705 PASSED' : '\u274c FAILED'}`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/atoms/validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/atoms/validation.js",
      "console_count": 43,
      "console_lines": [
        {
          "line_number": 10,
          "content": "console.log('\ud83c\udfaf Phase 7C.1 Essential Atomization - Final Validation');",
          "type": "log"
        },
        {
          "line_number": 11,
          "content": "console.log('=' .repeat(60));",
          "type": "log"
        },
        {
          "line_number": 19,
          "content": "console.log(`\ud83d\udce6 Bundle Size Analysis:`);",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log(`   Original Bundle:     ${originalSize.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 21,
          "content": "console.log(`   Essential Core:      ${size.toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 22,
          "content": "console.log(`   Savings:            ${(originalSize - size).toLocaleString()} bytes`);",
          "type": "log"
        },
        {
          "line_number": 23,
          "content": "console.log(`   Reduction:          ${reduction}%`);",
          "type": "log"
        },
        {
          "line_number": 24,
          "content": "console.log(`   Target Range:       800-1,200 bytes`);",
          "type": "log"
        },
        {
          "line_number": 25,
          "content": "console.log(`   Status:             ${size >= 800 && size <= 1200 ? '\u2705 ACHIEVED' : '\u274c MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 28,
          "content": "console.log(`\\n\u26a1 Performance Improvements:`);",
          "type": "log"
        },
        {
          "line_number": 29,
          "content": "console.log(`   Load Time:          ~22ms (vs 180ms) - ${((180-22)/180*100).toFixed(1)}% faster`);",
          "type": "log"
        },
        {
          "line_number": 30,
          "content": "console.log(`   Memory Usage:       ~2-3MB (vs 15-20MB) - 85% reduction`);",
          "type": "log"
        },
        {
          "line_number": 31,
          "content": "console.log(`   Network Transfer:   ~1.1kB (vs 9.2kB) - 88% reduction`);",
          "type": "log"
        },
        {
          "line_number": 34,
          "content": "console.log(`\\n\u2705 Feature Completeness:`);",
          "type": "log"
        },
        {
          "line_number": 35,
          "content": "console.log(`   \u2705 Line Charts:       Essential path rendering`);",
          "type": "log"
        },
        {
          "line_number": 36,
          "content": "console.log(`   \u2705 Scatter Plots:     Circle-based data points`);",
          "type": "log"
        },
        {
          "line_number": 37,
          "content": "console.log(`   \u2705 Bar Charts:        Rectangle-based bars`);",
          "type": "log"
        },
        {
          "line_number": 38,
          "content": "console.log(`   \u2705 Data Validation:   Array validation & normalization`);",
          "type": "log"
        },
        {
          "line_number": 39,
          "content": "console.log(`   \u2705 Linear Scaling:    Mathematical interpolation`);",
          "type": "log"
        },
        {
          "line_number": 40,
          "content": "console.log(`   \u2705 SVG Rendering:     Responsive container generation`);",
          "type": "log"
        },
        {
          "line_number": 41,
          "content": "console.log(`   \u2705 TypeScript:        Type-safe React component`);",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log(`   \u2705 Zero Dependencies: Completely standalone`);",
          "type": "log"
        },
        {
          "line_number": 50,
          "content": "console.log(`\\n\ud83d\udcca Code Quality Metrics:`);",
          "type": "log"
        },
        {
          "line_number": 51,
          "content": "console.log(`   Lines of Code:      ${lines}`);",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log(`   Functions:          ${functions}`);",
          "type": "log"
        },
        {
          "line_number": 53,
          "content": "console.log(`   React Elements:     ${reactElements}`);",
          "type": "log"
        },
        {
          "line_number": 54,
          "content": "console.log(`   Chars per Byte:     ${(content.length / size).toFixed(2)}`);",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log(`\\n\ud83d\udccb Research Specification Compliance:`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`   \u2705 Target Size:       0.8-1.2kB (${size} bytes achieved)`);",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log(`   \u2705 Reduction Goal:    34-67% additional (${reduction}% achieved)`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log(`   \u2705 Essential Core:    All basic chart types supported`);",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "console.log(`   \u2705 Zero Dependencies: No external library dependencies`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log(`   \u2705 Pure Functions:    All utilities are pure functions`);",
          "type": "log"
        },
        {
          "line_number": 63,
          "content": "console.log(`   \u2705 TypeScript Ready:  Full type support maintained`);",
          "type": "log"
        },
        {
          "line_number": 67,
          "content": "console.log(`\\n\ud83c\udf89 PHASE 7C.1 ESSENTIAL ATOMIZATION: COMPLETE SUCCESS`);",
          "type": "log"
        },
        {
          "line_number": 68,
          "content": "console.log(`   \ud83d\udce6 Bundle Size:     ${size} bytes (target achieved)`);",
          "type": "log"
        },
        {
          "line_number": 69,
          "content": "console.log(`   \ud83d\udcc9 Reduction:       ${reduction}% (exceeds 34-67% target)`);",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.log(`   \u26a1 Load Speed:      87.8% improvement`);",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log(`   \ud83d\udcbe Memory:         85% reduction`);",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log(`   \ud83c\udfaf Functionality:  All essential features preserved`);",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log(`\\n\ud83d\ude80 Ready for Progressive Enhancement (Phase 7C.2)`);",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log(`\\n\u26a0\ufe0f Phase 7C.1 targets not fully achieved`);",
          "type": "log"
        },
        {
          "line_number": 78,
          "content": "console.log('\\n' + '=' .repeat(60));",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/atoms/ChartAtoms.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/atoms/ChartAtoms.test.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 43,
          "content": "console.log('Bundle size validation:', { sizes, totalSize });",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('Performance validation:', { executionTime, dataPoints: largeData.length });",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/atoms/bundleAnalyzer.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/atoms/bundleAnalyzer.js",
      "console_count": 16,
      "console_lines": [
        {
          "line_number": 19,
          "content": "console.log('\ud83d\udd2c ChartAtoms Bundle Size Analysis');",
          "type": "log"
        },
        {
          "line_number": 20,
          "content": "console.log('==================================');",
          "type": "log"
        },
        {
          "line_number": 36,
          "content": "console.log(`${valid ? '\u2705' : '\u274c'} ${file.padEnd(20)} ${size.toString().padStart(4)}B (target: ${target}B)`);",
          "type": "log"
        },
        {
          "line_number": 39,
          "content": "console.log(`\u274c ${file.padEnd(20)} MISSING`);",
          "type": "log"
        },
        {
          "line_number": 44,
          "content": "console.log('==================================');",
          "type": "log"
        },
        {
          "line_number": 45,
          "content": "console.log(`\ud83d\udcca Total Bundle Size: ${totalSize}B`);",
          "type": "log"
        },
        {
          "line_number": 46,
          "content": "console.log(`\ud83c\udfaf Target Range: 800-1200B`);",
          "type": "log"
        },
        {
          "line_number": 49,
          "content": "console.log(`${withinTarget ? '\u2705' : '\u274c'} Bundle Size Target: ${withinTarget ? 'ACHIEVED' : 'MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 52,
          "content": "console.log(`\ud83d\udcc9 Reduction from 9.16kB: ${reductionFromOriginal}%`);",
          "type": "log"
        },
        {
          "line_number": 55,
          "content": "console.log('\\n\ud83c\udf89 SUCCESS: Phase 7C.1 Essential Atomization targets achieved!');",
          "type": "log"
        },
        {
          "line_number": 56,
          "content": "console.log(`   \u2022 Ultra-essential core: ${totalSize}B`);",
          "type": "log"
        },
        {
          "line_number": 57,
          "content": "console.log(`   \u2022 Bundle reduction: ${reductionFromOriginal}%`);",
          "type": "log"
        },
        {
          "line_number": 58,
          "content": "console.log(`   \u2022 All individual file targets met`);",
          "type": "log"
        },
        {
          "line_number": 60,
          "content": "console.log('\\n\u26a0\ufe0f  Issues detected:');",
          "type": "log"
        },
        {
          "line_number": 61,
          "content": "if (!withinTarget) console.log(`   \u2022 Total size ${totalSize}B outside target range`);",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "if (!allValid) console.log(`   \u2022 Individual file size targets not met`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/PerformanceMonitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/PerformanceMonitor.ts",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 68,
          "content": "console.log('[PerformanceMonitor] Performance observer initialized');",
          "type": "log"
        },
        {
          "line_number": 70,
          "content": "console.warn('[PerformanceMonitor] Performance observer failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 105,
          "content": "console.log(`[PerformanceMonitor] Metric recorded: ${category}.${metric}`, {",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.warn(`[PerformanceMonitor] Loading issues detected for ${data.feature}:`, issues);",
          "type": "warn"
        },
        {
          "line_number": 198,
          "content": "console.warn(`[PerformanceMonitor] Rendering issues detected for ${data.chartType}:`, issues);",
          "type": "warn"
        },
        {
          "line_number": 292,
          "content": "console.log(`[PerformanceMonitor] Generated ${suggestions.length} optimization suggestions`,",
          "type": "log"
        },
        {
          "line_number": 479,
          "content": "console.log('[PerformanceMonitor] Grid optimization performance tracked:', {",
          "type": "log"
        },
        {
          "line_number": 540,
          "content": "console.warn(`[PerformanceMonitor] Grid optimization issues detected for ${data.chartType}:`, issues);",
          "type": "warn"
        },
        {
          "line_number": 571,
          "content": "console.log('[PerformanceMonitor] Grid optimization suggestions:', suggestions);",
          "type": "log"
        },
        {
          "line_number": 593,
          "content": "console.log('[PerformanceMonitor] Grid bundle size tracked:', {",
          "type": "log"
        },
        {
          "line_number": 602,
          "content": "console.warn(`[PerformanceMonitor] Bundle size regression detected for ${data.componentName}:`, {",
          "type": "warn"
        },
        {
          "line_number": 754,
          "content": "console.error('[PerformanceMonitor] CRITICAL GRID PERFORMANCE ISSUES DETECTED:', criticalIssues);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/SmartGridCache.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/SmartGridCache.ts",
      "console_count": 26,
      "console_lines": [
        {
          "line_number": 88,
          "content": "console.log('[SmartGridCache] Initialized with predictive caching and usage pattern analysis');",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "console.log('[SmartGridCache] Cache monitoring and cleanup scheduled');",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log('[SmartGridCache] Pattern analysis and predictive modeling started');",
          "type": "log"
        },
        {
          "line_number": 158,
          "content": "console.log('[SmartGridCache] Data fingerprint generated:', {",
          "type": "log"
        },
        {
          "line_number": 168,
          "content": "console.error('[SmartGridCache] Data fingerprint generation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 260,
          "content": "console.log('[SmartGridCache] Configuration stored:', {",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.error('[SmartGridCache] Store operation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 294,
          "content": "console.log('[SmartGridCache] Cache miss for key:', key.slice(0, 20) + '...');",
          "type": "log"
        },
        {
          "line_number": 316,
          "content": "console.log('[SmartGridCache] Cache hit for key:', {",
          "type": "log"
        },
        {
          "line_number": 331,
          "content": "console.error('[SmartGridCache] Get operation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 393,
          "content": "console.log('[SmartGridCache] Evicted', evicted, 'entries', {",
          "type": "log"
        },
        {
          "line_number": 401,
          "content": "console.error('[SmartGridCache] Eviction failed:', error);",
          "type": "error"
        },
        {
          "line_number": 479,
          "content": "console.warn('[SmartGridCache] Pattern recording failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 511,
          "content": "console.log('[SmartGridCache] Analyzing usage patterns...');",
          "type": "log"
        },
        {
          "line_number": 546,
          "content": "console.log('[SmartGridCache] Pattern analysis completed:', {",
          "type": "log"
        },
        {
          "line_number": 555,
          "content": "console.error('[SmartGridCache] Pattern analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 572,
          "content": "console.log('[SmartGridCache] Predictive model updated, active sessions:',",
          "type": "log"
        },
        {
          "line_number": 576,
          "content": "console.warn('[SmartGridCache] Predictive model update failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 634,
          "content": "console.log('[SmartGridCache] Preload recommendations generated:', {",
          "type": "log"
        },
        {
          "line_number": 650,
          "content": "console.error('[SmartGridCache] Preload recommendation generation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 722,
          "content": "console.log('[SmartGridCache] Cache analysis:', {",
          "type": "log"
        },
        {
          "line_number": 737,
          "content": "console.log('[SmartGridCache] Increased cache size to', this.maxCacheSize);",
          "type": "log"
        },
        {
          "line_number": 740,
          "content": "console.log('[SmartGridCache] Decreased cache size to', this.maxCacheSize);",
          "type": "log"
        },
        {
          "line_number": 746,
          "content": "console.log('[SmartGridCache] Increased memory limit to', this.maxMemoryMB + 'MB');",
          "type": "log"
        },
        {
          "line_number": 769,
          "content": "console.log('[SmartGridCache] Cleaned up', cleaned, 'expired entries');",
          "type": "log"
        },
        {
          "line_number": 784,
          "content": "console.log('[SmartGridCache] Cache cleared,', previousSize, 'entries removed');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/NetworkAwareLoading.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/NetworkAwareLoading.ts",
      "console_count": 10,
      "console_lines": [
        {
          "line_number": 50,
          "content": "console.log('[NetworkAware] Monitoring network conditions', {",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log('[NetworkAware] Network condition updated', {",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.log('[NetworkAware] Estimated network condition', this.networkCondition);",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log('[NetworkAware] Loading features with strategy', {",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.warn(`[NetworkAware] Failed to load ${batch[index].features[0]}:`, result.reason);",
          "type": "warn"
        },
        {
          "line_number": 238,
          "content": "console.error('[NetworkAware] Batch loading error:', error);",
          "type": "error"
        },
        {
          "line_number": 279,
          "content": "console.warn(`[NetworkAware] Load attempt ${attempt + 1} failed for ${featureName}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 326,
          "content": "console.log('[NetworkAware] Load performance tracked', performanceData);",
          "type": "log"
        },
        {
          "line_number": 366,
          "content": "console.log('[NetworkAware] No features meet preload threshold');",
          "type": "log"
        },
        {
          "line_number": 370,
          "content": "console.log('[NetworkAware] Intelligent preload starting', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/MasterOrchestrator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/MasterOrchestrator.ts",
      "console_count": 16,
      "console_lines": [
        {
          "line_number": 56,
          "content": "console.log('[MasterOrchestrator] Dependency map initialized');",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log(`[MasterOrchestrator] Starting orchestration: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "console.log(`[MasterOrchestrator] Orchestration completed: ${operationId}`, orchestratedResult);",
          "type": "log"
        },
        {
          "line_number": 108,
          "content": "console.error(`[MasterOrchestrator] Orchestration failed: ${operationId}`, error);",
          "type": "error"
        },
        {
          "line_number": 168,
          "content": "console.log(`[MasterOrchestrator] Generated ${plans.length} loading phases`,",
          "type": "log"
        },
        {
          "line_number": 209,
          "content": "console.log(`[MasterOrchestrator] Selected progressive features for ${config.type}:`, features);",
          "type": "log"
        },
        {
          "line_number": 236,
          "content": "console.log(`[MasterOrchestrator] Selected advanced features:`, features);",
          "type": "log"
        },
        {
          "line_number": 273,
          "content": "console.log(`[MasterOrchestrator] Executing phase: ${plan.phase}`, {",
          "type": "log"
        },
        {
          "line_number": 317,
          "content": "console.log(`[MasterOrchestrator] Phase ${plan.phase} completed in ${Math.round(phaseTime)}ms`);",
          "type": "log"
        },
        {
          "line_number": 320,
          "content": "console.error(`[MasterOrchestrator] Phase ${plan.phase} failed:`, error);",
          "type": "error"
        },
        {
          "line_number": 355,
          "content": "console.log(`[MasterOrchestrator] Loaded ${results.length} features immediately for ${operationId}`);",
          "type": "log"
        },
        {
          "line_number": 364,
          "content": "console.log(`[MasterOrchestrator] Bundle cache hit: ${bundleKey}`);",
          "type": "log"
        },
        {
          "line_number": 385,
          "content": "console.log(`[MasterOrchestrator] Bundle loaded: ${bundleKey} (${totalSize} bytes)`);",
          "type": "log"
        },
        {
          "line_number": 410,
          "content": "console.warn(`[MasterOrchestrator] Preload failed for ${feature}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 432,
          "content": "console.log(`[MasterOrchestrator] Preloaded ${results.length}/${features.length} features for ${operationId}`);",
          "type": "log"
        },
        {
          "line_number": 450,
          "content": "console.log(`[MasterOrchestrator] Setup lazy loading for ${features.length} features in ${operationId}`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/UsagePatternAnalytics.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/UsagePatternAnalytics.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 71,
          "content": "console.log(`[UsageAnalytics] Tracked usage: ${feature}`, {",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.log(`[UsageAnalytics] Load timing: ${metrics.featureName}`, {",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log(`[UsageAnalytics] Generated ${predictions.length} predictions for ${chartType || 'unknown'} chart`, {",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.log(`[UsageAnalytics] Generated ${bundles.length} bundle recommendations`, bundles);",
          "type": "log"
        },
        {
          "line_number": 263,
          "content": "console.log('[UsageAnalytics] Session data cleared');",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log(`[UsageAnalytics] Imported data from ${new Date(data.timestamp).toLocaleString()}`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/GridAnalyticsDashboard.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/GridAnalyticsDashboard.ts",
      "console_count": 13,
      "console_lines": [
        {
          "line_number": 110,
          "content": "console.log('[GridAnalyticsDashboard] Real-time analytics dashboard initialized');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('[GridAnalyticsDashboard] Analytics system started with real-time monitoring');",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.log('[GridAnalyticsDashboard] Real-time monitoring started');",
          "type": "log"
        },
        {
          "line_number": 144,
          "content": "console.log('[GridAnalyticsDashboard] Updating analytics data...');",
          "type": "log"
        },
        {
          "line_number": 192,
          "content": "console.log('[GridAnalyticsDashboard] Analytics updated:', {",
          "type": "log"
        },
        {
          "line_number": 202,
          "content": "console.error('[GridAnalyticsDashboard] Analytics update failed:', error);",
          "type": "error"
        },
        {
          "line_number": 498,
          "content": "console.log(`[GridAnalyticsDashboard] ALERT [${severity.toUpperCase()}]:`, message);",
          "type": "log"
        },
        {
          "line_number": 586,
          "content": "console.log('[GridAnalyticsDashboard] Historical data loaded');",
          "type": "log"
        },
        {
          "line_number": 594,
          "content": "console.log('[GridAnalyticsDashboard] Analytics updates scheduled');",
          "type": "log"
        },
        {
          "line_number": 627,
          "content": "console.log('[GridAnalyticsDashboard] Alert resolved:', alert.message);",
          "type": "log"
        },
        {
          "line_number": 639,
          "content": "console.log('[GridAnalyticsDashboard] Alert configuration updated');",
          "type": "log"
        },
        {
          "line_number": 667,
          "content": "console.log('[GridAnalyticsDashboard] Monitoring stopped');",
          "type": "log"
        },
        {
          "line_number": 675,
          "content": "console.log('[GridAnalyticsDashboard] Resources cleaned up');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/index.ts",
      "console_count": 20,
      "console_lines": [
        {
          "line_number": 66,
          "content": "console.log('[SmartChartOrchestrator] Initializing Phase 7C orchestration system...');",
          "type": "log"
        },
        {
          "line_number": 75,
          "content": "console.log('[SmartChartOrchestrator] Initialization complete');",
          "type": "log"
        },
        {
          "line_number": 84,
          "content": "console.error('[SmartChartOrchestrator] Initialization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 97,
          "content": "console.log('[SmartChartOrchestrator] Loaded historical analytics data');",
          "type": "log"
        },
        {
          "line_number": 100,
          "content": "console.warn('[SmartChartOrchestrator] Failed to load historical data:', error);",
          "type": "warn"
        },
        {
          "line_number": 107,
          "content": "console.log('[SmartChartOrchestrator] Cache system ready');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log(`[SmartChartOrchestrator] Essential core preloaded (${Math.round(loadTime)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.warn('[SmartChartOrchestrator] Essential preload failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 137,
          "content": "console.log(`[SmartChartOrchestrator] Creating smart chart: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log(`[SmartChartOrchestrator] Chart creation completed: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 186,
          "content": "console.error(`[SmartChartOrchestrator] Chart creation failed: ${operationId}`, error);",
          "type": "error"
        },
        {
          "line_number": 257,
          "content": "console.log(`[SmartChartOrchestrator] Chart built successfully with ${chartElements.length} elements`);",
          "type": "log"
        },
        {
          "line_number": 261,
          "content": "console.error('[SmartChartOrchestrator] Chart building failed:', error);",
          "type": "error"
        },
        {
          "line_number": 326,
          "content": "console.log(`[SmartChartOrchestrator] Chart updated with ${newData.length} data points`);",
          "type": "log"
        },
        {
          "line_number": 335,
          "content": "console.warn('[SmartChartOrchestrator] Failed to save analytics data:', error);",
          "type": "warn"
        },
        {
          "line_number": 364,
          "content": "console.log('[SmartChartOrchestrator] System destroyed');",
          "type": "log"
        },
        {
          "line_number": 426,
          "content": "console.log('\ud83d\ude80 Phase 7C Smart Loading Orchestration System Ready');",
          "type": "log"
        },
        {
          "line_number": 427,
          "content": "console.log('\ud83d\udcca Features: Usage Analytics, Network-Aware Loading, Performance Monitoring, Intelligent Caching');",
          "type": "log"
        },
        {
          "line_number": 428,
          "content": "console.log('\u26a1 Target: 3-6kB bundle sizes with smart progressive loading');",
          "type": "log"
        },
        {
          "line_number": 429,
          "content": "console.log('\ud83c\udfaf Production-ready with comprehensive monitoring and optimization');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/ProductionStrategy.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/ProductionStrategy.ts",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 69,
          "content": "console.log('[ProductionStrategy] Initialized with config:', {",
          "type": "log"
        },
        {
          "line_number": 151,
          "content": "console.log(`[ProductionStrategy] Monitoring started (${this.config.monitoring.reportingInterval}ms interval)`);",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.error('[ProductionStrategy] Metrics collection failed:', error);",
          "type": "error"
        },
        {
          "line_number": 307,
          "content": "console.warn(`[ProductionStrategy] Health check: ${status} (score: ${score})`, recommendations);",
          "type": "warn"
        },
        {
          "line_number": 361,
          "content": "console.error(`[ProductionStrategy] ERROR: ${message}`);",
          "type": "error"
        },
        {
          "line_number": 364,
          "content": "console.warn(`[ProductionStrategy] WARNING: ${message}`);",
          "type": "warn"
        },
        {
          "line_number": 367,
          "content": "console.info(`[ProductionStrategy] INFO: ${message}`);",
          "type": "info"
        },
        {
          "line_number": 408,
          "content": "console.error('[ProductionStrategy] Performance optimization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 430,
          "content": "console.log('[ProductionStrategy] Error handling configured');",
          "type": "log"
        },
        {
          "line_number": 461,
          "content": "console.log('[ProductionStrategy] Running forced optimization...');",
          "type": "log"
        },
        {
          "line_number": 539,
          "content": "console.log('[ProductionStrategy] Production monitoring stopped');",
          "type": "log"
        },
        {
          "line_number": 558,
          "content": "console.log('\ud83c\udfed Production Strategy initialized with comprehensive monitoring');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/CacheOptimizer.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/CacheOptimizer.ts",
      "console_count": 19,
      "console_lines": [
        {
          "line_number": 71,
          "content": "console.log('[CacheOptimizer] Initialized with strategy:', this.strategy);",
          "type": "log"
        },
        {
          "line_number": 100,
          "content": "console.log('[CacheOptimizer] Adapted strategy for device capabilities:', {",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`[CacheOptimizer] Cache miss: ${key}`);",
          "type": "log"
        },
        {
          "line_number": 127,
          "content": "console.log(`[CacheOptimizer] Cache expired: ${key}`);",
          "type": "log"
        },
        {
          "line_number": 138,
          "content": "console.log(`[CacheOptimizer] Cache hit: ${key}`, {",
          "type": "log"
        },
        {
          "line_number": 180,
          "content": "console.log(`[CacheOptimizer] Cached: ${key}`, {",
          "type": "log"
        },
        {
          "line_number": 259,
          "content": "console.log(`[CacheOptimizer] Evicted: ${key}`, {",
          "type": "log"
        },
        {
          "line_number": 330,
          "content": "console.log(`[CacheOptimizer] Bundle usage tracked: ${bundleId}`, {",
          "type": "log"
        },
        {
          "line_number": 358,
          "content": "console.log('[CacheOptimizer] No features meet preload threshold');",
          "type": "log"
        },
        {
          "line_number": 365,
          "content": "console.log(`[CacheOptimizer] Intelligent preload starting`, {",
          "type": "log"
        },
        {
          "line_number": 419,
          "content": "console.log(`[CacheOptimizer] Bundle already cached: ${bundleGroup.id}`);",
          "type": "log"
        },
        {
          "line_number": 423,
          "content": "console.log(`[CacheOptimizer] Preloading bundle: ${bundleGroup.id}`, {",
          "type": "log"
        },
        {
          "line_number": 432,
          "content": "console.warn(`[CacheOptimizer] Preload failed for bundle ${bundleGroup.id}:`, error);",
          "type": "warn"
        },
        {
          "line_number": 453,
          "content": "console.log(`[CacheOptimizer] Preloaded bundle: ${bundleId} (${features.join(', ')})`);",
          "type": "log"
        },
        {
          "line_number": 490,
          "content": "console.log(`[CacheOptimizer] Cleared ${cleared} expired entries`);",
          "type": "log"
        },
        {
          "line_number": 508,
          "content": "console.log(`[CacheOptimizer] Cleared ${cleared} entries by tags:`, tags);",
          "type": "log"
        },
        {
          "line_number": 632,
          "content": "console.log('[CacheOptimizer] High eviction rate detected, optimizing cache strategy');",
          "type": "log"
        },
        {
          "line_number": 644,
          "content": "console.log('[CacheOptimizer] Increased cache limits:', {",
          "type": "log"
        },
        {
          "line_number": 656,
          "content": "console.log('[CacheOptimizer] Increased TTL due to high access frequency:', this.strategy.ttl);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/orchestration/integration.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/orchestration/integration.test.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 545,
          "content": "console.log('\ud83e\uddea Phase 7C Integration Tests Ready');",
          "type": "log"
        },
        {
          "line_number": 546,
          "content": "console.log('\ud83d\udcca Coverage: System initialization, chart creation, analytics, performance, caching');",
          "type": "log"
        },
        {
          "line_number": 547,
          "content": "console.log('\u26a1 Bundle validation: Essential <1.2kB, Progressive <3kB, Total <6kB');",
          "type": "log"
        },
        {
          "line_number": 548,
          "content": "console.log('\ud83c\udfaf Production-ready testing with comprehensive validation');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/EnhancedChart.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/EnhancedChart.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.error('Failed to load micro-chunks:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/ViewportAwareGridLoader.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/ViewportAwareGridLoader.ts",
      "console_count": 23,
      "console_lines": [
        {
          "line_number": 87,
          "content": "console.log('[ViewportAwareGridLoader] Initialized with Intersection Observer optimization');",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.warn('[ViewportAwareGridLoader] IntersectionObserver not supported, using fallback');",
          "type": "warn"
        },
        {
          "line_number": 109,
          "content": "console.log('[ViewportAwareGridLoader] Intersection Observer initialized with config:', {",
          "type": "log"
        },
        {
          "line_number": 120,
          "content": "console.error('[ViewportAwareGridLoader] Initialization failed:', error);",
          "type": "error"
        },
        {
          "line_number": 130,
          "content": "console.log('[ViewportAwareGridLoader] Processing intersection changes for', entries.length, 'elements');",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log('[ViewportAwareGridLoader] Intersection changes processed:', {",
          "type": "log"
        },
        {
          "line_number": 173,
          "content": "console.error('[ViewportAwareGridLoader] Intersection handling failed:', error);",
          "type": "error"
        },
        {
          "line_number": 204,
          "content": "console.log('[ViewportAwareGridLoader] Loading grid for element:', element.id, element.chartType);",
          "type": "log"
        },
        {
          "line_number": 233,
          "content": "console.log('[ViewportAwareGridLoader] Grid loaded for element:', {",
          "type": "log"
        },
        {
          "line_number": 243,
          "content": "console.error('[ViewportAwareGridLoader] Grid loading failed for element:', element.id, error);",
          "type": "error"
        },
        {
          "line_number": 255,
          "content": "console.log('[ViewportAwareGridLoader] Unloading element:', element.id);",
          "type": "log"
        },
        {
          "line_number": 288,
          "content": "console.log('[ViewportAwareGridLoader] Grid unloaded for element:', element.id);",
          "type": "log"
        },
        {
          "line_number": 291,
          "content": "console.error('[ViewportAwareGridLoader] Grid unloading failed:', error);",
          "type": "error"
        },
        {
          "line_number": 308,
          "content": "console.warn('[ViewportAwareGridLoader] Adaptive spacing failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 380,
          "content": "console.warn('[ViewportAwareGridLoader] DOM spacing update failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 515,
          "content": "console.log('[ViewportAwareGridLoader] Performance monitoring started');",
          "type": "log"
        },
        {
          "line_number": 606,
          "content": "console.log('[ViewportAwareGridLoader] Optimized config for poor performance:', {",
          "type": "log"
        },
        {
          "line_number": 620,
          "content": "console.log('[ViewportAwareGridLoader] Using fallback viewport tracking');",
          "type": "log"
        },
        {
          "line_number": 684,
          "content": "console.warn('[ViewportAwareGridLoader] Element already registered:', id);",
          "type": "warn"
        },
        {
          "line_number": 705,
          "content": "console.log('[ViewportAwareGridLoader] Element registered:', {",
          "type": "log"
        },
        {
          "line_number": 728,
          "content": "console.log('[ViewportAwareGridLoader] Element unregistered:', id);",
          "type": "log"
        },
        {
          "line_number": 739,
          "content": "console.log('[ViewportAwareGridLoader] Adaptive spacing config updated');",
          "type": "log"
        },
        {
          "line_number": 755,
          "content": "console.log('[ViewportAwareGridLoader] Resources cleaned up');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/ChartSpecificOptimizer.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/ChartSpecificOptimizer.ts",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 82,
          "content": "console.log('[ChartSpecificOptimizer] Initialized with chart-specific optimizations for all chart types');",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log('[ChartSpecificOptimizer] Initialized profiles for', this.chartProfiles.size, 'chart types');",
          "type": "log"
        },
        {
          "line_number": 315,
          "content": "console.log('[ChartSpecificOptimizer] Generating optimized configuration for', chartType);",
          "type": "log"
        },
        {
          "line_number": 347,
          "content": "console.log('[ChartSpecificOptimizer] Configuration generated:', {",
          "type": "log"
        },
        {
          "line_number": 359,
          "content": "console.error('[ChartSpecificOptimizer] Configuration generation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 694,
          "content": "console.log('[ChartSpecificOptimizer] Using cached configuration for', chartType);",
          "type": "log"
        },
        {
          "line_number": 735,
          "content": "console.log('[ChartSpecificOptimizer] Performance baseline updated for', chartType, {",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedComplexityDetector.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedComplexityDetector.ts",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 56,
          "content": "console.log('[AdvancedComplexityDetector] Initialized with ML-inspired pattern recognition');",
          "type": "log"
        },
        {
          "line_number": 100,
          "content": "console.log('[AdvancedComplexityDetector] Data complexity analysis completed:', {",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.error('[AdvancedComplexityDetector] Data complexity analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 159,
          "content": "console.log('[AdvancedComplexityDetector] Visual complexity analysis completed:', {",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.error('[AdvancedComplexityDetector] Visual complexity analysis failed:', error);",
          "type": "error"
        },
        {
          "line_number": 192,
          "content": "console.log('[AdvancedComplexityDetector] Starting comprehensive complexity profiling...');",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.log('[AdvancedComplexityDetector] Complexity profile generated:', {",
          "type": "log"
        },
        {
          "line_number": 241,
          "content": "console.error('[AdvancedComplexityDetector] Complexity profiling failed:', error);",
          "type": "error"
        },
        {
          "line_number": 334,
          "content": "console.warn('[AdvancedComplexityDetector] Temporal analysis failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 380,
          "content": "console.warn('[AdvancedComplexityDetector] Clustering analysis failed:', error);",
          "type": "warn"
        },
        {
          "line_number": 696,
          "content": "console.log('[AdvancedComplexityDetector] Pattern success updated:', {",
          "type": "log"
        },
        {
          "line_number": 717,
          "content": "console.log('[AdvancedComplexityDetector] Pattern weights updated based on successful optimization');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedGridFeatures.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/AdvancedGridFeatures.ts",
      "console_count": 22,
      "console_lines": [
        {
          "line_number": 97,
          "content": "console.log('[AdvancedGridFeatures] Advanced grid system initialized with custom lines, major/minor grid, and adaptive animations');",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log('[AdvancedGridFeatures] Advanced features initialized');",
          "type": "log"
        },
        {
          "line_number": 217,
          "content": "console.log('[AdvancedGridFeatures] Creating advanced grid system for', chartType);",
          "type": "log"
        },
        {
          "line_number": 234,
          "content": "console.log('[AdvancedGridFeatures] Advanced grid system created:', {",
          "type": "log"
        },
        {
          "line_number": 247,
          "content": "console.error('[AdvancedGridFeatures] Grid system creation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 284,
          "content": "console.log('[AdvancedGridFeatures] Custom grid line added:', {",
          "type": "log"
        },
        {
          "line_number": 296,
          "content": "console.error('[AdvancedGridFeatures] Custom line addition failed:', error);",
          "type": "error"
        },
        {
          "line_number": 335,
          "content": "console.log('[AdvancedGridFeatures] Custom grid line removed:', lineId);",
          "type": "log"
        },
        {
          "line_number": 339,
          "content": "console.error('[AdvancedGridFeatures] Custom line removal failed:', error);",
          "type": "error"
        },
        {
          "line_number": 369,
          "content": "console.log('[AdvancedGridFeatures] Grid configuration updated:', {",
          "type": "log"
        },
        {
          "line_number": 378,
          "content": "console.error('[AdvancedGridFeatures] Grid configuration update failed:', error);",
          "type": "error"
        },
        {
          "line_number": 396,
          "content": "console.log('[AdvancedGridFeatures] Adaptive animations', enabled ? 'enabled' : 'disabled', 'for', chartId);",
          "type": "log"
        },
        {
          "line_number": 499,
          "content": "console.log('[AdvancedGridFeatures] Started line addition animation:', line.id);",
          "type": "log"
        },
        {
          "line_number": 526,
          "content": "console.log('[AdvancedGridFeatures] Started line removal animation:', line.id);",
          "type": "log"
        },
        {
          "line_number": 554,
          "content": "console.log('[AdvancedGridFeatures] Started configuration morph animation:', chartId);",
          "type": "log"
        },
        {
          "line_number": 613,
          "content": "console.log('[AdvancedGridFeatures] Animation progress:', key, Math.round(opacity * 100) + '%');",
          "type": "log"
        },
        {
          "line_number": 625,
          "content": "console.log('[AdvancedGridFeatures] Configuration morph progress:', Math.round(progress * 100) + '%');",
          "type": "log"
        },
        {
          "line_number": 641,
          "content": "console.log('[AdvancedGridFeatures] Animation completed:', key);",
          "type": "log"
        },
        {
          "line_number": 655,
          "content": "console.warn('[AdvancedGridFeatures] Animation frame exceeded budget:', Math.round(frameTime) + 'ms');",
          "type": "warn"
        },
        {
          "line_number": 677,
          "content": "console.log('[AdvancedGridFeatures] Reducing animation quality due to poor performance');",
          "type": "log"
        },
        {
          "line_number": 732,
          "content": "console.log('[AdvancedGridFeatures] Chart resources cleared:', chartId);",
          "type": "log"
        },
        {
          "line_number": 766,
          "content": "console.log('[AdvancedGridFeatures] Resources cleaned up');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/charts/visx/micro-chunks/phase7c/enhancements/bundle-validation.js",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/charts/visx/micro-chunks/phase7c/enhancements/bundle-validation.js",
      "console_count": 25,
      "console_lines": [
        {
          "line_number": 32,
          "content": "console.log('\ud83d\udd0d Phase 7C.2 Progressive Enhancement Bundle Validation');",
          "type": "log"
        },
        {
          "line_number": 33,
          "content": "console.log('==================================================\\n');",
          "type": "log"
        },
        {
          "line_number": 71,
          "content": "console.log('\ud83d\udcca Individual Micro-Chunk Analysis:');",
          "type": "log"
        },
        {
          "line_number": 72,
          "content": "console.log('\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510');",
          "type": "log"
        },
        {
          "line_number": 73,
          "content": "console.log('\u2502 File                \u2502 Status \u2502 Target \u2502 Actual \u2502 Efficiency  \u2502');",
          "type": "log"
        },
        {
          "line_number": 74,
          "content": "console.log('\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.log(`\u2502 ${file} \u2502 ${status} \u2502 ${target} \u2502 ${actual} \u2502 ${efficiency} \u2502`);",
          "type": "log"
        },
        {
          "line_number": 85,
          "content": "console.log('\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n');",
          "type": "log"
        },
        {
          "line_number": 100,
          "content": "console.log('\ud83c\udfaf Progressive Enhancement Tiers:');",
          "type": "log"
        },
        {
          "line_number": 101,
          "content": "console.log(`   Interaction Tier:     ${interactionTier.toString().padStart(4)} bytes (Hover + Click + Tooltip)`);",
          "type": "log"
        },
        {
          "line_number": 102,
          "content": "console.log(`   Rendering Tier:       ${renderingTier.toString().padStart(4)} bytes (Axis + Grid + Legend)`);",
          "type": "log"
        },
        {
          "line_number": 103,
          "content": "console.log(`   Data Processing Tier: ${dataProcessingTier.toString().padStart(4)} bytes (Validator + Format + Transform)`);",
          "type": "log"
        },
        {
          "line_number": 104,
          "content": "console.log(`   Total Progressive:    ${totalActualSize.toString().padStart(4)} bytes\\n`);",
          "type": "log"
        },
        {
          "line_number": 111,
          "content": "console.log('\u2728 Target Validation:');",
          "type": "log"
        },
        {
          "line_number": 112,
          "content": "console.log(`   Essential Core:       ${TARGETS.essential} bytes (baseline)`);",
          "type": "log"
        },
        {
          "line_number": 113,
          "content": "console.log(`   Progressive Target:   ${TARGETS.progressive.min}-${TARGETS.progressive.max} bytes`);",
          "type": "log"
        },
        {
          "line_number": 114,
          "content": "console.log(`   Progressive Actual:   ${totalActualSize} bytes ${progressiveInRange ? '\u2705' : '\u274c'}`);",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log(`   Combined Total:       ${combinedTotal} bytes (\u2264${TARGETS.total}) ${combinedTotal <= TARGETS.total ? '\u2705' : '\u274c'}\\n`);",
          "type": "log"
        },
        {
          "line_number": 122,
          "content": "console.log('\ud83c\udfc6 Final Assessment:');",
          "type": "log"
        },
        {
          "line_number": 124,
          "content": "console.log('   \u2705 ALL TARGETS MET - Progressive Enhancement System Ready!');",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.log(`   \ud83d\udce6 Achieved ${((totalTargetSize / totalActualSize) * 100).toFixed(1)}% compression efficiency`);",
          "type": "log"
        },
        {
          "line_number": 126,
          "content": "console.log(`   \ud83d\ude80 Bundle reduction: Essential (1.2kB) + Progressive (${(totalActualSize/1000).toFixed(1)}kB) = ${(combinedTotal/1000).toFixed(1)}kB total`);",
          "type": "log"
        },
        {
          "line_number": 128,
          "content": "console.log('   \u274c OPTIMIZATION REQUIRED');",
          "type": "log"
        },
        {
          "line_number": 130,
          "content": "console.log(`   \ud83d\udccf Progressive bundle outside target range: ${totalActualSize} bytes`);",
          "type": "log"
        },
        {
          "line_number": 133,
          "content": "console.log(`   \ud83d\udce6 Combined bundle too large: ${combinedTotal} bytes > ${TARGETS.total} bytes`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/dashboard/BundleAnalyticsDashboard-UPA.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/dashboard/BundleAnalyticsDashboard-UPA.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 414,
          "content": "console.log(`Phase 7 Chart Interaction: ${type}`, data);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/dashboard/DeveloperToolsPanel.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/dashboard/DeveloperToolsPanel.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 482,
          "content": "console.error('Export failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/dashboard/charts/BundleChartWrappers-UPA.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/dashboard/charts/BundleChartWrappers-UPA.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 92,
          "content": "console.error(`UPA chart chunk loading failed: ${chunkName}`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/__tests__/ErrorBoundary.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/__tests__/ErrorBoundary.test.tsx",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 22,
          "content": "// Mock console.error to prevent noise in tests",
          "type": "error"
        },
        {
          "line_number": 23,
          "content": "const originalError = console.error;",
          "type": "error"
        },
        {
          "line_number": 25,
          "content": "console.error = vi.fn();",
          "type": "error"
        },
        {
          "line_number": 29,
          "content": "console.error = originalError;",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/notifications/LazyNotificationSystem.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/notifications/LazyNotificationSystem.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 49,
          "content": "console.error('\u274c Notification Panel CSS failed to load:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/widgets/PerformanceWidget.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/widgets/PerformanceWidget.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 487,
          "content": "console.error('PerformanceWidget Error:', {",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/widgets/StockWidget.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/widgets/StockWidget.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 303,
          "content": "console.error('StockWidget Error:', {",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/widgets/PortfolioSummary.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/widgets/PortfolioSummary.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 49,
          "content": "console.error('Failed to refresh portfolio data:', err);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/analytics/ForecastingDashboard.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/ForecastingDashboard.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 91,
          "content": "loadForContext('analytics').catch(console.error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/analytics/ForecastingDashboardProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/ForecastingDashboardProgressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 165,
          "content": "loadUtilities().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/analytics/AnalyticsProgressiveTest.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/AnalyticsProgressiveTest.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 29,
          "content": "console.log(`[${component}] ${type.toUpperCase()}: ${message}`);",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log(`Exporting ${format}:`, data);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/analytics/EssentialAnalyticsDemo.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/EssentialAnalyticsDemo.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 28,
          "content": "console.error('Failed to load progressive analytics:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/analytics/AnalyticsDashboard.optimized.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/AnalyticsDashboard.optimized.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 93,
          "content": "console.error(`Failed to load ${targetTier} tier:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/analytics/LazyAnalyticsOptimized.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/LazyAnalyticsOptimized.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 168,
          "content": "console.error('Failed to preload optimized analytics:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/components/analytics/__tests__/AnalyticsDashboardEssential.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/__tests__/AnalyticsDashboardEssential.test.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 230,
          "content": "// Mock console.error to suppress error output during test",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/components/analytics/__tests__/LazyAnalytics.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/components/analytics/__tests__/LazyAnalytics.test.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 260,
          "content": "// Mock console.warn to capture warnings",
          "type": "warn"
        },
        {
          "line_number": 261,
          "content": "vi.mocked(console.warn).mockImplementation(() => {});",
          "type": "warn"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/__tests__/Phase7DashboardValidation.test.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/__tests__/Phase7DashboardValidation.test.tsx",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 500,
          "content": "const originalError = console.error;",
          "type": "error"
        },
        {
          "line_number": 501,
          "content": "console.error = jest.fn();",
          "type": "error"
        },
        {
          "line_number": 508,
          "content": "console.error = originalError;",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/useGitHubActionsData.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useGitHubActionsData.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 129,
          "content": "console.error('Failed to fetch bundle data:', err);",
          "type": "error"
        },
        {
          "line_number": 146,
          "content": "console.error('Failed to fetch trends:', err);",
          "type": "error"
        },
        {
          "line_number": 162,
          "content": "console.error('Failed to fetch Phase 1 data:', err);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useLazyAnalytics.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useLazyAnalytics.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 59,
          "content": "getCachedAnalyticsDomain(domain).catch(console.warn);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useEssentialAnalytics.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useEssentialAnalytics.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 233,
          "content": "console.error('Export failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/usePWA.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/usePWA.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 146,
          "content": "console.error('Error during PWA installation:', error);",
          "type": "error"
        },
        {
          "line_number": 174,
          "content": "console.error('Error clearing app cache:', error);",
          "type": "error"
        },
        {
          "line_number": 204,
          "content": "console.error('Error getting service worker version:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useStore.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useStore.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 133,
          "content": "console.error('Store initialization failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useErrorHandling.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useErrorHandling.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 280,
          "content": "console.error(`API Error ${contextInfo}:`, {",
          "type": "error"
        },
        {
          "line_number": 303,
          "content": "console.error(`Query Error (${keyString}):`, classified);",
          "type": "error"
        },
        {
          "line_number": 318,
          "content": "console.error('Mutation Error:', {",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useLazyCss.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useLazyCss.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 135,
          "content": "console.log(`\u2705 CSS loaded: ${cssPath} (${duration.toFixed(1)}ms)`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useComparativeAnalysis/phase6-progressive-core.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/phase6-progressive-core.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 119,
          "content": "console.warn('[Phase6] Analysis tier loading failed, fallback to core', error);",
          "type": "warn"
        },
        {
          "line_number": 137,
          "content": "console.warn('[Phase6] Advanced tier loading failed, fallback to analysis', error);",
          "type": "warn"
        },
        {
          "line_number": 251,
          "content": "console.log('[Phase6] Progressive Comparative Analysis Core loaded - Target: 26.31kB \u2192 8-13kB (65-75% reduction)');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useComparativeAnalysis/standard-optimized.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/standard-optimized.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 122,
          "content": "console.error('Failed to load analysis engine:', error);",
          "type": "error"
        },
        {
          "line_number": 152,
          "content": "console.error('Failed to load advanced features:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useComparativeAnalysis/layers/standard-advanced.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/layers/standard-advanced.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 105,
          "content": "console.error('Portfolio upgrade failed:', error);",
          "type": "error"
        },
        {
          "line_number": 365,
          "content": "console.debug(`${operation} completed in ${duration.toFixed(2)}ms`);",
          "type": "debug"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useComparativeAnalysis/layers/standard-core.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/layers/standard-core.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 183,
          "content": "console.error('Failed to load analysis engine:', error);",
          "type": "error"
        },
        {
          "line_number": 197,
          "content": "console.error('Failed to load advanced features:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/useComparativeAnalysis/layers/standard-analysis.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/useComparativeAnalysis/layers/standard-analysis.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 271,
          "content": "enableAnalysisEngine(queryClient, queryKeys, options).catch(console.warn);",
          "type": "warn"
        },
        {
          "line_number": 300,
          "content": "console.debug(`Analysis engine loaded in ${loadTime.toFixed(2)}ms`);",
          "type": "debug"
        },
        {
          "line_number": 314,
          "content": "console.debug(`${queryType} analysis completed in ${queryTime.toFixed(2)}ms`);",
          "type": "debug"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/__tests__/useErrorHandling.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useErrorHandling.test.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 732,
          "content": "expect(console.error).not.toHaveBeenCalled();",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/__tests__/service.direct.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/service.direct.test.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 31,
          "content": "console.log('Testing direct service call...');",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 42,
          "content": "console.log('Direct result:', result);",
          "type": "log"
        },
        {
          "line_number": 43,
          "content": "console.log(",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/__tests__/useOpenBBData.debug.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useOpenBBData.debug.test.ts",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 51,
          "content": "console.log('Mock called with:', params);",
          "type": "log"
        },
        {
          "line_number": 76,
          "content": "console.log('Starting test...');",
          "type": "log"
        },
        {
          "line_number": 89,
          "content": "console.log('Initial state:', {",
          "type": "log"
        },
        {
          "line_number": 99,
          "content": "console.log('Current state:', {",
          "type": "log"
        },
        {
          "line_number": 109,
          "content": "console.log('Final state:', {",
          "type": "log"
        },
        {
          "line_number": 115,
          "content": "console.log('Mock call count:', (openbbService.getEquityHistorical as any).mock.calls.length);",
          "type": "log"
        },
        {
          "line_number": 116,
          "content": "console.log('Mock calls:', (openbbService.getEquityHistorical as any).mock.calls);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/__tests__/mock-debug.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/mock-debug.test.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 16,
          "content": "console.log('mockUseStoreInitialization:', mockUseStoreInitialization);",
          "type": "log"
        },
        {
          "line_number": 18,
          "content": "console.log('Direct call result:', directResult);",
          "type": "log"
        },
        {
          "line_number": 21,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 26,
          "content": "console.log('Registry call result:', registryResult);",
          "type": "log"
        },
        {
          "line_number": 32,
          "content": "console.log('renderHook result.current:', result.current);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/__tests__/useOpenBBData.cache.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useOpenBBData.cache.test.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 170,
          "content": "console.log('Initial state - result1.current:', {",
          "type": "log"
        },
        {
          "line_number": 179,
          "content": "console.log('Waiting for completion - result1.current:', {",
          "type": "log"
        },
        {
          "line_number": 752,
          "content": "console.log('Prefetch result:', prefetchResult.current);",
          "type": "log"
        },
        {
          "line_number": 1235,
          "content": "console.log('Initial state:', {",
          "type": "log"
        },
        {
          "line_number": 1244,
          "content": "console.log('Waiting for error:', {",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/__tests__/useOpenBBData.simple.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useOpenBBData.simple.test.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 76,
          "content": "console.log('Initial state:', {",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.log('Waiting for data...');",
          "type": "log"
        },
        {
          "line_number": 87,
          "content": "console.log('Current state:', {",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/__tests__/useStore.integration.test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/__tests__/useStore.integration.test.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 386,
          "content": "// Mock console.warn to avoid test output noise",
          "type": "warn"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/hooks/data/useProgressiveFinancialData.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/data/useProgressiveFinancialData.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 332,
          "content": "console.error('[Phase 7] Failed to load OpenBB services:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/analytics/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/index.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 168,
          "content": "console.log(`${prefix} ${message}`, {",
          "type": "log"
        },
        {
          "line_number": 177,
          "content": "console.log('[ProgressiveAnalytics] Performance Report', {",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/analytics/useProgressiveAnalytics.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/useProgressiveAnalytics.ts",
      "console_count": 16,
      "console_lines": [
        {
          "line_number": 142,
          "content": "console.log(`[ProgressiveAnalytics] Starting context detection: ${operationId}`);",
          "type": "log"
        },
        {
          "line_number": 164,
          "content": "console.log(`[ProgressiveAnalytics] Context detection completed: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 174,
          "content": "console.error(`[ProgressiveAnalytics] Context detection failed: ${operationId}`, error);",
          "type": "error"
        },
        {
          "line_number": 318,
          "content": "console.log(`[ProgressiveAnalytics] Starting optimal tier selection: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 376,
          "content": "console.log(`[ProgressiveAnalytics] Tier selection completed: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 396,
          "content": "console.log(`[ProgressiveAnalytics] Starting tier transition: ${operationId}`, {",
          "type": "log"
        },
        {
          "line_number": 445,
          "content": "console.log(`[ProgressiveAnalytics] Tier transition successful: ${operationId}`, result);",
          "type": "log"
        },
        {
          "line_number": 464,
          "content": "console.error(`[ProgressiveAnalytics] Tier transition failed: ${operationId}`, error);",
          "type": "error"
        },
        {
          "line_number": 502,
          "content": "console.log(`[ProgressiveAnalytics] Starting intelligent preloading: ${operationId}`);",
          "type": "log"
        },
        {
          "line_number": 513,
          "content": "console.log(`[ProgressiveAnalytics] Preloading features for ${predictedTier}: ${newFeatures.join(', ')}`);",
          "type": "log"
        },
        {
          "line_number": 534,
          "content": "console.error(`[ProgressiveAnalytics] Preloading failed: ${operationId}`, error);",
          "type": "error"
        },
        {
          "line_number": 574,
          "content": "console.log(`[ProgressiveAnalytics] Auto-upgrade triggered: ${currentTier} \u2192 ${optimalTier}`);",
          "type": "log"
        },
        {
          "line_number": 583,
          "content": "console.log('[ProgressiveAnalytics] Initializing Progressive Enhancement System');",
          "type": "log"
        },
        {
          "line_number": 597,
          "content": "console.log('[ProgressiveAnalytics] Progressive Enhancement System initialized', {",
          "type": "log"
        },
        {
          "line_number": 604,
          "content": "console.error('[ProgressiveAnalytics] System initialization failed', error);",
          "type": "error"
        },
        {
          "line_number": 627,
          "content": "console.error('[ProgressiveAnalytics] Context re-evaluation failed', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/analytics/components/StandardAnalyticsProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/components/StandardAnalyticsProgressive.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 323,
          "content": "console.error('Layer transition failed:', error);",
          "type": "error"
        },
        {
          "line_number": 362,
          "content": "console.log('\ud83c\udfaf Progressive Analytics Decision:', debugInfo);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/analytics/components/StandardAnalyticsAdvanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/components/StandardAnalyticsAdvanced.tsx",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 376,
          "content": "console.log('CSV Export:', csv);",
          "type": "log"
        },
        {
          "line_number": 380,
          "content": "console.log('JSON Export:', JSON.stringify(data, null, 2));",
          "type": "log"
        },
        {
          "line_number": 384,
          "content": "console.log('PDF Export: Generated report');",
          "type": "log"
        },
        {
          "line_number": 388,
          "content": "console.log('PNG Export: Chart image saved');",
          "type": "log"
        },
        {
          "line_number": 395,
          "content": "console.error('Export failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/hooks/analytics/components/AdvancedAnalytics.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/hooks/analytics/components/AdvancedAnalytics.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 514,
          "content": "console.log(`[AdvancedAnalytics] Exporting data in ${format} format`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/lib/error-tracking.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/lib/error-tracking.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 368,
          "content": "const originalConsoleError = console.error;",
          "type": "error"
        },
        {
          "line_number": 369,
          "content": "console.error = (...args) => {",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/lib/storage.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/lib/storage.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 136,
          "content": "console.error('Storage event listener error:', error);",
          "type": "error"
        },
        {
          "line_number": 219,
          "content": "console.error('Failed to get storage item:', error);",
          "type": "error"
        },
        {
          "line_number": 394,
          "content": "console.error('Failed to persist state:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/lib/query-config.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/lib/query-config.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 202,
          "content": "console.error('Query Error:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/lib/query-core.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/lib/query-core.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 98,
          "content": "console.error(`Failed to load query domain: ${domain}`, error);",
          "type": "error"
        },
        {
          "line_number": 226,
          "content": "console.error('Query Error:', error);",
          "type": "error"
        },
        {
          "line_number": 285,
          "content": "console.warn(`Failed to preload query domain ${domain}:`, error)",
          "type": "warn"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/lib/performance-monitoring.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/lib/performance-monitoring.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 529,
          "content": "console.error('Failed to send performance metrics:', error);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/lib/http-client.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/lib/http-client.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 135,
          "content": "console.log(",
          "type": "log"
        },
        {
          "line_number": 149,
          "content": "console.error('[HTTP Request Error]', error);",
          "type": "error"
        },
        {
          "line_number": 174,
          "content": "console.error('[HTTP Response Error]', {",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/worker/sw-logger.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/worker/sw-logger.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 99,
          "content": "console.error(logMessage, data);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/monitoring/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/monitoring/index.ts",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 161,
          "content": "console.log('[MonitoringIntegrationHelper] Upgrading existing scripts', {",
          "type": "log"
        },
        {
          "line_number": 172,
          "content": "console.log(`[MonitoringIntegrationHelper] Processing script: ${scriptPath}`);",
          "type": "log"
        },
        {
          "line_number": 183,
          "content": "console.log('[MonitoringIntegrationHelper] Script upgrade completed');",
          "type": "log"
        },
        {
          "line_number": 188,
          "content": "console.log('[MonitoringIntegrationHelper] Upgrading build performance monitor', {",
          "type": "log"
        },
        {
          "line_number": 201,
          "content": "console.log('[MonitoringIntegrationHelper] Upgrading bundle monitoring system', {",
          "type": "log"
        },
        {
          "line_number": 214,
          "content": "console.log('[MonitoringIntegrationHelper] Upgrading CI/CD integration', {",
          "type": "log"
        },
        {
          "line_number": 268,
          "content": "console.log('[MonitoringIntegrationHelper] System compatibility check completed', {",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/monitoring/BundleMonitoringSystem.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/monitoring/BundleMonitoringSystem.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 666,
          "content": "console.log(`[${new Date().toISOString()}] [${name}] INFO: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "log"
        },
        {
          "line_number": 669,
          "content": "console.warn(`[${new Date().toISOString()}] [${name}] WARN: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "warn"
        },
        {
          "line_number": 672,
          "content": "console.error(`[${new Date().toISOString()}] [${name}] ERROR: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "error"
        },
        {
          "line_number": 676,
          "content": "console.debug(`[${new Date().toISOString()}] [${name}] DEBUG: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "debug"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/monitoring/real-time/RealTimeBundleMonitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/monitoring/real-time/RealTimeBundleMonitor.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 583,
          "content": "console.log(`[${new Date().toISOString()}] [${name}] INFO: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "log"
        },
        {
          "line_number": 586,
          "content": "console.warn(`[${new Date().toISOString()}] [${name}] WARN: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "warn"
        },
        {
          "line_number": 589,
          "content": "console.error(`[${new Date().toISOString()}] [${name}] ERROR: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "error"
        },
        {
          "line_number": 593,
          "content": "console.debug(`[${new Date().toISOString()}] [${name}] DEBUG: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "debug"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/monitoring/real-time/LivePerformanceDashboard.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/monitoring/real-time/LivePerformanceDashboard.tsx",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 115,
          "content": "console.log(`[${new Date().toISOString()}] [LivePerformanceDashboard] INFO: ${message}`, meta || '');",
          "type": "log"
        },
        {
          "line_number": 118,
          "content": "console.warn(`[${new Date().toISOString()}] [LivePerformanceDashboard] WARN: ${message}`, meta || '');",
          "type": "warn"
        },
        {
          "line_number": 121,
          "content": "console.error(`[${new Date().toISOString()}] [LivePerformanceDashboard] ERROR: ${message}`, meta || '');",
          "type": "error"
        },
        {
          "line_number": 702,
          "content": "console.log('Optimization analysis received:', data);",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/monitoring/ai/PredictiveRegressionEngine.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/monitoring/ai/PredictiveRegressionEngine.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 745,
          "content": "console.log(`[${new Date().toISOString()}] [${name}] INFO: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "log"
        },
        {
          "line_number": 748,
          "content": "console.warn(`[${new Date().toISOString()}] [${name}] WARN: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "warn"
        },
        {
          "line_number": 751,
          "content": "console.error(`[${new Date().toISOString()}] [${name}] ERROR: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "error"
        },
        {
          "line_number": 755,
          "content": "console.debug(`[${new Date().toISOString()}] [${name}] DEBUG: ${message}`, meta ? JSON.stringify(meta, null, 2) : '');",
          "type": "debug"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/data/phase7/Phase7DataManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/data/phase7/Phase7DataManager.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 327,
          "content": "console.warn(`Phase 7: Performance regression detected in ${atom}`);",
          "type": "warn"
        },
        {
          "line_number": 490,
          "content": "console.log(`Phase 7: Optimization result for ${route}:`, result);",
          "type": "log"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/data/phase7/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/data/phase7/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 392,
          "content": "console.error('Phase 7 initialization failed:', integration.message);",
          "type": "error"
        }
      ],
      "category": "uncategorized"
    },
    {
      "path": "src/pages/DashboardUPA.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/DashboardUPA.tsx",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 64,
          "content": "console.error(`UPA chunk loading failed: ${chunkName}`, error);",
          "type": "error"
        },
        {
          "line_number": 177,
          "content": "console.warn('Error accessing device metrics:', error);",
          "type": "warn"
        },
        {
          "line_number": 192,
          "content": "console.warn('PerformanceObserver not available - skipping UPA performance monitoring');",
          "type": "warn"
        },
        {
          "line_number": 214,
          "content": "console.warn('PerformanceObserver callback error:', error);",
          "type": "warn"
        },
        {
          "line_number": 222,
          "content": "console.log('\ud83d\udd0d UPA PerformanceObserver initialized safely');",
          "type": "log"
        },
        {
          "line_number": 225,
          "content": "console.warn('Failed to initialize PerformanceObserver:', error);",
          "type": "warn"
        },
        {
          "line_number": 234,
          "content": "console.log('\ud83d\udd0d UPA PerformanceObserver disconnected safely');",
          "type": "log"
        },
        {
          "line_number": 237,
          "content": "console.warn('Error disconnecting PerformanceObserver:', error);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/Portfolio.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/Portfolio.tsx",
      "console_count": 16,
      "console_lines": [
        {
          "line_number": 143,
          "content": "console.log('\ud83d\udd17 FMP API connected - loading real data');",
          "type": "log"
        },
        {
          "line_number": 156,
          "content": "console.log('\u2705 Real portfolio data loaded successfully');",
          "type": "log"
        },
        {
          "line_number": 158,
          "content": "console.warn('\u26a0\ufe0f No real data available, falling back to mock data');",
          "type": "warn"
        },
        {
          "line_number": 163,
          "content": "console.warn('\u274c FMP API not accessible, using mock data');",
          "type": "warn"
        },
        {
          "line_number": 168,
          "content": "console.error('\u274c Error loading portfolio data:', error);",
          "type": "error"
        },
        {
          "line_number": 184,
          "content": "console.error('Failed to load portfolio utilities:', error);",
          "type": "error"
        },
        {
          "line_number": 192,
          "content": "console.log('Portfolio render - modal states:', {",
          "type": "log"
        },
        {
          "line_number": 252,
          "content": "console.log('\ud83d\udd04 Refreshing real portfolio data...');",
          "type": "log"
        },
        {
          "line_number": 263,
          "content": "console.log('\u2705 Portfolio data refreshed with real data');",
          "type": "log"
        },
        {
          "line_number": 268,
          "content": "console.log('\ud83d\udd04 Refreshed mock data');",
          "type": "log"
        },
        {
          "line_number": 273,
          "content": "console.error('\u274c Error refreshing portfolio data:', error);",
          "type": "error"
        },
        {
          "line_number": 280,
          "content": "console.log('handleRebalance called - opening rebalance modal');",
          "type": "log"
        },
        {
          "line_number": 285,
          "content": "console.log('handlePerformanceAnalysis called - opening performance modal');",
          "type": "log"
        },
        {
          "line_number": 290,
          "content": "console.log('handleRiskAnalysis called - opening risk modal');",
          "type": "log"
        },
        {
          "line_number": 295,
          "content": "console.log('handleSettings called - opening settings modal');",
          "type": "log"
        },
        {
          "line_number": 560,
          "content": "console.log('Position clicked:', position);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/SecuritiesUPA.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/SecuritiesUPA.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 61,
          "content": "console.error(`UPA chunk loading failed: ${chunkName}`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/SecuritiesProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/SecuritiesProgressive.tsx",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 102,
          "content": "}).catch(console.error);",
          "type": "error"
        },
        {
          "line_number": 141,
          "content": "console.error('Failed to load securities data:', error);",
          "type": "error"
        },
        {
          "line_number": 158,
          "content": "console.error('Failed to load technical indicators:', error);",
          "type": "error"
        },
        {
          "line_number": 174,
          "content": "console.error('Failed to load chart configurations:', error);",
          "type": "error"
        },
        {
          "line_number": 184,
          "content": "loadForContext('charts').catch(console.error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/DashboardProgressive.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/DashboardProgressive.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 206,
          "content": "loadUtilities().catch(console.error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/Analysis.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/Analysis.tsx",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 119,
          "content": "console.error('Export failed:', error);",
          "type": "error"
        },
        {
          "line_number": 258,
          "content": "console.error('Analysis dashboard error:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/securities/components/micro-chunks/FundamentalMetricsModule.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/FundamentalMetricsModule.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 46,
          "content": "console.error('Failed to load fundamental data:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/securities/components/micro-chunks/AdvancedSearchFeatures.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/AdvancedSearchFeatures.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 106,
          "content": "onClick={() => console.log('Search suggestion:', suggestion)}",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/securities/components/micro-chunks/TechnicalMetricsModule.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/TechnicalMetricsModule.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 44,
          "content": "console.error('Failed to calculate technical metrics:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/securities/components/micro-chunks/DetailedMetricsRenderer.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/securities/components/micro-chunks/DetailedMetricsRenderer.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 35,
          "content": "console.error('Failed to load formatters:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/dashboard/DashboardAdvanced.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/dashboard/DashboardAdvanced.tsx",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 172,
          "content": "console.log('AI insight action would be executed here');",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.log(`Advanced dashboard export to ${format.toUpperCase()} would be executed here`);",
          "type": "log"
        },
        {
          "line_number": 187,
          "content": "console.log('Portfolio optimization analysis would be executed here');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/pages/dashboard/DashboardCore.tsx",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/pages/dashboard/DashboardCore.tsx",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 79,
          "content": "console.log(`\ud83d\ude80 Dashboard Core: Requesting upgrade to ${feature}`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/github-actions-integration.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/github-actions-integration.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 161,
          "content": "console.error('Failed to fetch workflow runs:', error);",
          "type": "error"
        },
        {
          "line_number": 191,
          "content": "console.error(`Failed to fetch artifacts for run ${runId}:`, error);",
          "type": "error"
        },
        {
          "line_number": 250,
          "content": "console.error(`Failed to fetch performance baseline for run ${runId}:`, error);",
          "type": "error"
        },
        {
          "line_number": 303,
          "content": "console.error('Failed to fetch bundle trends:', error);",
          "type": "error"
        },
        {
          "line_number": 345,
          "content": "console.error('Failed to fetch Phase 1 data:', error);",
          "type": "error"
        },
        {
          "line_number": 441,
          "content": "console.error('Failed to get bundle analysis data:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/DataServiceManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/DataServiceManager.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 281,
          "content": "console.warn(`Failed to preload service ${service.id}:`, error)",
          "type": "warn"
        },
        {
          "line_number": 358,
          "content": "console.error(`Failed to load data service ${service.id}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/Phase7MasterOrchestrator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/Phase7MasterOrchestrator.ts",
      "console_count": 7,
      "console_lines": [
        {
          "line_number": 155,
          "content": "console.error('[Phase7 Master] \u274c Component health check failed:', error);",
          "type": "error"
        },
        {
          "line_number": 247,
          "content": "console.log(`[Phase7 Master] \ud83d\udd04 Orchestration cycle complete - ${status.achievementSummary.totalAchievements} achievements, ${status.currentTargets.overallProgress.toFixed(1)}% progress`);",
          "type": "log"
        },
        {
          "line_number": 252,
          "content": "console.error('[Phase7 Master] \u274c Orchestration cycle error:', error);",
          "type": "error"
        },
        {
          "line_number": 458,
          "content": "console.log(`[Phase7 Master] \ud83d\udd04 Components coordinated - ${orchestrationData.performance.overallProgress.toFixed(1)}% progress`);",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.error('[Phase7 Master] \u274c Component coordination error:', error);",
          "type": "error"
        },
        {
          "line_number": 474,
          "content": "console.error('[Phase7 Master] \ud83d\udea8 CRITICAL ORCHESTRATION HEALTH');",
          "type": "error"
        },
        {
          "line_number": 591,
          "content": "console.log(`[Phase7 Master] \ud83d\udcca Integrated report generated - ${integratedReport.executiveSummary.progressPercentage.toFixed(1)}% achievement`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/realDataPortfolio.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/realDataPortfolio.ts",
      "console_count": 13,
      "console_lines": [
        {
          "line_number": 61,
          "content": "console.error(`FMP API error for ${symbol}: ${response.status}`);",
          "type": "error"
        },
        {
          "line_number": 67,
          "content": "console.error(`No data returned for symbol ${symbol}`);",
          "type": "error"
        },
        {
          "line_number": 73,
          "content": "console.error(`Error fetching data for ${symbol}:`, error);",
          "type": "error"
        },
        {
          "line_number": 89,
          "content": "console.error(`FMP batch API error: ${response.status}`);",
          "type": "error"
        },
        {
          "line_number": 96,
          "content": "console.error('Error fetching batch quotes:', error);",
          "type": "error"
        },
        {
          "line_number": 156,
          "content": "console.log('\ud83d\udcca Fetching real portfolio data from FMP API...');",
          "type": "log"
        },
        {
          "line_number": 165,
          "content": "console.error('\u274c No stock data received from FMP API');",
          "type": "error"
        },
        {
          "line_number": 169,
          "content": "console.log(`\u2705 Received data for ${stockDataList.length} stocks`);",
          "type": "log"
        },
        {
          "line_number": 182,
          "content": "console.warn(`\u26a0\ufe0f  No data found for ${holding.symbol}`);",
          "type": "warn"
        },
        {
          "line_number": 192,
          "content": "console.log(`\ud83c\udfaf Generated ${positions.length} real portfolio positions`);",
          "type": "log"
        },
        {
          "line_number": 193,
          "content": "console.log(`\ud83d\udcb0 Total portfolio value: $${totalValue.toLocaleString()}`);",
          "type": "log"
        },
        {
          "line_number": 198,
          "content": "console.error('\u274c Error generating real portfolio positions:', error);",
          "type": "error"
        },
        {
          "line_number": 211,
          "content": "console.error('FMP connection test failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/documentation/Phase7SuccessDocumentation.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/documentation/Phase7SuccessDocumentation.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 376,
          "content": "console.log(`[Phase7 Docs] \ud83c\udfc6 Achievement recorded: ${achievement.title} (${achievement.quantifiedImpact.improvementPercentage.toFixed(1)}% improvement)`);",
          "type": "log"
        },
        {
          "line_number": 463,
          "content": "console.log(`[Phase7 Docs] Documentation updated - ${progress.overallProgress.toFixed(1)}% overall progress`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/charts/price-data-service.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/charts/price-data-service.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 59,
          "content": "console.error('Failed to fetch price history:', error);",
          "type": "error"
        },
        {
          "line_number": 87,
          "content": "console.log(`Subscribing to real-time updates for ${symbol}`);",
          "type": "log"
        },
        {
          "line_number": 98,
          "content": "console.log(`Unsubscribed from real-time updates for ${symbol}`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/charts/technical-indicators-service.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/charts/technical-indicators-service.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 138,
          "content": "console.error('Failed to calculate technical indicators:', error);",
          "type": "error"
        },
        {
          "line_number": 162,
          "content": "console.error('Pattern recognition failed:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/openbb/realtime-service.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/openbb/realtime-service.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 71,
          "content": "console.log('OpenBB Real-time service connected');",
          "type": "log"
        },
        {
          "line_number": 82,
          "content": "console.error('Error parsing real-time data:', error);",
          "type": "error"
        },
        {
          "line_number": 87,
          "content": "console.log('OpenBB Real-time service disconnected');",
          "type": "log"
        },
        {
          "line_number": 94,
          "content": "console.error('OpenBB Real-time service error:', error);",
          "type": "error"
        },
        {
          "line_number": 106,
          "content": "console.error('Failed to connect to real-time service:', error);",
          "type": "error"
        },
        {
          "line_number": 188,
          "content": "console.error(`Error polling quote for ${symbol}:`, error);",
          "type": "error"
        },
        {
          "line_number": 218,
          "content": "console.error('Max reconnection attempts reached');",
          "type": "error"
        },
        {
          "line_number": 226,
          "content": "console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);",
          "type": "log"
        },
        {
          "line_number": 246,
          "content": "console.error('Error notifying listener:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/openbb/data-service.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/openbb/data-service.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 69,
          "content": "console.error('OpenBB Data Service error:', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/monitoring/Phase7ChartPerformanceIntegration.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/monitoring/Phase7ChartPerformanceIntegration.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 176,
          "content": "console.log(`[ChartIntegration] Fed chart data to coordinator:`, {",
          "type": "log"
        },
        {
          "line_number": 401,
          "content": "console.log(`[ChartIntegration] Chart variant ${variant} selected and loaded in ${loadTime.toFixed(0)}ms`);",
          "type": "log"
        },
        {
          "line_number": 486,
          "content": "console.log('[ChartIntegration] Progressive loading sequence analyzed:', {",
          "type": "log"
        },
        {
          "line_number": 624,
          "content": "console.log(`[ChartIntegration] User interaction: ${interactionType} on ${componentType} - ${responseTime.toFixed(0)}ms (satisfaction: ${interactionMetric.satisfactionScore}/10)`);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/monitoring/Phase7ProductionMonitor.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/monitoring/Phase7ProductionMonitor.ts",
      "console_count": 6,
      "console_lines": [
        {
          "line_number": 67,
          "content": "console.error('\u274c Phase 7: Failed to establish baseline metrics', error);",
          "type": "error"
        },
        {
          "line_number": 79,
          "content": "console.log(`\ud83d\ude80 Phase 7: Monitoring canary deployment - ${stage} (${trafficPercentage}%)`);",
          "type": "log"
        },
        {
          "line_number": 96,
          "content": "console.error(`\u274c Phase 7: Canary stage ${stage} failed validation`, validation.failures);",
          "type": "error"
        },
        {
          "line_number": 297,
          "content": "console.error(`\ud83d\udea8 Phase 7: Triggering rollback for stage ${stage}`, failures);",
          "type": "error"
        },
        {
          "line_number": 322,
          "content": "console.error('\ud83d\udea8 CRITICAL ALERT: Phase 7 Deployment Failure', alertData);",
          "type": "error"
        },
        {
          "line_number": 348,
          "content": "console.error('\u274c Phase 7: Rollback failed', error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/monitoring/Phase7PerformanceCoordinator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/monitoring/Phase7PerformanceCoordinator.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 317,
          "content": "console.group('[Phase7] Performance Progress Update');",
          "type": "group"
        },
        {
          "line_number": 318,
          "content": "console.log(`Overall Progress: ${progress.overallProgress.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 320,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 341,
          "content": "console.log(`[Phase7] Performance Metric: ${metric} = ${value.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 355,
          "content": "console.log(`[Phase7] Bundle Loaded: ${metrics.name} - ${sizeMB}kB (${compressedMB}kB compressed) in ${metrics.loadTime.toFixed(0)}ms`);",
          "type": "log"
        },
        {
          "line_number": 402,
          "content": "console.log(`[Phase7] Target Validation: ${bundleName} achieved ${achievementLevel} level (${reductionPercentage.toFixed(1)}% reduction)`);",
          "type": "log"
        },
        {
          "line_number": 556,
          "content": "console.log(`[Phase7] \u2705 SUCCESS: ${progress.overallProgress.toFixed(1)}% reduction achieved - within 72-82% target range`);",
          "type": "log"
        },
        {
          "line_number": 562,
          "content": "console.log(`[Phase7] \ud83c\udfc6 EXCEPTIONAL SUCCESS: ${progress.overallProgress.toFixed(1)}% reduction - exceeding 82% target!`);",
          "type": "log"
        },
        {
          "line_number": 568,
          "content": "console.warn(`[Phase7] \u26a0\ufe0f TARGET MISS: ${progress.overallProgress.toFixed(1)}% reduction - below 72% target`);",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/Phase7DataIntegration.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/Phase7DataIntegration.ts",
      "console_count": 12,
      "console_lines": [
        {
          "line_number": 168,
          "content": "console.log(`[Phase 7] \u2705 Context data loaded in ${loadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 171,
          "content": "console.error('[Phase 7] Context data loading failed:', error);",
          "type": "error"
        },
        {
          "line_number": 181,
          "content": "console.log('[Phase 7] \ud83d\udd25 Loading essential data only (fallback mode)');",
          "type": "log"
        },
        {
          "line_number": 193,
          "content": "console.error('[Phase 7] Essential data fallback failed:', error);",
          "type": "error"
        },
        {
          "line_number": 232,
          "content": "console.error(`[Phase 7] Financial data loading failed for ${symbol}:`, error);",
          "type": "error"
        },
        {
          "line_number": 375,
          "content": "console.group('[Phase 7] Performance Summary');",
          "type": "group"
        },
        {
          "line_number": 376,
          "content": "console.log('\ud83d\udcca Bundle Reduction:', `${metrics.bundleReductionPercent.toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 377,
          "content": "console.log('\u26a1 Average Load Time:', `${metrics.averageLoadTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 378,
          "content": "console.log('\ud83d\udcbe Cache Hit Rate:', `${(metrics.cacheHitRate * 100).toFixed(1)}%`);",
          "type": "log"
        },
        {
          "line_number": 379,
          "content": "console.log('\ud83c\udfaf User Experience Score:', `${metrics.userExperienceScore.toFixed(1)}/100`);",
          "type": "log"
        },
        {
          "line_number": 381,
          "content": "console.groupEnd();",
          "type": "group"
        },
        {
          "line_number": 493,
          "content": "console.log('[Phase 7] Target: 77.69kB \u2192 15-25kB (60-75% reduction)');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/advanced/advancedFinancialData.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/advanced/advancedFinancialData.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 398,
          "content": "console.error(`[Phase 7] Failed to load advanced financial data for ${upperSymbol}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/standard/standardFinancialData.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/standard/standardFinancialData.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 220,
          "content": "console.error(`[Phase 7] Failed to load standard financial data for ${upperSymbol}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/progressive/DataProgressiveManager.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/progressive/DataProgressiveManager.ts",
      "console_count": 8,
      "console_lines": [
        {
          "line_number": 148,
          "content": "console.debug(`[Phase 7] Registered data bundle: ${config.id} (${(config.estimatedSize/1024).toFixed(1)}kB)`);",
          "type": "debug"
        },
        {
          "line_number": 175,
          "content": "console.warn('[Phase 7] Standard bundle loading failed:', error)",
          "type": "warn"
        },
        {
          "line_number": 224,
          "content": "console.log(`[Phase 7] Viewport trigger for ${componentId}:`, bundles.map(b => b.id));",
          "type": "log"
        },
        {
          "line_number": 229,
          "content": "console.warn('[Phase 7] Viewport-based loading failed:', error)",
          "type": "warn"
        },
        {
          "line_number": 297,
          "content": "console.error(`[Phase 7] Failed to load bundle ${bundle.id}:`, error);",
          "type": "error"
        },
        {
          "line_number": 303,
          "content": "console.log(`[Phase 7] Loaded ${loadType} bundle group in ${totalTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 330,
          "content": "console.log(`[Phase 7] \u2705 Loaded bundle: ${bundle.id} (${(bundle.estimatedSize/1024).toFixed(1)}kB)`);",
          "type": "log"
        },
        {
          "line_number": 392,
          "content": "console.error(`[Phase 7] Data loading failed for ${bundle.id}:`, error);",
          "type": "error"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/integration-test.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/integration-test.ts",
      "console_count": 21,
      "console_lines": [
        {
          "line_number": 37,
          "content": "console.log('\ud83e\uddea Starting Data Bundle Optimization Integration Tests...');",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.log('\ud83d\udce6 Testing Essential Tier (5.7kB)...');",
          "type": "log"
        },
        {
          "line_number": 125,
          "content": "console.log('\u26a1 Testing Progressive Tier (8.9kB)...');",
          "type": "log"
        },
        {
          "line_number": 197,
          "content": "console.log('\ud83d\ude80 Testing Advanced Tier (6.8kB)...');",
          "type": "log"
        },
        {
          "line_number": 275,
          "content": "console.log('\ud83d\udcca Testing Bundle Size Optimization...');",
          "type": "log"
        },
        {
          "line_number": 327,
          "content": "console.log('\u26a1 Testing Loading Performance...');",
          "type": "log"
        },
        {
          "line_number": 395,
          "content": "console.log(`\u2705 ${testName} (${executionTime.toFixed(2)}ms)`);",
          "type": "log"
        },
        {
          "line_number": 406,
          "content": "console.log(`\u274c ${testName} (${executionTime.toFixed(2)}ms) - ${error}`);",
          "type": "log"
        },
        {
          "line_number": 418,
          "content": "console.log('\\n\ud83d\udcca Test Results Summary:');",
          "type": "log"
        },
        {
          "line_number": 419,
          "content": "console.log(`\u2705 Passed: ${passedTests.length}`);",
          "type": "log"
        },
        {
          "line_number": 420,
          "content": "console.log(`\u274c Failed: ${failedTests.length}`);",
          "type": "log"
        },
        {
          "line_number": 421,
          "content": "console.log(`\u26a1 Total Execution Time: ${totalExecutionTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 422,
          "content": "console.log(`\ud83d\udce6 Bundle Reduction: ${MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction}`);",
          "type": "log"
        },
        {
          "line_number": 423,
          "content": "console.log(`\ud83d\udcbe Size Savings: ${MICRO_CHUNK_BUNDLE_SIZES.optimized.savings}`);",
          "type": "log"
        },
        {
          "line_number": 426,
          "content": "console.log('\\n\u274c Failed Tests:');",
          "type": "log"
        },
        {
          "line_number": 428,
          "content": "console.log(`  - ${test.testName}: ${test.error}`);",
          "type": "log"
        },
        {
          "line_number": 432,
          "content": "console.log('\\n\ud83c\udfaf Performance Summary:');",
          "type": "log"
        },
        {
          "line_number": 433,
          "content": "console.log(`  - Bundle Optimization Target: 70% reduction`);",
          "type": "log"
        },
        {
          "line_number": 434,
          "content": "console.log(`  - Actual Achievement: ${MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction}`);",
          "type": "log"
        },
        {
          "line_number": 435,
          "content": "console.log(`  - Target Status: ${parseFloat(MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction.replace('%', '')) >= 70 ? '\u2705 ACHIEVED' : '\u274c MISSED'}`);",
          "type": "log"
        },
        {
          "line_number": 490,
          "content": "console.log('\ud83e\uddea Data Bundle Integration Tests available. Run: window.runDataBundleTests()');",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/services/data/micro-chunks/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/index.ts",
      "console_count": 15,
      "console_lines": [
        {
          "line_number": 53,
          "content": "console.log('[Micro-Chunks] Loading progressive services (8.9kB)...');",
          "type": "log"
        },
        {
          "line_number": 59,
          "content": "console.log('[Micro-Chunks] \u2705 Progressive services loaded');",
          "type": "log"
        },
        {
          "line_number": 62,
          "content": "console.error('[Micro-Chunks] Failed to load progressive services:', error);",
          "type": "error"
        },
        {
          "line_number": 74,
          "content": "console.log('[Micro-Chunks] Loading advanced services (6.8kB)...');",
          "type": "log"
        },
        {
          "line_number": 80,
          "content": "console.log('[Micro-Chunks] \u2705 Advanced services loaded');",
          "type": "log"
        },
        {
          "line_number": 83,
          "content": "console.error('[Micro-Chunks] Failed to load advanced services:', error);",
          "type": "error"
        },
        {
          "line_number": 109,
          "content": "console.warn('[Micro-Chunks] Preload failed for progressive:', error)",
          "type": "warn"
        },
        {
          "line_number": 113,
          "content": "console.warn('[Micro-Chunks] Preload failed for advanced:', error)",
          "type": "warn"
        },
        {
          "line_number": 126,
          "content": "console.log('[Micro-Chunks] Caches cleared');",
          "type": "log"
        },
        {
          "line_number": 300,
          "content": "console.group('[Data Bundle Optimization] Micro-Chunk System Initialized');",
          "type": "group"
        },
        {
          "line_number": 301,
          "content": "console.log('\ud83d\udce6 Original Bundle:', MICRO_CHUNK_BUNDLE_SIZES.original.size);",
          "type": "log"
        },
        {
          "line_number": 302,
          "content": "console.log('\u26a1 Optimized Bundle:', MICRO_CHUNK_BUNDLE_SIZES.optimized.total);",
          "type": "log"
        },
        {
          "line_number": 303,
          "content": "console.log('\ud83c\udfaf Bundle Reduction:', `${MICRO_CHUNK_BUNDLE_SIZES.optimized.reduction} (${MICRO_CHUNK_BUNDLE_SIZES.optimized.savings} saved)`);",
          "type": "log"
        },
        {
          "line_number": 304,
          "content": "console.log('\ud83d\ude80 Load Strategy:', MICRO_CHUNK_BUNDLE_SIZES.loadingStrategy);",
          "type": "log"
        },
        {
          "line_number": 305,
          "content": "console.groupEnd();",
          "type": "group"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/advanced/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/advanced/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 154,
          "content": "console.log('[Data Bundle Optimization] Advanced micro-chunk loaded:', ADVANCED_MICRO_CHUNK_TOTAL_SIZE.total);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/essential/queryCore.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/essential/queryCore.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 94,
          "content": "console.log(`[Essential Data] ${operation}`, data);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/essential/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/essential/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 123,
          "content": "console.log('[Data Bundle Optimization] Essential micro-chunk loaded:', ESSENTIAL_MICRO_CHUNK_TOTAL_SIZE.total);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/essential/marketEssentials.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/essential/marketEssentials.ts",
      "console_count": 5,
      "console_lines": [
        {
          "line_number": 98,
          "content": "console.warn(`[Market Essentials] Invalid symbol: ${symbol}`);",
          "type": "warn"
        },
        {
          "line_number": 111,
          "content": "console.warn(`[Market Essentials] Invalid price data for ${symbol}:`, validation.errors);",
          "type": "warn"
        },
        {
          "line_number": 118,
          "content": "console.error(`[Market Essentials] Failed to fetch price for ${symbol}:`, error);",
          "type": "error"
        },
        {
          "line_number": 148,
          "content": "console.error('[Market Essentials] Failed to fetch market summary:', error);",
          "type": "error"
        },
        {
          "line_number": 209,
          "content": "console.log('[Market Essentials] Cache cleared');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/progressive/portfolioServices.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/progressive/portfolioServices.ts",
      "console_count": 9,
      "console_lines": [
        {
          "line_number": 161,
          "content": "console.warn('[Portfolio Services] Invalid performance data:', validation.errors);",
          "type": "warn"
        },
        {
          "line_number": 168,
          "content": "console.error('[Portfolio Services] Failed to fetch portfolio performance:', error);",
          "type": "error"
        },
        {
          "line_number": 195,
          "content": "console.error('[Portfolio Services] Failed to fetch watchlist:', error);",
          "type": "error"
        },
        {
          "line_number": 211,
          "content": "console.warn('[Portfolio Services] Invalid watchlist item:', validation.errors);",
          "type": "warn"
        },
        {
          "line_number": 216,
          "content": "console.log('[Portfolio Services] Added to watchlist:', watchlistItem);",
          "type": "log"
        },
        {
          "line_number": 223,
          "content": "console.error('[Portfolio Services] Failed to add to watchlist:', error);",
          "type": "error"
        },
        {
          "line_number": 231,
          "content": "console.log('[Portfolio Services] Removed from watchlist:', symbol);",
          "type": "log"
        },
        {
          "line_number": 238,
          "content": "console.error('[Portfolio Services] Failed to remove from watchlist:', error);",
          "type": "error"
        },
        {
          "line_number": 293,
          "content": "console.log('[Portfolio Services] Cache cleared');",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/data/micro-chunks/progressive/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/data/micro-chunks/progressive/index.ts",
      "console_count": 1,
      "console_lines": [
        {
          "line_number": 177,
          "content": "console.log('[Data Bundle Optimization] Progressive micro-chunk loaded:', PROGRESSIVE_MICRO_CHUNK_TOTAL_SIZE.total);",
          "type": "log"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/analytics/index.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/analytics/index.ts",
      "console_count": 2,
      "console_lines": [
        {
          "line_number": 77,
          "content": "console.error(`Failed to load analytics domain: ${domain}`, error);",
          "type": "error"
        },
        {
          "line_number": 164,
          "content": "(error) => console.warn('Failed to preload analytics domains in development:', error)",
          "type": "warn"
        }
      ],
      "category": "core_application"
    },
    {
      "path": "src/services/analytics/forecasting/micro-chunks/validation.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/services/analytics/forecasting/micro-chunks/validation.ts",
      "console_count": 4,
      "console_lines": [
        {
          "line_number": 450,
          "content": "console.log('[ForecastingValidation] Validation Results:', results);",
          "type": "log"
        },
        {
          "line_number": 453,
          "content": "console.error('[ForecastingValidation] Validation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 462,
          "content": "console.log('[ForecastingValidation] Performance Benchmark:', benchmark);",
          "type": "log"
        },
        {
          "line_number": 465,
          "content": "console.error('[ForecastingValidation] Benchmark failed:', error);",
          "type": "error"
        }
      ],
      "category": "development_debugging"
    },
    {
      "path": "src/validation/Phase7BundleOptimizationValidator.ts",
      "full_path": "/Users/jeremyparker/Desktop/Claude Coding Projects/finance-ai-research-platform/frontend/src/validation/Phase7BundleOptimizationValidator.ts",
      "console_count": 3,
      "console_lines": [
        {
          "line_number": 122,
          "content": "console.log(`Phase 7 validation completed in ${totalTime.toFixed(2)}ms`);",
          "type": "log"
        },
        {
          "line_number": 129,
          "content": "console.error('[Phase 7 Validation] \u274c Validation failed:', error);",
          "type": "error"
        },
        {
          "line_number": 237,
          "content": "console.log(`${tier} tier validation completed in ${totalValidationTime.toFixed(2)}ms`);",
          "type": "log"
        }
      ],
      "category": "development_debugging"
    }
  ]
}
