{
  "env": {
    "ANTHROPIC_MODEL": "claude-sonnet-4-20250514",
    "BASH_DEFAULT_TIMEOUT_MS": "300000",
    "BASH_MAX_TIMEOUT_MS": "300000"
  },
  "permissions": {
    "allow": [
      "Bash(*)",
      "WebFetch",
      "Edit",
      "Read",
      "Write"
    ],
    "deny": [
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(mkfs.*:*)",
      "Bash(shred:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(gparted:*)",
      "Bash(cfdisk:*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(reboot:*)",
      "Bash(halt:*)",
      "Bash(poweroff:*)",
      "Bash(shutdown:*)",
      "Bash(curl:*.*.*.*)",
      "Bash(curl:*.com*)",
      "Bash(curl:*.org*)",
      "Bash(curl:*.net*)",
      "Bash(curl:*.edu*)",
      "Bash(curl:*.gov*)",
      "Bash(curl:*://*.*)",
      "Bash(wget:*)",
      "Bash(nc:*)",
      "Bash(netcat:*)",
      "Bash(telnet:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(socat:*)",
      "Bash(tcpdump:*)",
      "Bash(iftop:*)",
      "Bash(nmap:*)",
      "Bash(wireshark:*)",
      "Bash(tshark:*)",
      "Bash(netstat:*.*.*.*)",
      "Bash(netstat:*.com*)",
      "Bash(netstat:*.org*)",
      "Bash(netstat:*.net*)",
      "Bash(netstat:*.edu*)",
      "Bash(netstat:*.gov*)",
      "Bash(ss:*.*.*.*)",
      "Bash(ss:*.com*)",
      "Bash(ss:*.org*)",
      "Bash(ss:*.net*)",
      "Bash(ss:*.edu*)",
      "Bash(ss:*.gov*)",
      "Bash(lsof:*.*.*.*)",
      "Bash(lsof:*.com*)",
      "Bash(lsof:*.org*)",
      "Bash(lsof:*.net*)",
      "Bash(lsof:*.edu*)",
      "Bash(lsof:*.gov*)",
      "Bash(ftp:*)",
      "Bash(sftp:*)",
      "Bash(ping:*.*.*.*)",
      "Bash(ping:*.com*)",
      "Bash(ping:*.org*)",
      "Bash(ping:*.net*)",
      "Bash(ping:*.edu*)",
      "Bash(ping:*.gov*)",
      "Bash(traceroute:*)",
      "Bash(dig:*.*.*.*)",
      "Bash(dig:*.com*)",
      "Bash(dig:*.org*)",
      "Bash(dig:*.net*)",
      "Bash(dig:*.edu*)",
      "Bash(dig:*.gov*)",
      "Bash(nslookup:*.*.*.*)",
      "Bash(nslookup:*.com*)",
      "Bash(nslookup:*.org*)",
      "Bash(nslookup:*.net*)",
      "Bash(nslookup:*.edu*)",
      "Bash(nslookup:*.gov*)",
      "Bash(host:*.*.*.*)",
      "Bash(host:*.com*)",
      "Bash(host:*.org*)",
      "Bash(host:*.net*)",
      "Bash(host:*.edu*)",
      "Bash(host:*.gov*)",
      "Bash(mount:*)",
      "Bash(umount:*)",
      "Bash(chrome:*)",
      "Bash(firefox:*)",
      "Bash(safari:*)",
      "Bash(lynx:*)",
      "Bash(w3m:*)",
      "Bash(links:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(pkill:*:22)",
      "Bash(pkill:*:80)",
      "Bash(pkill:*:443)",
      "Bash(pkill:*:25)",
      "Bash(pkill:*:53)",
      "Bash(pkill:*:110)",
      "Bash(pkill:*:143)",
      "Bash(pkill:*:993)",
      "Bash(pkill:*:995)",
      "Bash(pkill:*:3306)",
      "Bash(pkill:*:5432)",
      "Bash(pkill:*:6379)",
      "Bash(pkill:*:27017)",
      "Bash(pkill:*:11211)",
      "Bash(pkill:* /usr/*)",
      "Bash(pkill:* /bin/*)",
      "Bash(pkill:* /sbin/*)",
      "Bash(pkill:* systemd)",
      "Bash(pkill:* kernel)",
      "Bash(pkill:* init)",
      "Bash(pkill:*postgres*)",
      "Bash(pkill:*redis-server*)",
      "Bash(pkill:*docker*)",
      "Bash(pkill:*ARDAgent*)",
      "Bash(pkill:*ControlCenter*)",
      "Bash(pkill:*rapportd*)",
      "Bash(pkill:*launchd*)",
      "Bash(pkill:*Raycast*)",
      "Bash(pkill:*RoboForm*)",
      "Bash(pkill:*com.docker*)",
      "Bash(pkill:*ssh-agent*)",
      "Bash(pkill:*webprivacyd*)",
      "Bash(pkill:*webinspectord*)",
      "Bash(pkill:*webkit*)",
      "Bash(pkill:*mdbulkimport*)",
      "Bash(pkill:*sshd*)",
      "Bash(pkill:*nginx*)",
      "Bash(pkill:*apache*)",
      "Bash(pkill:*mysql*)",
      "Bash(pkill:*mongo*)",
      "Bash(*>/dev/sda*)",
      "Bash(*>/dev/sd*)",
      "Bash(*>/dev/hd*)",
      "Bash(*>/dev/nvme*)",
      "Bash(:()*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(useradd:*)",
      "Bash(adduser:*)",
      "Bash(userdel:*)",
      "Bash(deluser:*)",
      "Bash(usermod:*)",
      "Bash(groupadd:*)",
      "Bash(addgroup:*)",
      "Bash(groupdel:*)",
      "Bash(delgroup:*)",
      "Bash(groupmod:*)",
      "Bash(passwd:*)",
      "Bash(crontab:*)",
      "Bash(at:*)",
      "Bash(iptables:*)",
      "Bash(ufw:*)",
      "Bash(firewall-cmd:*)",
      "Bash(apt:*)",
      "Bash(apt-get:*)",
      "Bash(yum:*)",
      "Bash(dnf:*)",
      "Bash(pacman:*)",
      "Bash(zypper:*)",
      "Bash(dpkg:*)",
      "Bash(rpm:*)",
      "Bash(insmod:*)",
      "Bash(modprobe:*)",
      "Bash(rmmod:*)",
      "Bash(lsmod:*)",
      "Bash(nohup:*)",
      "Bash(disown:*)",
      "Bash(bg:*)",
      "Bash(fg:*)",
      "Bash(jobs:*)",
      "Bash(setsid:*)",
      "Bash(newgrp:*)",
      "Bash(sg:*)",
      "Bash(chroot:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(init:*)",
      "Bash(telinit:*)",
      "Bash(history:*-c*)",
      "Bash(export:HISTFILE=/dev/null)",
      "Bash(unset:HISTFILE)",
      "Bash(ln:*)",
      "Bash(mknod:*)",
      "Bash(alias:rm='*')",
      "Bash(rm: /)",
      "Bash(rm: -r /)",
      "Bash(rm: -f /)",
      "Bash(rm: -rf /)",
      "Bash(rm:* /etc)",
      "Bash(rm:* /etc/*)",
      "Bash(rm:* /usr)",
      "Bash(rm:* /usr/*)",
      "Bash(rm:* /var)",
      "Bash(rm:* /var/*)",
      "Bash(rm:* /bin)",
      "Bash(rm:* /bin/*)",
      "Bash(rm:* /sbin)",
      "Bash(rm:* /sbin/*)",
      "Bash(rm:* /lib)",
      "Bash(rm:* /lib/*)",
      "Bash(rm:* /boot)",
      "Bash(rm:* /boot/*)",
      "Bash(rm:* /dev)",
      "Bash(rm:* /dev/*)",
      "Bash(rm:* /sys)",
      "Bash(rm:* /sys/*)",
      "Bash(rm:* /proc)",
      "Bash(rm:* /proc/*)",
      "Bash(rm:* /root)",
      "Bash(rm:* /root/*)"
    ]
  },
  "model": "sonnet",
  "hooks": {
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "node \"/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/stop-hook.js\"",
            "timeout": 10000
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "ps -eo pid,rss,comm | awk '$2 > 1048576 && $3 == \"node\" {print $1}' | xargs -r kill",
            "timeout": 60000
          }
        ]
      }
    ]
  },
  "feedbackSurveyState": {
    "lastShownTime": 1754509550909
  }
}