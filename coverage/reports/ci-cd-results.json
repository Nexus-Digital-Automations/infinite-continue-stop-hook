{
  "metadata": {
    "timestamp": "2025-09-26T21:29:21.894Z",
    "reporter": "jest-cicd-reporter",
    "version": "1.0.0",
    "generator": "Enhanced Coverage System",
    "duration_ms": 721
  },
  "cicd_summary": {
    "pipeline_status": "FAILURE",
    "total_duration_ms": 721,
    "should_block_deployment": true,
    "quality_gate_status": {
      "status": "FAILED",
      "criteria": {
        "tests_passing": false,
        "no_failed_tests": false,
        "coverage_adequate": false,
        "performance_acceptable": true
      },
      "blocking_issues": [
        {
          "type": "test_failures",
          "severity": "critical",
          "message": "41 test(s) failed",
          "action": "Fix failing tests before deployment"
        },
        {
          "type": "low_coverage",
          "severity": "warning",
          "message": "Code coverage below acceptable threshold",
          "action": "Add more tests to improve coverage"
        }
      ]
    },
    "test_health_score": 95
  },
  "test_execution": {
    "summary": {
      "total_suites": 18,
      "passed_suites": 0,
      "failed_suites": 1,
      "total_tests": 397,
      "passed_tests": 10,
      "failed_tests": 41,
      "pending_tests": 346,
      "success_rate": "2.52",
      "execution_time_ms": 721
    },
    "performance_metrics": {
      "average_test_duration": 1.8161209068010076,
      "slowest_suite": {
        "path": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js",
        "duration_ms": 385,
        "num_tests": 0
      },
      "memory_usage": {
        "rss": 106872832,
        "heap_total": 42860544,
        "heap_used": 28411896,
        "external": 2218045,
        "heap_usage_percent": "66.29"
      },
      "parallel_efficiency": {
        "parallel_efficiency_percent": "247.71",
        "total_execution_time_ms": 721,
        "serial_time_ms": 1786,
        "time_saved_ms": 1065
      }
    },
    "failure_analysis": {
      "total_failures": 41,
      "failed_suites": 1,
      "failure_details": [
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should create feature suggestion with all required fields",
          "duration": 5,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:10"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should handle different feature categories correctly",
          "duration": 1,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:12"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should auto-generate unique feature IDs",
          "duration": 1,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:14"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should preserve custom metadata in feature suggestions",
          "duration": 0,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:17"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update total feature count after suggestion",
          "duration": 0,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:2"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update last modified timestamp",
          "duration": 0,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:29"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should preserve existing features when adding new ones",
          "duration": 0,
          "error": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:31"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve suggested feature with full approval data",
          "duration": 0,
          "error": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejec"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve feature with minimal approval data",
          "duration": 0,
          "error": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejec"
        },
        {
          "suite": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
          "test": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should update feature timestamps on approval",
          "duration": 0,
          "error": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejec"
        }
      ],
      "failure_patterns": {
        "assertion": 19,
        "type": 22
      },
      "common_failure_type": "type"
    },
    "flaky_test_detection": {
      "potentially_flaky": [],
      "confidence": "low",
      "note": "Flaky test detection requires historical data analysis"
    }
  },
  "git": {
    "commit_sha": "639d74634b90b1709f0bcd86cc7f624f0048a61d",
    "branch": "main",
    "author": "Claude <claude@anthropic.com>",
    "commit_message": "feat: implement comprehensive testing framework fixes and authorization compatibility",
    "commit_date": "2025-09-26 16:28:55 -0500",
    "tag": null,
    "is_dirty": true,
    "remote_url": "https://github.com/Nexus-Digital-Automations/infinite-continue-stop-hook.git"
  },
  "environment": {
    "node_version": "v22.20.0",
    "platform": "darwin",
    "arch": "arm64",
    "ci": false,
    "ci_provider": "local",
    "environment": "test",
    "timezone": "America/Chicago",
    "locale": "en-US",
    "memory": {
      "total": 25769803776,
      "available": 179568640
    },
    "cpu": {
      "cores": 8,
      "model": "Apple M3"
    },
    "build_info": {
      "build_number": "unknown",
      "build_url": null,
      "job_name": "unknown"
    }
  },
  "coverage_integration": {
    "coverage_available": false,
    "coverage_summary": null,
    "coverage_status": "not_available"
  },
  "notifications": [],
  "recommendations": [
    {
      "category": "testing",
      "priority": "high",
      "recommendation": "Fix failing tests immediately",
      "details": "41 tests are currently failing"
    }
  ]
}