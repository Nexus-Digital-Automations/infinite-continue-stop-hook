{
  "metadata": {
    "timestamp": "2025-09-26T21:29:21.892Z",
    "reporter": "jest-json-reporter",
    "version": "1.0.0",
    "generator": "Enhanced Coverage System"
  },
  "summary": {
    "numTotalTestSuites": 18,
    "numPassedTestSuites": 0,
    "numFailedTestSuites": 1,
    "numPendingTestSuites": 17,
    "numTotalTests": 397,
    "numPassedTests": 10,
    "numFailedTests": 41,
    "numPendingTests": 346,
    "numTodoTests": 0,
    "startTime": 1758922161173,
    "endTime": 1758922161892,
    "duration": 719,
    "success": false
  },
  "testResults": [
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/stop-hook-integration.test.js",
      "displayName": {
        "color": "white",
        "name": "e2e"
      },
      "status": "passed",
      "startTime": 1758922161366,
      "endTime": 1758922161491,
      "duration": 125,
      "numTests": 9,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 9,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Basic Stop Hook Functionality"
          ],
          "title": "Agent stop authorization workflow",
          "fullName": "Stop Hook Integration E2E Basic Stop Hook Functionality Agent stop authorization workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Basic Stop Hook Functionality"
          ],
          "title": "Stop hook with feature operations integration",
          "fullName": "Stop Hook Integration E2E Basic Stop Hook Functionality Stop hook with feature operations integration",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Infinite Continue Mode"
          ],
          "title": "Infinite continue loop with controlled termination",
          "fullName": "Stop Hook Integration E2E Infinite Continue Mode Infinite continue loop with controlled termination",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Infinite Continue Mode"
          ],
          "title": "Multiple concurrent infinite continue streams",
          "fullName": "Stop Hook Integration E2E Infinite Continue Mode Multiple concurrent infinite continue streams",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Stop Hook Conditions and Logic"
          ],
          "title": "Conditional stop authorization based on system state",
          "fullName": "Stop Hook Integration E2E Stop Hook Conditions and Logic Conditional stop authorization based on system state",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Stop Hook Conditions and Logic"
          ],
          "title": "Stop hook error recovery scenarios",
          "fullName": "Stop Hook Integration E2E Stop Hook Conditions and Logic Stop hook error recovery scenarios",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Advanced Stop Hook Integration"
          ],
          "title": "Stop hook with feature lifecycle integration",
          "fullName": "Stop Hook Integration E2E Advanced Stop Hook Integration Stop hook with feature lifecycle integration",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Advanced Stop Hook Integration"
          ],
          "title": "Stop hook performance under load",
          "fullName": "Stop Hook Integration E2E Advanced Stop Hook Integration Stop hook performance under load",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stop Hook Integration E2E",
            "Advanced Stop Hook Integration"
          ],
          "title": "Stop hook system recovery after failure",
          "fullName": "Stop Hook Integration E2E Advanced Stop Hook Integration Stop hook system recovery after failure",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/agent-lifecycle.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "passed",
      "startTime": 1758922161366,
      "endTime": 1758922161493,
      "duration": 127,
      "numTests": 19,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 19,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Initialization Workflow"
          ],
          "title": "should handle single agent initialization process",
          "fullName": "Agent Lifecycle Integration Tests Agent Initialization Workflow should handle single agent initialization process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Initialization Workflow"
          ],
          "title": "should handle multiple agent initialization",
          "fullName": "Agent Lifecycle Integration Tests Agent Initialization Workflow should handle multiple agent initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Initialization Workflow"
          ],
          "title": "should handle concurrent agent initialization",
          "fullName": "Agent Lifecycle Integration Tests Agent Initialization Workflow should handle concurrent agent initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Initialization Workflow"
          ],
          "title": "should prevent duplicate agent initialization",
          "fullName": "Agent Lifecycle Integration Tests Agent Initialization Workflow should prevent duplicate agent initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Reinitialization Workflow"
          ],
          "title": "should handle agent reinitialization process",
          "fullName": "Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle agent reinitialization process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Reinitialization Workflow"
          ],
          "title": "should handle multiple reinitializations of same agent",
          "fullName": "Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle multiple reinitializations of same agent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Reinitialization Workflow"
          ],
          "title": "should handle reinitialization of non-existent agent",
          "fullName": "Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle reinitialization of non-existent agent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Agent Reinitialization Workflow"
          ],
          "title": "should handle concurrent reinitializations",
          "fullName": "Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle concurrent reinitializations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Stop Authorization Workflow"
          ],
          "title": "should handle agent stop authorization process",
          "fullName": "Agent Lifecycle Integration Tests Stop Authorization Workflow should handle agent stop authorization process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Stop Authorization Workflow"
          ],
          "title": "should handle stop authorization with different reasons",
          "fullName": "Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization with different reasons",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Stop Authorization Workflow"
          ],
          "title": "should handle stop authorization without reason",
          "fullName": "Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization without reason",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Stop Authorization Workflow"
          ],
          "title": "should handle stop authorization by non-existent agent",
          "fullName": "Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization by non-existent agent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Stop Authorization Workflow"
          ],
          "title": "should handle multiple stop authorizations",
          "fullName": "Agent Lifecycle Integration Tests Stop Authorization Workflow should handle multiple stop authorizations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Initialization Statistics Tracking"
          ],
          "title": "should track initialization statistics accurately",
          "fullName": "Agent Lifecycle Integration Tests Initialization Statistics Tracking should track initialization statistics accurately",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Initialization Statistics Tracking"
          ],
          "title": "should maintain statistics persistence across operations",
          "fullName": "Agent Lifecycle Integration Tests Initialization Statistics Tracking should maintain statistics persistence across operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Initialization Statistics Tracking"
          ],
          "title": "should handle time bucket boundaries correctly",
          "fullName": "Agent Lifecycle Integration Tests Initialization Statistics Tracking should handle time bucket boundaries correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Complete Agent Lifecycle Scenarios"
          ],
          "title": "should handle complete agent workflow from initialization to stop",
          "fullName": "Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle complete agent workflow from initialization to stop",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Complete Agent Lifecycle Scenarios"
          ],
          "title": "should handle multi-agent collaborative workflow",
          "fullName": "Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle multi-agent collaborative workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Lifecycle Integration Tests",
            "Complete Agent Lifecycle Scenarios"
          ],
          "title": "should handle agent workflow error recovery",
          "fullName": "Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle agent workflow error recovery",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "passed",
      "startTime": 1758922161366,
      "endTime": 1758922161496,
      "duration": 130,
      "numTests": 18,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 18,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Mock Framework Functionality"
          ],
          "title": "should initialize mock manager successfully",
          "fullName": "Example Test with Mock Framework Mock Framework Functionality should initialize mock manager successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Mock Framework Functionality"
          ],
          "title": "should provide access to sample data",
          "fullName": "Example Test with Mock Framework Mock Framework Functionality should provide access to sample data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Mock Framework Functionality"
          ],
          "title": "should generate unique test identifiers",
          "fullName": "Example Test with Mock Framework Mock Framework Functionality should generate unique test identifiers",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "API Mock Integration"
          ],
          "title": "should mock agent initialization",
          "fullName": "Example Test with Mock Framework API Mock Integration should mock agent initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "API Mock Integration"
          ],
          "title": "should mock feature creation",
          "fullName": "Example Test with Mock Framework API Mock Integration should mock feature creation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "API Mock Integration"
          ],
          "title": "should handle feature validation errors",
          "fullName": "Example Test with Mock Framework API Mock Integration should handle feature validation errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "API Mock Integration"
          ],
          "title": "should mock feature listing with filters",
          "fullName": "Example Test with Mock Framework API Mock Integration should mock feature listing with filters",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Environment Management"
          ],
          "title": "should create and manage test environment",
          "fullName": "Example Test with Mock Framework Test Environment Management should create and manage test environment",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Environment Management"
          ],
          "title": "should read and write features data",
          "fullName": "Example Test with Mock Framework Test Environment Management should read and write features data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Performance Testing Utilities"
          ],
          "title": "should measure execution time",
          "fullName": "Example Test with Mock Framework Performance Testing Utilities should measure execution time",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Performance Testing Utilities"
          ],
          "title": "should measure memory usage",
          "fullName": "Example Test with Mock Framework Performance Testing Utilities should measure memory usage",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Execution Utilities"
          ],
          "title": "should handle timeouts",
          "fullName": "Example Test with Mock Framework Test Execution Utilities should handle timeouts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Execution Utilities"
          ],
          "title": "should retry failed operations",
          "fullName": "Example Test with Mock Framework Test Execution Utilities should retry failed operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Execution Utilities"
          ],
          "title": "should execute promises in parallel with concurrency control",
          "fullName": "Example Test with Mock Framework Test Execution Utilities should execute promises in parallel with concurrency control",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Data Factory"
          ],
          "title": "should create consistent test data",
          "fullName": "Example Test with Mock Framework Test Data Factory should create consistent test data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Test Data Factory"
          ],
          "title": "should create different types of test data",
          "fullName": "Example Test with Mock Framework Test Data Factory should create different types of test data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Error Handling"
          ],
          "title": "should handle API errors gracefully",
          "fullName": "Example Test with Mock Framework Error Handling should handle API errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Example Test with Mock Framework",
            "Error Handling"
          ],
          "title": "should provide meaningful error messages",
          "fullName": "Example Test with Mock Framework Error Handling should provide meaningful error messages",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/multi-agent-scenarios.test.js",
      "displayName": {
        "color": "white",
        "name": "e2e"
      },
      "status": "passed",
      "startTime": 1758922161504,
      "endTime": 1758922161525,
      "duration": 21,
      "numTests": 7,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 7,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Concurrent Feature Operations"
          ],
          "title": "Multiple agents suggesting features simultaneously",
          "fullName": "Multi-Agent Scenarios E2E Concurrent Feature Operations Multiple agents suggesting features simultaneously",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Concurrent Feature Operations"
          ],
          "title": "Concurrent approval/rejection operations",
          "fullName": "Multi-Agent Scenarios E2E Concurrent Feature Operations Concurrent approval/rejection operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Multi-Agent Coordination"
          ],
          "title": "Agent coordination during high-load scenarios",
          "fullName": "Multi-Agent Scenarios E2E Multi-Agent Coordination Agent coordination during high-load scenarios",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Multi-Agent Coordination"
          ],
          "title": "Agent conflict resolution",
          "fullName": "Multi-Agent Scenarios E2E Multi-Agent Coordination Agent conflict resolution",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Stop Hook Multi-Agent Integration"
          ],
          "title": "Multiple agents with coordinated stop hooks",
          "fullName": "Multi-Agent Scenarios E2E Stop Hook Multi-Agent Integration Multiple agents with coordinated stop hooks",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Stop Hook Multi-Agent Integration"
          ],
          "title": "Stop hook authorization cascading",
          "fullName": "Multi-Agent Scenarios E2E Stop Hook Multi-Agent Integration Stop hook authorization cascading",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Multi-Agent Scenarios E2E",
            "Resource Contention Scenarios"
          ],
          "title": "File system contention handling",
          "fullName": "Multi-Agent Scenarios E2E Resource Contention Scenarios File system contention handling",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/performance-validation.test.js",
      "displayName": {
        "color": "white",
        "name": "e2e"
      },
      "status": "passed",
      "startTime": 1758922161504,
      "endTime": 1758922161527,
      "duration": 23,
      "numTests": 11,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 11,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "API Performance Benchmarks"
          ],
          "title": "Feature suggestion performance under load",
          "fullName": "Performance Validation E2E API Performance Benchmarks Feature suggestion performance under load",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "API Performance Benchmarks"
          ],
          "title": "Feature approval performance benchmarks",
          "fullName": "Performance Validation E2E API Performance Benchmarks Feature approval performance benchmarks",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "API Performance Benchmarks"
          ],
          "title": "Bulk operation performance validation",
          "fullName": "Performance Validation E2E API Performance Benchmarks Bulk operation performance validation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Concurrent Load Performance"
          ],
          "title": "High concurrency performance validation",
          "fullName": "Performance Validation E2E Concurrent Load Performance High concurrency performance validation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Concurrent Load Performance"
          ],
          "title": "Resource contention performance impact",
          "fullName": "Performance Validation E2E Concurrent Load Performance Resource contention performance impact",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Stop Hook Performance"
          ],
          "title": "Stop hook response time benchmarks",
          "fullName": "Performance Validation E2E Stop Hook Performance Stop hook response time benchmarks",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Stop Hook Performance"
          ],
          "title": "Infinite continue performance under load",
          "fullName": "Performance Validation E2E Stop Hook Performance Infinite continue performance under load",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Scalability Performance"
          ],
          "title": "Feature storage scalability validation",
          "fullName": "Performance Validation E2E Scalability Performance Feature storage scalability validation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Scalability Performance"
          ],
          "title": "Memory usage validation under load",
          "fullName": "Performance Validation E2E Scalability Performance Memory usage validation under load",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Performance Regression Detection"
          ],
          "title": "Baseline performance regression checks",
          "fullName": "Performance Validation E2E Performance Regression Detection Baseline performance regression checks",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Performance Validation E2E",
            "Performance Regression Detection"
          ],
          "title": "End-to-end workflow performance validation",
          "fullName": "Performance Validation E2E Performance Regression Detection End-to-end workflow performance validation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "passed",
      "startTime": 1758922161502,
      "endTime": 1758922161532,
      "duration": 30,
      "numTests": 13,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 13,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Complete Feature Lifecycle Workflow"
          ],
          "title": "should execute complete feature lifecycle: suggest → approve → track implementation",
          "fullName": "API Workflow Integration Tests Complete Feature Lifecycle Workflow should execute complete feature lifecycle: suggest → approve → track implementation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Complete Feature Lifecycle Workflow"
          ],
          "title": "should handle feature rejection workflow",
          "fullName": "API Workflow Integration Tests Complete Feature Lifecycle Workflow should handle feature rejection workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Complete Feature Lifecycle Workflow"
          ],
          "title": "should handle bulk feature approval workflow",
          "fullName": "API Workflow Integration Tests Complete Feature Lifecycle Workflow should handle bulk feature approval workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Complete Agent Lifecycle Workflow"
          ],
          "title": "should execute complete agent lifecycle: initialize → reinitialize → stop authorization",
          "fullName": "API Workflow Integration Tests Complete Agent Lifecycle Workflow should execute complete agent lifecycle: initialize → reinitialize → stop authorization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Complete Agent Lifecycle Workflow"
          ],
          "title": "should handle multiple concurrent agent operations",
          "fullName": "API Workflow Integration Tests Complete Agent Lifecycle Workflow should handle multiple concurrent agent operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Cross-Component Integration"
          ],
          "title": "should handle mixed feature and agent operations",
          "fullName": "API Workflow Integration Tests Cross-Component Integration should handle mixed feature and agent operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "Cross-Component Integration"
          ],
          "title": "should maintain data consistency across multiple operations",
          "fullName": "API Workflow Integration Tests Cross-Component Integration should maintain data consistency across multiple operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "API Discovery and Methods"
          ],
          "title": "should provide comprehensive API documentation",
          "fullName": "API Workflow Integration Tests API Discovery and Methods should provide comprehensive API documentation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "API Discovery and Methods"
          ],
          "title": "should list all available API methods",
          "fullName": "API Workflow Integration Tests API Discovery and Methods should list all available API methods",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "API Error Handling"
          ],
          "title": "should handle invalid command gracefully",
          "fullName": "API Workflow Integration Tests API Error Handling should handle invalid command gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "API Error Handling"
          ],
          "title": "should handle malformed JSON in feature suggestion",
          "fullName": "API Workflow Integration Tests API Error Handling should handle malformed JSON in feature suggestion",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "API Error Handling"
          ],
          "title": "should handle operations on non-existent features",
          "fullName": "API Workflow Integration Tests API Error Handling should handle operations on non-existent features",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "API Workflow Integration Tests",
            "API Error Handling"
          ],
          "title": "should handle invalid status transitions",
          "fullName": "API Workflow Integration Tests API Error Handling should handle invalid status transitions",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "passed",
      "startTime": 1758922161540,
      "endTime": 1758922161555,
      "duration": 15,
      "numTests": 13,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 13,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Suggestion Workflow"
          ],
          "title": "should handle complete feature suggestion process",
          "fullName": "Feature Lifecycle Integration Tests Feature Suggestion Workflow should handle complete feature suggestion process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Suggestion Workflow"
          ],
          "title": "should validate feature data requirements",
          "fullName": "Feature Lifecycle Integration Tests Feature Suggestion Workflow should validate feature data requirements",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Suggestion Workflow"
          ],
          "title": "should handle concurrent feature suggestions",
          "fullName": "Feature Lifecycle Integration Tests Feature Suggestion Workflow should handle concurrent feature suggestions",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Approval Workflow"
          ],
          "title": "should handle individual feature approval process",
          "fullName": "Feature Lifecycle Integration Tests Feature Approval Workflow should handle individual feature approval process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Approval Workflow"
          ],
          "title": "should handle bulk feature approval process",
          "fullName": "Feature Lifecycle Integration Tests Feature Approval Workflow should handle bulk feature approval process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Approval Workflow"
          ],
          "title": "should prevent invalid approval transitions",
          "fullName": "Feature Lifecycle Integration Tests Feature Approval Workflow should prevent invalid approval transitions",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Rejection Workflow"
          ],
          "title": "should handle feature rejection process",
          "fullName": "Feature Lifecycle Integration Tests Feature Rejection Workflow should handle feature rejection process",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Rejection Workflow"
          ],
          "title": "should prevent operations on rejected features",
          "fullName": "Feature Lifecycle Integration Tests Feature Rejection Workflow should prevent operations on rejected features",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Filtering and Search"
          ],
          "title": "should filter features by status",
          "fullName": "Feature Lifecycle Integration Tests Feature Filtering and Search should filter features by status",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Filtering and Search"
          ],
          "title": "should filter features by category",
          "fullName": "Feature Lifecycle Integration Tests Feature Filtering and Search should filter features by category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Feature Filtering and Search"
          ],
          "title": "should handle combined filters",
          "fullName": "Feature Lifecycle Integration Tests Feature Filtering and Search should handle combined filters",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Complete Lifecycle Scenarios"
          ],
          "title": "should handle realistic product development workflow",
          "fullName": "Feature Lifecycle Integration Tests Complete Lifecycle Scenarios should handle realistic product development workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Lifecycle Integration Tests",
            "Complete Lifecycle Scenarios"
          ],
          "title": "should maintain data integrity throughout complex workflows",
          "fullName": "Feature Lifecycle Integration Tests Complete Lifecycle Scenarios should maintain data integrity throughout complex workflows",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/stress-and-recovery.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "passed",
      "startTime": 1758922161528,
      "endTime": 1758922161555,
      "duration": 27,
      "numTests": 14,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 14,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Concurrent Operations Testing"
          ],
          "title": "should handle massive concurrent feature suggestions",
          "fullName": "Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should handle massive concurrent feature suggestions",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Concurrent Operations Testing"
          ],
          "title": "should handle mixed concurrent operations without conflicts",
          "fullName": "Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should handle mixed concurrent operations without conflicts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Concurrent Operations Testing"
          ],
          "title": "should prevent race conditions in bulk operations",
          "fullName": "Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should prevent race conditions in bulk operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Concurrent Operations Testing"
          ],
          "title": "should handle concurrent agent operations safely",
          "fullName": "Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should handle concurrent agent operations safely",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Error Recovery Testing"
          ],
          "title": "should recover from corrupted FEATURES.json file",
          "fullName": "Stress Testing and Error Recovery Integration Tests Error Recovery Testing should recover from corrupted FEATURES.json file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Error Recovery Testing"
          ],
          "title": "should handle sudden file deletion during operations",
          "fullName": "Stress Testing and Error Recovery Integration Tests Error Recovery Testing should handle sudden file deletion during operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Error Recovery Testing"
          ],
          "title": "should handle invalid JSON structure gracefully",
          "fullName": "Stress Testing and Error Recovery Integration Tests Error Recovery Testing should handle invalid JSON structure gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Error Recovery Testing"
          ],
          "title": "should handle partial write failures and data corruption",
          "fullName": "Stress Testing and Error Recovery Integration Tests Error Recovery Testing should handle partial write failures and data corruption",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Error Recovery Testing"
          ],
          "title": "should maintain consistency during system interruption simulation",
          "fullName": "Stress Testing and Error Recovery Integration Tests Error Recovery Testing should maintain consistency during system interruption simulation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Performance Stress Testing"
          ],
          "title": "should handle large dataset operations efficiently",
          "fullName": "Stress Testing and Error Recovery Integration Tests Performance Stress Testing should handle large dataset operations efficiently",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Performance Stress Testing"
          ],
          "title": "should handle rapid sequential operations without degradation",
          "fullName": "Stress Testing and Error Recovery Integration Tests Performance Stress Testing should handle rapid sequential operations without degradation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Performance Stress Testing"
          ],
          "title": "should maintain performance under mixed load patterns",
          "fullName": "Stress Testing and Error Recovery Integration Tests Performance Stress Testing should maintain performance under mixed load patterns",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Resource Cleanup and Memory Testing"
          ],
          "title": "should properly clean up resources after operations",
          "fullName": "Stress Testing and Error Recovery Integration Tests Resource Cleanup and Memory Testing should properly clean up resources after operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Stress Testing and Error Recovery Integration Tests",
            "Resource Cleanup and Memory Testing"
          ],
          "title": "should handle cleanup after error scenarios",
          "fullName": "Stress Testing and Error Recovery Integration Tests Resource Cleanup and Memory Testing should handle cleanup after error scenarios",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "passed",
      "startTime": 1758922161558,
      "endTime": 1758922161570,
      "duration": 12,
      "numTests": 13,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 13,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Persistence and Data Integrity"
          ],
          "title": "should maintain FEATURES.json structure integrity across operations",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should maintain FEATURES.json structure integrity across operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Persistence and Data Integrity"
          ],
          "title": "should handle concurrent file operations safely",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should handle concurrent file operations safely",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Persistence and Data Integrity"
          ],
          "title": "should preserve file permissions and ownership",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should preserve file permissions and ownership",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Backup and Recovery Scenarios"
          ],
          "title": "should handle missing FEATURES.json file gracefully",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle missing FEATURES.json file gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Backup and Recovery Scenarios"
          ],
          "title": "should handle corrupted FEATURES.json file",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle corrupted FEATURES.json file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Backup and Recovery Scenarios"
          ],
          "title": "should handle disk space and I/O errors gracefully",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle disk space and I/O errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Locking and Race Conditions"
          ],
          "title": "should handle rapid sequential operations correctly",
          "fullName": "File Operations Integration Tests File Locking and Race Conditions should handle rapid sequential operations correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Locking and Race Conditions"
          ],
          "title": "should handle mixed read/write operations correctly",
          "fullName": "File Operations Integration Tests File Locking and Race Conditions should handle mixed read/write operations correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Data Migration and Upgrades"
          ],
          "title": "should handle missing metadata fields gracefully",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should handle missing metadata fields gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Data Migration and Upgrades"
          ],
          "title": "should handle missing workflow_config gracefully",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should handle missing workflow_config gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Data Migration and Upgrades"
          ],
          "title": "should preserve existing data during upgrades",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should preserve existing data during upgrades",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Validation and Error Recovery"
          ],
          "title": "should validate file structure before operations",
          "fullName": "File Operations Integration Tests File Validation and Error Recovery should validate file structure before operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Validation and Error Recovery"
          ],
          "title": "should handle file read/write permissions errors",
          "fullName": "File Operations Integration Tests File Validation and Error Recovery should handle file read/write permissions errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "passed",
      "startTime": 1758922161558,
      "endTime": 1758922161571,
      "duration": 13,
      "numTests": 20,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 20,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Command Argument Parsing"
          ],
          "title": "should handle project-root parameter correctly",
          "fullName": "CLI Commands Integration Tests Command Argument Parsing should handle project-root parameter correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Command Argument Parsing"
          ],
          "title": "should handle missing arguments gracefully",
          "fullName": "CLI Commands Integration Tests Command Argument Parsing should handle missing arguments gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Command Argument Parsing"
          ],
          "title": "should handle malformed JSON arguments",
          "fullName": "CLI Commands Integration Tests Command Argument Parsing should handle malformed JSON arguments",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Command Argument Parsing"
          ],
          "title": "should handle unknown commands",
          "fullName": "CLI Commands Integration Tests Command Argument Parsing should handle unknown commands",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Core Command Execution"
          ],
          "title": "should execute guide command successfully",
          "fullName": "CLI Commands Integration Tests Core Command Execution should execute guide command successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Core Command Execution"
          ],
          "title": "should execute methods command successfully",
          "fullName": "CLI Commands Integration Tests Core Command Execution should execute methods command successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Core Command Execution"
          ],
          "title": "should execute feature management commands",
          "fullName": "CLI Commands Integration Tests Core Command Execution should execute feature management commands",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Core Command Execution"
          ],
          "title": "should execute agent management commands",
          "fullName": "CLI Commands Integration Tests Core Command Execution should execute agent management commands",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Core Command Execution"
          ],
          "title": "should execute bulk operations",
          "fullName": "CLI Commands Integration Tests Core Command Execution should execute bulk operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Output Formatting and Validation"
          ],
          "title": "should produce valid JSON output for all commands",
          "fullName": "CLI Commands Integration Tests Output Formatting and Validation should produce valid JSON output for all commands",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Output Formatting and Validation"
          ],
          "title": "should include proper error information in failed commands",
          "fullName": "CLI Commands Integration Tests Output Formatting and Validation should include proper error information in failed commands",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Output Formatting and Validation"
          ],
          "title": "should handle output with special characters correctly",
          "fullName": "CLI Commands Integration Tests Output Formatting and Validation should handle output with special characters correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Timeout and Performance"
          ],
          "title": "should complete basic commands within reasonable time",
          "fullName": "CLI Commands Integration Tests Timeout and Performance should complete basic commands within reasonable time",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Timeout and Performance"
          ],
          "title": "should handle timeout scenarios gracefully",
          "fullName": "CLI Commands Integration Tests Timeout and Performance should handle timeout scenarios gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Timeout and Performance"
          ],
          "title": "should handle multiple rapid CLI invocations",
          "fullName": "CLI Commands Integration Tests Timeout and Performance should handle multiple rapid CLI invocations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "CLI Workflow Integration"
          ],
          "title": "should execute complete feature workflow via CLI",
          "fullName": "CLI Commands Integration Tests CLI Workflow Integration should execute complete feature workflow via CLI",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "CLI Workflow Integration"
          ],
          "title": "should execute complete agent workflow via CLI",
          "fullName": "CLI Commands Integration Tests CLI Workflow Integration should execute complete agent workflow via CLI",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Error Recovery and Edge Cases"
          ],
          "title": "should handle corrupted project directory gracefully",
          "fullName": "CLI Commands Integration Tests Error Recovery and Edge Cases should handle corrupted project directory gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Error Recovery and Edge Cases"
          ],
          "title": "should handle invalid project root paths",
          "fullName": "CLI Commands Integration Tests Error Recovery and Edge Cases should handle invalid project root paths",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "CLI Commands Integration Tests",
            "Error Recovery and Edge Cases"
          ],
          "title": "should handle concurrent CLI executions safely",
          "fullName": "CLI Commands Integration Tests Error Recovery and Edge Cases should handle concurrent CLI executions safely",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "passed",
      "startTime": 1758922161574,
      "endTime": 1758922161593,
      "duration": 19,
      "numTests": 19,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 19,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Agent Initialization"
          ],
          "title": "should initialize agent successfully",
          "fullName": "Feature Management System Unit Tests Agent Initialization should initialize agent successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Agent Initialization"
          ],
          "title": "should reinitialize existing agent successfully",
          "fullName": "Feature Management System Unit Tests Agent Initialization should reinitialize existing agent successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Suggestion"
          ],
          "title": "should create feature suggestion with enhancement category",
          "fullName": "Feature Management System Unit Tests Feature Suggestion should create feature suggestion with enhancement category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Suggestion"
          ],
          "title": "should create feature suggestion with new-feature category",
          "fullName": "Feature Management System Unit Tests Feature Suggestion should create feature suggestion with new-feature category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Suggestion"
          ],
          "title": "should create feature suggestion with bug-fix category",
          "fullName": "Feature Management System Unit Tests Feature Suggestion should create feature suggestion with bug-fix category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Suggestion"
          ],
          "title": "should handle incomplete feature data appropriately",
          "fullName": "Feature Management System Unit Tests Feature Suggestion should handle incomplete feature data appropriately",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Suggestion"
          ],
          "title": "should handle invalid category appropriately",
          "fullName": "Feature Management System Unit Tests Feature Suggestion should handle invalid category appropriately",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Listing"
          ],
          "title": "should list all features",
          "fullName": "Feature Management System Unit Tests Feature Listing should list all features",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Listing"
          ],
          "title": "should filter features by status",
          "fullName": "Feature Management System Unit Tests Feature Listing should filter features by status",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Listing"
          ],
          "title": "should filter features by category",
          "fullName": "Feature Management System Unit Tests Feature Listing should filter features by category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Approval Workflow"
          ],
          "title": "should approve feature successfully",
          "fullName": "Feature Management System Unit Tests Feature Approval Workflow should approve feature successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Approval Workflow"
          ],
          "title": "should reject feature successfully",
          "fullName": "Feature Management System Unit Tests Feature Approval Workflow should reject feature successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Approval Workflow"
          ],
          "title": "should handle non-existent feature appropriately",
          "fullName": "Feature Management System Unit Tests Feature Approval Workflow should handle non-existent feature appropriately",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Statistics"
          ],
          "title": "should attempt to generate feature statistics",
          "fullName": "Feature Management System Unit Tests Feature Statistics should attempt to generate feature statistics",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Feature Statistics"
          ],
          "title": "should handle statistics requests gracefully",
          "fullName": "Feature Management System Unit Tests Feature Statistics should handle statistics requests gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Initialization Statistics"
          ],
          "title": "should get initialization statistics",
          "fullName": "Feature Management System Unit Tests Initialization Statistics should get initialization statistics",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "Initialization Statistics"
          ],
          "title": "should include time bucket statistics",
          "fullName": "Feature Management System Unit Tests Initialization Statistics should include time bucket statistics",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "API Documentation"
          ],
          "title": "should provide API guide",
          "fullName": "Feature Management System Unit Tests API Documentation should provide API guide",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System Unit Tests",
            "API Documentation"
          ],
          "title": "should handle methods request",
          "fullName": "Feature Management System Unit Tests API Documentation should handle methods request",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/complete-workflows.test.js",
      "displayName": {
        "color": "white",
        "name": "e2e"
      },
      "status": "passed",
      "startTime": 1758922161576,
      "endTime": 1758922161598,
      "duration": 22,
      "numTests": 6,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 6,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Complete System Workflows E2E",
            "Feature Lifecycle Workflow"
          ],
          "title": "Complete feature suggestion to implementation workflow",
          "fullName": "Complete System Workflows E2E Feature Lifecycle Workflow Complete feature suggestion to implementation workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Complete System Workflows E2E",
            "Feature Lifecycle Workflow"
          ],
          "title": "Feature rejection workflow",
          "fullName": "Complete System Workflows E2E Feature Lifecycle Workflow Feature rejection workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Complete System Workflows E2E",
            "System Integration Workflow"
          ],
          "title": "Complete system startup to shutdown workflow",
          "fullName": "Complete System Workflows E2E System Integration Workflow Complete system startup to shutdown workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Complete System Workflows E2E",
            "System Integration Workflow"
          ],
          "title": "Error recovery workflow",
          "fullName": "Complete System Workflows E2E System Integration Workflow Error recovery workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Complete System Workflows E2E",
            "User Experience Workflow"
          ],
          "title": "Complete user journey from discovery to completion",
          "fullName": "Complete System Workflows E2E User Experience Workflow Complete user journey from discovery to completion",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Complete System Workflows E2E",
            "User Experience Workflow"
          ],
          "title": "Multi-stakeholder approval workflow",
          "fullName": "Complete System Workflows E2E User Experience Workflow Multi-stakeholder approval workflow",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/feature-management-e2e.test.js",
      "displayName": {
        "color": "white",
        "name": "e2e"
      },
      "status": "passed",
      "startTime": 1758922161597,
      "endTime": 1758922161608,
      "duration": 11,
      "numTests": 8,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 8,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Feature Suggestion Workflows"
          ],
          "title": "Comprehensive feature suggestion with all categories",
          "fullName": "Feature Management System E2E Feature Suggestion Workflows Comprehensive feature suggestion with all categories",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Feature Suggestion Workflows"
          ],
          "title": "Feature suggestion validation and error handling",
          "fullName": "Feature Management System E2E Feature Suggestion Workflows Feature suggestion validation and error handling",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Feature Approval Workflows"
          ],
          "title": "Comprehensive approval process with audit trail",
          "fullName": "Feature Management System E2E Feature Approval Workflows Comprehensive approval process with audit trail",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Feature Approval Workflows"
          ],
          "title": "Bulk approval operations",
          "fullName": "Feature Management System E2E Feature Approval Workflows Bulk approval operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Feature Status Management"
          ],
          "title": "Status transition validation and constraints",
          "fullName": "Feature Management System E2E Feature Status Management Status transition validation and constraints",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Feature Status Management"
          ],
          "title": "Feature listing and filtering",
          "fullName": "Feature Management System E2E Feature Status Management Feature listing and filtering",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Advanced Feature Management"
          ],
          "title": "Feature search and analytics",
          "fullName": "Feature Management System E2E Advanced Feature Management Feature search and analytics",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management System E2E",
            "Advanced Feature Management"
          ],
          "title": "Feature export and import workflows",
          "fullName": "Feature Management System E2E Advanced Feature Management Feature export and import workflows",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "passed",
      "startTime": 1758922161366,
      "endTime": 1758922161751,
      "duration": 385,
      "numTests": 39,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 39,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Calculations",
            "Current Time Bucket Detection"
          ],
          "title": "should identify morning time bucket (07:00-11:59)",
          "fullName": "Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify morning time bucket (07:00-11:59)",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Calculations",
            "Current Time Bucket Detection"
          ],
          "title": "should identify afternoon time bucket (12:00-16:59)",
          "fullName": "Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify afternoon time bucket (12:00-16:59)",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Calculations",
            "Current Time Bucket Detection"
          ],
          "title": "should identify evening time bucket (17:00-21:59)",
          "fullName": "Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify evening time bucket (17:00-21:59)",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Calculations",
            "Current Time Bucket Detection"
          ],
          "title": "should identify late night time bucket (22:00-02:59)",
          "fullName": "Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify late night time bucket (22:00-02:59)",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Calculations",
            "Current Time Bucket Detection"
          ],
          "title": "should identify early morning time bucket (03:00-06:59)",
          "fullName": "Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify early morning time bucket (03:00-06:59)",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Calculations",
            "Current Time Bucket Detection"
          ],
          "title": "should handle time bucket edge cases",
          "fullName": "Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should handle time bucket edge cases",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Initialization Stats Structure",
            "Stats Structure Creation"
          ],
          "title": "should create initialization stats structure when missing",
          "fullName": "Initialization Statistics Initialization Stats Structure Stats Structure Creation should create initialization stats structure when missing",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Initialization Stats Structure",
            "Stats Structure Creation"
          ],
          "title": "should create all required time buckets",
          "fullName": "Initialization Statistics Initialization Stats Structure Stats Structure Creation should create all required time buckets",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Initialization Stats Structure",
            "Stats Structure Creation"
          ],
          "title": "should preserve existing stats structure",
          "fullName": "Initialization Statistics Initialization Stats Structure Stats Structure Creation should preserve existing stats structure",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Initialization Stats Structure",
            "Stats Structure Creation"
          ],
          "title": "should create metadata if completely missing",
          "fullName": "Initialization Statistics Initialization Stats Structure Stats Structure Creation should create metadata if completely missing",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Initialization Tracking"
          ],
          "title": "should track initialization in correct time bucket",
          "fullName": "Initialization Statistics Time Bucket Tracking Initialization Tracking should track initialization in correct time bucket",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Initialization Tracking"
          ],
          "title": "should track reinitialization in correct time bucket",
          "fullName": "Initialization Statistics Time Bucket Tracking Initialization Tracking should track reinitialization in correct time bucket",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Initialization Tracking"
          ],
          "title": "should accumulate multiple operations in same time bucket",
          "fullName": "Initialization Statistics Time Bucket Tracking Initialization Tracking should accumulate multiple operations in same time bucket",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Initialization Tracking"
          ],
          "title": "should distribute operations across different time buckets",
          "fullName": "Initialization Statistics Time Bucket Tracking Initialization Tracking should distribute operations across different time buckets",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Initialization Tracking"
          ],
          "title": "should update last_updated timestamp",
          "fullName": "Initialization Statistics Time Bucket Tracking Initialization Tracking should update last_updated timestamp",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Integration with Agent Operations"
          ],
          "title": "should track initialization through initializeAgent",
          "fullName": "Initialization Statistics Time Bucket Tracking Integration with Agent Operations should track initialization through initializeAgent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Time Bucket Tracking",
            "Integration with Agent Operations"
          ],
          "title": "should track reinitialization through reinitializeAgent",
          "fullName": "Initialization Statistics Time Bucket Tracking Integration with Agent Operations should track reinitialization through reinitializeAgent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Daily Reset Logic",
            "Reset Detection"
          ],
          "title": "should detect day change and reset buckets",
          "fullName": "Initialization Statistics Daily Reset Logic Reset Detection should detect day change and reset buckets",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Daily Reset Logic",
            "Reset Detection"
          ],
          "title": "should preserve historical data when resetting",
          "fullName": "Initialization Statistics Daily Reset Logic Reset Detection should preserve historical data when resetting",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Daily Reset Logic",
            "Reset Detection"
          ],
          "title": "should not reset within the same day",
          "fullName": "Initialization Statistics Daily Reset Logic Reset Detection should not reset within the same day",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Daily Reset Logic",
            "Reset Detection"
          ],
          "title": "should skip reset if no activity to preserve",
          "fullName": "Initialization Statistics Daily Reset Logic Reset Detection should skip reset if no activity to preserve",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Daily Reset Logic",
            "Reset Detection"
          ],
          "title": "should maintain rolling 30-day history",
          "fullName": "Initialization Statistics Daily Reset Logic Reset Detection should maintain rolling 30-day history",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Basic Statistics Retrieval"
          ],
          "title": "should retrieve initialization statistics successfully",
          "fullName": "Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should retrieve initialization statistics successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Basic Statistics Retrieval"
          ],
          "title": "should format time buckets correctly",
          "fullName": "Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should format time buckets correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Basic Statistics Retrieval"
          ],
          "title": "should calculate today totals correctly",
          "fullName": "Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should calculate today totals correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Basic Statistics Retrieval"
          ],
          "title": "should include recent activity history",
          "fullName": "Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should include recent activity history",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Basic Statistics Retrieval"
          ],
          "title": "should handle missing initialization stats gracefully",
          "fullName": "Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should handle missing initialization stats gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Real-time Statistics Updates"
          ],
          "title": "should reflect real-time updates from agent operations",
          "fullName": "Initialization Statistics Statistics Retrieval Real-time Statistics Updates should reflect real-time updates from agent operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Statistics Retrieval",
            "Real-time Statistics Updates"
          ],
          "title": "should update across time bucket changes",
          "fullName": "Initialization Statistics Statistics Retrieval Real-time Statistics Updates should update across time bucket changes",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Error Handling",
            "File System Errors"
          ],
          "title": "should handle file read errors in getInitializationStats",
          "fullName": "Initialization Statistics Error Handling File System Errors should handle file read errors in getInitializationStats",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Error Handling",
            "File System Errors"
          ],
          "title": "should handle file write errors in _updateTimeBucketStats",
          "fullName": "Initialization Statistics Error Handling File System Errors should handle file write errors in _updateTimeBucketStats",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Error Handling",
            "File System Errors"
          ],
          "title": "should handle corrupted features file",
          "fullName": "Initialization Statistics Error Handling File System Errors should handle corrupted features file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Error Handling",
            "Data Recovery"
          ],
          "title": "should recover from missing metadata structure",
          "fullName": "Initialization Statistics Error Handling Data Recovery should recover from missing metadata structure",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Error Handling",
            "Data Recovery"
          ],
          "title": "should handle malformed time bucket data",
          "fullName": "Initialization Statistics Error Handling Data Recovery should handle malformed time bucket data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Edge Cases and Boundaries",
            "Time Boundary Edge Cases"
          ],
          "title": "should handle midnight crossover correctly",
          "fullName": "Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle midnight crossover correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Edge Cases and Boundaries",
            "Time Boundary Edge Cases"
          ],
          "title": "should handle daylight saving time transitions",
          "fullName": "Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle daylight saving time transitions",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Edge Cases and Boundaries",
            "Time Boundary Edge Cases"
          ],
          "title": "should handle year boundary crossover",
          "fullName": "Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle year boundary crossover",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Edge Cases and Boundaries",
            "Large Data Sets"
          ],
          "title": "should handle large initialization counts",
          "fullName": "Initialization Statistics Edge Cases and Boundaries Large Data Sets should handle large initialization counts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Initialization Statistics",
            "Edge Cases and Boundaries",
            "Large Data Sets"
          ],
          "title": "should handle extensive daily history",
          "fullName": "Initialization Statistics Edge Cases and Boundaries Large Data Sets should handle extensive daily history",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/basic-infrastructure.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "passed",
      "startTime": 1758922161764,
      "endTime": 1758922161788,
      "duration": 24,
      "numTests": 26,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 26,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test ID Generation"
          ],
          "title": "should generate unique agent IDs",
          "fullName": "Basic Testing Infrastructure Test ID Generation should generate unique agent IDs",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test ID Generation"
          ],
          "title": "should generate unique project IDs",
          "fullName": "Basic Testing Infrastructure Test ID Generation should generate unique project IDs",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test ID Generation"
          ],
          "title": "should generate unique feature IDs",
          "fullName": "Basic Testing Infrastructure Test ID Generation should generate unique feature IDs",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test ID Generation"
          ],
          "title": "should generate unique task IDs",
          "fullName": "Basic Testing Infrastructure Test ID Generation should generate unique task IDs",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Data Factory"
          ],
          "title": "should create valid feature data",
          "fullName": "Basic Testing Infrastructure Test Data Factory should create valid feature data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Data Factory"
          ],
          "title": "should create feature data with overrides",
          "fullName": "Basic Testing Infrastructure Test Data Factory should create feature data with overrides",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Data Factory"
          ],
          "title": "should create valid user data",
          "fullName": "Basic Testing Infrastructure Test Data Factory should create valid user data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Data Factory"
          ],
          "title": "should create valid project data",
          "fullName": "Basic Testing Infrastructure Test Data Factory should create valid project data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Data Factory"
          ],
          "title": "should create valid task data",
          "fullName": "Basic Testing Infrastructure Test Data Factory should create valid task data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Sample Data Fixtures"
          ],
          "title": "should provide valid sample features",
          "fullName": "Basic Testing Infrastructure Sample Data Fixtures should provide valid sample features",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Sample Data Fixtures"
          ],
          "title": "should provide valid sample agents",
          "fullName": "Basic Testing Infrastructure Sample Data Fixtures should provide valid sample agents",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Sample Data Fixtures"
          ],
          "title": "should provide valid test configurations",
          "fullName": "Basic Testing Infrastructure Sample Data Fixtures should provide valid test configurations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Performance Utilities"
          ],
          "title": "should measure execution time accurately",
          "fullName": "Basic Testing Infrastructure Performance Utilities should measure execution time accurately",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Performance Utilities"
          ],
          "title": "should measure memory usage",
          "fullName": "Basic Testing Infrastructure Performance Utilities should measure memory usage",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Execution Utilities"
          ],
          "title": "should enforce timeouts",
          "fullName": "Basic Testing Infrastructure Test Execution Utilities should enforce timeouts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Execution Utilities"
          ],
          "title": "should allow operations within timeout",
          "fullName": "Basic Testing Infrastructure Test Execution Utilities should allow operations within timeout",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Execution Utilities"
          ],
          "title": "should retry failed operations",
          "fullName": "Basic Testing Infrastructure Test Execution Utilities should retry failed operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Execution Utilities"
          ],
          "title": "should fail after max retries",
          "fullName": "Basic Testing Infrastructure Test Execution Utilities should fail after max retries",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Execution Utilities"
          ],
          "title": "should execute promises in parallel with concurrency control",
          "fullName": "Basic Testing Infrastructure Test Execution Utilities should execute promises in parallel with concurrency control",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Logger"
          ],
          "title": "should provide logging methods",
          "fullName": "Basic Testing Infrastructure Test Logger should provide logging methods",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Test Logger"
          ],
          "title": "should log with data objects",
          "fullName": "Basic Testing Infrastructure Test Logger should log with data objects",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Data Validation"
          ],
          "title": "should validate feature data structure",
          "fullName": "Basic Testing Infrastructure Data Validation should validate feature data structure",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Data Validation"
          ],
          "title": "should validate agent data structure",
          "fullName": "Basic Testing Infrastructure Data Validation should validate agent data structure",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Error Handling"
          ],
          "title": "should handle async errors gracefully",
          "fullName": "Basic Testing Infrastructure Error Handling should handle async errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Error Handling"
          ],
          "title": "should handle synchronous errors",
          "fullName": "Basic Testing Infrastructure Error Handling should handle synchronous errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Basic Testing Infrastructure",
            "Error Handling"
          ],
          "title": "should handle undefined/null values",
          "fullName": "Basic Testing Infrastructure Error Handling should handle undefined/null values",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/taskmanager-api.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "passed",
      "startTime": 1758922161530,
      "endTime": 1758922161818,
      "duration": 288,
      "numTests": 75,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 75,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Constructor and Initialization"
          ],
          "title": "should initialize with correct default values",
          "fullName": "FeatureManagerAPI Constructor and Initialization should initialize with correct default values",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Constructor and Initialization"
          ],
          "title": "should set features path correctly",
          "fullName": "FeatureManagerAPI Constructor and Initialization should set features path correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Constructor and Initialization"
          ],
          "title": "should have withTimeout method for operation timeouts",
          "fullName": "FeatureManagerAPI Constructor and Initialization should have withTimeout method for operation timeouts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_ensureFeaturesFile"
          ],
          "title": "should create FEATURES.json if it does not exist",
          "fullName": "FeatureManagerAPI File Operations _ensureFeaturesFile should create FEATURES.json if it does not exist",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_ensureFeaturesFile"
          ],
          "title": "should not overwrite existing FEATURES.json",
          "fullName": "FeatureManagerAPI File Operations _ensureFeaturesFile should not overwrite existing FEATURES.json",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_loadFeatures"
          ],
          "title": "should load existing features file successfully",
          "fullName": "FeatureManagerAPI File Operations _loadFeatures should load existing features file successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_loadFeatures"
          ],
          "title": "should create file and return default structure if file does not exist",
          "fullName": "FeatureManagerAPI File Operations _loadFeatures should create file and return default structure if file does not exist",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_loadFeatures"
          ],
          "title": "should handle JSON parsing errors gracefully",
          "fullName": "FeatureManagerAPI File Operations _loadFeatures should handle JSON parsing errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_loadFeatures"
          ],
          "title": "should handle file read errors",
          "fullName": "FeatureManagerAPI File Operations _loadFeatures should handle file read errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_saveFeatures"
          ],
          "title": "should save features to file successfully",
          "fullName": "FeatureManagerAPI File Operations _saveFeatures should save features to file successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "File Operations",
            "_saveFeatures"
          ],
          "title": "should handle file write errors",
          "fullName": "FeatureManagerAPI File Operations _saveFeatures should handle file write errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should validate correct feature data successfully",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should validate correct feature data successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject null or undefined feature data",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject null or undefined feature data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject missing required fields",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject missing required fields",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject empty required fields",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject empty required fields",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject invalid category",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject invalid category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject title length violations",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject title length violations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject description length violations",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject description length violations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_validateFeatureData"
          ],
          "title": "should reject business value length violations",
          "fullName": "FeatureManagerAPI Feature Validation _validateFeatureData should reject business value length violations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_generateFeatureId"
          ],
          "title": "should generate unique feature IDs",
          "fullName": "FeatureManagerAPI Feature Validation _generateFeatureId should generate unique feature IDs",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Validation",
            "_generateFeatureId"
          ],
          "title": "should generate IDs with correct format",
          "fullName": "FeatureManagerAPI Feature Validation _generateFeatureId should generate IDs with correct format",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "suggestFeature"
          ],
          "title": "should create new feature suggestion successfully",
          "fullName": "FeatureManagerAPI Feature Management suggestFeature should create new feature suggestion successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "suggestFeature"
          ],
          "title": "should handle validation errors gracefully",
          "fullName": "FeatureManagerAPI Feature Management suggestFeature should handle validation errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "suggestFeature"
          ],
          "title": "should handle file system errors during feature creation",
          "fullName": "FeatureManagerAPI Feature Management suggestFeature should handle file system errors during feature creation",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "suggestFeature"
          ],
          "title": "should update metadata correctly",
          "fullName": "FeatureManagerAPI Feature Management suggestFeature should update metadata correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "approveFeature"
          ],
          "title": "should approve suggested feature successfully",
          "fullName": "FeatureManagerAPI Feature Management approveFeature should approve suggested feature successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "approveFeature"
          ],
          "title": "should approve feature with default approval data",
          "fullName": "FeatureManagerAPI Feature Management approveFeature should approve feature with default approval data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "approveFeature"
          ],
          "title": "should reject approval of non-existent feature",
          "fullName": "FeatureManagerAPI Feature Management approveFeature should reject approval of non-existent feature",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "approveFeature"
          ],
          "title": "should reject approval of non-suggested feature",
          "fullName": "FeatureManagerAPI Feature Management approveFeature should reject approval of non-suggested feature",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "approveFeature"
          ],
          "title": "should update approval history correctly",
          "fullName": "FeatureManagerAPI Feature Management approveFeature should update approval history correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "approveFeature"
          ],
          "title": "should handle missing metadata gracefully",
          "fullName": "FeatureManagerAPI Feature Management approveFeature should handle missing metadata gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "rejectFeature"
          ],
          "title": "should reject suggested feature successfully",
          "fullName": "FeatureManagerAPI Feature Management rejectFeature should reject suggested feature successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "rejectFeature"
          ],
          "title": "should reject feature with default rejection data",
          "fullName": "FeatureManagerAPI Feature Management rejectFeature should reject feature with default rejection data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "rejectFeature"
          ],
          "title": "should reject rejection of non-existent feature",
          "fullName": "FeatureManagerAPI Feature Management rejectFeature should reject rejection of non-existent feature",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "rejectFeature"
          ],
          "title": "should reject rejection of non-suggested feature",
          "fullName": "FeatureManagerAPI Feature Management rejectFeature should reject rejection of non-suggested feature",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "rejectFeature"
          ],
          "title": "should update approval history correctly",
          "fullName": "FeatureManagerAPI Feature Management rejectFeature should update approval history correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "bulkApproveFeatures"
          ],
          "title": "should approve multiple features successfully",
          "fullName": "FeatureManagerAPI Feature Management bulkApproveFeatures should approve multiple features successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "bulkApproveFeatures"
          ],
          "title": "should handle mixed success and failure scenarios",
          "fullName": "FeatureManagerAPI Feature Management bulkApproveFeatures should handle mixed success and failure scenarios",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "bulkApproveFeatures"
          ],
          "title": "should handle non-existent feature IDs",
          "fullName": "FeatureManagerAPI Feature Management bulkApproveFeatures should handle non-existent feature IDs",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "bulkApproveFeatures"
          ],
          "title": "should handle empty feature IDs array",
          "fullName": "FeatureManagerAPI Feature Management bulkApproveFeatures should handle empty feature IDs array",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "listFeatures"
          ],
          "title": "should list all features without filter",
          "fullName": "FeatureManagerAPI Feature Management listFeatures should list all features without filter",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "listFeatures"
          ],
          "title": "should filter features by status",
          "fullName": "FeatureManagerAPI Feature Management listFeatures should filter features by status",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "listFeatures"
          ],
          "title": "should filter features by category",
          "fullName": "FeatureManagerAPI Feature Management listFeatures should filter features by category",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "listFeatures"
          ],
          "title": "should return empty array for non-matching filters",
          "fullName": "FeatureManagerAPI Feature Management listFeatures should return empty array for non-matching filters",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "listFeatures"
          ],
          "title": "should handle file system errors",
          "fullName": "FeatureManagerAPI Feature Management listFeatures should handle file system errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "getFeatureStats"
          ],
          "title": "should calculate feature statistics correctly",
          "fullName": "FeatureManagerAPI Feature Management getFeatureStats should calculate feature statistics correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "getFeatureStats"
          ],
          "title": "should include recent activity from approval history",
          "fullName": "FeatureManagerAPI Feature Management getFeatureStats should include recent activity from approval history",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Feature Management",
            "getFeatureStats"
          ],
          "title": "should handle empty features file",
          "fullName": "FeatureManagerAPI Feature Management getFeatureStats should handle empty features file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Timeout Handling",
            "withTimeout"
          ],
          "title": "should resolve normally for quick operations",
          "fullName": "FeatureManagerAPI Timeout Handling withTimeout should resolve normally for quick operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Timeout Handling",
            "withTimeout"
          ],
          "title": "should timeout slow operations with custom timeout",
          "fullName": "FeatureManagerAPI Timeout Handling withTimeout should timeout slow operations with custom timeout",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Timeout Handling",
            "withTimeout"
          ],
          "title": "should use default timeout when not specified",
          "fullName": "FeatureManagerAPI Timeout Handling withTimeout should use default timeout when not specified",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Timeout Handling",
            "withTimeout"
          ],
          "title": "should handle promise rejections correctly",
          "fullName": "FeatureManagerAPI Timeout Handling withTimeout should handle promise rejections correctly",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Error Handling"
          ],
          "title": "should handle corrupted FEATURES.json gracefully",
          "fullName": "FeatureManagerAPI Error Handling should handle corrupted FEATURES.json gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Error Handling"
          ],
          "title": "should handle file permission errors",
          "fullName": "FeatureManagerAPI Error Handling should handle file permission errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Error Handling"
          ],
          "title": "should handle unexpected errors in operations",
          "fullName": "FeatureManagerAPI Error Handling should handle unexpected errors in operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "getApiMethods"
          ],
          "title": "should return API methods information",
          "fullName": "FeatureManagerAPI API Documentation Methods getApiMethods should return API methods information",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "getApiMethods"
          ],
          "title": "should include CLI mapping for all commands",
          "fullName": "FeatureManagerAPI API Documentation Methods getApiMethods should include CLI mapping for all commands",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "getComprehensiveGuide"
          ],
          "title": "should return comprehensive guide with timeout",
          "fullName": "FeatureManagerAPI API Documentation Methods getComprehensiveGuide should return comprehensive guide with timeout",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "getComprehensiveGuide"
          ],
          "title": "should include feature workflow information",
          "fullName": "FeatureManagerAPI API Documentation Methods getComprehensiveGuide should include feature workflow information",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "getComprehensiveGuide"
          ],
          "title": "should include usage examples",
          "fullName": "FeatureManagerAPI API Documentation Methods getComprehensiveGuide should include usage examples",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "getComprehensiveGuide"
          ],
          "title": "should handle timeout errors gracefully",
          "fullName": "FeatureManagerAPI API Documentation Methods getComprehensiveGuide should handle timeout errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "_getFallbackGuide"
          ],
          "title": "should return fallback guide for different contexts",
          "fullName": "FeatureManagerAPI API Documentation Methods _getFallbackGuide should return fallback guide for different contexts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "API Documentation Methods",
            "_getFallbackGuide"
          ],
          "title": "should include essential commands in fallback guide",
          "fullName": "FeatureManagerAPI API Documentation Methods _getFallbackGuide should include essential commands in fallback guide",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "initializeAgent"
          ],
          "title": "should initialize new agent successfully",
          "fullName": "FeatureManagerAPI Agent Management initializeAgent should initialize new agent successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "initializeAgent"
          ],
          "title": "should handle agent initialization errors",
          "fullName": "FeatureManagerAPI Agent Management initializeAgent should handle agent initialization errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "reinitializeAgent"
          ],
          "title": "should reinitialize existing agent",
          "fullName": "FeatureManagerAPI Agent Management reinitializeAgent should reinitialize existing agent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "reinitializeAgent"
          ],
          "title": "should handle reinitialization errors",
          "fullName": "FeatureManagerAPI Agent Management reinitializeAgent should handle reinitialization errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "authorizeStop"
          ],
          "title": "should authorize stop with reason",
          "fullName": "FeatureManagerAPI Agent Management authorizeStop should authorize stop with reason",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "authorizeStop"
          ],
          "title": "should authorize stop with default reason",
          "fullName": "FeatureManagerAPI Agent Management authorizeStop should authorize stop with default reason",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Agent Management",
            "authorizeStop"
          ],
          "title": "should handle stop authorization errors",
          "fullName": "FeatureManagerAPI Agent Management authorizeStop should handle stop authorization errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Initialization Statistics",
            "getInitializationStats"
          ],
          "title": "should return initialization statistics",
          "fullName": "FeatureManagerAPI Initialization Statistics getInitializationStats should return initialization statistics",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Initialization Statistics",
            "getInitializationStats"
          ],
          "title": "should handle stats retrieval errors",
          "fullName": "FeatureManagerAPI Initialization Statistics getInitializationStats should handle stats retrieval errors",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Initialization Statistics",
            "getInitializationStats"
          ],
          "title": "should include current time bucket",
          "fullName": "FeatureManagerAPI Initialization Statistics getInitializationStats should include current time bucket",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Initialization Statistics",
            "getInitializationStats"
          ],
          "title": "should track initialization counts",
          "fullName": "FeatureManagerAPI Initialization Statistics getInitializationStats should track initialization counts",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "FeatureManagerAPI",
            "Cleanup"
          ],
          "title": "should cleanup resources",
          "fullName": "FeatureManagerAPI Cleanup should cleanup resources",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "passed",
      "startTime": 1758922161611,
      "endTime": 1758922161861,
      "duration": 250,
      "numTests": 36,
      "numPassingTests": 0,
      "numFailingTests": 0,
      "numPendingTests": 36,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should initialize new agent successfully",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should initialize new agent successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should generate unique session IDs for different agents",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should generate unique session IDs for different agents",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should update features file with agent data",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should update features file with agent data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should track initialization in time bucket stats",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should track initialization in time bucket stats",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should handle agent initialization with special characters in ID",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should handle agent initialization with special characters in ID",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Agent Session Management"
          ],
          "title": "should create agent entry in features file",
          "fullName": "Agent Management Agent Initialization Agent Session Management should create agent entry in features file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Agent Session Management"
          ],
          "title": "should overwrite existing agent data on new initialization",
          "fullName": "Agent Management Agent Initialization Agent Session Management should overwrite existing agent data on new initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Agent Session Management"
          ],
          "title": "should initialize agents section if it does not exist",
          "fullName": "Agent Management Agent Initialization Agent Session Management should initialize agents section if it does not exist",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Initialization Error Handling"
          ],
          "title": "should handle file write errors during initialization",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle file write errors during initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Initialization Error Handling"
          ],
          "title": "should handle corrupted features file during initialization",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle corrupted features file during initialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Initialization Error Handling"
          ],
          "title": "should handle empty agent ID gracefully",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle empty agent ID gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should reinitialize existing agent successfully",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should reinitialize existing agent successfully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should preserve agent history during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should preserve agent history during reinitialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should update timestamps on reinitialization",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should update timestamps on reinitialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should track reinitialization in time bucket stats",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should track reinitialization in time bucket stats",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Session Management"
          ],
          "title": "should accumulate previous sessions across multiple reinitializations",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Session Management should accumulate previous sessions across multiple reinitializations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Session Management"
          ],
          "title": "should reinitialize non-existent agent as new agent",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Session Management should reinitialize non-existent agent as new agent",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Session Management"
          ],
          "title": "should handle agent without previous session data",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Session Management should handle agent without previous session data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Error Handling"
          ],
          "title": "should handle file write errors during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Error Handling should handle file write errors during reinitialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Error Handling"
          ],
          "title": "should handle corrupted features file during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Error Handling should handle corrupted features file during reinitialization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should authorize stop successfully with reason",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should authorize stop successfully with reason",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should authorize stop with default reason when none provided",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should authorize stop with default reason when none provided",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should create .stop-allowed flag file",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should create .stop-allowed flag file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should include comprehensive stop data in flag file",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should include comprehensive stop data in flag file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should handle empty agent ID",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle empty agent ID",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should handle very long reasons",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle very long reasons",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should handle special characters in agent ID and reason",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle special characters in agent ID and reason",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should overwrite existing stop flag",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should overwrite existing stop flag",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Error Handling"
          ],
          "title": "should handle file write errors during stop authorization",
          "fullName": "Agent Management Stop Authorization Stop Authorization Error Handling should handle file write errors during stop authorization",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Error Handling"
          ],
          "title": "should handle file system errors gracefully",
          "fullName": "Agent Management Stop Authorization Stop Authorization Error Handling should handle file system errors gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Management Integration",
            "Agent Lifecycle Integration"
          ],
          "title": "should handle complete agent lifecycle",
          "fullName": "Agent Management Agent Management Integration Agent Lifecycle Integration should handle complete agent lifecycle",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Management Integration",
            "Agent Lifecycle Integration"
          ],
          "title": "should handle multiple agents with different lifecycles",
          "fullName": "Agent Management Agent Management Integration Agent Lifecycle Integration should handle multiple agents with different lifecycles",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Management Integration",
            "Agent Management with Feature Operations"
          ],
          "title": "should maintain agent state during feature operations",
          "fullName": "Agent Management Agent Management Integration Agent Management with Feature Operations should maintain agent state during feature operations",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Edge Cases and Error Recovery",
            "Data Consistency"
          ],
          "title": "should handle partial agent data gracefully",
          "fullName": "Agent Management Edge Cases and Error Recovery Data Consistency should handle partial agent data gracefully",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Edge Cases and Error Recovery",
            "Data Consistency"
          ],
          "title": "should handle malformed agent data",
          "fullName": "Agent Management Edge Cases and Error Recovery Data Consistency should handle malformed agent data",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Edge Cases and Error Recovery",
            "Concurrent Operations"
          ],
          "title": "should handle multiple agent operations on same file",
          "fullName": "Agent Management Edge Cases and Error Recovery Concurrent Operations should handle multiple agent operations on same file",
          "status": "pending",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        }
      ],
      "failureDetails": []
    },
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "failed",
      "startTime": 1758922161603,
      "endTime": 1758922161867,
      "duration": 264,
      "numTests": 51,
      "numPassingTests": 10,
      "numFailingTests": 41,
      "numPendingTests": 0,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Basic Feature Suggestion"
          ],
          "title": "should create feature suggestion with all required fields",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should create feature suggestion with all required fields",
          "status": "failed",
          "duration": 5,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Basic Feature Suggestion"
          ],
          "title": "should handle different feature categories correctly",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should handle different feature categories correctly",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Basic Feature Suggestion"
          ],
          "title": "should auto-generate unique feature IDs",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should auto-generate unique feature IDs",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Basic Feature Suggestion"
          ],
          "title": "should preserve custom metadata in feature suggestions",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should preserve custom metadata in feature suggestions",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should enforce minimum title length requirements",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce minimum title length requirements",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should enforce maximum title length requirements",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce maximum title length requirements",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should enforce minimum description length requirements",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce minimum description length requirements",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should enforce maximum description length requirements",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce maximum description length requirements",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should validate business value field requirements",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should validate business value field requirements",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 6,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should validate category field against allowed values",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should validate category field against allowed values",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Validation"
          ],
          "title": "should require all mandatory fields",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should require all mandatory fields",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 8,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Metadata Management"
          ],
          "title": "should update total feature count after suggestion",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update total feature count after suggestion",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Metadata Management"
          ],
          "title": "should update last modified timestamp",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update last modified timestamp",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Suggestion Lifecycle",
            "Feature Suggestion Metadata Management"
          ],
          "title": "should preserve existing features when adding new ones",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should preserve existing features when adding new ones",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Basic Feature Approval"
          ],
          "title": "should approve suggested feature with full approval data",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve suggested feature with full approval data",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Basic Feature Approval"
          ],
          "title": "should approve feature with minimal approval data",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve feature with minimal approval data",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Basic Feature Approval"
          ],
          "title": "should update feature timestamps on approval",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should update feature timestamps on approval",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Basic Feature Approval"
          ],
          "title": "should maintain original feature data during approval",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should maintain original feature data during approval",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Approval History Management"
          ],
          "title": "should add approval entry to history",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should add approval entry to history",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Approval History Management"
          ],
          "title": "should handle multiple feature approvals in history",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle multiple feature approvals in history",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Approval History Management"
          ],
          "title": "should handle approval when metadata structure is missing",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle approval when metadata structure is missing",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Approval Validation and Constraints"
          ],
          "title": "should reject approval of non-existent feature",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of non-existent feature",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Approval Validation and Constraints"
          ],
          "title": "should reject approval of already approved feature",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of already approved feature",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Approval Lifecycle",
            "Approval Validation and Constraints"
          ],
          "title": "should reject approval of rejected feature",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of rejected feature",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Basic Feature Rejection"
          ],
          "title": "should reject suggested feature with full rejection data",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject suggested feature with full rejection data",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Basic Feature Rejection"
          ],
          "title": "should reject feature with minimal rejection data",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject feature with minimal rejection data",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Basic Feature Rejection"
          ],
          "title": "should update feature timestamps on rejection",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should update feature timestamps on rejection",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Rejection History Management"
          ],
          "title": "should add rejection entry to approval history",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection History Management should add rejection entry to approval history",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Rejection Validation and Constraints"
          ],
          "title": "should reject rejection of non-existent feature",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of non-existent feature",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Rejection Validation and Constraints"
          ],
          "title": "should reject rejection of already approved feature",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already approved feature",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Rejection Lifecycle",
            "Rejection Validation and Constraints"
          ],
          "title": "should reject rejection of already rejected feature",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already rejected feature",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Bulk Operations",
            "Bulk Approval Operations"
          ],
          "title": "should approve all features in bulk successfully",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should approve all features in bulk successfully",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Bulk Operations",
            "Bulk Approval Operations"
          ],
          "title": "should handle mixed success and failure scenarios in bulk approval",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle mixed success and failure scenarios in bulk approval",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Bulk Operations",
            "Bulk Approval Operations"
          ],
          "title": "should handle empty feature IDs array in bulk approval",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle empty feature IDs array in bulk approval",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Bulk Operations",
            "Bulk Approval Operations"
          ],
          "title": "should handle non-existent feature IDs in bulk approval",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle non-existent feature IDs in bulk approval",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Bulk Operations",
            "Bulk Approval Operations"
          ],
          "title": "should update approval history correctly for bulk operations",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should update approval history correctly for bulk operations",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Listing and Filtering",
            "Basic Feature Listing"
          ],
          "title": "should list all features without filters",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should list all features without filters",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Listing and Filtering",
            "Basic Feature Listing"
          ],
          "title": "should include metadata in listing results",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should include metadata in listing results",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Listing and Filtering",
            "Feature Filtering"
          ],
          "title": "should filter features by status",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by status",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Listing and Filtering",
            "Feature Filtering"
          ],
          "title": "should filter features by category",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by category",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Listing and Filtering",
            "Feature Filtering"
          ],
          "title": "should return empty results for non-matching filters",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should return empty results for non-matching filters",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Listing and Filtering",
            "Feature Filtering"
          ],
          "title": "should handle combined filters",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should handle combined filters",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Statistics and Analytics",
            "Basic Statistics"
          ],
          "title": "should calculate feature statistics correctly",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should calculate feature statistics correctly",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Statistics and Analytics",
            "Basic Statistics"
          ],
          "title": "should include recent activity from approval history",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should include recent activity from approval history",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Statistics and Analytics",
            "Basic Statistics"
          ],
          "title": "should handle empty features file for statistics",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should handle empty features file for statistics",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Statistics and Analytics",
            "Advanced Statistics Scenarios"
          ],
          "title": "should handle features with duplicate categories",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should handle features with duplicate categories",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Feature Statistics and Analytics",
            "Advanced Statistics Scenarios"
          ],
          "title": "should limit recent activity to last 10 entries",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should limit recent activity to last 10 entries",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Error Scenarios and Edge Cases",
            "File System Error Handling"
          ],
          "title": "should handle file read errors in feature listing",
          "fullName": "Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file read errors in feature listing",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Error Scenarios and Edge Cases",
            "File System Error Handling"
          ],
          "title": "should handle file write errors in feature suggestion",
          "fullName": "Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file write errors in feature suggestion",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 1,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Error Scenarios and Edge Cases",
            "Data Corruption Handling"
          ],
          "title": "should handle corrupted JSON gracefully",
          "fullName": "Feature Management Lifecycle Error Scenarios and Edge Cases Data Corruption Handling should handle corrupted JSON gracefully",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Feature Management Lifecycle",
            "Error Scenarios and Edge Cases",
            "Data Corruption Handling"
          ],
          "title": "should handle missing feature file during operations",
          "fullName": "Feature Management Lifecycle Error Scenarios and Edge Cases Data Corruption Handling should handle missing feature file during operations",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        }
      ],
      "failureDetails": [
        {
          "title": "should create feature suggestion with all required fields",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should create feature suggestion with all required fields",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:101:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle different feature categories correctly",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should handle different feature categories correctly",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:127:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should auto-generate unique feature IDs",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should auto-generate unique feature IDs",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:147:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should preserve custom metadata in feature suggestions",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should preserve custom metadata in feature suggestions",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:177:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should update total feature count after suggestion",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update total feature count after suggestion",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:283:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "expected": 0,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should update last modified timestamp",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update last modified timestamp",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:293:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should preserve existing features when adding new ones",
          "fullName": "Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should preserve existing features when adding new ones",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:312:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should approve suggested feature with full approval data",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve suggested feature with full approval data",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should approve feature with minimal approval data",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve feature with minimal approval data",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should update feature timestamps on approval",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should update feature timestamps on approval",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should maintain original feature data during approval",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should maintain original feature data during approval",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should add approval entry to history",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should add approval entry to history",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle multiple feature approvals in history",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle multiple feature approvals in history",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle approval when metadata structure is missing",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle approval when metadata structure is missing",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject approval of non-existent feature",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of non-existent feature",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject approval of already approved feature",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of already approved feature",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject approval of rejected feature",
          "fullName": "Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of rejected feature",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject suggested feature with full rejection data",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject suggested feature with full rejection data",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject feature with minimal rejection data",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject feature with minimal rejection data",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should update feature timestamps on rejection",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should update feature timestamps on rejection",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should add rejection entry to approval history",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection History Management should add rejection entry to approval history",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject rejection of non-existent feature",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of non-existent feature",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject rejection of already approved feature",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already approved feature",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should reject rejection of already rejected feature",
          "fullName": "Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already rejected feature",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should approve all features in bulk successfully",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should approve all features in bulk successfully",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle mixed success and failure scenarios in bulk approval",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle mixed success and failure scenarios in bulk approval",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle empty feature IDs array in bulk approval",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle empty feature IDs array in bulk approval",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle non-existent feature IDs in bulk approval",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle non-existent feature IDs in bulk approval",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should update approval history correctly for bulk operations",
          "fullName": "Feature Management Lifecycle Bulk Operations Bulk Approval Operations should update approval history correctly for bulk operations",
          "failureMessages": [
            "TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should list all features without filters",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should list all features without filters",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:719:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should include metadata in listing results",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should include metadata in listing results",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:733:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should filter features by status",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by status",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:747:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should filter features by category",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by category",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:760:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should return empty results for non-matching filters",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should return empty results for non-matching filters",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:770:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle combined filters",
          "fullName": "Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should handle combined filters",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:782:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should calculate feature statistics correctly",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should calculate feature statistics correctly",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:801:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should include recent activity from approval history",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should include recent activity from approval history",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:822:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle empty features file for statistics",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should handle empty features file for statistics",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:840:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle features with duplicate categories",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should handle features with duplicate categories",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:871:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should limit recent activity to last 10 entries",
          "fullName": "Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should limit recent activity to last 10 entries",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:880:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle file write errors in feature suggestion",
          "fullName": "Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file write errors in feature suggestion",
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to save features\"\nReceived string:    \"Cannot read properties of undefined (reading 'push')\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:906:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to save features\"\nReceived string:    \"Cannot read properties of undefined (reading 'push')\"",
                "pass": false
              }
            }
          ]
        }
      ]
    }
  ],
  "coverageMap": null,
  "environment": {
    "node_version": "v22.20.0",
    "platform": "darwin",
    "ci": false,
    "github_actions": false,
    "github_ref": null,
    "github_sha": null,
    "github_run_id": null
  }
}