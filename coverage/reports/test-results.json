{
  "metadata": {
    "timestamp": "2025-09-23T18:56:13.953Z",
    "reporter": "jest-json-reporter",
    "version": "1.0.0",
    "generator": "Enhanced Coverage System"
  },
  "summary": {
    "numTotalTestSuites": 1,
    "numPassedTestSuites": 0,
    "numFailedTestSuites": 1,
    "numPendingTestSuites": 0,
    "numTotalTests": 13,
    "numPassedTests": 8,
    "numFailedTests": 5,
    "numPendingTests": 0,
    "numTodoTests": 0,
    "startTime": 1758653751351,
    "endTime": 1758653773953,
    "duration": 22602,
    "success": false
  },
  "testResults": [
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js",
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "status": "failed",
      "startTime": 1758653751409,
      "endTime": 1758653773943,
      "duration": 22534,
      "numTests": 13,
      "numPassingTests": 8,
      "numFailingTests": 5,
      "numPendingTests": 0,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Persistence and Data Integrity"
          ],
          "title": "should maintain FEATURES.json structure integrity across operations",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should maintain FEATURES.json structure integrity across operations",
          "status": "passed",
          "duration": 10179,
          "numPassingAsserts": 14,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Persistence and Data Integrity"
          ],
          "title": "should handle concurrent file operations safely",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should handle concurrent file operations safely",
          "status": "failed",
          "duration": 103,
          "numPassingAsserts": 5,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Persistence and Data Integrity"
          ],
          "title": "should preserve file permissions and ownership",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should preserve file permissions and ownership",
          "status": "passed",
          "duration": 36,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Backup and Recovery Scenarios"
          ],
          "title": "should handle missing FEATURES.json file gracefully",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle missing FEATURES.json file gracefully",
          "status": "passed",
          "duration": 36,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Backup and Recovery Scenarios"
          ],
          "title": "should handle corrupted FEATURES.json file",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle corrupted FEATURES.json file",
          "status": "passed",
          "duration": 68,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Backup and Recovery Scenarios"
          ],
          "title": "should handle disk space and I/O errors gracefully",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle disk space and I/O errors gracefully",
          "status": "failed",
          "duration": 1332,
          "numPassingAsserts": 10,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Locking and Race Conditions"
          ],
          "title": "should handle rapid sequential operations correctly",
          "fullName": "File Operations Integration Tests File Locking and Race Conditions should handle rapid sequential operations correctly",
          "status": "failed",
          "duration": 229,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Locking and Race Conditions"
          ],
          "title": "should handle mixed read/write operations correctly",
          "fullName": "File Operations Integration Tests File Locking and Race Conditions should handle mixed read/write operations correctly",
          "status": "failed",
          "duration": 10126,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Data Migration and Upgrades"
          ],
          "title": "should handle missing metadata fields gracefully",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should handle missing metadata fields gracefully",
          "status": "failed",
          "duration": 52,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Data Migration and Upgrades"
          ],
          "title": "should handle missing workflow_config gracefully",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should handle missing workflow_config gracefully",
          "status": "passed",
          "duration": 39,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "Data Migration and Upgrades"
          ],
          "title": "should preserve existing data during upgrades",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should preserve existing data during upgrades",
          "status": "passed",
          "duration": 39,
          "numPassingAsserts": 7,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Validation and Error Recovery"
          ],
          "title": "should validate file structure before operations",
          "fullName": "File Operations Integration Tests File Validation and Error Recovery should validate file structure before operations",
          "status": "passed",
          "duration": 35,
          "numPassingAsserts": 1,
          "location": null
        },
        {
          "ancestorTitles": [
            "File Operations Integration Tests",
            "File Validation and Error Recovery"
          ],
          "title": "should handle file read/write permissions errors",
          "fullName": "File Operations Integration Tests File Validation and Error Recovery should handle file read/write permissions errors",
          "status": "passed",
          "duration": 70,
          "numPassingAsserts": 1,
          "location": null
        }
      ],
      "failureDetails": [
        {
          "title": "should handle concurrent file operations safely",
          "fullName": "File Operations Integration Tests File Persistence and Data Integrity should handle concurrent file operations safely",
          "failureMessages": [
            "Error: expect(received).toHaveLength(expected)\n\nExpected length: 3\nReceived length: 1\nReceived array:  [{\"action\": \"approved\", \"approved_by\": \"concurrent-test\", \"feature_id\": \"feature_1758653761799_27fe98c773ad\", \"notes\": \"\", \"timestamp\": \"2025-09-23T18:56:01.855Z\"}]\n    at Object.toHaveLength (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:168:59)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toHaveLength(expected)\n\nExpected length: 3\nReceived length: 1\nReceived array:  [{\"action\": \"approved\", \"approved_by\": \"concurrent-test\", \"feature_id\": \"feature_1758653761799_27fe98c773ad\", \"notes\": \"\", \"timestamp\": \"2025-09-23T18:56:01.855Z\"}]",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle disk space and I/O errors gracefully",
          "fullName": "File Operations Integration Tests Backup and Recovery Scenarios should handle disk space and I/O errors gracefully",
          "failureMessages": [
            "Error: expect(received).toHaveLength(expected)\n\nExpected length: 100\nReceived length: 90\nReceived array:  [[Object], [Object], [Object], [Object], [Object], [Object], [Object], [Object], [Object], [Object], …]\n    at Object.toHaveLength (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:301:37)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toHaveLength(expected)\n\nExpected length: 100\nReceived length: 90\nReceived array:  [[Object], [Object], [Object], [Object], [Object], [Object], [Object], [Object], [Object], [Object], …]",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle rapid sequential operations correctly",
          "fullName": "File Operations Integration Tests File Locking and Race Conditions should handle rapid sequential operations correctly",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:334:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle mixed read/write operations correctly",
          "fullName": "File Operations Integration Tests File Locking and Race Conditions should handle mixed read/write operations correctly",
          "failureMessages": [
            "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 1\nReceived array:  [{\"action\": \"approved\", \"approved_by\": \"mixed-ops-test\", \"feature_id\": \"feature_1758653763620_c424b60f998a\", \"notes\": \"\", \"timestamp\": \"2025-09-23T18:56:03.682Z\"}]\n    at Object.toHaveLength (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:406:54)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 1\nReceived array:  [{\"action\": \"approved\", \"approved_by\": \"mixed-ops-test\", \"feature_id\": \"feature_1758653763620_c424b60f998a\", \"notes\": \"\", \"timestamp\": \"2025-09-23T18:56:03.682Z\"}]",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle missing metadata fields gracefully",
          "fullName": "File Operations Integration Tests Data Migration and Upgrades should handle missing metadata fields gracefully",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:435:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        }
      ]
    }
  ],
  "coverageMap": null,
  "environment": {
    "node_version": "v22.19.0",
    "platform": "darwin",
    "ci": false,
    "github_actions": false,
    "github_ref": null,
    "github_sha": null,
    "github_run_id": null
  }
}