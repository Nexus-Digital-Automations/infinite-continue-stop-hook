{
  "metadata": {
    "timestamp": "2025-09-26T21:28:19.943Z",
    "reporter": "jest-json-reporter",
    "version": "1.0.0",
    "generator": "Enhanced Coverage System"
  },
  "summary": {
    "numTotalTestSuites": 1,
    "numPassedTestSuites": 0,
    "numFailedTestSuites": 1,
    "numPendingTestSuites": 0,
    "numTotalTests": 36,
    "numPassedTests": 22,
    "numFailedTests": 14,
    "numPendingTests": 0,
    "numTodoTests": 0,
    "startTime": 1758922099540,
    "endTime": 1758922099943,
    "duration": 403,
    "success": false
  },
  "testResults": [
    {
      "testFilePath": "/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js",
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "status": "failed",
      "startTime": 1758922099667,
      "endTime": 1758922099930,
      "duration": 263,
      "numTests": 36,
      "numPassingTests": 22,
      "numFailingTests": 14,
      "numPendingTests": 0,
      "snapshot": {
        "added": 0,
        "matched": 0,
        "unmatched": 0,
        "updated": 0,
        "unchecked": 0
      },
      "testCases": [
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should initialize new agent successfully",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should initialize new agent successfully",
          "status": "passed",
          "duration": 2,
          "numPassingAsserts": 7,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should generate unique session IDs for different agents",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should generate unique session IDs for different agents",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 5,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should update features file with agent data",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should update features file with agent data",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 7,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should track initialization in time bucket stats",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should track initialization in time bucket stats",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Basic Agent Initialization"
          ],
          "title": "should handle agent initialization with special characters in ID",
          "fullName": "Agent Management Agent Initialization Basic Agent Initialization should handle agent initialization with special characters in ID",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 8,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Agent Session Management"
          ],
          "title": "should create agent entry in features file",
          "fullName": "Agent Management Agent Initialization Agent Session Management should create agent entry in features file",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 5,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Agent Session Management"
          ],
          "title": "should overwrite existing agent data on new initialization",
          "fullName": "Agent Management Agent Initialization Agent Session Management should overwrite existing agent data on new initialization",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 5,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Agent Session Management"
          ],
          "title": "should initialize agents section if it does not exist",
          "fullName": "Agent Management Agent Initialization Agent Session Management should initialize agents section if it does not exist",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Initialization Error Handling"
          ],
          "title": "should handle file write errors during initialization",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle file write errors during initialization",
          "status": "failed",
          "duration": 3,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Initialization Error Handling"
          ],
          "title": "should handle corrupted features file during initialization",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle corrupted features file during initialization",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Initialization",
            "Initialization Error Handling"
          ],
          "title": "should handle empty agent ID gracefully",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle empty agent ID gracefully",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should reinitialize existing agent successfully",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should reinitialize existing agent successfully",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 8,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should preserve agent history during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should preserve agent history during reinitialization",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 4,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should update timestamps on reinitialization",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should update timestamps on reinitialization",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Basic Agent Reinitialization"
          ],
          "title": "should track reinitialization in time bucket stats",
          "fullName": "Agent Management Agent Reinitialization Basic Agent Reinitialization should track reinitialization in time bucket stats",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Session Management"
          ],
          "title": "should accumulate previous sessions across multiple reinitializations",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Session Management should accumulate previous sessions across multiple reinitializations",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 7,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Session Management"
          ],
          "title": "should reinitialize non-existent agent as new agent",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Session Management should reinitialize non-existent agent as new agent",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 8,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Session Management"
          ],
          "title": "should handle agent without previous session data",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Session Management should handle agent without previous session data",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Error Handling"
          ],
          "title": "should handle file write errors during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Error Handling should handle file write errors during reinitialization",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Reinitialization",
            "Reinitialization Error Handling"
          ],
          "title": "should handle corrupted features file during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Error Handling should handle corrupted features file during reinitialization",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should authorize stop successfully with reason",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should authorize stop successfully with reason",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 7,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should authorize stop with default reason when none provided",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should authorize stop with default reason when none provided",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should create .stop-allowed flag file",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should create .stop-allowed flag file",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 1,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Basic Stop Authorization"
          ],
          "title": "should include comprehensive stop data in flag file",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should include comprehensive stop data in flag file",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 1,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should handle empty agent ID",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle empty agent ID",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should handle very long reasons",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle very long reasons",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should handle special characters in agent ID and reason",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle special characters in agent ID and reason",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Edge Cases"
          ],
          "title": "should overwrite existing stop flag",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should overwrite existing stop flag",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 2,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Error Handling"
          ],
          "title": "should handle file write errors during stop authorization",
          "fullName": "Agent Management Stop Authorization Stop Authorization Error Handling should handle file write errors during stop authorization",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Stop Authorization",
            "Stop Authorization Error Handling"
          ],
          "title": "should handle file system errors gracefully",
          "fullName": "Agent Management Stop Authorization Stop Authorization Error Handling should handle file system errors gracefully",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 0,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Management Integration",
            "Agent Lifecycle Integration"
          ],
          "title": "should handle complete agent lifecycle",
          "fullName": "Agent Management Agent Management Integration Agent Lifecycle Integration should handle complete agent lifecycle",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 7,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Management Integration",
            "Agent Lifecycle Integration"
          ],
          "title": "should handle multiple agents with different lifecycles",
          "fullName": "Agent Management Agent Management Integration Agent Lifecycle Integration should handle multiple agents with different lifecycles",
          "status": "failed",
          "duration": 1,
          "numPassingAsserts": 8,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Agent Management Integration",
            "Agent Management with Feature Operations"
          ],
          "title": "should maintain agent state during feature operations",
          "fullName": "Agent Management Agent Management Integration Agent Management with Feature Operations should maintain agent state during feature operations",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 5,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Edge Cases and Error Recovery",
            "Data Consistency"
          ],
          "title": "should handle partial agent data gracefully",
          "fullName": "Agent Management Edge Cases and Error Recovery Data Consistency should handle partial agent data gracefully",
          "status": "passed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Edge Cases and Error Recovery",
            "Data Consistency"
          ],
          "title": "should handle malformed agent data",
          "fullName": "Agent Management Edge Cases and Error Recovery Data Consistency should handle malformed agent data",
          "status": "passed",
          "duration": 1,
          "numPassingAsserts": 3,
          "location": null
        },
        {
          "ancestorTitles": [
            "Agent Management",
            "Edge Cases and Error Recovery",
            "Concurrent Operations"
          ],
          "title": "should handle multiple agent operations on same file",
          "fullName": "Agent Management Edge Cases and Error Recovery Concurrent Operations should handle multiple agent operations on same file",
          "status": "failed",
          "duration": 0,
          "numPassingAsserts": 3,
          "location": null
        }
      ],
      "failureDetails": [
        {
          "title": "should handle file write errors during initialization",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle file write errors during initialization",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:224:32)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": true,
                "expected": false,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle corrupted features file during initialization",
          "fullName": "Agent Management Agent Initialization Initialization Error Handling should handle corrupted features file during initialization",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:234:32)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": true,
                "expected": false,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle file write errors during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Error Handling should handle file write errors during reinitialization",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:379:32)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": true,
                "expected": false,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle corrupted features file during reinitialization",
          "fullName": "Agent Management Agent Reinitialization Reinitialization Error Handling should handle corrupted features file during reinitialization",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:389:32)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": true,
                "expected": false,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should create .stop-allowed flag file",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should create .stop-allowed flag file",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:431:53)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should include comprehensive stop data in flag file",
          "fullName": "Agent Management Stop Authorization Basic Stop Authorization should include comprehensive stop data in flag file",
          "failureMessages": [
            "SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:447:34)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle empty agent ID",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle empty agent ID",
          "failureMessages": [
            "SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:466:34)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle very long reasons",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should handle very long reasons",
          "failureMessages": [
            "SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:479:34)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should overwrite existing stop flag",
          "fullName": "Agent Management Stop Authorization Stop Authorization Edge Cases should overwrite existing stop flag",
          "failureMessages": [
            "SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:509:34)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle file write errors during stop authorization",
          "fullName": "Agent Management Stop Authorization Stop Authorization Error Handling should handle file write errors during stop authorization",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:522:32)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": true,
                "expected": false,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle file system errors gracefully",
          "fullName": "Agent Management Stop Authorization Stop Authorization Error Handling should handle file system errors gracefully",
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"File system unavailable\"\nReceived string:    \"expect(received).toBe(expected) // Object.is equality·\nExpected: false\nReceived: true\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:541:33)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"File system unavailable\"\nReceived string:    \"expect(received).toBe(expected) // Object.is equality·\nExpected: false\nReceived: true\"",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle complete agent lifecycle",
          "fullName": "Agent Management Agent Management Integration Agent Lifecycle Integration should handle complete agent lifecycle",
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:575:53)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ]
        },
        {
          "title": "should handle multiple agents with different lifecycles",
          "fullName": "Agent Management Agent Management Integration Agent Lifecycle Integration should handle multiple agents with different lifecycles",
          "failureMessages": [
            "SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:604:34)"
          ],
          "failureDetails": [
            {}
          ]
        },
        {
          "title": "should handle multiple agent operations on same file",
          "fullName": "Agent Management Edge Cases and Error Recovery Concurrent Operations should handle multiple agent operations on same file",
          "failureMessages": [
            "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at toBeDefined (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:698:44)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:697:16)"
          ],
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toBeDefined()\n\nReceived: undefined",
                "pass": false
              }
            }
          ]
        }
      ]
    }
  ],
  "coverageMap": null,
  "environment": {
    "node_version": "v22.20.0",
    "platform": "darwin",
    "ci": false,
    "github_actions": false,
    "github_ref": null,
    "github_sha": null,
    "github_run_id": null
  }
}