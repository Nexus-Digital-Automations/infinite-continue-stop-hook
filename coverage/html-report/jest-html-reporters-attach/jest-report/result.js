window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":10,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":10,"startTime":1759189029525,"success":false,"testResults":[{"numFailingTests":10,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759189044749,"loadTestEnvironmentEnd":1759189030489,"loadTestEnvironmentStart":1759189030298,"runtime":14259,"setupAfterEnvEnd":1759189031520,"setupAfterEnvStart":1759189030728,"setupFilesEnd":1759189030490,"setupFilesStart":1759189030490,"slow":true,"start":1759189030490},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js","failureMessage":"  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Complete Validation Workflows ‚Ä∫ should execute full feature validation workflow\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"suggested\"\n    Received string:    \"[dotenv@17.2.2] injecting env (0) from .env -- tip: üì° version env with Radar: https://dotenvx.com/radar\n    {\n      \\\"success\\\": false,\n      \\\"error\\\": \\\"filePath is not defined\\\"\n    }\n    [23:37:12] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n        \u001b[35mcontext\u001b[39m: {}\n    [23:37:12] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n        \u001b[35mcontext\u001b[39m: {}\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mStarting TaskManager API\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n        \u001b[35mcommand\u001b[39m: \\\"suggest-feature\\\"\n        \u001b[35menvironment\u001b[39m: \\\"test\\\"\n        \u001b[35misSecure\u001b[39m: false\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mInitializing Secret Manager\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35moptions\u001b[39m: {\n          \\\"strict\\\": false,\n          \\\"additionalRequired\\\": []\n        }\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n        \u001b[35msource\u001b[39m: \\\"env\\\"\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"LOG_LEVEL\\\"\n        \u001b[35msource\u001b[39m: \\\"env\\\"\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret Manager initialized successfully\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mtotalSecrets\u001b[39m: 2\n        \u001b[35mrequiredSecrets\u001b[39m: 1\n        \u001b[35mvalidSecrets\u001b[39m: 2\n        \u001b[35minvalidSecrets\u001b[39m: 0\n        \u001b[35mmissingRequired\u001b[39m: 0\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret validation completed successfully\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n    [23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mTaskManager operation completed successfully\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"app\\\"\n    \"\n\n      326 |       let featureId;\n      327 |       if (createResult.raw) {\n    > 328 |         expect(createResult.output).toContain('suggested');\n          |                                     ^\n      329 |         // Extract feature ID from output if possible, or use a test ID\n      330 |         featureId = `test-feature-${Date.now()}`;\n      331 |       } else {\n\n      at Object.toContain (test/e2e/success-criteria-e2e.test.js:328:37)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Complete Validation Workflows ‚Ä∫ should handle validation failures gracefully\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"suggested\"\n    Received string:    \"[dotenv@17.2.2] injecting env (0) from .env -- tip: üîê prevent committing .env to code: https://dotenvx.com/precommit\n    {\n      \\\"success\\\": false,\n      \\\"error\\\": \\\"filePath is not defined\\\"\n    }\n    [23:37:14] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n        \u001b[35mcontext\u001b[39m: {}\n    [23:37:14] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n        \u001b[35mcontext\u001b[39m: {}\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mStarting TaskManager API\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n        \u001b[35mcommand\u001b[39m: \\\"suggest-feature\\\"\n        \u001b[35menvironment\u001b[39m: \\\"test\\\"\n        \u001b[35misSecure\u001b[39m: false\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mInitializing Secret Manager\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35moptions\u001b[39m: {\n          \\\"strict\\\": false,\n          \\\"additionalRequired\\\": []\n        }\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n        \u001b[35msource\u001b[39m: \\\"env\\\"\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mkey\u001b[39m: \\\"LOG_LEVEL\\\"\n        \u001b[35msource\u001b[39m: \\\"env\\\"\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret Manager initialized successfully\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n        \u001b[35mtotalSecrets\u001b[39m: 2\n        \u001b[35mrequiredSecrets\u001b[39m: 1\n        \u001b[35mvalidSecrets\u001b[39m: 2\n        \u001b[35minvalidSecrets\u001b[39m: 0\n        \u001b[35mmissingRequired\u001b[39m: 0\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret validation completed successfully\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n    [23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mTaskManager operation completed successfully\u001b[39m\n        \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n        \u001b[35mtaskId\u001b[39m: null\n        \u001b[35moperationId\u001b[39m: null\n        \u001b[35mmodule\u001b[39m: \\\"app\\\"\n    \"\n\n      408 |       let featureId;\n      409 |       if (createResult.raw) {\n    > 410 |         expect(createResult.output).toContain('suggested');\n          |                                     ^\n      411 |         featureId = `test-failure-feature-${Date.now()}`;\n      412 |       } else {\n      413 |         expect(createResult.success).toBe(true);\n\n      at Object.toContain (test/e2e/success-criteria-e2e.test.js:410:37)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Complete Validation Workflows ‚Ä∫ should validate feature categorization workflow\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      479 |       expect(createResult.success).toBe(true);\n      480 |\n    > 481 |       const featureId = createResult.feature.id;\n          |                                              ^\n      482 |\n      483 |       // Verify feature metadata And categorization\n      484 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:481:46)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Real-World Usage Scenarios ‚Ä∫ should handle typical development workflow\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      573 |       expect(featureResult.success).toBe(true);\n      574 |\n    > 575 |       const featureId = featureResult.feature.id;\n          |                                               ^\n      576 |\n      577 |       // 2. Approve feature for implementation\n      578 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:575:47)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Real-World Usage Scenarios ‚Ä∫ should handle bug fix workflow with criteria\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      652 |       expect(bugFixResult.success).toBe(true);\n      653 |\n    > 654 |       const featureId = bugFixResult.feature.id;\n          |                                              ^\n      655 |\n      656 |       // Approve bug fix for implementation\n      657 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:654:46)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Real-World Usage Scenarios ‚Ä∫ should handle refactoring workflow with quality gates\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      739 |       expect(refactorResult.success).toBe(true);\n      740 |\n    > 741 |       const featureId = refactorResult.feature.id;\n          |                                                ^\n      742 |\n      743 |       // Approve refactoring feature\n      744 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:741:48)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Multi-Agent Coordination ‚Ä∫ should coordinate feature validation across multiple agents\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      862 |       expect(createResult.success).toBe(true);\n      863 |\n    > 864 |       const featureId = createResult.feature.id;\n          |                                              ^\n      865 |\n      866 |       // Initialize multiple agents for different validation aspects;\n      867 |       const developmentAgentId = `dev-agent-${Date.now()}`;\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:864:46)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Performance Validation And Benchmarking ‚Ä∫ should validate performance criteria with actual benchmarks\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      952 |       expect(createResult.success).toBe(true);\n      953 |\n    > 954 |       const featureId = createResult.feature.id;\n          |                                              ^\n      955 |\n      956 |       // Approve performance feature\n      957 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:954:46)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Performance Validation And Benchmarking ‚Ä∫ should handle performance regression detection\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      1029 |       expect(createResult.success).toBe(true);\n      1030 |\n    > 1031 |       const featureId = createResult.feature.id;\n           |                                              ^\n      1032 |\n      1033 |       // Approve regression detection feature\n      1034 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:1031:46)\n\n  ‚óè Success Criteria End-to-End Tests ‚Ä∫ Evidence Collection And Reporting ‚Ä∫ should collect And store validation evidence\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      1109 |       expect(createResult.success).toBe(true);\n      1110 |\n    > 1111 |       const featureId = createResult.feature.id;\n           |                                              ^\n      1112 |\n      1113 |       // Approve evidence collection feature\n      1114 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:1111:46)\n","testResults":[{"ancestorTitles":["Success Criteria End-to-End Tests","Complete Validation Workflows"],"duration":1397,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"suggested\"\nReceived string:    \"[dotenv@17.2.2] injecting env (0) from .env -- tip: üì° version env with Radar: https://dotenvx.com/radar\n{\n  \\\"success\\\": false,\n  \\\"error\\\": \\\"filePath is not defined\\\"\n}\n[23:37:12] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n    \u001b[35mcontext\u001b[39m: {}\n[23:37:12] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n    \u001b[35mcontext\u001b[39m: {}\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mStarting TaskManager API\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n    \u001b[35mcommand\u001b[39m: \\\"suggest-feature\\\"\n    \u001b[35menvironment\u001b[39m: \\\"test\\\"\n    \u001b[35misSecure\u001b[39m: false\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mInitializing Secret Manager\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35moptions\u001b[39m: {\n      \\\"strict\\\": false,\n      \\\"additionalRequired\\\": []\n    }\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n    \u001b[35msource\u001b[39m: \\\"env\\\"\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"LOG_LEVEL\\\"\n    \u001b[35msource\u001b[39m: \\\"env\\\"\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret Manager initialized successfully\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mtotalSecrets\u001b[39m: 2\n    \u001b[35mrequiredSecrets\u001b[39m: 1\n    \u001b[35mvalidSecrets\u001b[39m: 2\n    \u001b[35minvalidSecrets\u001b[39m: 0\n    \u001b[35mmissingRequired\u001b[39m: 0\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mSecret validation completed successfully\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n[23:37:12] \u001b[32mINFO\u001b[39m: \u001b[36mTaskManager operation completed successfully\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"app\\\"\n\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:328:37)"],"fullName":"Success Criteria End-to-End Tests Complete Validation Workflows should execute full feature validation workflow","status":"failed","title":"should execute full feature validation workflow"},{"ancestorTitles":["Success Criteria End-to-End Tests","Complete Validation Workflows"],"duration":1122,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"suggested\"\nReceived string:    \"[dotenv@17.2.2] injecting env (0) from .env -- tip: üîê prevent committing .env to code: https://dotenvx.com/precommit\n{\n  \\\"success\\\": false,\n  \\\"error\\\": \\\"filePath is not defined\\\"\n}\n[23:37:14] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n    \u001b[35mcontext\u001b[39m: {}\n[23:37:14] \u001b[33mWARN\u001b[39m: \u001b[36mAttempted to access non-existent secret\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n    \u001b[35mcontext\u001b[39m: {}\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mStarting TaskManager API\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n    \u001b[35mcommand\u001b[39m: \\\"suggest-feature\\\"\n    \u001b[35menvironment\u001b[39m: \\\"test\\\"\n    \u001b[35misSecure\u001b[39m: false\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mInitializing Secret Manager\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35moptions\u001b[39m: {\n      \\\"strict\\\": false,\n      \\\"additionalRequired\\\": []\n    }\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"NODE_ENV\\\"\n    \u001b[35msource\u001b[39m: \\\"env\\\"\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret updated\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mkey\u001b[39m: \\\"LOG_LEVEL\\\"\n    \u001b[35msource\u001b[39m: \\\"env\\\"\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret Manager initialized successfully\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"secretManager\\\"\n    \u001b[35mtotalSecrets\u001b[39m: 2\n    \u001b[35mrequiredSecrets\u001b[39m: 1\n    \u001b[35mvalidSecrets\u001b[39m: 2\n    \u001b[35minvalidSecrets\u001b[39m: 0\n    \u001b[35mmissingRequired\u001b[39m: 0\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mSecret validation completed successfully\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"taskManagerAPI\\\"\n[23:37:14] \u001b[32mINFO\u001b[39m: \u001b[36mTaskManager operation completed successfully\u001b[39m\n    \u001b[35magentId\u001b[39m: \\\"unknown\\\"\n    \u001b[35mtaskId\u001b[39m: null\n    \u001b[35moperationId\u001b[39m: null\n    \u001b[35mmodule\u001b[39m: \\\"app\\\"\n\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:410:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Complete Validation Workflows should handle validation failures gracefully","status":"failed","title":"should handle validation failures gracefully"},{"ancestorTitles":["Success Criteria End-to-End Tests","Complete Validation Workflows"],"duration":1975,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:481:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Complete Validation Workflows should validate feature categorization workflow","status":"failed","title":"should validate feature categorization workflow"},{"ancestorTitles":["Success Criteria End-to-End Tests","Real-World Usage Scenarios"],"duration":1440,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:575:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Real-World Usage Scenarios should handle typical development workflow","status":"failed","title":"should handle typical development workflow"},{"ancestorTitles":["Success Criteria End-to-End Tests","Real-World Usage Scenarios"],"duration":1106,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:654:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Real-World Usage Scenarios should handle bug fix workflow with criteria","status":"failed","title":"should handle bug fix workflow with criteria"},{"ancestorTitles":["Success Criteria End-to-End Tests","Real-World Usage Scenarios"],"duration":1543,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:741:48)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Real-World Usage Scenarios should handle refactoring workflow with quality gates","status":"failed","title":"should handle refactoring workflow with quality gates"},{"ancestorTitles":["Success Criteria End-to-End Tests","Multi-Agent Coordination"],"duration":1136,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:864:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Multi-Agent Coordination should coordinate feature validation across multiple agents","status":"failed","title":"should coordinate feature validation across multiple agents"},{"ancestorTitles":["Success Criteria End-to-End Tests","Performance Validation And Benchmarking"],"duration":1091,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:954:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Performance Validation And Benchmarking should validate performance criteria with actual benchmarks","status":"failed","title":"should validate performance criteria with actual benchmarks"},{"ancestorTitles":["Success Criteria End-to-End Tests","Performance Validation And Benchmarking"],"duration":1062,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:1031:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Performance Validation And Benchmarking should handle performance regression detection","status":"failed","title":"should handle performance regression detection"},{"ancestorTitles":["Success Criteria End-to-End Tests","Evidence Collection And Reporting"],"duration":1163,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:1111:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Evidence Collection And Reporting should collect And store validation evidence","status":"failed","title":"should collect And store validation evidence"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["*.js","lib/**/*.js","development/essentials/*.js","scripts/**/*.js","!test/**","!coverage/**","!node_modules/**","!.node-modules-backup/**","!jest.config.js","!eslint.config.js","!babel.config.js","!development/performance-analysis/**","!development/reports/**","!development/docs/**","!development/temp-scripts/**","!development/backups/**","!**/node_modules/**","!**/dist/**","!**/build/**","!**/*.config.js","!**/*.min.js"],"coverageDirectory":"/Users/jeremyparker/infinite-continue-stop-hook/coverage","coverageProvider":"v8","coverageReporters":["text","text-summary","html","json","json-summary","lcov","clover"],"coverageThreshold":{"global":{"branches":75,"functions":80,"lines":80,"statements":80},"./taskmanager-api.js":{"branches":70,"functions":75,"lines":75,"statements":75},"./lib/":{"branches":80,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":["test/e2e/success-criteria-e2e.test.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/test/unit/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"transformIgnorePatterns":["node_modules/(?!(@xenova/transformers)/)"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/test/integration/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":45000,"transformIgnorePatterns":["node_modules/(?!(@xenova/transformers)/)"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/test/e2e/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":60000,"transformIgnorePatterns":["node_modules/(?!(@xenova/transformers)/)"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"}],"reporters":[["default",{}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"hideIcon":false,"pageTitle":"TaskManager Test Coverage Report","includeFailureMsg":true,"includeSuiteFailure":true,"customInfos":[{"title":"CI/CD Pipeline","value":"üè† Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}]}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-junit/index.js",{"outputDirectory":"./coverage/reports","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" ‚Ä∫ ","usePathForSuiteName":true,"addFileAttribute":true,"includeConsoleOutput":true,"includeShortConsoleOutput":false,"suiteNameTemplate":"{filepath}","testCasePropertiesDirectory":"./coverage/reports/test-case-properties"}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-json-reporter.js",{"outputPath":"./coverage/reports/test-results.json","includeTestCases":true,"includeAssertionResults":true,"includeConsoleOutput":true}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-cicd-reporter.js",{"outputPath":"./coverage/reports/ci-cd-results.json","includeGitInfo":true,"includeEnvironmentInfo":true,"includeTimingData":true}]],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook","runInBand":false,"runTestsByPath":false,"seed":-1531299214,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["test/e2e/success-criteria-e2e.test.js"],"type":"TestPathPatterns"},"testSequencer":"/Users/jeremyparker/infinite-continue-stop-hook/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759189044758,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"pageTitle":"TaskManager Test Coverage Report","hideIcon":false,"customInfos":[{"title":"CI/CD Pipeline","value":"üè† Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}],"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})