window.jest_html_reporters_callback__({"numFailedTestSuites":6,"numFailedTests":24,"numPassedTestSuites":0,"numPassedTests":54,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":78,"startTime":1758640298101,"success":false,"testResults":[{"numFailingTests":6,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640299244,"loadTestEnvironmentEnd":1758640298199,"loadTestEnvironmentStart":1758640298162,"runtime":1045,"setupAfterEnvEnd":1758640298315,"setupAfterEnvStart":1758640298293,"setupFilesEnd":1758640298199,"setupFilesStart":1758640298199,"slow":false,"start":1758640298199},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js","failureMessage":"  ● File Operations Integration Tests › File Persistence and Data Integrity › should maintain FEATURES.json structure integrity across operations\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      80 |       });\n      81 |\n    > 82 |       expect(suggest1Result.success && suggest2Result.success).toBe(true);\n         |                                                                ^\n      83 |\n      84 |       // 3. Verify file structure after additions\n      85 |       featuresData = await readFeaturesFile(testDir);\n\n      at Object.toBe (test/integration/file-operations.test.js:82:64)\n\n  ● File Operations Integration Tests › File Persistence and Data Integrity › should handle concurrent file operations safely\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      140 |\n      141 |       // 2. Verify all operations succeeded\n    > 142 |       expect(results.every(result => result.success)).toBe(true);\n          |                                                       ^\n      143 |\n      144 |       // 3. Verify file integrity after concurrent operations\n      145 |       const featuresData = await readFeaturesFile(testDir);\n\n      at Object.toBe (test/integration/file-operations.test.js:142:55)\n\n  ● File Operations Integration Tests › Backup and Recovery Scenarios › should handle disk space and I/O errors gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      293 |\n      294 |         const batchResults = await execAPIConcurrently(batchCommands);\n    > 295 |         expect(batchResults.every(result => result.success)).toBe(true);\n          |                                                              ^\n      296 |       }\n      297 |\n      298 |       // 3. Verify file integrity with large dataset\n\n      at Object.toBe (test/integration/file-operations.test.js:295:62)\n\n  ● File Operations Integration Tests › File Locking and Race Conditions › should handle rapid sequential operations correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      332 |\n      333 |       // 3. Verify all operations succeeded\n    > 334 |       expect(results.every(result => result.success)).toBe(true);\n          |                                                       ^\n      335 |\n      336 |       // 4. Verify final file integrity\n      337 |       const featuresData = await readFeaturesFile(testDir);\n\n      at Object.toBe (test/integration/file-operations.test.js:334:55)\n\n  ● File Operations Integration Tests › File Locking and Race Conditions › should handle mixed read/write operations correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      366 |\n      367 |       const initialResults = await execAPIConcurrently(initialCommands);\n    > 368 |       expect(initialResults.every(result => result.success)).toBe(true);\n          |                                                              ^\n      369 |\n      370 |       // 2. Mix read and write operations\n      371 |       const mixedOperations = [\n\n      at Object.toBe (test/integration/file-operations.test.js:368:62)\n\n  ● File Operations Integration Tests › Data Migration and Upgrades › should handle missing metadata fields gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      433 |       });\n      434 |\n    > 435 |       expect(suggestResult.success).toBe(true);\n          |                                     ^\n      436 |\n      437 |       // 3. Verify metadata was added\n      438 |       const featuresData = await readFeaturesFile(testDir);\n\n      at Object.toBe (test/integration/file-operations.test.js:435:37)\n","testResults":[{"ancestorTitles":["File Operations Integration Tests","File Persistence and Data Integrity"],"duration":79,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:82:64)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"File Operations Integration Tests File Persistence and Data Integrity should maintain FEATURES.json structure integrity across operations","status":"failed","title":"should maintain FEATURES.json structure integrity across operations"},{"ancestorTitles":["File Operations Integration Tests","File Persistence and Data Integrity"],"duration":48,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:142:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"File Operations Integration Tests File Persistence and Data Integrity should handle concurrent file operations safely","status":"failed","title":"should handle concurrent file operations safely"},{"ancestorTitles":["File Operations Integration Tests","File Persistence and Data Integrity"],"duration":34,"failureMessages":[],"fullName":"File Operations Integration Tests File Persistence and Data Integrity should preserve file permissions and ownership","status":"passed","title":"should preserve file permissions and ownership"},{"ancestorTitles":["File Operations Integration Tests","Backup and Recovery Scenarios"],"duration":34,"failureMessages":[],"fullName":"File Operations Integration Tests Backup and Recovery Scenarios should handle missing FEATURES.json file gracefully","status":"passed","title":"should handle missing FEATURES.json file gracefully"},{"ancestorTitles":["File Operations Integration Tests","Backup and Recovery Scenarios"],"duration":65,"failureMessages":[],"fullName":"File Operations Integration Tests Backup and Recovery Scenarios should handle corrupted FEATURES.json file","status":"passed","title":"should handle corrupted FEATURES.json file"},{"ancestorTitles":["File Operations Integration Tests","Backup and Recovery Scenarios"],"duration":90,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:295:62)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"File Operations Integration Tests Backup and Recovery Scenarios should handle disk space and I/O errors gracefully","status":"failed","title":"should handle disk space and I/O errors gracefully"},{"ancestorTitles":["File Operations Integration Tests","File Locking and Race Conditions"],"duration":279,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:334:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"File Operations Integration Tests File Locking and Race Conditions should handle rapid sequential operations correctly","status":"failed","title":"should handle rapid sequential operations correctly"},{"ancestorTitles":["File Operations Integration Tests","File Locking and Race Conditions"],"duration":63,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:368:62)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"File Operations Integration Tests File Locking and Race Conditions should handle mixed read/write operations correctly","status":"failed","title":"should handle mixed read/write operations correctly"},{"ancestorTitles":["File Operations Integration Tests","Data Migration and Upgrades"],"duration":34,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js:435:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"File Operations Integration Tests Data Migration and Upgrades should handle missing metadata fields gracefully","status":"failed","title":"should handle missing metadata fields gracefully"},{"ancestorTitles":["File Operations Integration Tests","Data Migration and Upgrades"],"duration":35,"failureMessages":[],"fullName":"File Operations Integration Tests Data Migration and Upgrades should handle missing workflow_config gracefully","status":"passed","title":"should handle missing workflow_config gracefully"},{"ancestorTitles":["File Operations Integration Tests","Data Migration and Upgrades"],"duration":35,"failureMessages":[],"fullName":"File Operations Integration Tests Data Migration and Upgrades should preserve existing data during upgrades","status":"passed","title":"should preserve existing data during upgrades"},{"ancestorTitles":["File Operations Integration Tests","File Validation and Error Recovery"],"duration":33,"failureMessages":[],"fullName":"File Operations Integration Tests File Validation and Error Recovery should validate file structure before operations","status":"passed","title":"should validate file structure before operations"},{"ancestorTitles":["File Operations Integration Tests","File Validation and Error Recovery"],"duration":64,"failureMessages":[],"fullName":"File Operations Integration Tests File Validation and Error Recovery should handle file read/write permissions errors","status":"passed","title":"should handle file read/write permissions errors"}]},{"numFailingTests":2,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640302208,"loadTestEnvironmentEnd":1758640299248,"loadTestEnvironmentStart":1758640299246,"runtime":2959,"setupAfterEnvEnd":1758640299258,"setupAfterEnvStart":1758640299258,"setupFilesEnd":1758640299249,"setupFilesStart":1758640299249,"slow":false,"start":1758640299249},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/agent-lifecycle.test.js","failureMessage":"  ● Agent Lifecycle Integration Tests › Agent Initialization Workflow › should handle concurrent agent initialization\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      140 |\n      141 |       // 2. Verify all initializations succeeded\n    > 142 |       expect(results.every(result => result.success)).toBe(true);\n          |                                                       ^\n      143 |\n      144 |       // 3. Verify all agents have unique session IDs\n      145 |       const sessionIds = results.map(result => result.agent.sessionId);\n\n      at Object.toBe (test/integration/agent-lifecycle.test.js:142:55)\n\n  ● Agent Lifecycle Integration Tests › Agent Reinitialization Workflow › should handle concurrent reinitializations\n\n    TypeError: expect(received).toHaveLength(expected)\n\n    Matcher error: received value must have a length property whose value must be a number\n\n    Received has value: undefined\n\n      306 |       agentIds.forEach(agentId => {\n      307 |         expect(featuresData.agents[agentId]).toBeDefined();\n    > 308 |         expect(featuresData.agents[agentId].previousSessions).toHaveLength(1);\n          |                                                               ^\n      309 |       });\n      310 |     });\n      311 |   });\n\n      at toHaveLength (test/integration/agent-lifecycle.test.js:308:63)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/integration/agent-lifecycle.test.js:306:16)\n","testResults":[{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":67,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should handle single agent initialization process","status":"passed","title":"should handle single agent initialization process"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":196,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should handle multiple agent initialization","status":"passed","title":"should handle multiple agent initialization"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":86,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/agent-lifecycle.test.js:142:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should handle concurrent agent initialization","status":"failed","title":"should handle concurrent agent initialization"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":67,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should prevent duplicate agent initialization","status":"passed","title":"should prevent duplicate agent initialization"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":99,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle agent reinitialization process","status":"passed","title":"should handle agent reinitialization process"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":227,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle multiple reinitializations of same agent","status":"passed","title":"should handle multiple reinitializations of same agent"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":35,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle reinitialization of non-existent agent","status":"passed","title":"should handle reinitialization of non-existent agent"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":133,"failureMessages":["TypeError: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at toHaveLength (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/agent-lifecycle.test.js:308:63)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/agent-lifecycle.test.js:306:16)"],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle concurrent reinitializations","status":"failed","title":"should handle concurrent reinitializations"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":66,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle agent stop authorization process","status":"passed","title":"should handle agent stop authorization process"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":199,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization with different reasons","status":"passed","title":"should handle stop authorization with different reasons"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":66,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization without reason","status":"passed","title":"should handle stop authorization without reason"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":33,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization by non-existent agent","status":"passed","title":"should handle stop authorization by non-existent agent"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":199,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle multiple stop authorizations","status":"passed","title":"should handle multiple stop authorizations"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Initialization Statistics Tracking"],"duration":198,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Initialization Statistics Tracking should track initialization statistics accurately","status":"passed","title":"should track initialization statistics accurately"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Initialization Statistics Tracking"],"duration":248,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Initialization Statistics Tracking should maintain statistics persistence across operations","status":"passed","title":"should maintain statistics persistence across operations"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Initialization Statistics Tracking"],"duration":108,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Initialization Statistics Tracking should handle time bucket boundaries correctly","status":"passed","title":"should handle time bucket boundaries correctly"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Complete Agent Lifecycle Scenarios"],"duration":143,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle complete agent workflow from initialization to stop","status":"passed","title":"should handle complete agent workflow from initialization to stop"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Complete Agent Lifecycle Scenarios"],"duration":338,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle multi-agent collaborative workflow","status":"passed","title":"should handle multi-agent collaborative workflow"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Complete Agent Lifecycle Scenarios"],"duration":340,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle agent workflow error recovery","status":"passed","title":"should handle agent workflow error recovery"}]},{"numFailingTests":5,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640302244,"loadTestEnvironmentEnd":1758640298199,"loadTestEnvironmentStart":1758640298167,"runtime":4045,"setupAfterEnvEnd":1758640298315,"setupAfterEnvStart":1758640298293,"setupFilesEnd":1758640298199,"setupFilesStart":1758640298199,"slow":false,"start":1758640298199},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js","failureMessage":"  ● Feature Lifecycle Integration Tests › Feature Suggestion Workflow › should handle complete feature suggestion process\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      72 |         });\n      73 |\n    > 74 |         expect(result.success).toBe(true);\n         |                                ^\n      75 |         expect(result.feature.status).toBe('suggested');\n      76 |         expect(result.feature.category).toBe(featureData.category);\n      77 |         expect(result.feature.id).toMatch(/^feature_\\d+_\\w+$/);\n\n      at Object.toBe (test/integration/feature-lifecycle.test.js:74:32)\n\n  ● Feature Lifecycle Integration Tests › Feature Suggestion Workflow › should handle concurrent feature suggestions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      200 |\n      201 |       // 3. Verify all succeeded\n    > 202 |       expect(results.every(result => result.success)).toBe(true);\n          |                                                       ^\n      203 |\n      204 |       // 4. Verify unique IDs\n      205 |       const featureIds = results.map(result => result.feature.id);\n\n      at Object.toBe (test/integration/feature-lifecycle.test.js:202:55)\n\n  ● Feature Lifecycle Integration Tests › Feature Approval Workflow › should handle individual feature approval process\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      283 |       // 5. Verify statistics\n      284 |       const statsResult = await execAPI('feature-stats', [], { projectRoot: testDir });\n    > 285 |       expect(statsResult.success).toBe(true);\n          |                                   ^\n      286 |       expect(statsResult.stats.by_status.approved).toBe(3);\n      287 |     });\n      288 |\n\n      at Object.toBe (test/integration/feature-lifecycle.test.js:285:35)\n\n  ● Feature Lifecycle Integration Tests › Feature Approval Workflow › should handle bulk feature approval process\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      302 |           projectRoot: testDir,\n      303 |         });\n    > 304 |         expect(result.success).toBe(true);\n          |                                ^\n      305 |         featureIds.push(result.feature.id);\n      306 |       }\n      307 |\n\n      at Object.toBe (test/integration/feature-lifecycle.test.js:304:32)\n\n  ● Feature Lifecycle Integration Tests › Complete Lifecycle Scenarios › should maintain data integrity throughout complex workflows\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      689 |           projectRoot: testDir,\n      690 |         });\n    > 691 |         expect(result.success).toBe(true);\n          |                                ^\n      692 |         featureIds.push(result.feature.id);\n      693 |       }\n      694 |\n\n      at Object.toBe (test/integration/feature-lifecycle.test.js:691:32)\n","testResults":[{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Suggestion Workflow"],"duration":41,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js:74:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Lifecycle Integration Tests Feature Suggestion Workflow should handle complete feature suggestion process","status":"failed","title":"should handle complete feature suggestion process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Suggestion Workflow"],"duration":277,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Suggestion Workflow should validate feature data requirements","status":"passed","title":"should validate feature data requirements"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Suggestion Workflow"],"duration":291,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js:202:55)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Lifecycle Integration Tests Feature Suggestion Workflow should handle concurrent feature suggestions","status":"failed","title":"should handle concurrent feature suggestions"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Approval Workflow"],"duration":308,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js:285:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Lifecycle Integration Tests Feature Approval Workflow should handle individual feature approval process","status":"failed","title":"should handle individual feature approval process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Approval Workflow"],"duration":108,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js:304:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Lifecycle Integration Tests Feature Approval Workflow should handle bulk feature approval process","status":"failed","title":"should handle bulk feature approval process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Approval Workflow"],"duration":132,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Approval Workflow should prevent invalid approval transitions","status":"passed","title":"should prevent invalid approval transitions"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Rejection Workflow"],"duration":293,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Rejection Workflow should handle feature rejection process","status":"passed","title":"should handle feature rejection process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Rejection Workflow"],"duration":132,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Rejection Workflow should prevent operations on rejected features","status":"passed","title":"should prevent operations on rejected features"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Filtering and Search"],"duration":498,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Filtering and Search should filter features by status","status":"passed","title":"should filter features by status"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Filtering and Search"],"duration":597,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Filtering and Search should filter features by category","status":"passed","title":"should filter features by category"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Filtering and Search"],"duration":499,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Filtering and Search should handle combined filters","status":"passed","title":"should handle combined filters"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Complete Lifecycle Scenarios"],"duration":371,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Complete Lifecycle Scenarios should handle realistic product development workflow","status":"passed","title":"should handle realistic product development workflow"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Complete Lifecycle Scenarios"],"duration":342,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js:691:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Lifecycle Integration Tests Complete Lifecycle Scenarios should maintain data integrity throughout complex workflows","status":"failed","title":"should maintain data integrity throughout complex workflows"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/stress-and-recovery.test.js","failureMessage":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation, specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/jeremyparker/infinite-continue-stop-hook/test/integration/stress-and-recovery.test.js: Unexpected token (106:54)\n\n      104 |     test('should handle mixed concurrent operations without conflicts', async () => {\n      105 |       // 1. Create initial features for mixed operations\n    > 106 |       const initialFeatures = Array.from({ length, 20 }, (_, i) =>\n          |                                                       ^\n      107 |         generateTestFeature({\n      108 |           title: `Mixed Ops Feature ${i + 1}`,\n      109 |           category: 'enhancement',\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at Parser.raise [as unexpected] (node_modules/@babel/parser/src/tokenizer/index.ts:1543:16)\n      at Parser.unexpected [as parseObjPropValue] (node_modules/@babel/parser/src/parser/expression.ts:2385:21)\n      at Parser.parseObjPropValue [as parsePropertyDefinition] (node_modules/@babel/parser/src/parser/expression.ts:2218:17)\n      at Parser.parsePropertyDefinition [as parseObjectLike] (node_modules/@babel/parser/src/parser/expression.ts:2085:21)\n      at Parser.parseObjectLike [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1174:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseVar] (node_modules/@babel/parser/src/parser/statement.ts:1582:18)\n      at Parser.parseVar [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1246:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseAsyncArrowFromCallExpression] (node_modules/@babel/parser/src/parser/expression.ts:1059:10)\n      at Parser.parseAsyncArrowFromCallExpression [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:934:27)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)\n      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)\n      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)\n","testResults":[]},{"numFailingTests":4,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640319706,"loadTestEnvironmentEnd":1758640298199,"loadTestEnvironmentStart":1758640298162,"runtime":21507,"setupAfterEnvEnd":1758640298315,"setupAfterEnvStart":1758640298293,"setupFilesEnd":1758640298199,"setupFilesStart":1758640298199,"slow":true,"start":1758640298199},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js","failureMessage":"  ● API Workflow Integration Tests › Complete Feature Lifecycle Workflow › should execute complete feature lifecycle: suggest → approve → track implementation\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      70 |       });\n      71 |\n    > 72 |       expect(suggestResult.success).toBe(true);\n         |                                     ^\n      73 |       expect(suggestResult.feature).toBeDefined();\n      74 |       expect(suggestResult.feature.id).toBeDefined();\n      75 |       expect(suggestResult.feature.status).toBe('suggested');\n\n      at Object.toBe (test/integration/api-workflow.test.js:72:37)\n\n  ● API Workflow Integration Tests › Complete Feature Lifecycle Workflow › should handle bulk feature approval workflow\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      190 |\n      191 |       // Verify all suggestions succeeded\n    > 192 |       expect(suggestResults.every(result => result.success)).toBe(true);\n          |                                                              ^\n      193 |\n      194 |       const featureIds = suggestResults.map(result => result.feature.id);\n      195 |\n\n      at Object.toBe (test/integration/api-workflow.test.js:192:62)\n\n  ● API Workflow Integration Tests › Complete Agent Lifecycle Workflow › should handle multiple concurrent agent operations\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      316 |       const featuresData = await readFeaturesFile(testDir);\n      317 |       agentIds.forEach(agentId => {\n    > 318 |         expect(featuresData.agents[agentId]).toBeDefined();\n          |                                              ^\n      319 |         expect(featuresData.agents[agentId].status).toBe('active');\n      320 |       });\n      321 |\n\n      at toBeDefined (test/integration/api-workflow.test.js:318:46)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/integration/api-workflow.test.js:317:16)\n\n  ● API Workflow Integration Tests › API Error Handling › should handle malformed JSON in feature suggestion\n\n    Command failed (code 1): {\n      \"success\": false,\n      \"error\": \"Expected property name or '}' in JSON at position 2 (line 1 column 3)\",\n      \"command\": \"suggest-feature\",\n      \"timestamp\": \"2025-09-23T15:11:59.513Z\",\n      \"guide\": {\n        \"message\": \"Feature Management API Guide - feature-management\",\n        \"helpText\": \"For complete API usage guidance, run the guide command\",\n        \"commands\": [\n          \"guide - Get comprehensive guide\",\n          \"methods - List available methods\",\n          \"suggest-feature - Create feature suggestion\",\n          \"approve-feature - Approve feature\",\n          \"reject-feature - Reject feature\",\n          \"list-features - List features\",\n          \"feature-stats - Get feature statistics\",\n          \"get-initialization-stats - Get initialization usage statistics by time buckets\"\n        ]\n      }\n    }\n    Fatal error: Feature Management API execution failed\n    /Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1236\n        throw new Error('Feature Management API execution failed');\n              ^\n\n    Error: Feature Management API execution failed\n\n      1234 |\n      1235 |     console.error(JSON.stringify(errorResponse, null, 2));\n    > 1236 |     throw new Error('Feature Management API execution failed');\n           |           ^\n      1237 |   } finally {\n      1238 |     await api.cleanup();\n      1239 |   }\n\n      at main (taskmanager-api.js:1236:11)\n      at Object.<anonymous> (taskmanager-api.js:1247:3)\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/integration/test-utils.js:88:13)\n","testResults":[{"ancestorTitles":["API Workflow Integration Tests","Complete Feature Lifecycle Workflow"],"duration":10105,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js:72:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"API Workflow Integration Tests Complete Feature Lifecycle Workflow should execute complete feature lifecycle: suggest → approve → track implementation","status":"failed","title":"should execute complete feature lifecycle: suggest → approve → track implementation"},{"ancestorTitles":["API Workflow Integration Tests","Complete Feature Lifecycle Workflow"],"duration":103,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Feature Lifecycle Workflow should handle feature rejection workflow","status":"passed","title":"should handle feature rejection workflow"},{"ancestorTitles":["API Workflow Integration Tests","Complete Feature Lifecycle Workflow"],"duration":35,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js:192:62)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"API Workflow Integration Tests Complete Feature Lifecycle Workflow should handle bulk feature approval workflow","status":"failed","title":"should handle bulk feature approval workflow"},{"ancestorTitles":["API Workflow Integration Tests","Complete Agent Lifecycle Workflow"],"duration":159,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Agent Lifecycle Workflow should execute complete agent lifecycle: initialize → reinitialize → stop authorization","status":"passed","title":"should execute complete agent lifecycle: initialize → reinitialize → stop authorization"},{"ancestorTitles":["API Workflow Integration Tests","Complete Agent Lifecycle Workflow"],"duration":36,"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at toBeDefined (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js:318:46)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js:317:16)"],"fullName":"API Workflow Integration Tests Complete Agent Lifecycle Workflow should handle multiple concurrent agent operations","status":"failed","title":"should handle multiple concurrent agent operations"},{"ancestorTitles":["API Workflow Integration Tests","Cross-Component Integration"],"duration":316,"failureMessages":[],"fullName":"API Workflow Integration Tests Cross-Component Integration should handle mixed feature and agent operations","status":"passed","title":"should handle mixed feature and agent operations"},{"ancestorTitles":["API Workflow Integration Tests","Cross-Component Integration"],"duration":284,"failureMessages":[],"fullName":"API Workflow Integration Tests Cross-Component Integration should maintain data consistency across multiple operations","status":"passed","title":"should maintain data consistency across multiple operations"},{"ancestorTitles":["API Workflow Integration Tests","API Discovery and Methods"],"duration":10033,"failureMessages":[],"fullName":"API Workflow Integration Tests API Discovery and Methods should provide comprehensive API documentation","status":"passed","title":"should provide comprehensive API documentation"},{"ancestorTitles":["API Workflow Integration Tests","API Discovery and Methods"],"duration":32,"failureMessages":[],"fullName":"API Workflow Integration Tests API Discovery and Methods should list all available API methods","status":"passed","title":"should list all available API methods"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":32,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle invalid command gracefully","status":"passed","title":"should handle invalid command gracefully"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":31,"failureMessages":["Error: Command failed (code 1): {\n  \"success\": false,\n  \"error\": \"Expected property name or '}' in JSON at position 2 (line 1 column 3)\",\n  \"command\": \"suggest-feature\",\n  \"timestamp\": \"2025-09-23T15:11:59.513Z\",\n  \"guide\": {\n    \"message\": \"Feature Management API Guide - feature-management\",\n    \"helpText\": \"For complete API usage guidance, run the guide command\",\n    \"commands\": [\n      \"guide - Get comprehensive guide\",\n      \"methods - List available methods\",\n      \"suggest-feature - Create feature suggestion\",\n      \"approve-feature - Approve feature\",\n      \"reject-feature - Reject feature\",\n      \"list-features - List features\",\n      \"feature-stats - Get feature statistics\",\n      \"get-initialization-stats - Get initialization usage statistics by time buckets\"\n    ]\n  }\n}\nFatal error: Feature Management API execution failed\n/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1236\n    throw new Error('Feature Management API execution failed');\n          ^\n\nError: Feature Management API execution failed\n    at main (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1236:11)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1247:3)\n    at Module._compile (node:internal/modules/cjs/loader:1706:14)\n    at Object..js (node:internal/modules/cjs/loader:1839:10)\n    at Module.load (node:internal/modules/cjs/loader:1441:32)\n    at Function._load (node:internal/modules/cjs/loader:1263:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/test-utils.js:88:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"API Workflow Integration Tests API Error Handling should handle malformed JSON in feature suggestion","status":"failed","title":"should handle malformed JSON in feature suggestion"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":61,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle operations on non-existent features","status":"passed","title":"should handle operations on non-existent features"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":122,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle invalid status transitions","status":"passed","title":"should handle invalid status transitions"}]},{"numFailingTests":7,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640344750,"loadTestEnvironmentEnd":1758640298199,"loadTestEnvironmentStart":1758640298162,"runtime":46551,"setupAfterEnvEnd":1758640298315,"setupAfterEnvStart":1758640298293,"setupFilesEnd":1758640298199,"setupFilesStart":1758640298199,"slow":true,"start":1758640298199},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js","failureMessage":"  ● CLI Commands Integration Tests › Command Argument Parsing › should handle project-root parameter correctly\n\n    spawn node ENOENT\n\n\n  ● CLI Commands Integration Tests › Command Argument Parsing › should handle malformed JSON arguments\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"parse\"\n    Received string:    \"{\n      \\\"success\\\": false,\n      \\\"error\\\": \\\"Expected property name or '}' in JSON at position 2 (line 1 column 3)\\\",\n      \\\"command\\\": \\\"suggest-feature\\\",\n      \\\"timestamp\\\": \\\"2025-09-23T15:11:48.535Z\\\",\n      \\\"guide\\\": {\n        \\\"message\\\": \\\"Feature Management API Guide - feature-management\\\",\n        \\\"helpText\\\": \\\"For complete API usage guidance, run the guide command\\\",\n        \\\"commands\\\": [\n          \\\"guide - Get comprehensive guide\\\",\n          \\\"methods - List available methods\\\",\n          \\\"suggest-feature - Create feature suggestion\\\",\n          \\\"approve-feature - Approve feature\\\",\n          \\\"reject-feature - Reject feature\\\",\n          \\\"list-features - List features\\\",\n          \\\"feature-stats - Get feature statistics\\\",\n          \\\"get-initialization-stats - Get initialization usage statistics by time buckets\\\"\n        ]\n      }\n    }\n    Fatal error: Feature Management API execution failed\n    /Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1236\n        throw new Error('Feature Management API execution failed');\n              ^·\n    Error: Feature Management API execution failed\n\n      1234 |\n      1235 |     console.error(JSON.stringify(errorResponse, null, 2));\n    > 1236 |     throw new Error('Feature Management API execution failed');\n           |           ^\n      1237 |   } finally {\n      1238 |     await api.cleanup();\n      1239 |   }\n\n      at main (taskmanager-api.js:1236:11)\n      at Object.<anonymous> (taskmanager-api.js:1247:3)\n      at node:internal/main/run_main_module:36:49·\n      Node.js v22.19.0\n      \"\n      at Object.toContain (test/integration/cli-commands.test.js:169:74)\n\n  ● CLI Commands Integration Tests › Output Formatting and Validation › should produce valid JSON output for all commands\n\n    spawn node ENOENT\n\n\n  ● CLI Commands Integration Tests › Output Formatting and Validation › should include proper error information in failed commands\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not 0\n\n      455 |       ]);\n      456 |\n    > 457 |       expect(result2.code).not.toBe(0);\n          |                                ^\n      458 |       expect(result2.stderr).not.toBe('');\n      459 |     });\n      460 |\n\n      at Object.toBe (test/integration/cli-commands.test.js:457:32)\n\n  ● CLI Commands Integration Tests › Timeout and Performance › should complete basic commands within reasonable time\n\n    Command timed out after 5000ms\n\n      77 |       const timeoutId = setTimeout(() => {\n      78 |         child.kill('SIGTERM');\n    > 79 |         reject(new Error(`Command timed out after ${timeout}ms`));\n         |                ^\n      80 |       }, timeout);\n      81 |\n      82 |       child.on('close', (code) => {\n\n      at Timeout._onTimeout (test/integration/cli-commands.test.js:79:16)\n\n  ● CLI Commands Integration Tests › Error Recovery and Edge Cases › should handle invalid project root paths\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not 0\n\n      732 |\n      733 |       // Should fail gracefully with meaningful error\n    > 734 |       expect(result.code).not.toBe(0);\n          |                               ^\n      735 |       expect(result.stderr).not.toBe('');\n      736 |     });\n      737 |\n\n      at Object.toBe (test/integration/cli-commands.test.js:734:31)\n\n  ● CLI Commands Integration Tests › Error Recovery and Edge Cases › should handle concurrent CLI executions safely\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 5\n    Received length: 3\n    Received array:  [{\"business_value\": \"Validates that the feature management system works correctly\", \"category\": \"enhancement\", \"created_at\": \"2025-09-23T15:12:24.702Z\", \"description\": \"This is a test feature for integration testing purposes\", \"id\": \"feature_1758640344702_6e6c7a99ab80\", \"metadata\": {}, \"status\": \"suggested\", \"suggested_by\": \"system\", \"title\": \"Concurrent CLI Feature 2\", \"updated_at\": \"2025-09-23T15:12:24.702Z\"}, {\"business_value\": \"Validates that the feature management system works correctly\", \"category\": \"enhancement\", \"created_at\": \"2025-09-23T15:12:24.705Z\", \"description\": \"This is a test feature for integration testing purposes\", \"id\": \"feature_1758640344705_1d0151b00568\", \"metadata\": {}, \"status\": \"suggested\", \"suggested_by\": \"system\", \"title\": \"Concurrent CLI Feature 5\", \"updated_at\": \"2025-09-23T15:12:24.706Z\"}, {\"business_value\": \"Validates that the feature management system works correctly\", \"category\": \"enhancement\", \"created_at\": \"2025-09-23T15:12:24.707Z\", \"description\": \"This is a test feature for integration testing purposes\", \"id\": \"feature_1758640344707_f86cdbc0254d\", \"metadata\": {}, \"status\": \"suggested\", \"suggested_by\": \"system\", \"title\": \"Concurrent CLI Feature 4\", \"updated_at\": \"2025-09-23T15:12:24.708Z\"}]\n\n      763 |       expect(listResult.code).toBe(0);\n      764 |       const listOutput = JSON.parse(listResult.stdout);\n    > 765 |       expect(listOutput.features).toHaveLength(5);\n          |                                   ^\n      766 |\n      767 |       // 4. Verify file integrity\n      768 |       const featuresData = await readFeaturesFile(testDir);\n\n      at Object.toHaveLength (test/integration/cli-commands.test.js:765:35)\n","testResults":[{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":10043,"failureMessages":["Error: spawn node ENOENT\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:285:19)\n    at onErrorNT (node:internal/child_process:483:16)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)"],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle project-root parameter correctly","status":"failed","title":"should handle project-root parameter correctly"},{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":118,"failureMessages":[],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle missing arguments gracefully","status":"passed","title":"should handle missing arguments gracefully"},{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":32,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"parse\"\nReceived string:    \"{\n  \\\"success\\\": false,\n  \\\"error\\\": \\\"Expected property name or '}' in JSON at position 2 (line 1 column 3)\\\",\n  \\\"command\\\": \\\"suggest-feature\\\",\n  \\\"timestamp\\\": \\\"2025-09-23T15:11:48.535Z\\\",\n  \\\"guide\\\": {\n    \\\"message\\\": \\\"Feature Management API Guide - feature-management\\\",\n    \\\"helpText\\\": \\\"For complete API usage guidance, run the guide command\\\",\n    \\\"commands\\\": [\n      \\\"guide - Get comprehensive guide\\\",\n      \\\"methods - List available methods\\\",\n      \\\"suggest-feature - Create feature suggestion\\\",\n      \\\"approve-feature - Approve feature\\\",\n      \\\"reject-feature - Reject feature\\\",\n      \\\"list-features - List features\\\",\n      \\\"feature-stats - Get feature statistics\\\",\n      \\\"get-initialization-stats - Get initialization usage statistics by time buckets\\\"\n    ]\n  }\n}\nFatal error: Feature Management API execution failed\n/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1236\n    throw new Error('Feature Management API execution failed');\n          ^·\nError: Feature Management API execution failed\n    at main (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1236:11)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:1247:3)\n    at Module._compile (node:internal/modules/cjs/loader:1706:14)\n    at Object..js (node:internal/modules/cjs/loader:1839:10)\n    at Module.load (node:internal/modules/cjs/loader:1441:32)\n    at Function._load (node:internal/modules/cjs/loader:1263:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49·\nNode.js v22.19.0\n\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js:169:74)"],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle malformed JSON arguments","status":"failed","title":"should handle malformed JSON arguments"},{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":32,"failureMessages":[],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle unknown commands","status":"passed","title":"should handle unknown commands"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":10042,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute guide command successfully","status":"passed","title":"should execute guide command successfully"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":56,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute methods command successfully","status":"passed","title":"should execute methods command successfully"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":122,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute feature management commands","status":"passed","title":"should execute feature management commands"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":118,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute agent management commands","status":"passed","title":"should execute agent management commands"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":118,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute bulk operations","status":"passed","title":"should execute bulk operations"},{"ancestorTitles":["CLI Commands Integration Tests","Output Formatting and Validation"],"duration":10032,"failureMessages":["Error: spawn node ENOENT\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:285:19)\n    at onErrorNT (node:internal/child_process:483:16)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)"],"fullName":"CLI Commands Integration Tests Output Formatting and Validation should produce valid JSON output for all commands","status":"failed","title":"should produce valid JSON output for all commands"},{"ancestorTitles":["CLI Commands Integration Tests","Output Formatting and Validation"],"duration":81,"failureMessages":["Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not 0\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js:457:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CLI Commands Integration Tests Output Formatting and Validation should include proper error information in failed commands","status":"failed","title":"should include proper error information in failed commands"},{"ancestorTitles":["CLI Commands Integration Tests","Output Formatting and Validation"],"duration":32,"failureMessages":[],"fullName":"CLI Commands Integration Tests Output Formatting and Validation should handle output with special characters correctly","status":"passed","title":"should handle output with special characters correctly"},{"ancestorTitles":["CLI Commands Integration Tests","Timeout and Performance"],"duration":5005,"failureMessages":["Error: Command timed out after 5000ms\n    at Timeout._onTimeout (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js:79:16)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)"],"fullName":"CLI Commands Integration Tests Timeout and Performance should complete basic commands within reasonable time","status":"failed","title":"should complete basic commands within reasonable time"},{"ancestorTitles":["CLI Commands Integration Tests","Timeout and Performance"],"duration":5,"failureMessages":[],"fullName":"CLI Commands Integration Tests Timeout and Performance should handle timeout scenarios gracefully","status":"passed","title":"should handle timeout scenarios gracefully"},{"ancestorTitles":["CLI Commands Integration Tests","Timeout and Performance"],"duration":85,"failureMessages":[],"fullName":"CLI Commands Integration Tests Timeout and Performance should handle multiple rapid CLI invocations","status":"passed","title":"should handle multiple rapid CLI invocations"},{"ancestorTitles":["CLI Commands Integration Tests","CLI Workflow Integration"],"duration":169,"failureMessages":[],"fullName":"CLI Commands Integration Tests CLI Workflow Integration should execute complete feature workflow via CLI","status":"passed","title":"should execute complete feature workflow via CLI"},{"ancestorTitles":["CLI Commands Integration Tests","CLI Workflow Integration"],"duration":151,"failureMessages":[],"fullName":"CLI Commands Integration Tests CLI Workflow Integration should execute complete agent workflow via CLI","status":"passed","title":"should execute complete agent workflow via CLI"},{"ancestorTitles":["CLI Commands Integration Tests","Error Recovery and Edge Cases"],"duration":29,"failureMessages":[],"fullName":"CLI Commands Integration Tests Error Recovery and Edge Cases should handle corrupted project directory gracefully","status":"passed","title":"should handle corrupted project directory gracefully"},{"ancestorTitles":["CLI Commands Integration Tests","Error Recovery and Edge Cases"],"duration":10030,"failureMessages":["Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not 0\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js:734:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CLI Commands Integration Tests Error Recovery and Edge Cases should handle invalid project root paths","status":"failed","title":"should handle invalid project root paths"},{"ancestorTitles":["CLI Commands Integration Tests","Error Recovery and Edge Cases"],"duration":84,"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 5\nReceived length: 3\nReceived array:  [{\"business_value\": \"Validates that the feature management system works correctly\", \"category\": \"enhancement\", \"created_at\": \"2025-09-23T15:12:24.702Z\", \"description\": \"This is a test feature for integration testing purposes\", \"id\": \"feature_1758640344702_6e6c7a99ab80\", \"metadata\": {}, \"status\": \"suggested\", \"suggested_by\": \"system\", \"title\": \"Concurrent CLI Feature 2\", \"updated_at\": \"2025-09-23T15:12:24.702Z\"}, {\"business_value\": \"Validates that the feature management system works correctly\", \"category\": \"enhancement\", \"created_at\": \"2025-09-23T15:12:24.705Z\", \"description\": \"This is a test feature for integration testing purposes\", \"id\": \"feature_1758640344705_1d0151b00568\", \"metadata\": {}, \"status\": \"suggested\", \"suggested_by\": \"system\", \"title\": \"Concurrent CLI Feature 5\", \"updated_at\": \"2025-09-23T15:12:24.706Z\"}, {\"business_value\": \"Validates that the feature management system works correctly\", \"category\": \"enhancement\", \"created_at\": \"2025-09-23T15:12:24.707Z\", \"description\": \"This is a test feature for integration testing purposes\", \"id\": \"feature_1758640344707_f86cdbc0254d\", \"metadata\": {}, \"status\": \"suggested\", \"suggested_by\": \"system\", \"title\": \"Concurrent CLI Feature 4\", \"updated_at\": \"2025-09-23T15:12:24.708Z\"}]\n    at Object.toHaveLength (/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js:765:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CLI Commands Integration Tests Error Recovery and Edge Cases should handle concurrent CLI executions safely","status":"failed","title":"should handle concurrent CLI executions safely"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["*.js","lib/**/*.js","development/essentials/*.js","scripts/**/*.js","!test/**","!coverage/**","!node_modules/**","!.node-modules-backup/**","!jest.config.js","!eslint.config.js","!babel.config.js","!development/performance-analysis/**","!development/reports/**","!development/docs/**","!development/temp-scripts/**","!development/backups/**","!**/node_modules/**","!**/dist/**","!**/build/**","!**/*.config.js","!**/*.min.js"],"coverageDirectory":"/Users/jeremyparker/infinite-continue-stop-hook/coverage","coverageProvider":"v8","coverageReporters":["text","text-summary","html","json","json-summary","lcov","clover"],"coverageThreshold":{"global":{"branches":75,"functions":80,"lines":80,"statements":80},"./taskmanager-api.js":{"branches":70,"functions":75,"lines":75,"statements":75},"./lib/":{"branches":80,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":["test/integration"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/test/unit/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/test/integration/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":45000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/test/e2e/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":60000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"}],"reporters":[["default",{}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"hideIcon":false,"pageTitle":"TaskManager Test Coverage Report","includeFailureMsg":true,"includeSuiteFailure":true}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-junit/index.js",{"outputDirectory":"./coverage","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true}]],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook","runInBand":false,"runTestsByPath":false,"seed":2093986975,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["test/integration"],"type":"TestPathPatterns"},"testSequencer":"/Users/jeremyparker/infinite-continue-stop-hook/node_modules/@jest/test-sequencer/build/index.js","testTimeout":45000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1758640344759,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"pageTitle":"TaskManager Test Coverage Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})