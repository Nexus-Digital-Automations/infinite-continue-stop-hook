window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":34,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":34,"startTime":1758968966853,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":34,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758968967110,"loadTestEnvironmentEnd":1758968966945,"loadTestEnvironmentStart":1758968966923,"runtime":165,"setupAfterEnvEnd":1758968966991,"setupAfterEnvStart":1758968966981,"setupFilesEnd":1758968966945,"setupFilesStart":1758968966945,"slow":false,"start":1758968966945},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/validation-dependency-manager.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Initialization and Default Dependencies"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Initialization and Default Dependencies should initialize with default validation criteria","status":"passed","title":"should initialize with default validation criteria"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Initialization and Default Dependencies"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Initialization and Default Dependencies should have proper default dependency relationships","status":"passed","title":"should have proper default dependency relationships"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Initialization and Default Dependencies"],"duration":2,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Initialization and Default Dependencies should have proper metadata for each criterion","status":"passed","title":"should have proper metadata for each criterion"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Management Operations"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Management Operations should add new dependency configuration correctly","status":"passed","title":"should add new dependency configuration correctly"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Management Operations"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Management Operations should remove dependency configuration correctly","status":"passed","title":"should remove dependency configuration correctly"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Management Operations"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Management Operations should get specific dependency configuration","status":"passed","title":"should get specific dependency configuration"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Management Operations"],"duration":19,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Management Operations should handle invalid dependency types","status":"passed","title":"should handle invalid dependency types"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Management Operations"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Management Operations should handle missing criterion parameter","status":"passed","title":"should handle missing criterion parameter"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Graph Validation"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Graph Validation should validate clean dependency graph","status":"passed","title":"should validate clean dependency graph"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Graph Validation"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Graph Validation should detect circular dependencies","status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Dependency Graph Validation"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Dependency Graph Validation should detect missing dependency references","status":"passed","title":"should detect missing dependency references"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Execution Order Optimization"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Execution Order Optimization should generate correct execution order respecting dependencies","status":"passed","title":"should generate correct execution order respecting dependencies"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Execution Order Optimization"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Execution Order Optimization should handle forced execution when weak dependencies create deadlocks","status":"passed","title":"should handle forced execution when weak dependencies create deadlocks"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Parallel Execution Planning"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Parallel Execution Planning should generate efficient parallel execution plan","status":"passed","title":"should generate efficient parallel execution plan"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Parallel Execution Planning"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Parallel Execution Planning should respect dependency constraints in parallel planning","status":"passed","title":"should respect dependency constraints in parallel planning"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Parallel Execution Planning"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Parallel Execution Planning should optimize resource allocation in parallel execution","status":"passed","title":"should optimize resource allocation in parallel execution"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Parallel Execution Planning"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Parallel Execution Planning should handle resource conflicts appropriately","status":"passed","title":"should handle resource conflicts appropriately"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Advanced Analytics and Optimization"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Advanced Analytics and Optimization should generate dependency visualization data","status":"passed","title":"should generate dependency visualization data"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Advanced Analytics and Optimization"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Advanced Analytics and Optimization should generate interactive visualization formats","status":"passed","title":"should generate interactive visualization formats"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Advanced Analytics and Optimization"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Advanced Analytics and Optimization should handle unsupported visualization formats","status":"passed","title":"should handle unsupported visualization formats"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Advanced Analytics and Optimization"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Advanced Analytics and Optimization should record and analyze execution history","status":"passed","title":"should record and analyze execution history"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Advanced Analytics and Optimization"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Advanced Analytics and Optimization should handle empty execution history gracefully","status":"passed","title":"should handle empty execution history gracefully"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Configuration Persistence"],"duration":2,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Configuration Persistence should save dependency configuration to file","status":"passed","title":"should save dependency configuration to file"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Configuration Persistence"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Configuration Persistence should load dependency configuration from file","status":"passed","title":"should load dependency configuration from file"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Configuration Persistence"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Configuration Persistence should handle missing configuration file gracefully","status":"passed","title":"should handle missing configuration file gracefully"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Adaptive Execution Planning"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Adaptive Execution Planning should generate adaptive execution plan based on system resources","status":"passed","title":"should generate adaptive execution plan based on system resources"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Adaptive Execution Planning"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Adaptive Execution Planning should adapt to constrained system resources","status":"passed","title":"should adapt to constrained system resources"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Complex Workflow Scenarios"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Complex Workflow Scenarios should handle large dependency graphs efficiently","status":"passed","title":"should handle large dependency graphs efficiently"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Complex Workflow Scenarios"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Complex Workflow Scenarios should provide comprehensive debugging information","status":"passed","title":"should provide comprehensive debugging information"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Complex Workflow Scenarios"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Complex Workflow Scenarios should handle mixed dependency types correctly","status":"passed","title":"should handle mixed dependency types correctly"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Error Handling and Edge Cases"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Error Handling and Edge Cases should handle empty criteria lists","status":"passed","title":"should handle empty criteria lists"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Error Handling and Edge Cases"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Error Handling and Edge Cases should handle single criterion execution","status":"passed","title":"should handle single criterion execution"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Error Handling and Edge Cases"],"duration":0,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Error Handling and Edge Cases should handle unknown criteria gracefully","status":"passed","title":"should handle unknown criteria gracefully"},{"ancestorTitles":["ValidationDependencyManager - Comprehensive Unit Tests","Error Handling and Edge Cases"],"duration":1,"failureMessages":[],"fullName":"ValidationDependencyManager - Comprehensive Unit Tests Error Handling and Edge Cases should maintain execution history limits","status":"passed","title":"should maintain execution history limits"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["*.js","lib/**/*.js","development/essentials/*.js","scripts/**/*.js","!test/**","!coverage/**","!node_modules/**","!.node-modules-backup/**","!jest.config.js","!eslint.config.js","!babel.config.js","!development/performance-analysis/**","!development/reports/**","!development/docs/**","!development/temp-scripts/**","!development/backups/**","!**/node_modules/**","!**/dist/**","!**/build/**","!**/*.config.js","!**/*.min.js"],"coverageDirectory":"/Users/jeremyparker/infinite-continue-stop-hook/coverage","coverageProvider":"v8","coverageReporters":["text","text-summary","html","json","json-summary","lcov","clover"],"coverageThreshold":{"global":{"branches":75,"functions":80,"lines":80,"statements":80},"./taskmanager-api.js":{"branches":70,"functions":75,"lines":75,"statements":75},"./lib/":{"branches":80,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":["test/unit/validation-dependency-manager.test.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/test/unit/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/test/integration/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":45000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/test/e2e/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":60000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"}],"reporters":[["default",{}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"hideIcon":false,"pageTitle":"TaskManager Test Coverage Report","includeFailureMsg":true,"includeSuiteFailure":true,"customInfos":[{"title":"CI/CD Pipeline","value":"🏠 Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}]}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-junit/index.js",{"outputDirectory":"./coverage/reports","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true,"addFileAttribute":true,"includeConsoleOutput":true,"includeShortConsoleOutput":false,"suiteNameTemplate":"{filepath}","testCasePropertiesDirectory":"./coverage/reports/test-case-properties"}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-json-reporter.js",{"outputPath":"./coverage/reports/test-results.json","includeTestCases":true,"includeAssertionResults":true,"includeConsoleOutput":true}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-cicd-reporter.js",{"outputPath":"./coverage/reports/ci-cd-results.json","includeGitInfo":true,"includeEnvironmentInfo":true,"includeTimingData":true}]],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook","runInBand":false,"runTestsByPath":false,"seed":1483928666,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["test/unit/validation-dependency-manager.test.js"],"type":"TestPathPatterns"},"testSequencer":"/Users/jeremyparker/infinite-continue-stop-hook/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1758968967112,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"pageTitle":"TaskManager Test Coverage Report","hideIcon":false,"customInfos":[{"title":"CI/CD Pipeline","value":"🏠 Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}],"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})