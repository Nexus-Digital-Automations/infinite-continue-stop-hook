window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":41,"numPassedTestSuites":0,"numPassedTests":10,"numPendingTestSuites":17,"numPendingTests":346,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":18,"numTotalTests":397,"startTime":1758922161173,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":9,"numTodoTests":0,"perfStats":{"end":1758922161491,"loadTestEnvironmentEnd":1758922161366,"loadTestEnvironmentStart":1758922161315,"runtime":125,"setupAfterEnvEnd":1758922161485,"setupAfterEnvStart":1758922161461,"setupFilesEnd":1758922161366,"setupFilesStart":1758922161366,"slow":false,"start":1758922161366},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/stop-hook-integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Stop Hook Integration E2E","Basic Stop Hook Functionality"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Basic Stop Hook Functionality Agent stop authorization workflow","status":"pending","title":"Agent stop authorization workflow"},{"ancestorTitles":["Stop Hook Integration E2E","Basic Stop Hook Functionality"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Basic Stop Hook Functionality Stop hook with feature operations integration","status":"pending","title":"Stop hook with feature operations integration"},{"ancestorTitles":["Stop Hook Integration E2E","Infinite Continue Mode"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Infinite Continue Mode Infinite continue loop with controlled termination","status":"pending","title":"Infinite continue loop with controlled termination"},{"ancestorTitles":["Stop Hook Integration E2E","Infinite Continue Mode"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Infinite Continue Mode Multiple concurrent infinite continue streams","status":"pending","title":"Multiple concurrent infinite continue streams"},{"ancestorTitles":["Stop Hook Integration E2E","Stop Hook Conditions and Logic"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Stop Hook Conditions and Logic Conditional stop authorization based on system state","status":"pending","title":"Conditional stop authorization based on system state"},{"ancestorTitles":["Stop Hook Integration E2E","Stop Hook Conditions and Logic"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Stop Hook Conditions and Logic Stop hook error recovery scenarios","status":"pending","title":"Stop hook error recovery scenarios"},{"ancestorTitles":["Stop Hook Integration E2E","Advanced Stop Hook Integration"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Advanced Stop Hook Integration Stop hook with feature lifecycle integration","status":"pending","title":"Stop hook with feature lifecycle integration"},{"ancestorTitles":["Stop Hook Integration E2E","Advanced Stop Hook Integration"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Advanced Stop Hook Integration Stop hook performance under load","status":"pending","title":"Stop hook performance under load"},{"ancestorTitles":["Stop Hook Integration E2E","Advanced Stop Hook Integration"],"duration":null,"failureMessages":[],"fullName":"Stop Hook Integration E2E Advanced Stop Hook Integration Stop hook system recovery after failure","status":"pending","title":"Stop hook system recovery after failure"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":19,"numTodoTests":0,"perfStats":{"end":1758922161493,"loadTestEnvironmentEnd":1758922161366,"loadTestEnvironmentStart":1758922161315,"runtime":127,"setupAfterEnvEnd":1758922161485,"setupAfterEnvStart":1758922161467,"setupFilesEnd":1758922161366,"setupFilesStart":1758922161366,"slow":false,"start":1758922161366},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/agent-lifecycle.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should handle single agent initialization process","status":"pending","title":"should handle single agent initialization process"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should handle multiple agent initialization","status":"pending","title":"should handle multiple agent initialization"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should handle concurrent agent initialization","status":"pending","title":"should handle concurrent agent initialization"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Initialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Initialization Workflow should prevent duplicate agent initialization","status":"pending","title":"should prevent duplicate agent initialization"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle agent reinitialization process","status":"pending","title":"should handle agent reinitialization process"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle multiple reinitializations of same agent","status":"pending","title":"should handle multiple reinitializations of same agent"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle reinitialization of non-existent agent","status":"pending","title":"should handle reinitialization of non-existent agent"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Agent Reinitialization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Agent Reinitialization Workflow should handle concurrent reinitializations","status":"pending","title":"should handle concurrent reinitializations"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle agent stop authorization process","status":"pending","title":"should handle agent stop authorization process"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization with different reasons","status":"pending","title":"should handle stop authorization with different reasons"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization without reason","status":"pending","title":"should handle stop authorization without reason"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle stop authorization by non-existent agent","status":"pending","title":"should handle stop authorization by non-existent agent"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Stop Authorization Workflow"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Stop Authorization Workflow should handle multiple stop authorizations","status":"pending","title":"should handle multiple stop authorizations"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Initialization Statistics Tracking"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Initialization Statistics Tracking should track initialization statistics accurately","status":"pending","title":"should track initialization statistics accurately"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Initialization Statistics Tracking"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Initialization Statistics Tracking should maintain statistics persistence across operations","status":"pending","title":"should maintain statistics persistence across operations"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Initialization Statistics Tracking"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Initialization Statistics Tracking should handle time bucket boundaries correctly","status":"pending","title":"should handle time bucket boundaries correctly"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Complete Agent Lifecycle Scenarios"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle complete agent workflow from initialization to stop","status":"pending","title":"should handle complete agent workflow from initialization to stop"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Complete Agent Lifecycle Scenarios"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle multi-agent collaborative workflow","status":"pending","title":"should handle multi-agent collaborative workflow"},{"ancestorTitles":["Agent Lifecycle Integration Tests","Complete Agent Lifecycle Scenarios"],"duration":null,"failureMessages":[],"fullName":"Agent Lifecycle Integration Tests Complete Agent Lifecycle Scenarios should handle agent workflow error recovery","status":"pending","title":"should handle agent workflow error recovery"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":18,"numTodoTests":0,"perfStats":{"end":1758922161496,"loadTestEnvironmentEnd":1758922161366,"loadTestEnvironmentStart":1758922161316,"runtime":130,"setupAfterEnvEnd":1758922161485,"setupAfterEnvStart":1758922161465,"setupFilesEnd":1758922161366,"setupFilesStart":1758922161366,"slow":false,"start":1758922161366},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Example Test with Mock Framework","Mock Framework Functionality"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Mock Framework Functionality should initialize mock manager successfully","status":"pending","title":"should initialize mock manager successfully"},{"ancestorTitles":["Example Test with Mock Framework","Mock Framework Functionality"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Mock Framework Functionality should provide access to sample data","status":"pending","title":"should provide access to sample data"},{"ancestorTitles":["Example Test with Mock Framework","Mock Framework Functionality"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Mock Framework Functionality should generate unique test identifiers","status":"pending","title":"should generate unique test identifiers"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework API Mock Integration should mock agent initialization","status":"pending","title":"should mock agent initialization"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework API Mock Integration should mock feature creation","status":"pending","title":"should mock feature creation"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework API Mock Integration should handle feature validation errors","status":"pending","title":"should handle feature validation errors"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework API Mock Integration should mock feature listing with filters","status":"pending","title":"should mock feature listing with filters"},{"ancestorTitles":["Example Test with Mock Framework","Test Environment Management"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Environment Management should create and manage test environment","status":"pending","title":"should create and manage test environment"},{"ancestorTitles":["Example Test with Mock Framework","Test Environment Management"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Environment Management should read and write features data","status":"pending","title":"should read and write features data"},{"ancestorTitles":["Example Test with Mock Framework","Performance Testing Utilities"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Performance Testing Utilities should measure execution time","status":"pending","title":"should measure execution time"},{"ancestorTitles":["Example Test with Mock Framework","Performance Testing Utilities"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Performance Testing Utilities should measure memory usage","status":"pending","title":"should measure memory usage"},{"ancestorTitles":["Example Test with Mock Framework","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Execution Utilities should handle timeouts","status":"pending","title":"should handle timeouts"},{"ancestorTitles":["Example Test with Mock Framework","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Execution Utilities should retry failed operations","status":"pending","title":"should retry failed operations"},{"ancestorTitles":["Example Test with Mock Framework","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Execution Utilities should execute promises in parallel with concurrency control","status":"pending","title":"should execute promises in parallel with concurrency control"},{"ancestorTitles":["Example Test with Mock Framework","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Data Factory should create consistent test data","status":"pending","title":"should create consistent test data"},{"ancestorTitles":["Example Test with Mock Framework","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Data Factory should create different types of test data","status":"pending","title":"should create different types of test data"},{"ancestorTitles":["Example Test with Mock Framework","Error Handling"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Error Handling should handle API errors gracefully","status":"pending","title":"should handle API errors gracefully"},{"ancestorTitles":["Example Test with Mock Framework","Error Handling"],"duration":null,"failureMessages":[],"fullName":"Example Test with Mock Framework Error Handling should provide meaningful error messages","status":"pending","title":"should provide meaningful error messages"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":7,"numTodoTests":0,"perfStats":{"end":1758922161525,"loadTestEnvironmentEnd":1758922161504,"loadTestEnvironmentStart":1758922161502,"runtime":21,"setupAfterEnvEnd":1758922161520,"setupAfterEnvStart":1758922161519,"setupFilesEnd":1758922161504,"setupFilesStart":1758922161504,"slow":false,"start":1758922161504},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/multi-agent-scenarios.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Multi-Agent Scenarios E2E","Concurrent Feature Operations"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Concurrent Feature Operations Multiple agents suggesting features simultaneously","status":"pending","title":"Multiple agents suggesting features simultaneously"},{"ancestorTitles":["Multi-Agent Scenarios E2E","Concurrent Feature Operations"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Concurrent Feature Operations Concurrent approval/rejection operations","status":"pending","title":"Concurrent approval/rejection operations"},{"ancestorTitles":["Multi-Agent Scenarios E2E","Multi-Agent Coordination"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Multi-Agent Coordination Agent coordination during high-load scenarios","status":"pending","title":"Agent coordination during high-load scenarios"},{"ancestorTitles":["Multi-Agent Scenarios E2E","Multi-Agent Coordination"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Multi-Agent Coordination Agent conflict resolution","status":"pending","title":"Agent conflict resolution"},{"ancestorTitles":["Multi-Agent Scenarios E2E","Stop Hook Multi-Agent Integration"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Stop Hook Multi-Agent Integration Multiple agents with coordinated stop hooks","status":"pending","title":"Multiple agents with coordinated stop hooks"},{"ancestorTitles":["Multi-Agent Scenarios E2E","Stop Hook Multi-Agent Integration"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Stop Hook Multi-Agent Integration Stop hook authorization cascading","status":"pending","title":"Stop hook authorization cascading"},{"ancestorTitles":["Multi-Agent Scenarios E2E","Resource Contention Scenarios"],"duration":null,"failureMessages":[],"fullName":"Multi-Agent Scenarios E2E Resource Contention Scenarios File system contention handling","status":"pending","title":"File system contention handling"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":11,"numTodoTests":0,"perfStats":{"end":1758922161527,"loadTestEnvironmentEnd":1758922161504,"loadTestEnvironmentStart":1758922161501,"runtime":23,"setupAfterEnvEnd":1758922161523,"setupAfterEnvStart":1758922161520,"setupFilesEnd":1758922161504,"setupFilesStart":1758922161504,"slow":false,"start":1758922161504},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/performance-validation.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Performance Validation E2E","API Performance Benchmarks"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E API Performance Benchmarks Feature suggestion performance under load","status":"pending","title":"Feature suggestion performance under load"},{"ancestorTitles":["Performance Validation E2E","API Performance Benchmarks"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E API Performance Benchmarks Feature approval performance benchmarks","status":"pending","title":"Feature approval performance benchmarks"},{"ancestorTitles":["Performance Validation E2E","API Performance Benchmarks"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E API Performance Benchmarks Bulk operation performance validation","status":"pending","title":"Bulk operation performance validation"},{"ancestorTitles":["Performance Validation E2E","Concurrent Load Performance"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Concurrent Load Performance High concurrency performance validation","status":"pending","title":"High concurrency performance validation"},{"ancestorTitles":["Performance Validation E2E","Concurrent Load Performance"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Concurrent Load Performance Resource contention performance impact","status":"pending","title":"Resource contention performance impact"},{"ancestorTitles":["Performance Validation E2E","Stop Hook Performance"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Stop Hook Performance Stop hook response time benchmarks","status":"pending","title":"Stop hook response time benchmarks"},{"ancestorTitles":["Performance Validation E2E","Stop Hook Performance"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Stop Hook Performance Infinite continue performance under load","status":"pending","title":"Infinite continue performance under load"},{"ancestorTitles":["Performance Validation E2E","Scalability Performance"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Scalability Performance Feature storage scalability validation","status":"pending","title":"Feature storage scalability validation"},{"ancestorTitles":["Performance Validation E2E","Scalability Performance"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Scalability Performance Memory usage validation under load","status":"pending","title":"Memory usage validation under load"},{"ancestorTitles":["Performance Validation E2E","Performance Regression Detection"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Performance Regression Detection Baseline performance regression checks","status":"pending","title":"Baseline performance regression checks"},{"ancestorTitles":["Performance Validation E2E","Performance Regression Detection"],"duration":null,"failureMessages":[],"fullName":"Performance Validation E2E Performance Regression Detection End-to-end workflow performance validation","status":"pending","title":"End-to-end workflow performance validation"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":13,"numTodoTests":0,"perfStats":{"end":1758922161532,"loadTestEnvironmentEnd":1758922161502,"loadTestEnvironmentStart":1758922161500,"runtime":30,"setupAfterEnvEnd":1758922161527,"setupAfterEnvStart":1758922161524,"setupFilesEnd":1758922161502,"setupFilesStart":1758922161502,"slow":false,"start":1758922161502},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/api-workflow.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["API Workflow Integration Tests","Complete Feature Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Feature Lifecycle Workflow should execute complete feature lifecycle: suggest → approve → track implementation","status":"pending","title":"should execute complete feature lifecycle: suggest → approve → track implementation"},{"ancestorTitles":["API Workflow Integration Tests","Complete Feature Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Feature Lifecycle Workflow should handle feature rejection workflow","status":"pending","title":"should handle feature rejection workflow"},{"ancestorTitles":["API Workflow Integration Tests","Complete Feature Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Feature Lifecycle Workflow should handle bulk feature approval workflow","status":"pending","title":"should handle bulk feature approval workflow"},{"ancestorTitles":["API Workflow Integration Tests","Complete Agent Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Agent Lifecycle Workflow should execute complete agent lifecycle: initialize → reinitialize → stop authorization","status":"pending","title":"should execute complete agent lifecycle: initialize → reinitialize → stop authorization"},{"ancestorTitles":["API Workflow Integration Tests","Complete Agent Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Complete Agent Lifecycle Workflow should handle multiple concurrent agent operations","status":"pending","title":"should handle multiple concurrent agent operations"},{"ancestorTitles":["API Workflow Integration Tests","Cross-Component Integration"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Cross-Component Integration should handle mixed feature and agent operations","status":"pending","title":"should handle mixed feature and agent operations"},{"ancestorTitles":["API Workflow Integration Tests","Cross-Component Integration"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests Cross-Component Integration should maintain data consistency across multiple operations","status":"pending","title":"should maintain data consistency across multiple operations"},{"ancestorTitles":["API Workflow Integration Tests","API Discovery and Methods"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests API Discovery and Methods should provide comprehensive API documentation","status":"pending","title":"should provide comprehensive API documentation"},{"ancestorTitles":["API Workflow Integration Tests","API Discovery and Methods"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests API Discovery and Methods should list all available API methods","status":"pending","title":"should list all available API methods"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle invalid command gracefully","status":"pending","title":"should handle invalid command gracefully"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle malformed JSON in feature suggestion","status":"pending","title":"should handle malformed JSON in feature suggestion"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle operations on non-existent features","status":"pending","title":"should handle operations on non-existent features"},{"ancestorTitles":["API Workflow Integration Tests","API Error Handling"],"duration":null,"failureMessages":[],"fullName":"API Workflow Integration Tests API Error Handling should handle invalid status transitions","status":"pending","title":"should handle invalid status transitions"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":13,"numTodoTests":0,"perfStats":{"end":1758922161555,"loadTestEnvironmentEnd":1758922161540,"loadTestEnvironmentStart":1758922161538,"runtime":15,"setupAfterEnvEnd":1758922161551,"setupAfterEnvStart":1758922161551,"setupFilesEnd":1758922161540,"setupFilesStart":1758922161540,"slow":false,"start":1758922161540},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/feature-lifecycle.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Suggestion Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Suggestion Workflow should handle complete feature suggestion process","status":"pending","title":"should handle complete feature suggestion process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Suggestion Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Suggestion Workflow should validate feature data requirements","status":"pending","title":"should validate feature data requirements"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Suggestion Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Suggestion Workflow should handle concurrent feature suggestions","status":"pending","title":"should handle concurrent feature suggestions"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Approval Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Approval Workflow should handle individual feature approval process","status":"pending","title":"should handle individual feature approval process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Approval Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Approval Workflow should handle bulk feature approval process","status":"pending","title":"should handle bulk feature approval process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Approval Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Approval Workflow should prevent invalid approval transitions","status":"pending","title":"should prevent invalid approval transitions"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Rejection Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Rejection Workflow should handle feature rejection process","status":"pending","title":"should handle feature rejection process"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Rejection Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Rejection Workflow should prevent operations on rejected features","status":"pending","title":"should prevent operations on rejected features"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Filtering and Search"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Filtering and Search should filter features by status","status":"pending","title":"should filter features by status"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Filtering and Search"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Filtering and Search should filter features by category","status":"pending","title":"should filter features by category"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Feature Filtering and Search"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Feature Filtering and Search should handle combined filters","status":"pending","title":"should handle combined filters"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Complete Lifecycle Scenarios"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Complete Lifecycle Scenarios should handle realistic product development workflow","status":"pending","title":"should handle realistic product development workflow"},{"ancestorTitles":["Feature Lifecycle Integration Tests","Complete Lifecycle Scenarios"],"duration":null,"failureMessages":[],"fullName":"Feature Lifecycle Integration Tests Complete Lifecycle Scenarios should maintain data integrity throughout complex workflows","status":"pending","title":"should maintain data integrity throughout complex workflows"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":14,"numTodoTests":0,"perfStats":{"end":1758922161555,"loadTestEnvironmentEnd":1758922161528,"loadTestEnvironmentStart":1758922161526,"runtime":27,"setupAfterEnvEnd":1758922161548,"setupAfterEnvStart":1758922161545,"setupFilesEnd":1758922161528,"setupFilesStart":1758922161528,"slow":false,"start":1758922161528},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/stress-and-recovery.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Concurrent Operations Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should handle massive concurrent feature suggestions","status":"pending","title":"should handle massive concurrent feature suggestions"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Concurrent Operations Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should handle mixed concurrent operations without conflicts","status":"pending","title":"should handle mixed concurrent operations without conflicts"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Concurrent Operations Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should prevent race conditions in bulk operations","status":"pending","title":"should prevent race conditions in bulk operations"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Concurrent Operations Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Concurrent Operations Testing should handle concurrent agent operations safely","status":"pending","title":"should handle concurrent agent operations safely"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Error Recovery Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Error Recovery Testing should recover from corrupted FEATURES.json file","status":"pending","title":"should recover from corrupted FEATURES.json file"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Error Recovery Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Error Recovery Testing should handle sudden file deletion during operations","status":"pending","title":"should handle sudden file deletion during operations"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Error Recovery Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Error Recovery Testing should handle invalid JSON structure gracefully","status":"pending","title":"should handle invalid JSON structure gracefully"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Error Recovery Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Error Recovery Testing should handle partial write failures and data corruption","status":"pending","title":"should handle partial write failures and data corruption"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Error Recovery Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Error Recovery Testing should maintain consistency during system interruption simulation","status":"pending","title":"should maintain consistency during system interruption simulation"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Performance Stress Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Performance Stress Testing should handle large dataset operations efficiently","status":"pending","title":"should handle large dataset operations efficiently"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Performance Stress Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Performance Stress Testing should handle rapid sequential operations without degradation","status":"pending","title":"should handle rapid sequential operations without degradation"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Performance Stress Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Performance Stress Testing should maintain performance under mixed load patterns","status":"pending","title":"should maintain performance under mixed load patterns"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Resource Cleanup and Memory Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Resource Cleanup and Memory Testing should properly clean up resources after operations","status":"pending","title":"should properly clean up resources after operations"},{"ancestorTitles":["Stress Testing and Error Recovery Integration Tests","Resource Cleanup and Memory Testing"],"duration":null,"failureMessages":[],"fullName":"Stress Testing and Error Recovery Integration Tests Resource Cleanup and Memory Testing should handle cleanup after error scenarios","status":"pending","title":"should handle cleanup after error scenarios"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":13,"numTodoTests":0,"perfStats":{"end":1758922161570,"loadTestEnvironmentEnd":1758922161558,"loadTestEnvironmentStart":1758922161556,"runtime":12,"setupAfterEnvEnd":1758922161567,"setupAfterEnvStart":1758922161567,"setupFilesEnd":1758922161558,"setupFilesStart":1758922161558,"slow":false,"start":1758922161558},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/file-operations.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["File Operations Integration Tests","File Persistence and Data Integrity"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Persistence and Data Integrity should maintain FEATURES.json structure integrity across operations","status":"pending","title":"should maintain FEATURES.json structure integrity across operations"},{"ancestorTitles":["File Operations Integration Tests","File Persistence and Data Integrity"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Persistence and Data Integrity should handle concurrent file operations safely","status":"pending","title":"should handle concurrent file operations safely"},{"ancestorTitles":["File Operations Integration Tests","File Persistence and Data Integrity"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Persistence and Data Integrity should preserve file permissions and ownership","status":"pending","title":"should preserve file permissions and ownership"},{"ancestorTitles":["File Operations Integration Tests","Backup and Recovery Scenarios"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests Backup and Recovery Scenarios should handle missing FEATURES.json file gracefully","status":"pending","title":"should handle missing FEATURES.json file gracefully"},{"ancestorTitles":["File Operations Integration Tests","Backup and Recovery Scenarios"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests Backup and Recovery Scenarios should handle corrupted FEATURES.json file","status":"pending","title":"should handle corrupted FEATURES.json file"},{"ancestorTitles":["File Operations Integration Tests","Backup and Recovery Scenarios"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests Backup and Recovery Scenarios should handle disk space and I/O errors gracefully","status":"pending","title":"should handle disk space and I/O errors gracefully"},{"ancestorTitles":["File Operations Integration Tests","File Locking and Race Conditions"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Locking and Race Conditions should handle rapid sequential operations correctly","status":"pending","title":"should handle rapid sequential operations correctly"},{"ancestorTitles":["File Operations Integration Tests","File Locking and Race Conditions"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Locking and Race Conditions should handle mixed read/write operations correctly","status":"pending","title":"should handle mixed read/write operations correctly"},{"ancestorTitles":["File Operations Integration Tests","Data Migration and Upgrades"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests Data Migration and Upgrades should handle missing metadata fields gracefully","status":"pending","title":"should handle missing metadata fields gracefully"},{"ancestorTitles":["File Operations Integration Tests","Data Migration and Upgrades"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests Data Migration and Upgrades should handle missing workflow_config gracefully","status":"pending","title":"should handle missing workflow_config gracefully"},{"ancestorTitles":["File Operations Integration Tests","Data Migration and Upgrades"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests Data Migration and Upgrades should preserve existing data during upgrades","status":"pending","title":"should preserve existing data during upgrades"},{"ancestorTitles":["File Operations Integration Tests","File Validation and Error Recovery"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Validation and Error Recovery should validate file structure before operations","status":"pending","title":"should validate file structure before operations"},{"ancestorTitles":["File Operations Integration Tests","File Validation and Error Recovery"],"duration":null,"failureMessages":[],"fullName":"File Operations Integration Tests File Validation and Error Recovery should handle file read/write permissions errors","status":"pending","title":"should handle file read/write permissions errors"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":20,"numTodoTests":0,"perfStats":{"end":1758922161571,"loadTestEnvironmentEnd":1758922161558,"loadTestEnvironmentStart":1758922161556,"runtime":13,"setupAfterEnvEnd":1758922161567,"setupAfterEnvStart":1758922161567,"setupFilesEnd":1758922161558,"setupFilesStart":1758922161558,"slow":false,"start":1758922161558},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/integration/cli-commands.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle project-root parameter correctly","status":"pending","title":"should handle project-root parameter correctly"},{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle missing arguments gracefully","status":"pending","title":"should handle missing arguments gracefully"},{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle malformed JSON arguments","status":"pending","title":"should handle malformed JSON arguments"},{"ancestorTitles":["CLI Commands Integration Tests","Command Argument Parsing"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Command Argument Parsing should handle unknown commands","status":"pending","title":"should handle unknown commands"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute guide command successfully","status":"pending","title":"should execute guide command successfully"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute methods command successfully","status":"pending","title":"should execute methods command successfully"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute feature management commands","status":"pending","title":"should execute feature management commands"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute agent management commands","status":"pending","title":"should execute agent management commands"},{"ancestorTitles":["CLI Commands Integration Tests","Core Command Execution"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Core Command Execution should execute bulk operations","status":"pending","title":"should execute bulk operations"},{"ancestorTitles":["CLI Commands Integration Tests","Output Formatting and Validation"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Output Formatting and Validation should produce valid JSON output for all commands","status":"pending","title":"should produce valid JSON output for all commands"},{"ancestorTitles":["CLI Commands Integration Tests","Output Formatting and Validation"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Output Formatting and Validation should include proper error information in failed commands","status":"pending","title":"should include proper error information in failed commands"},{"ancestorTitles":["CLI Commands Integration Tests","Output Formatting and Validation"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Output Formatting and Validation should handle output with special characters correctly","status":"pending","title":"should handle output with special characters correctly"},{"ancestorTitles":["CLI Commands Integration Tests","Timeout and Performance"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Timeout and Performance should complete basic commands within reasonable time","status":"pending","title":"should complete basic commands within reasonable time"},{"ancestorTitles":["CLI Commands Integration Tests","Timeout and Performance"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Timeout and Performance should handle timeout scenarios gracefully","status":"pending","title":"should handle timeout scenarios gracefully"},{"ancestorTitles":["CLI Commands Integration Tests","Timeout and Performance"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Timeout and Performance should handle multiple rapid CLI invocations","status":"pending","title":"should handle multiple rapid CLI invocations"},{"ancestorTitles":["CLI Commands Integration Tests","CLI Workflow Integration"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests CLI Workflow Integration should execute complete feature workflow via CLI","status":"pending","title":"should execute complete feature workflow via CLI"},{"ancestorTitles":["CLI Commands Integration Tests","CLI Workflow Integration"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests CLI Workflow Integration should execute complete agent workflow via CLI","status":"pending","title":"should execute complete agent workflow via CLI"},{"ancestorTitles":["CLI Commands Integration Tests","Error Recovery and Edge Cases"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Error Recovery and Edge Cases should handle corrupted project directory gracefully","status":"pending","title":"should handle corrupted project directory gracefully"},{"ancestorTitles":["CLI Commands Integration Tests","Error Recovery and Edge Cases"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Error Recovery and Edge Cases should handle invalid project root paths","status":"pending","title":"should handle invalid project root paths"},{"ancestorTitles":["CLI Commands Integration Tests","Error Recovery and Edge Cases"],"duration":null,"failureMessages":[],"fullName":"CLI Commands Integration Tests Error Recovery and Edge Cases should handle concurrent CLI executions safely","status":"pending","title":"should handle concurrent CLI executions safely"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":19,"numTodoTests":0,"perfStats":{"end":1758922161593,"loadTestEnvironmentEnd":1758922161574,"loadTestEnvironmentStart":1758922161572,"runtime":19,"setupAfterEnvEnd":1758922161590,"setupAfterEnvStart":1758922161590,"setupFilesEnd":1758922161574,"setupFilesStart":1758922161574,"slow":false,"start":1758922161574},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Feature Management System Unit Tests","Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Agent Initialization should initialize agent successfully","status":"pending","title":"should initialize agent successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Agent Initialization should reinitialize existing agent successfully","status":"pending","title":"should reinitialize existing agent successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Suggestion should create feature suggestion with enhancement category","status":"pending","title":"should create feature suggestion with enhancement category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Suggestion should create feature suggestion with new-feature category","status":"pending","title":"should create feature suggestion with new-feature category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Suggestion should create feature suggestion with bug-fix category","status":"pending","title":"should create feature suggestion with bug-fix category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Suggestion should handle incomplete feature data appropriately","status":"pending","title":"should handle incomplete feature data appropriately"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Suggestion should handle invalid category appropriately","status":"pending","title":"should handle invalid category appropriately"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Listing"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Listing should list all features","status":"pending","title":"should list all features"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Listing"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Listing should filter features by status","status":"pending","title":"should filter features by status"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Listing"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Listing should filter features by category","status":"pending","title":"should filter features by category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Approval Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Approval Workflow should approve feature successfully","status":"pending","title":"should approve feature successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Approval Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Approval Workflow should reject feature successfully","status":"pending","title":"should reject feature successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Approval Workflow"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Approval Workflow should handle non-existent feature appropriately","status":"pending","title":"should handle non-existent feature appropriately"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Statistics"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Statistics should attempt to generate feature statistics","status":"pending","title":"should attempt to generate feature statistics"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Statistics"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Feature Statistics should handle statistics requests gracefully","status":"pending","title":"should handle statistics requests gracefully"},{"ancestorTitles":["Feature Management System Unit Tests","Initialization Statistics"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Initialization Statistics should get initialization statistics","status":"pending","title":"should get initialization statistics"},{"ancestorTitles":["Feature Management System Unit Tests","Initialization Statistics"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests Initialization Statistics should include time bucket statistics","status":"pending","title":"should include time bucket statistics"},{"ancestorTitles":["Feature Management System Unit Tests","API Documentation"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests API Documentation should provide API guide","status":"pending","title":"should provide API guide"},{"ancestorTitles":["Feature Management System Unit Tests","API Documentation"],"duration":null,"failureMessages":[],"fullName":"Feature Management System Unit Tests API Documentation should handle methods request","status":"pending","title":"should handle methods request"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":6,"numTodoTests":0,"perfStats":{"end":1758922161598,"loadTestEnvironmentEnd":1758922161576,"loadTestEnvironmentStart":1758922161574,"runtime":22,"setupAfterEnvEnd":1758922161593,"setupAfterEnvStart":1758922161592,"setupFilesEnd":1758922161576,"setupFilesStart":1758922161576,"slow":false,"start":1758922161576},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/complete-workflows.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Complete System Workflows E2E","Feature Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"Complete System Workflows E2E Feature Lifecycle Workflow Complete feature suggestion to implementation workflow","status":"pending","title":"Complete feature suggestion to implementation workflow"},{"ancestorTitles":["Complete System Workflows E2E","Feature Lifecycle Workflow"],"duration":null,"failureMessages":[],"fullName":"Complete System Workflows E2E Feature Lifecycle Workflow Feature rejection workflow","status":"pending","title":"Feature rejection workflow"},{"ancestorTitles":["Complete System Workflows E2E","System Integration Workflow"],"duration":null,"failureMessages":[],"fullName":"Complete System Workflows E2E System Integration Workflow Complete system startup to shutdown workflow","status":"pending","title":"Complete system startup to shutdown workflow"},{"ancestorTitles":["Complete System Workflows E2E","System Integration Workflow"],"duration":null,"failureMessages":[],"fullName":"Complete System Workflows E2E System Integration Workflow Error recovery workflow","status":"pending","title":"Error recovery workflow"},{"ancestorTitles":["Complete System Workflows E2E","User Experience Workflow"],"duration":null,"failureMessages":[],"fullName":"Complete System Workflows E2E User Experience Workflow Complete user journey from discovery to completion","status":"pending","title":"Complete user journey from discovery to completion"},{"ancestorTitles":["Complete System Workflows E2E","User Experience Workflow"],"duration":null,"failureMessages":[],"fullName":"Complete System Workflows E2E User Experience Workflow Multi-stakeholder approval workflow","status":"pending","title":"Multi-stakeholder approval workflow"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":8,"numTodoTests":0,"perfStats":{"end":1758922161608,"loadTestEnvironmentEnd":1758922161597,"loadTestEnvironmentStart":1758922161595,"runtime":11,"setupAfterEnvEnd":1758922161606,"setupAfterEnvStart":1758922161605,"setupFilesEnd":1758922161597,"setupFilesStart":1758922161597,"slow":false,"start":1758922161597},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/feature-management-e2e.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Feature Management System E2E","Feature Suggestion Workflows"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Feature Suggestion Workflows Comprehensive feature suggestion with all categories","status":"pending","title":"Comprehensive feature suggestion with all categories"},{"ancestorTitles":["Feature Management System E2E","Feature Suggestion Workflows"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Feature Suggestion Workflows Feature suggestion validation and error handling","status":"pending","title":"Feature suggestion validation and error handling"},{"ancestorTitles":["Feature Management System E2E","Feature Approval Workflows"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Feature Approval Workflows Comprehensive approval process with audit trail","status":"pending","title":"Comprehensive approval process with audit trail"},{"ancestorTitles":["Feature Management System E2E","Feature Approval Workflows"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Feature Approval Workflows Bulk approval operations","status":"pending","title":"Bulk approval operations"},{"ancestorTitles":["Feature Management System E2E","Feature Status Management"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Feature Status Management Status transition validation and constraints","status":"pending","title":"Status transition validation and constraints"},{"ancestorTitles":["Feature Management System E2E","Feature Status Management"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Feature Status Management Feature listing and filtering","status":"pending","title":"Feature listing and filtering"},{"ancestorTitles":["Feature Management System E2E","Advanced Feature Management"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Advanced Feature Management Feature search and analytics","status":"pending","title":"Feature search and analytics"},{"ancestorTitles":["Feature Management System E2E","Advanced Feature Management"],"duration":null,"failureMessages":[],"fullName":"Feature Management System E2E Advanced Feature Management Feature export and import workflows","status":"pending","title":"Feature export and import workflows"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":39,"numTodoTests":0,"perfStats":{"end":1758922161751,"loadTestEnvironmentEnd":1758922161366,"loadTestEnvironmentStart":1758922161315,"runtime":385,"setupAfterEnvEnd":1758922161485,"setupAfterEnvStart":1758922161462,"setupFilesEnd":1758922161366,"setupFilesStart":1758922161366,"slow":false,"start":1758922161366},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify morning time bucket (07:00-11:59)","status":"pending","title":"should identify morning time bucket (07:00-11:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify afternoon time bucket (12:00-16:59)","status":"pending","title":"should identify afternoon time bucket (12:00-16:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify evening time bucket (17:00-21:59)","status":"pending","title":"should identify evening time bucket (17:00-21:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify late night time bucket (22:00-02:59)","status":"pending","title":"should identify late night time bucket (22:00-02:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify early morning time bucket (03:00-06:59)","status":"pending","title":"should identify early morning time bucket (03:00-06:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should handle time bucket edge cases","status":"pending","title":"should handle time bucket edge cases"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should create initialization stats structure when missing","status":"pending","title":"should create initialization stats structure when missing"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should create all required time buckets","status":"pending","title":"should create all required time buckets"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should preserve existing stats structure","status":"pending","title":"should preserve existing stats structure"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should create metadata if completely missing","status":"pending","title":"should create metadata if completely missing"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should track initialization in correct time bucket","status":"pending","title":"should track initialization in correct time bucket"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should track reinitialization in correct time bucket","status":"pending","title":"should track reinitialization in correct time bucket"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should accumulate multiple operations in same time bucket","status":"pending","title":"should accumulate multiple operations in same time bucket"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should distribute operations across different time buckets","status":"pending","title":"should distribute operations across different time buckets"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should update last_updated timestamp","status":"pending","title":"should update last_updated timestamp"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Integration with Agent Operations"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Integration with Agent Operations should track initialization through initializeAgent","status":"pending","title":"should track initialization through initializeAgent"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Integration with Agent Operations"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Time Bucket Tracking Integration with Agent Operations should track reinitialization through reinitializeAgent","status":"pending","title":"should track reinitialization through reinitializeAgent"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should detect day change and reset buckets","status":"pending","title":"should detect day change and reset buckets"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should preserve historical data when resetting","status":"pending","title":"should preserve historical data when resetting"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should not reset within the same day","status":"pending","title":"should not reset within the same day"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should skip reset if no activity to preserve","status":"pending","title":"should skip reset if no activity to preserve"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should maintain rolling 30-day history","status":"pending","title":"should maintain rolling 30-day history"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should retrieve initialization statistics successfully","status":"pending","title":"should retrieve initialization statistics successfully"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should format time buckets correctly","status":"pending","title":"should format time buckets correctly"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should calculate today totals correctly","status":"pending","title":"should calculate today totals correctly"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should include recent activity history","status":"pending","title":"should include recent activity history"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should handle missing initialization stats gracefully","status":"pending","title":"should handle missing initialization stats gracefully"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Real-time Statistics Updates"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Real-time Statistics Updates should reflect real-time updates from agent operations","status":"pending","title":"should reflect real-time updates from agent operations"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Real-time Statistics Updates"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Statistics Retrieval Real-time Statistics Updates should update across time bucket changes","status":"pending","title":"should update across time bucket changes"},{"ancestorTitles":["Initialization Statistics","Error Handling","File System Errors"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Error Handling File System Errors should handle file read errors in getInitializationStats","status":"pending","title":"should handle file read errors in getInitializationStats"},{"ancestorTitles":["Initialization Statistics","Error Handling","File System Errors"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Error Handling File System Errors should handle file write errors in _updateTimeBucketStats","status":"pending","title":"should handle file write errors in _updateTimeBucketStats"},{"ancestorTitles":["Initialization Statistics","Error Handling","File System Errors"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Error Handling File System Errors should handle corrupted features file","status":"pending","title":"should handle corrupted features file"},{"ancestorTitles":["Initialization Statistics","Error Handling","Data Recovery"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Error Handling Data Recovery should recover from missing metadata structure","status":"pending","title":"should recover from missing metadata structure"},{"ancestorTitles":["Initialization Statistics","Error Handling","Data Recovery"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Error Handling Data Recovery should handle malformed time bucket data","status":"pending","title":"should handle malformed time bucket data"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Time Boundary Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle midnight crossover correctly","status":"pending","title":"should handle midnight crossover correctly"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Time Boundary Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle daylight saving time transitions","status":"pending","title":"should handle daylight saving time transitions"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Time Boundary Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle year boundary crossover","status":"pending","title":"should handle year boundary crossover"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Large Data Sets"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Edge Cases and Boundaries Large Data Sets should handle large initialization counts","status":"pending","title":"should handle large initialization counts"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Large Data Sets"],"duration":null,"failureMessages":[],"fullName":"Initialization Statistics Edge Cases and Boundaries Large Data Sets should handle extensive daily history","status":"pending","title":"should handle extensive daily history"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":26,"numTodoTests":0,"perfStats":{"end":1758922161788,"loadTestEnvironmentEnd":1758922161764,"loadTestEnvironmentStart":1758922161761,"runtime":24,"setupAfterEnvEnd":1758922161773,"setupAfterEnvStart":1758922161773,"setupFilesEnd":1758922161764,"setupFilesStart":1758922161764,"slow":false,"start":1758922161764},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/basic-infrastructure.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique agent IDs","status":"pending","title":"should generate unique agent IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique project IDs","status":"pending","title":"should generate unique project IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique feature IDs","status":"pending","title":"should generate unique feature IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique task IDs","status":"pending","title":"should generate unique task IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid feature data","status":"pending","title":"should create valid feature data"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create feature data with overrides","status":"pending","title":"should create feature data with overrides"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid user data","status":"pending","title":"should create valid user data"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid project data","status":"pending","title":"should create valid project data"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid task data","status":"pending","title":"should create valid task data"},{"ancestorTitles":["Basic Testing Infrastructure","Sample Data Fixtures"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Sample Data Fixtures should provide valid sample features","status":"pending","title":"should provide valid sample features"},{"ancestorTitles":["Basic Testing Infrastructure","Sample Data Fixtures"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Sample Data Fixtures should provide valid sample agents","status":"pending","title":"should provide valid sample agents"},{"ancestorTitles":["Basic Testing Infrastructure","Sample Data Fixtures"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Sample Data Fixtures should provide valid test configurations","status":"pending","title":"should provide valid test configurations"},{"ancestorTitles":["Basic Testing Infrastructure","Performance Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Performance Utilities should measure execution time accurately","status":"pending","title":"should measure execution time accurately"},{"ancestorTitles":["Basic Testing Infrastructure","Performance Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Performance Utilities should measure memory usage","status":"pending","title":"should measure memory usage"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should enforce timeouts","status":"pending","title":"should enforce timeouts"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should allow operations within timeout","status":"pending","title":"should allow operations within timeout"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should retry failed operations","status":"pending","title":"should retry failed operations"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should fail after max retries","status":"pending","title":"should fail after max retries"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should execute promises in parallel with concurrency control","status":"pending","title":"should execute promises in parallel with concurrency control"},{"ancestorTitles":["Basic Testing Infrastructure","Test Logger"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Logger should provide logging methods","status":"pending","title":"should provide logging methods"},{"ancestorTitles":["Basic Testing Infrastructure","Test Logger"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Logger should log with data objects","status":"pending","title":"should log with data objects"},{"ancestorTitles":["Basic Testing Infrastructure","Data Validation"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Data Validation should validate feature data structure","status":"pending","title":"should validate feature data structure"},{"ancestorTitles":["Basic Testing Infrastructure","Data Validation"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Data Validation should validate agent data structure","status":"pending","title":"should validate agent data structure"},{"ancestorTitles":["Basic Testing Infrastructure","Error Handling"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Error Handling should handle async errors gracefully","status":"pending","title":"should handle async errors gracefully"},{"ancestorTitles":["Basic Testing Infrastructure","Error Handling"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Error Handling should handle synchronous errors","status":"pending","title":"should handle synchronous errors"},{"ancestorTitles":["Basic Testing Infrastructure","Error Handling"],"duration":null,"failureMessages":[],"fullName":"Basic Testing Infrastructure Error Handling should handle undefined/null values","status":"pending","title":"should handle undefined/null values"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":75,"numTodoTests":0,"perfStats":{"end":1758922161818,"loadTestEnvironmentEnd":1758922161530,"loadTestEnvironmentStart":1758922161529,"runtime":288,"setupAfterEnvEnd":1758922161549,"setupAfterEnvStart":1758922161547,"setupFilesEnd":1758922161530,"setupFilesStart":1758922161530,"slow":false,"start":1758922161530},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/taskmanager-api.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["FeatureManagerAPI","Constructor and Initialization"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Constructor and Initialization should initialize with correct default values","status":"pending","title":"should initialize with correct default values"},{"ancestorTitles":["FeatureManagerAPI","Constructor and Initialization"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Constructor and Initialization should set features path correctly","status":"pending","title":"should set features path correctly"},{"ancestorTitles":["FeatureManagerAPI","Constructor and Initialization"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Constructor and Initialization should have withTimeout method for operation timeouts","status":"pending","title":"should have withTimeout method for operation timeouts"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_ensureFeaturesFile"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _ensureFeaturesFile should create FEATURES.json if it does not exist","status":"pending","title":"should create FEATURES.json if it does not exist"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_ensureFeaturesFile"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _ensureFeaturesFile should not overwrite existing FEATURES.json","status":"pending","title":"should not overwrite existing FEATURES.json"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should load existing features file successfully","status":"pending","title":"should load existing features file successfully"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should create file and return default structure if file does not exist","status":"pending","title":"should create file and return default structure if file does not exist"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should handle JSON parsing errors gracefully","status":"pending","title":"should handle JSON parsing errors gracefully"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should handle file read errors","status":"pending","title":"should handle file read errors"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_saveFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _saveFeatures should save features to file successfully","status":"pending","title":"should save features to file successfully"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_saveFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _saveFeatures should handle file write errors","status":"pending","title":"should handle file write errors"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should validate correct feature data successfully","status":"pending","title":"should validate correct feature data successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject null or undefined feature data","status":"pending","title":"should reject null or undefined feature data"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject missing required fields","status":"pending","title":"should reject missing required fields"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject empty required fields","status":"pending","title":"should reject empty required fields"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject invalid category","status":"pending","title":"should reject invalid category"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject title length violations","status":"pending","title":"should reject title length violations"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject description length violations","status":"pending","title":"should reject description length violations"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject business value length violations","status":"pending","title":"should reject business value length violations"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_generateFeatureId"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _generateFeatureId should generate unique feature IDs","status":"pending","title":"should generate unique feature IDs"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_generateFeatureId"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _generateFeatureId should generate IDs with correct format","status":"pending","title":"should generate IDs with correct format"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should create new feature suggestion successfully","status":"pending","title":"should create new feature suggestion successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should handle validation errors gracefully","status":"pending","title":"should handle validation errors gracefully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should handle file system errors during feature creation","status":"pending","title":"should handle file system errors during feature creation"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should update metadata correctly","status":"pending","title":"should update metadata correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should approve suggested feature successfully","status":"pending","title":"should approve suggested feature successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should approve feature with default approval data","status":"pending","title":"should approve feature with default approval data"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should reject approval of non-existent feature","status":"pending","title":"should reject approval of non-existent feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should reject approval of non-suggested feature","status":"pending","title":"should reject approval of non-suggested feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should update approval history correctly","status":"pending","title":"should update approval history correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should handle missing metadata gracefully","status":"pending","title":"should handle missing metadata gracefully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject suggested feature successfully","status":"pending","title":"should reject suggested feature successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject feature with default rejection data","status":"pending","title":"should reject feature with default rejection data"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject rejection of non-existent feature","status":"pending","title":"should reject rejection of non-existent feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject rejection of non-suggested feature","status":"pending","title":"should reject rejection of non-suggested feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should update approval history correctly","status":"pending","title":"should update approval history correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should approve multiple features successfully","status":"pending","title":"should approve multiple features successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should handle mixed success and failure scenarios","status":"pending","title":"should handle mixed success and failure scenarios"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should handle non-existent feature IDs","status":"pending","title":"should handle non-existent feature IDs"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should handle empty feature IDs array","status":"pending","title":"should handle empty feature IDs array"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should list all features without filter","status":"pending","title":"should list all features without filter"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should filter features by status","status":"pending","title":"should filter features by status"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should filter features by category","status":"pending","title":"should filter features by category"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should return empty array for non-matching filters","status":"pending","title":"should return empty array for non-matching filters"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should handle file system errors","status":"pending","title":"should handle file system errors"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","getFeatureStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management getFeatureStats should calculate feature statistics correctly","status":"pending","title":"should calculate feature statistics correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","getFeatureStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management getFeatureStats should include recent activity from approval history","status":"pending","title":"should include recent activity from approval history"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","getFeatureStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management getFeatureStats should handle empty features file","status":"pending","title":"should handle empty features file"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should resolve normally for quick operations","status":"pending","title":"should resolve normally for quick operations"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should timeout slow operations with custom timeout","status":"pending","title":"should timeout slow operations with custom timeout"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should use default timeout when not specified","status":"pending","title":"should use default timeout when not specified"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should handle promise rejections correctly","status":"pending","title":"should handle promise rejections correctly"},{"ancestorTitles":["FeatureManagerAPI","Error Handling"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Error Handling should handle corrupted FEATURES.json gracefully","status":"pending","title":"should handle corrupted FEATURES.json gracefully"},{"ancestorTitles":["FeatureManagerAPI","Error Handling"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Error Handling should handle file permission errors","status":"pending","title":"should handle file permission errors"},{"ancestorTitles":["FeatureManagerAPI","Error Handling"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Error Handling should handle unexpected errors in operations","status":"pending","title":"should handle unexpected errors in operations"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getApiMethods"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getApiMethods should return API methods information","status":"pending","title":"should return API methods information"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getApiMethods"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getApiMethods should include CLI mapping for all commands","status":"pending","title":"should include CLI mapping for all commands"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should return comprehensive guide with timeout","status":"pending","title":"should return comprehensive guide with timeout"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should include feature workflow information","status":"pending","title":"should include feature workflow information"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should include usage examples","status":"pending","title":"should include usage examples"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should handle timeout errors gracefully","status":"pending","title":"should handle timeout errors gracefully"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","_getFallbackGuide"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods _getFallbackGuide should return fallback guide for different contexts","status":"pending","title":"should return fallback guide for different contexts"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","_getFallbackGuide"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods _getFallbackGuide should include essential commands in fallback guide","status":"pending","title":"should include essential commands in fallback guide"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","initializeAgent"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management initializeAgent should initialize new agent successfully","status":"pending","title":"should initialize new agent successfully"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","initializeAgent"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management initializeAgent should handle agent initialization errors","status":"pending","title":"should handle agent initialization errors"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","reinitializeAgent"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management reinitializeAgent should reinitialize existing agent","status":"pending","title":"should reinitialize existing agent"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","reinitializeAgent"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management reinitializeAgent should handle reinitialization errors","status":"pending","title":"should handle reinitialization errors"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","authorizeStop"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management authorizeStop should authorize stop with reason","status":"pending","title":"should authorize stop with reason"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","authorizeStop"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management authorizeStop should authorize stop with default reason","status":"pending","title":"should authorize stop with default reason"},{"ancestorTitles":["FeatureManagerAPI","Agent Management","authorizeStop"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Agent Management authorizeStop should handle stop authorization errors","status":"pending","title":"should handle stop authorization errors"},{"ancestorTitles":["FeatureManagerAPI","Initialization Statistics","getInitializationStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Initialization Statistics getInitializationStats should return initialization statistics","status":"pending","title":"should return initialization statistics"},{"ancestorTitles":["FeatureManagerAPI","Initialization Statistics","getInitializationStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Initialization Statistics getInitializationStats should handle stats retrieval errors","status":"pending","title":"should handle stats retrieval errors"},{"ancestorTitles":["FeatureManagerAPI","Initialization Statistics","getInitializationStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Initialization Statistics getInitializationStats should include current time bucket","status":"pending","title":"should include current time bucket"},{"ancestorTitles":["FeatureManagerAPI","Initialization Statistics","getInitializationStats"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Initialization Statistics getInitializationStats should track initialization counts","status":"pending","title":"should track initialization counts"},{"ancestorTitles":["FeatureManagerAPI","Cleanup"],"duration":null,"failureMessages":[],"fullName":"FeatureManagerAPI Cleanup should cleanup resources","status":"pending","title":"should cleanup resources"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":36,"numTodoTests":0,"perfStats":{"end":1758922161861,"loadTestEnvironmentEnd":1758922161611,"loadTestEnvironmentStart":1758922161610,"runtime":250,"setupAfterEnvEnd":1758922161624,"setupAfterEnvStart":1758922161624,"setupFilesEnd":1758922161611,"setupFilesStart":1758922161611,"slow":false,"start":1758922161611},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should initialize new agent successfully","status":"pending","title":"should initialize new agent successfully"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should generate unique session IDs for different agents","status":"pending","title":"should generate unique session IDs for different agents"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should update features file with agent data","status":"pending","title":"should update features file with agent data"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should track initialization in time bucket stats","status":"pending","title":"should track initialization in time bucket stats"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should handle agent initialization with special characters in ID","status":"pending","title":"should handle agent initialization with special characters in ID"},{"ancestorTitles":["Agent Management","Agent Initialization","Agent Session Management"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Agent Session Management should create agent entry in features file","status":"pending","title":"should create agent entry in features file"},{"ancestorTitles":["Agent Management","Agent Initialization","Agent Session Management"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Agent Session Management should overwrite existing agent data on new initialization","status":"pending","title":"should overwrite existing agent data on new initialization"},{"ancestorTitles":["Agent Management","Agent Initialization","Agent Session Management"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Agent Session Management should initialize agents section if it does not exist","status":"pending","title":"should initialize agents section if it does not exist"},{"ancestorTitles":["Agent Management","Agent Initialization","Initialization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Initialization Error Handling should handle file write errors during initialization","status":"pending","title":"should handle file write errors during initialization"},{"ancestorTitles":["Agent Management","Agent Initialization","Initialization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Initialization Error Handling should handle corrupted features file during initialization","status":"pending","title":"should handle corrupted features file during initialization"},{"ancestorTitles":["Agent Management","Agent Initialization","Initialization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Initialization Initialization Error Handling should handle empty agent ID gracefully","status":"pending","title":"should handle empty agent ID gracefully"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should reinitialize existing agent successfully","status":"pending","title":"should reinitialize existing agent successfully"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should preserve agent history during reinitialization","status":"pending","title":"should preserve agent history during reinitialization"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should update timestamps on reinitialization","status":"pending","title":"should update timestamps on reinitialization"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should track reinitialization in time bucket stats","status":"pending","title":"should track reinitialization in time bucket stats"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Session Management"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Reinitialization Session Management should accumulate previous sessions across multiple reinitializations","status":"pending","title":"should accumulate previous sessions across multiple reinitializations"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Session Management"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Reinitialization Session Management should reinitialize non-existent agent as new agent","status":"pending","title":"should reinitialize non-existent agent as new agent"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Session Management"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Reinitialization Session Management should handle agent without previous session data","status":"pending","title":"should handle agent without previous session data"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Reinitialization Error Handling should handle file write errors during reinitialization","status":"pending","title":"should handle file write errors during reinitialization"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Reinitialization Reinitialization Error Handling should handle corrupted features file during reinitialization","status":"pending","title":"should handle corrupted features file during reinitialization"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should authorize stop successfully with reason","status":"pending","title":"should authorize stop successfully with reason"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should authorize stop with default reason when none provided","status":"pending","title":"should authorize stop with default reason when none provided"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should create .stop-allowed flag file","status":"pending","title":"should create .stop-allowed flag file"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should include comprehensive stop data in flag file","status":"pending","title":"should include comprehensive stop data in flag file"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should handle empty agent ID","status":"pending","title":"should handle empty agent ID"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should handle very long reasons","status":"pending","title":"should handle very long reasons"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should handle special characters in agent ID and reason","status":"pending","title":"should handle special characters in agent ID and reason"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should overwrite existing stop flag","status":"pending","title":"should overwrite existing stop flag"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Error Handling should handle file write errors during stop authorization","status":"pending","title":"should handle file write errors during stop authorization"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Error Handling"],"duration":null,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Error Handling should handle file system errors gracefully","status":"pending","title":"should handle file system errors gracefully"},{"ancestorTitles":["Agent Management","Agent Management Integration","Agent Lifecycle Integration"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Management Integration Agent Lifecycle Integration should handle complete agent lifecycle","status":"pending","title":"should handle complete agent lifecycle"},{"ancestorTitles":["Agent Management","Agent Management Integration","Agent Lifecycle Integration"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Management Integration Agent Lifecycle Integration should handle multiple agents with different lifecycles","status":"pending","title":"should handle multiple agents with different lifecycles"},{"ancestorTitles":["Agent Management","Agent Management Integration","Agent Management with Feature Operations"],"duration":null,"failureMessages":[],"fullName":"Agent Management Agent Management Integration Agent Management with Feature Operations should maintain agent state during feature operations","status":"pending","title":"should maintain agent state during feature operations"},{"ancestorTitles":["Agent Management","Edge Cases and Error Recovery","Data Consistency"],"duration":null,"failureMessages":[],"fullName":"Agent Management Edge Cases and Error Recovery Data Consistency should handle partial agent data gracefully","status":"pending","title":"should handle partial agent data gracefully"},{"ancestorTitles":["Agent Management","Edge Cases and Error Recovery","Data Consistency"],"duration":null,"failureMessages":[],"fullName":"Agent Management Edge Cases and Error Recovery Data Consistency should handle malformed agent data","status":"pending","title":"should handle malformed agent data"},{"ancestorTitles":["Agent Management","Edge Cases and Error Recovery","Concurrent Operations"],"duration":null,"failureMessages":[],"fullName":"Agent Management Edge Cases and Error Recovery Concurrent Operations should handle multiple agent operations on same file","status":"pending","title":"should handle multiple agent operations on same file"}]},{"numFailingTests":41,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758922161867,"loadTestEnvironmentEnd":1758922161603,"loadTestEnvironmentStart":1758922161600,"runtime":264,"setupAfterEnvEnd":1758922161624,"setupAfterEnvStart":1758922161623,"setupFilesEnd":1758922161603,"setupFilesStart":1758922161603,"slow":false,"start":1758922161603},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js","failureMessage":"  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should create feature suggestion with all required fields\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n       99 |         const result = await api.suggestFeature(featureData);\n      100 |\n    > 101 |         expect(result.success).toBe(true);\n          |                                ^\n      102 |         expect(result.feature).toBeDefined();\n      103 |         expect(result.feature.status).toBe('suggested');\n      104 |         expect(result.feature.title).toBe(featureData.title);\n\n      at Object.toBe (test/unit/feature-management.test.js:101:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should handle different feature categories correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      125 |           results.push(result);\n      126 |\n    > 127 |           expect(result.success).toBe(true);\n          |                                  ^\n      128 |           expect(result.feature.category).toBe(category);\n      129 |         }\n      130 |\n\n      at Object.toBe (test/unit/feature-management.test.js:127:34)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should auto-generate unique feature IDs\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      145 |\n      146 |           const result = await api.suggestFeature(featureData);\n    > 147 |           expect(result.success).toBe(true);\n          |                                  ^\n      148 |\n      149 |           featureIds.add(result.feature.id);\n      150 |         }\n\n      at Object.toBe (test/unit/feature-management.test.js:147:34)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should preserve custom metadata in feature suggestions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      175 |         const result = await api.suggestFeature(featureData);\n      176 |\n    > 177 |         expect(result.success).toBe(true);\n          |                                ^\n      178 |         expect(result.feature.metadata).toEqual(customMetadata);\n      179 |         expect(result.feature.metadata.stakeholders).toContain('product-owner');\n      180 |         expect(result.feature.metadata.tags).toContain('mvp');\n\n      at Object.toBe (test/unit/feature-management.test.js:177:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Metadata Management › should update total feature count after suggestion\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n      281 |       test('should update total feature count after suggestion', async () => {\n      282 |         const initialFeatures = await api._loadFeatures();\n    > 283 |         expect(initialFeatures.metadata.total_features).toBe(0);\n          |                                                         ^\n      284 |\n      285 |         await api.suggestFeature(TEST_FIXTURES.validFeature);\n      286 |\n\n      at Object.toBe (test/unit/feature-management.test.js:283:57)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Metadata Management › should update last modified timestamp\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      291 |       test('should update last modified timestamp', async () => {\n      292 |         const result = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 293 |         expect(result.success).toBe(true);\n          |                                ^\n      294 |\n      295 |         const features = await api._loadFeatures();\n      296 |         expect(features.metadata.updated).toBe('2025-09-23T12:00:00.000Z');\n\n      at Object.toBe (test/unit/feature-management.test.js:293:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Metadata Management › should preserve existing features when adding new ones\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      310 |         });\n      311 |\n    > 312 |         expect(firstResult.success).toBe(true);\n          |                                     ^\n      313 |         expect(secondResult.success).toBe(true);\n      314 |\n      315 |         const features = await api._loadFeatures();\n\n      at Object.toBe (test/unit/feature-management.test.js:312:37)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should approve suggested feature with full approval data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should approve feature with minimal approval data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should update feature timestamps on approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should maintain original feature data during approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval History Management › should add approval entry to history\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval History Management › should handle multiple feature approvals in history\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval History Management › should handle approval when metadata structure is missing\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval Validation and Constraints › should reject approval of non-existent feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval Validation and Constraints › should reject approval of already approved feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval Validation and Constraints › should reject approval of rejected feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      331 |       // Create a suggested feature for approval tests\n      332 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 333 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      334 |     });\n      335 |\n      336 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:333:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Basic Feature Rejection › should reject suggested feature with full rejection data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Basic Feature Rejection › should reject feature with minimal rejection data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Basic Feature Rejection › should update feature timestamps on rejection\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection History Management › should add rejection entry to approval history\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection Validation and Constraints › should reject rejection of non-existent feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection Validation and Constraints › should reject rejection of already approved feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection Validation and Constraints › should reject rejection of already rejected feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      497 |       // Create a suggested feature for rejection tests\n      498 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 499 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      500 |     });\n      501 |\n      502 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:499:50)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should approve all features in bulk successfully\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      619 |           title: title,\n      620 |         });\n    > 621 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      622 |       }\n      623 |     });\n      624 |\n\n      at Object.id (test/unit/feature-management.test.js:621:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should handle mixed success and failure scenarios in bulk approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      619 |           title: title,\n      620 |         });\n    > 621 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      622 |       }\n      623 |     });\n      624 |\n\n      at Object.id (test/unit/feature-management.test.js:621:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should handle empty feature IDs array in bulk approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      619 |           title: title,\n      620 |         });\n    > 621 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      622 |       }\n      623 |     });\n      624 |\n\n      at Object.id (test/unit/feature-management.test.js:621:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should handle non-existent feature IDs in bulk approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      619 |           title: title,\n      620 |         });\n    > 621 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      622 |       }\n      623 |     });\n      624 |\n\n      at Object.id (test/unit/feature-management.test.js:621:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should update approval history correctly for bulk operations\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      619 |           title: title,\n      620 |         });\n    > 621 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      622 |       }\n      623 |     });\n      624 |\n\n      at Object.id (test/unit/feature-management.test.js:621:49)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Basic Feature Listing › should list all features without filters\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      717 |         const result = await api.listFeatures();\n      718 |\n    > 719 |         expect(result.success).toBe(true);\n          |                                ^\n      720 |         expect(result.features).toHaveLength(3);\n      721 |         expect(result.total).toBe(3);\n      722 |         expect(result.metadata).toBeDefined();\n\n      at Object.toBe (test/unit/feature-management.test.js:719:32)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Basic Feature Listing › should include metadata in listing results\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      731 |         const result = await api.listFeatures();\n      732 |\n    > 733 |         expect(result.success).toBe(true);\n          |                                ^\n      734 |         expect(result.metadata).toBeDefined();\n      735 |         expect(result.metadata.total_features).toBe(3);\n      736 |         expect(result.metadata.approval_history).toBeDefined();\n\n      at Object.toBe (test/unit/feature-management.test.js:733:32)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should filter features by status\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      745 |           const result = await api.listFeatures({ status });\n      746 |\n    > 747 |           expect(result.success).toBe(true);\n          |                                  ^\n      748 |           expect(result.features).toHaveLength(1);\n      749 |           expect(result.features[0].status).toBe(status);\n      750 |           expect(result.total).toBe(1);\n\n      at Object.toBe (test/unit/feature-management.test.js:747:34)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should filter features by category\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      758 |           const result = await api.listFeatures({ category });\n      759 |\n    > 760 |           expect(result.success).toBe(true);\n          |                                  ^\n      761 |           expect(result.features).toHaveLength(1);\n      762 |           expect(result.features[0].category).toBe(category);\n      763 |           expect(result.total).toBe(1);\n\n      at Object.toBe (test/unit/feature-management.test.js:760:34)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should return empty results for non-matching filters\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      768 |         const result = await api.listFeatures({ status: 'implemented' });\n      769 |\n    > 770 |         expect(result.success).toBe(true);\n          |                                ^\n      771 |         expect(result.features).toHaveLength(0);\n      772 |         expect(result.total).toBe(0);\n      773 |       });\n\n      at Object.toBe (test/unit/feature-management.test.js:770:32)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should handle combined filters\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      780 |         });\n      781 |\n    > 782 |         expect(result.success).toBe(true);\n          |                                ^\n      783 |         expect(result.features).toHaveLength(1);\n      784 |         expect(result.features[0].status).toBe('approved');\n      785 |         expect(result.features[0].category).toBe('new-feature');\n\n      at Object.toBe (test/unit/feature-management.test.js:782:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Basic Statistics › should calculate feature statistics correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      799 |         const result = await api.getFeatureStats();\n      800 |\n    > 801 |         expect(result.success).toBe(true);\n          |                                ^\n      802 |         expect(result.stats).toBeDefined();\n      803 |         expect(result.metadata).toBeDefined();\n      804 |\n\n      at Object.toBe (test/unit/feature-management.test.js:801:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Basic Statistics › should include recent activity from approval history\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      820 |         const result = await api.getFeatureStats();\n      821 |\n    > 822 |         expect(result.success).toBe(true);\n          |                                ^\n      823 |         expect(result.stats.recent_activity).toBeDefined();\n      824 |         expect(Array.isArray(result.stats.recent_activity)).toBe(true);\n      825 |         expect(result.stats.recent_activity.length).toBe(2); // From test fixtures\n\n      at Object.toBe (test/unit/feature-management.test.js:822:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Basic Statistics › should handle empty features file for statistics\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      838 |         const result = await api.getFeatureStats();\n      839 |\n    > 840 |         expect(result.success).toBe(true);\n          |                                ^\n      841 |         expect(result.stats.total).toBe(0);\n      842 |         expect(result.stats.by_status).toEqual({});\n      843 |         expect(result.stats.by_category).toEqual({});\n\n      at Object.toBe (test/unit/feature-management.test.js:840:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Advanced Statistics Scenarios › should handle features with duplicate categories\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      869 |         const result = await api.getFeatureStats();\n      870 |\n    > 871 |         expect(result.success).toBe(true);\n          |                                ^\n      872 |         expect(result.stats.total).toBe(5);\n      873 |         expect(result.stats.by_category.enhancement).toBe(3); // 1 existing + 2 new\n      874 |       });\n\n      at Object.toBe (test/unit/feature-management.test.js:871:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Advanced Statistics Scenarios › should limit recent activity to last 10 entries\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      878 |         const result = await api.getFeatureStats();\n      879 |\n    > 880 |         expect(result.success).toBe(true);\n          |                                ^\n      881 |         expect(result.stats.recent_activity.length).toBeLessThanOrEqual(10);\n      882 |       });\n      883 |     });\n\n      at Object.toBe (test/unit/feature-management.test.js:880:32)\n\n  ● Feature Management Lifecycle › Error Scenarios and Edge Cases › File System Error Handling › should handle file write errors in feature suggestion\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Failed to save features\"\n    Received string:    \"Cannot read properties of undefined (reading 'push')\"\n\n      904 |\n      905 |         expect(result.success).toBe(false);\n    > 906 |         expect(result.error).toContain('Failed to save features');\n          |                              ^\n      907 |       });\n      908 |     });\n      909 |\n\n      at Object.toContain (test/unit/feature-management.test.js:906:30)\n","testResults":[{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":5,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:101:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should create feature suggestion with all required fields","status":"failed","title":"should create feature suggestion with all required fields"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:127:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should handle different feature categories correctly","status":"failed","title":"should handle different feature categories correctly"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:147:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should auto-generate unique feature IDs","status":"failed","title":"should auto-generate unique feature IDs"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:177:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should preserve custom metadata in feature suggestions","status":"failed","title":"should preserve custom metadata in feature suggestions"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce minimum title length requirements","status":"passed","title":"should enforce minimum title length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce maximum title length requirements","status":"passed","title":"should enforce maximum title length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":1,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce minimum description length requirements","status":"passed","title":"should enforce minimum description length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce maximum description length requirements","status":"passed","title":"should enforce maximum description length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":1,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should validate business value field requirements","status":"passed","title":"should validate business value field requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should validate category field against allowed values","status":"passed","title":"should validate category field against allowed values"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":1,"failureMessages":[],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should require all mandatory fields","status":"passed","title":"should require all mandatory fields"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Metadata Management"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:283:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update total feature count after suggestion","status":"failed","title":"should update total feature count after suggestion"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Metadata Management"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:293:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update last modified timestamp","status":"failed","title":"should update last modified timestamp"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Metadata Management"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:312:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should preserve existing features when adding new ones","status":"failed","title":"should preserve existing features when adding new ones"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve suggested feature with full approval data","status":"failed","title":"should approve suggested feature with full approval data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve feature with minimal approval data","status":"failed","title":"should approve feature with minimal approval data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should update feature timestamps on approval","status":"failed","title":"should update feature timestamps on approval"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should maintain original feature data during approval","status":"failed","title":"should maintain original feature data during approval"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should add approval entry to history","status":"failed","title":"should add approval entry to history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle multiple feature approvals in history","status":"failed","title":"should handle multiple feature approvals in history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle approval when metadata structure is missing","status":"failed","title":"should handle approval when metadata structure is missing"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of non-existent feature","status":"failed","title":"should reject approval of non-existent feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval Validation and Constraints"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of already approved feature","status":"failed","title":"should reject approval of already approved feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:333:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of rejected feature","status":"failed","title":"should reject approval of rejected feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Basic Feature Rejection"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject suggested feature with full rejection data","status":"failed","title":"should reject suggested feature with full rejection data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Basic Feature Rejection"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject feature with minimal rejection data","status":"failed","title":"should reject feature with minimal rejection data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Basic Feature Rejection"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should update feature timestamps on rejection","status":"failed","title":"should update feature timestamps on rejection"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection History Management should add rejection entry to approval history","status":"failed","title":"should add rejection entry to approval history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of non-existent feature","status":"failed","title":"should reject rejection of non-existent feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already approved feature","status":"failed","title":"should reject rejection of already approved feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:499:50)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already rejected feature","status":"failed","title":"should reject rejection of already rejected feature"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should approve all features in bulk successfully","status":"failed","title":"should approve all features in bulk successfully"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle mixed success and failure scenarios in bulk approval","status":"failed","title":"should handle mixed success and failure scenarios in bulk approval"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle empty feature IDs array in bulk approval","status":"failed","title":"should handle empty feature IDs array in bulk approval"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle non-existent feature IDs in bulk approval","status":"failed","title":"should handle non-existent feature IDs in bulk approval"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:621:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should update approval history correctly for bulk operations","status":"failed","title":"should update approval history correctly for bulk operations"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Basic Feature Listing"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:719:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should list all features without filters","status":"failed","title":"should list all features without filters"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Basic Feature Listing"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:733:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should include metadata in listing results","status":"failed","title":"should include metadata in listing results"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:747:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by status","status":"failed","title":"should filter features by status"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:760:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by category","status":"failed","title":"should filter features by category"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:770:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should return empty results for non-matching filters","status":"failed","title":"should return empty results for non-matching filters"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:782:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should handle combined filters","status":"failed","title":"should handle combined filters"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Basic Statistics"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:801:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should calculate feature statistics correctly","status":"failed","title":"should calculate feature statistics correctly"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Basic Statistics"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:822:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should include recent activity from approval history","status":"failed","title":"should include recent activity from approval history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Basic Statistics"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:840:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should handle empty features file for statistics","status":"failed","title":"should handle empty features file for statistics"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Advanced Statistics Scenarios"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:871:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should handle features with duplicate categories","status":"failed","title":"should handle features with duplicate categories"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Advanced Statistics Scenarios"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:880:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should limit recent activity to last 10 entries","status":"failed","title":"should limit recent activity to last 10 entries"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","File System Error Handling"],"duration":0,"failureMessages":[],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file read errors in feature listing","status":"passed","title":"should handle file read errors in feature listing"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","File System Error Handling"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to save features\"\nReceived string:    \"Cannot read properties of undefined (reading 'push')\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:906:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file write errors in feature suggestion","status":"failed","title":"should handle file write errors in feature suggestion"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","Data Corruption Handling"],"duration":1,"failureMessages":[],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases Data Corruption Handling should handle corrupted JSON gracefully","status":"passed","title":"should handle corrupted JSON gracefully"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","Data Corruption Handling"],"duration":0,"failureMessages":[],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases Data Corruption Handling should handle missing feature file during operations","status":"passed","title":"should handle missing feature file during operations"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["*.js","lib/**/*.js","development/essentials/*.js","scripts/**/*.js","!test/**","!coverage/**","!node_modules/**","!.node-modules-backup/**","!jest.config.js","!eslint.config.js","!babel.config.js","!development/performance-analysis/**","!development/reports/**","!development/docs/**","!development/temp-scripts/**","!development/backups/**","!**/node_modules/**","!**/dist/**","!**/build/**","!**/*.config.js","!**/*.min.js"],"coverageDirectory":"/Users/jeremyparker/infinite-continue-stop-hook/coverage","coverageProvider":"v8","coverageReporters":["text","text-summary","html","json","json-summary","lcov","clover"],"coverageThreshold":{"global":{"branches":75,"functions":80,"lines":80,"statements":80},"./taskmanager-api.js":{"branches":70,"functions":75,"lines":75,"statements":75},"./lib/":{"branches":80,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/test/unit/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/test/integration/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":45000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/test/e2e/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":60000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"}],"reporters":[["default",{}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"hideIcon":false,"pageTitle":"TaskManager Test Coverage Report","includeFailureMsg":true,"includeSuiteFailure":true,"customInfos":[{"title":"CI/CD Pipeline","value":"🏠 Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}]}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-junit/index.js",{"outputDirectory":"./coverage/reports","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true,"addFileAttribute":true,"includeConsoleOutput":true,"includeShortConsoleOutput":false,"suiteNameTemplate":"{filepath}","testCasePropertiesDirectory":"./coverage/reports/test-case-properties"}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-json-reporter.js",{"outputPath":"./coverage/reports/test-results.json","includeTestCases":true,"includeAssertionResults":true,"includeConsoleOutput":true}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-cicd-reporter.js",{"outputPath":"./coverage/reports/ci-cd-results.json","includeGitInfo":true,"includeEnvironmentInfo":true,"includeTimingData":true}]],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook","runInBand":false,"runTestsByPath":false,"seed":-1555971054,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testNamePattern":"Feature Management Lifecycle","testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"/Users/jeremyparker/infinite-continue-stop-hook/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1758922161882,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"pageTitle":"TaskManager Test Coverage Report","hideIcon":false,"customInfos":[{"title":"CI/CD Pipeline","value":"🏠 Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}],"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})