window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":10,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":10,"startTime":1759189923419,"success":false,"testResults":[{"numFailingTests":10,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759190041805,"loadTestEnvironmentEnd":1759189924220,"loadTestEnvironmentStart":1759189924115,"runtime":117585,"setupAfterEnvEnd":1759189925626,"setupAfterEnvStart":1759189924429,"setupFilesEnd":1759189924220,"setupFilesStart":1759189924220,"slow":true,"start":1759189924220},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js","failureMessage":"  ● Success Criteria End-to-End Tests › Complete Validation Workflows › should execute full feature validation workflow\n\n    ReferenceError: error is not defined\n\n      343 |         }\n      344 |       } catch (_) {\n    > 345 |         loggers.stopHook.warn(`Feature approval warning: ${error.message}`);\n          |                                                            ^\n      346 |       }\n      347 |\n      348 |       // 3. Execute validation steps (simulated implementation)\n\n      at Object.error (test/e2e/success-criteria-e2e.test.js:345:60)\n\n  ● Success Criteria End-to-End Tests › Complete Validation Workflows › should handle validation failures gracefully\n\n    ReferenceError: error is not defined\n\n      424 |         }\n      425 |       } catch (_) {\n    > 426 |         loggers.stopHook.warn(`Feature approval warning: ${error.message}`);\n          |                                                            ^\n      427 |       }\n      428 |\n      429 |       // Simulate validation failures during implementation;\n\n      at Object.error (test/e2e/success-criteria-e2e.test.js:426:60)\n\n  ● Success Criteria End-to-End Tests › Complete Validation Workflows › should validate feature categorization workflow\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      479 |       expect(createResult.success).toBe(true);\n      480 |\n    > 481 |       const featureId = createResult.feature.id;\n          |                                              ^\n      482 |\n      483 |       // Verify feature metadata And categorization\n      484 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:481:46)\n\n  ● Success Criteria End-to-End Tests › Real-World Usage Scenarios › should handle typical development workflow\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      573 |       expect(featureResult.success).toBe(true);\n      574 |\n    > 575 |       const featureId = featureResult.feature.id;\n          |                                               ^\n      576 |\n      577 |       // 2. Approve feature for implementation\n      578 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:575:47)\n\n  ● Success Criteria End-to-End Tests › Real-World Usage Scenarios › should handle bug fix workflow with criteria\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      652 |       expect(bugFixResult.success).toBe(true);\n      653 |\n    > 654 |       const featureId = bugFixResult.feature.id;\n          |                                              ^\n      655 |\n      656 |       // Approve bug fix for implementation\n      657 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:654:46)\n\n  ● Success Criteria End-to-End Tests › Real-World Usage Scenarios › should handle refactoring workflow with quality gates\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      739 |       expect(refactorResult.success).toBe(true);\n      740 |\n    > 741 |       const featureId = refactorResult.feature.id;\n          |                                                ^\n      742 |\n      743 |       // Approve refactoring feature\n      744 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:741:48)\n\n  ● Success Criteria End-to-End Tests › Multi-Agent Coordination › should coordinate feature validation across multiple agents\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      862 |       expect(createResult.success).toBe(true);\n      863 |\n    > 864 |       const featureId = createResult.feature.id;\n          |                                              ^\n      865 |\n      866 |       // Initialize multiple agents for different validation aspects;\n      867 |       const developmentAgentId = `dev-agent-${Date.now()}`;\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:864:46)\n\n  ● Success Criteria End-to-End Tests › Performance Validation And Benchmarking › should validate performance criteria with actual benchmarks\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      952 |       expect(createResult.success).toBe(true);\n      953 |\n    > 954 |       const featureId = createResult.feature.id;\n          |                                              ^\n      955 |\n      956 |       // Approve performance feature\n      957 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:954:46)\n\n  ● Success Criteria End-to-End Tests › Performance Validation And Benchmarking › should handle performance regression detection\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      1029 |       expect(createResult.success).toBe(true);\n      1030 |\n    > 1031 |       const featureId = createResult.feature.id;\n           |                                              ^\n      1032 |\n      1033 |       // Approve regression detection feature\n      1034 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:1031:46)\n\n  ● Success Criteria End-to-End Tests › Evidence Collection And Reporting › should collect And store validation evidence\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      1109 |       expect(createResult.success).toBe(true);\n      1110 |\n    > 1111 |       const featureId = createResult.feature.id;\n           |                                              ^\n      1112 |\n      1113 |       // Approve evidence collection feature\n      1114 |       try {\n\n      at Object.id (test/e2e/success-criteria-e2e.test.js:1111:46)\n","testResults":[{"ancestorTitles":["Success Criteria End-to-End Tests","Complete Validation Workflows"],"duration":12176,"failureMessages":["ReferenceError: error is not defined\n    at Object.error (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:345:60)"],"fullName":"Success Criteria End-to-End Tests Complete Validation Workflows should execute full feature validation workflow","status":"failed","title":"should execute full feature validation workflow"},{"ancestorTitles":["Success Criteria End-to-End Tests","Complete Validation Workflows"],"duration":12029,"failureMessages":["ReferenceError: error is not defined\n    at Object.error (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:426:60)"],"fullName":"Success Criteria End-to-End Tests Complete Validation Workflows should handle validation failures gracefully","status":"failed","title":"should handle validation failures gracefully"},{"ancestorTitles":["Success Criteria End-to-End Tests","Complete Validation Workflows"],"duration":11759,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:481:46)"],"fullName":"Success Criteria End-to-End Tests Complete Validation Workflows should validate feature categorization workflow","status":"failed","title":"should validate feature categorization workflow"},{"ancestorTitles":["Success Criteria End-to-End Tests","Real-World Usage Scenarios"],"duration":11589,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:575:47)"],"fullName":"Success Criteria End-to-End Tests Real-World Usage Scenarios should handle typical development workflow","status":"failed","title":"should handle typical development workflow"},{"ancestorTitles":["Success Criteria End-to-End Tests","Real-World Usage Scenarios"],"duration":11268,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:654:46)"],"fullName":"Success Criteria End-to-End Tests Real-World Usage Scenarios should handle bug fix workflow with criteria","status":"failed","title":"should handle bug fix workflow with criteria"},{"ancestorTitles":["Success Criteria End-to-End Tests","Real-World Usage Scenarios"],"duration":11565,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:741:48)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Real-World Usage Scenarios should handle refactoring workflow with quality gates","status":"failed","title":"should handle refactoring workflow with quality gates"},{"ancestorTitles":["Success Criteria End-to-End Tests","Multi-Agent Coordination"],"duration":11468,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:864:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Multi-Agent Coordination should coordinate feature validation across multiple agents","status":"failed","title":"should coordinate feature validation across multiple agents"},{"ancestorTitles":["Success Criteria End-to-End Tests","Performance Validation And Benchmarking"],"duration":11475,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:954:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Performance Validation And Benchmarking should validate performance criteria with actual benchmarks","status":"failed","title":"should validate performance criteria with actual benchmarks"},{"ancestorTitles":["Success Criteria End-to-End Tests","Performance Validation And Benchmarking"],"duration":11115,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:1031:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Performance Validation And Benchmarking should handle performance regression detection","status":"failed","title":"should handle performance regression detection"},{"ancestorTitles":["Success Criteria End-to-End Tests","Evidence Collection And Reporting"],"duration":11497,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/e2e/success-criteria-e2e.test.js:1111:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Success Criteria End-to-End Tests Evidence Collection And Reporting should collect And store validation evidence","status":"failed","title":"should collect And store validation evidence"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["*.js","lib/**/*.js","development/essentials/*.js","scripts/**/*.js","!test/**","!coverage/**","!node_modules/**","!.node-modules-backup/**","!jest.config.js","!eslint.config.js","!babel.config.js","!development/performance-analysis/**","!development/reports/**","!development/docs/**","!development/temp-scripts/**","!development/backups/**","!**/node_modules/**","!**/dist/**","!**/build/**","!**/*.config.js","!**/*.min.js"],"coverageDirectory":"/Users/jeremyparker/infinite-continue-stop-hook/coverage","coverageProvider":"v8","coverageReporters":["text","text-summary","html","json","json-summary","lcov","clover"],"coverageThreshold":{"global":{"branches":75,"functions":80,"lines":80,"statements":80},"./taskmanager-api.js":{"branches":70,"functions":75,"lines":75,"statements":75},"./lib/":{"branches":80,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":["test/e2e/success-criteria-e2e.test.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/test/unit/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"transformIgnorePatterns":["node_modules/(?!(@xenova/transformers)/)"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/test/integration/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":45000,"transformIgnorePatterns":["node_modules/(?!(@xenova/transformers)/)"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/test/e2e/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":60000,"transformIgnorePatterns":["node_modules/(?!(@xenova/transformers)/)"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"}],"reporters":[["default",{}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"hideIcon":false,"pageTitle":"TaskManager Test Coverage Report","includeFailureMsg":true,"includeSuiteFailure":true,"customInfos":[{"title":"CI/CD Pipeline","value":"🏠 Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}]}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-junit/index.js",{"outputDirectory":"./coverage/reports","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true,"addFileAttribute":true,"includeConsoleOutput":true,"includeShortConsoleOutput":false,"suiteNameTemplate":"{filepath}","testCasePropertiesDirectory":"./coverage/reports/test-case-properties"}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-json-reporter.js",{"outputPath":"./coverage/reports/test-results.json","includeTestCases":true,"includeAssertionResults":true,"includeConsoleOutput":true}],["/Users/jeremyparker/infinite-continue-stop-hook/scripts/jest-cicd-reporter.js",{"outputPath":"./coverage/reports/ci-cd-results.json","includeGitInfo":true,"includeEnvironmentInfo":true,"includeTimingData":true}]],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook","runInBand":false,"runTestsByPath":false,"seed":917988316,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["test/e2e/success-criteria-e2e.test.js"],"type":"TestPathPatterns"},"testSequencer":"/Users/jeremyparker/infinite-continue-stop-hook/node_modules/@jest/test-sequencer/build/index.js","testTimeout":90000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759190041823,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"pageTitle":"TaskManager Test Coverage Report","hideIcon":false,"customInfos":[{"title":"CI/CD Pipeline","value":"🏠 Local Development"},{"title":"Build Number","value":"N/A"},{"title":"Git Branch","value":"unknown"}],"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})