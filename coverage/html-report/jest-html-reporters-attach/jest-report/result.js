window.jest_html_reporters_callback__({"numFailedTestSuites":6,"numFailedTests":138,"numPassedTestSuites":1,"numPassedTests":115,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":253,"startTime":1758640224132,"success":false,"testResults":[{"numFailingTests":51,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640224393,"loadTestEnvironmentEnd":1758640224159,"loadTestEnvironmentStart":1758640224137,"runtime":234,"setupAfterEnvEnd":1758640224274,"setupAfterEnvStart":1758640224195,"setupFilesEnd":1758640224159,"setupFilesStart":1758640224159,"slow":false,"start":1758640224159},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js","failureMessage":"  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should create feature suggestion with all required fields\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      81 |         const result = await api.suggestFeature(featureData);\n      82 |\n    > 83 |         expect(result.success).toBe(true);\n         |                                ^\n      84 |         expect(result.feature).toBeDefined();\n      85 |         expect(result.feature.status).toBe('suggested');\n      86 |         expect(result.feature.title).toBe(featureData.title);\n\n      at Object.toBe (test/unit/feature-management.test.js:83:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should handle different feature categories correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      107 |           results.push(result);\n      108 |\n    > 109 |           expect(result.success).toBe(true);\n          |                                  ^\n      110 |           expect(result.feature.category).toBe(category);\n      111 |         }\n      112 |\n\n      at Object.toBe (test/unit/feature-management.test.js:109:34)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should auto-generate unique feature IDs\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      127 |\n      128 |           const result = await api.suggestFeature(featureData);\n    > 129 |           expect(result.success).toBe(true);\n          |                                  ^\n      130 |\n      131 |           featureIds.add(result.feature.id);\n      132 |         }\n\n      at Object.toBe (test/unit/feature-management.test.js:129:34)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Basic Feature Suggestion › should preserve custom metadata in feature suggestions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      157 |         const result = await api.suggestFeature(featureData);\n      158 |\n    > 159 |         expect(result.success).toBe(true);\n          |                                ^\n      160 |         expect(result.feature.metadata).toEqual(customMetadata);\n      161 |         expect(result.feature.metadata.stakeholders).toContain('product-owner');\n      162 |         expect(result.feature.metadata.tags).toContain('mvp');\n\n      at Object.toBe (test/unit/feature-management.test.js:159:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should enforce minimum title length requirements\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Feature title must be between 10 and 200 characters\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      174 |\n      175 |         expect(result.success).toBe(false);\n    > 176 |         expect(result.error).toContain('Feature title must be between 10 and 200 characters');\n          |                              ^\n      177 |       });\n      178 |\n      179 |       test('should enforce maximum title length requirements', async () => {\n\n      at Object.toContain (test/unit/feature-management.test.js:176:30)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should enforce maximum title length requirements\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Feature title must be between 10 and 200 characters\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      186 |\n      187 |         expect(result.success).toBe(false);\n    > 188 |         expect(result.error).toContain('Feature title must be between 10 and 200 characters');\n          |                              ^\n      189 |       });\n      190 |\n      191 |       test('should enforce minimum description length requirements', async () => {\n\n      at Object.toContain (test/unit/feature-management.test.js:188:30)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should enforce minimum description length requirements\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Feature description must be between 20 and 2000 characters\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      198 |\n      199 |         expect(result.success).toBe(false);\n    > 200 |         expect(result.error).toContain('Feature description must be between 20 and 2000 characters');\n          |                              ^\n      201 |       });\n      202 |\n      203 |       test('should enforce maximum description length requirements', async () => {\n\n      at Object.toContain (test/unit/feature-management.test.js:200:30)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should enforce maximum description length requirements\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Feature description must be between 20 and 2000 characters\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      210 |\n      211 |         expect(result.success).toBe(false);\n    > 212 |         expect(result.error).toContain('Feature description must be between 20 and 2000 characters');\n          |                              ^\n      213 |       });\n      214 |\n      215 |       test('should validate business value field requirements', async () => {\n\n      at Object.toContain (test/unit/feature-management.test.js:212:30)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should validate business value field requirements\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Business value must be between 10 and 1000 characters\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      223 |           const result = await api.suggestFeature(invalidFeature);\n      224 |           expect(result.success).toBe(false);\n    > 225 |           expect(result.error).toContain('Business value must be between 10 and 1000 characters');\n          |                                ^\n      226 |         }\n      227 |       });\n      228 |\n\n      at Object.toContain (test/unit/feature-management.test.js:225:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should validate category field against allowed values\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Invalid category\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      236 |\n      237 |         expect(result.success).toBe(false);\n    > 238 |         expect(result.error).toContain('Invalid category');\n          |                              ^\n      239 |         expect(result.error).toContain('Must be one of: enhancement, bug-fix, new-feature, performance, security, documentation');\n      240 |       });\n      241 |\n\n      at Object.toContain (test/unit/feature-management.test.js:238:30)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Validation › should require all mandatory fields\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Required field 'title' is missing or empty\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      250 |\n      251 |           expect(result.success).toBe(false);\n    > 252 |           expect(result.error).toContain(`Required field '${field}' is missing or empty`);\n          |                                ^\n      253 |         }\n      254 |       });\n      255 |     });\n\n      at Object.toContain (test/unit/feature-management.test.js:252:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Metadata Management › should update total feature count after suggestion\n\n    ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/feature-management.test.js:259:33)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Metadata Management › should update last modified timestamp\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      268 |       test('should update last modified timestamp', async () => {\n      269 |         const result = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 270 |         expect(result.success).toBe(true);\n          |                                ^\n      271 |\n      272 |         const features = await api._loadFeatures();\n      273 |         expect(features.metadata.updated).toBe('2025-09-23T12:00:00.000Z');\n\n      at Object.toBe (test/unit/feature-management.test.js:270:32)\n\n  ● Feature Management Lifecycle › Feature Suggestion Lifecycle › Feature Suggestion Metadata Management › should preserve existing features when adding new ones\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      287 |         });\n      288 |\n    > 289 |         expect(firstResult.success).toBe(true);\n          |                                     ^\n      290 |         expect(secondResult.success).toBe(true);\n      291 |\n      292 |         const features = await api._loadFeatures();\n\n      at Object.toBe (test/unit/feature-management.test.js:289:37)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should approve suggested feature with full approval data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should approve feature with minimal approval data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should update feature timestamps on approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Basic Feature Approval › should maintain original feature data during approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval History Management › should add approval entry to history\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval History Management › should handle multiple feature approvals in history\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval History Management › should handle approval when metadata structure is missing\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval Validation and Constraints › should reject approval of non-existent feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval Validation and Constraints › should reject approval of already approved feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Approval Lifecycle › Approval Validation and Constraints › should reject approval of rejected feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      308 |       // Create a suggested feature for approval tests\n      309 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 310 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      311 |     });\n      312 |\n      313 |     describe('Basic Feature Approval', () => {\n\n      at Object.id (test/unit/feature-management.test.js:310:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Basic Feature Rejection › should reject suggested feature with full rejection data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Basic Feature Rejection › should reject feature with minimal rejection data\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Basic Feature Rejection › should update feature timestamps on rejection\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection History Management › should add rejection entry to approval history\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection Validation and Constraints › should reject rejection of non-existent feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection Validation and Constraints › should reject rejection of already approved feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Feature Rejection Lifecycle › Rejection Validation and Constraints › should reject rejection of already rejected feature\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      474 |       // Create a suggested feature for rejection tests\n      475 |       const suggestResult = await api.suggestFeature(TEST_FIXTURES.validFeature);\n    > 476 |       suggestedFeatureId = suggestResult.feature.id;\n          |                                                  ^\n      477 |     });\n      478 |\n      479 |     describe('Basic Feature Rejection', () => {\n\n      at Object.id (test/unit/feature-management.test.js:476:50)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should approve all features in bulk successfully\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      596 |           title: title\n      597 |         });\n    > 598 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      599 |       }\n      600 |     });\n      601 |\n\n      at Object.id (test/unit/feature-management.test.js:598:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should handle mixed success and failure scenarios in bulk approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      596 |           title: title\n      597 |         });\n    > 598 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      599 |       }\n      600 |     });\n      601 |\n\n      at Object.id (test/unit/feature-management.test.js:598:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should handle empty feature IDs array in bulk approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      596 |           title: title\n      597 |         });\n    > 598 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      599 |       }\n      600 |     });\n      601 |\n\n      at Object.id (test/unit/feature-management.test.js:598:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should handle non-existent feature IDs in bulk approval\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      596 |           title: title\n      597 |         });\n    > 598 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      599 |       }\n      600 |     });\n      601 |\n\n      at Object.id (test/unit/feature-management.test.js:598:49)\n\n  ● Feature Management Lifecycle › Bulk Operations › Bulk Approval Operations › should update approval history correctly for bulk operations\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      596 |           title: title\n      597 |         });\n    > 598 |         suggestedFeatureIds.push(result.feature.id);\n          |                                                 ^\n      599 |       }\n      600 |     });\n      601 |\n\n      at Object.id (test/unit/feature-management.test.js:598:49)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Basic Feature Listing › should list all features without filters\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      693 |         const result = await api.listFeatures();\n      694 |\n    > 695 |         expect(result.success).toBe(true);\n          |                                ^\n      696 |         expect(result.features).toHaveLength(3);\n      697 |         expect(result.total).toBe(3);\n      698 |         expect(result.metadata).toBeDefined();\n\n      at Object.toBe (test/unit/feature-management.test.js:695:32)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Basic Feature Listing › should include metadata in listing results\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      707 |         const result = await api.listFeatures();\n      708 |\n    > 709 |         expect(result.success).toBe(true);\n          |                                ^\n      710 |         expect(result.metadata).toBeDefined();\n      711 |         expect(result.metadata.total_features).toBe(3);\n      712 |         expect(result.metadata.approval_history).toBeDefined();\n\n      at Object.toBe (test/unit/feature-management.test.js:709:32)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should filter features by status\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      721 |           const result = await api.listFeatures({ status });\n      722 |\n    > 723 |           expect(result.success).toBe(true);\n          |                                  ^\n      724 |           expect(result.features).toHaveLength(1);\n      725 |           expect(result.features[0].status).toBe(status);\n      726 |           expect(result.total).toBe(1);\n\n      at Object.toBe (test/unit/feature-management.test.js:723:34)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should filter features by category\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      734 |           const result = await api.listFeatures({ category });\n      735 |\n    > 736 |           expect(result.success).toBe(true);\n          |                                  ^\n      737 |           expect(result.features).toHaveLength(1);\n      738 |           expect(result.features[0].category).toBe(category);\n      739 |           expect(result.total).toBe(1);\n\n      at Object.toBe (test/unit/feature-management.test.js:736:34)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should return empty results for non-matching filters\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      744 |         const result = await api.listFeatures({ status: 'implemented' });\n      745 |\n    > 746 |         expect(result.success).toBe(true);\n          |                                ^\n      747 |         expect(result.features).toHaveLength(0);\n      748 |         expect(result.total).toBe(0);\n      749 |       });\n\n      at Object.toBe (test/unit/feature-management.test.js:746:32)\n\n  ● Feature Management Lifecycle › Feature Listing and Filtering › Feature Filtering › should handle combined filters\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      756 |         });\n      757 |\n    > 758 |         expect(result.success).toBe(true);\n          |                                ^\n      759 |         expect(result.features).toHaveLength(1);\n      760 |         expect(result.features[0].status).toBe('approved');\n      761 |         expect(result.features[0].category).toBe('new-feature');\n\n      at Object.toBe (test/unit/feature-management.test.js:758:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Basic Statistics › should calculate feature statistics correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      775 |         const result = await api.getFeatureStats();\n      776 |\n    > 777 |         expect(result.success).toBe(true);\n          |                                ^\n      778 |         expect(result.stats).toBeDefined();\n      779 |         expect(result.metadata).toBeDefined();\n      780 |\n\n      at Object.toBe (test/unit/feature-management.test.js:777:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Basic Statistics › should include recent activity from approval history\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      796 |         const result = await api.getFeatureStats();\n      797 |\n    > 798 |         expect(result.success).toBe(true);\n          |                                ^\n      799 |         expect(result.stats.recent_activity).toBeDefined();\n      800 |         expect(Array.isArray(result.stats.recent_activity)).toBe(true);\n      801 |         expect(result.stats.recent_activity.length).toBe(2); // From test fixtures\n\n      at Object.toBe (test/unit/feature-management.test.js:798:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Basic Statistics › should handle empty features file for statistics\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      814 |         const result = await api.getFeatureStats();\n      815 |\n    > 816 |         expect(result.success).toBe(true);\n          |                                ^\n      817 |         expect(result.stats.total).toBe(0);\n      818 |         expect(result.stats.by_status).toEqual({});\n      819 |         expect(result.stats.by_category).toEqual({});\n\n      at Object.toBe (test/unit/feature-management.test.js:816:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Advanced Statistics Scenarios › should handle features with duplicate categories\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      845 |         const result = await api.getFeatureStats();\n      846 |\n    > 847 |         expect(result.success).toBe(true);\n          |                                ^\n      848 |         expect(result.stats.total).toBe(5);\n      849 |         expect(result.stats.by_category.enhancement).toBe(3); // 1 existing + 2 new\n      850 |       });\n\n      at Object.toBe (test/unit/feature-management.test.js:847:32)\n\n  ● Feature Management Lifecycle › Feature Statistics and Analytics › Advanced Statistics Scenarios › should limit recent activity to last 10 entries\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      854 |         const result = await api.getFeatureStats();\n      855 |\n    > 856 |         expect(result.success).toBe(true);\n          |                                ^\n      857 |         expect(result.stats.recent_activity.length).toBeLessThanOrEqual(10);\n      858 |       });\n      859 |     });\n\n      at Object.toBe (test/unit/feature-management.test.js:856:32)\n\n  ● Feature Management Lifecycle › Error Scenarios and Edge Cases › File System Error Handling › should handle file read errors in feature listing\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Failed to load features\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      870 |\n      871 |         expect(result.success).toBe(false);\n    > 872 |         expect(result.error).toContain('Failed to load features');\n          |                              ^\n      873 |       });\n      874 |\n      875 |       test('should handle file write errors in feature suggestion', async () => {\n\n      at Object.toContain (test/unit/feature-management.test.js:872:30)\n\n  ● Feature Management Lifecycle › Error Scenarios and Edge Cases › File System Error Handling › should handle file write errors in feature suggestion\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Failed to save features\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      880 |\n      881 |         expect(result.success).toBe(false);\n    > 882 |         expect(result.error).toContain('Failed to save features');\n          |                              ^\n      883 |       });\n      884 |     });\n      885 |\n\n      at Object.toContain (test/unit/feature-management.test.js:882:30)\n\n  ● Feature Management Lifecycle › Error Scenarios and Edge Cases › Data Corruption Handling › should handle corrupted JSON gracefully\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Failed to load features\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n\n      891 |\n      892 |         expect(result.success).toBe(false);\n    > 893 |         expect(result.error).toContain('Failed to load features');\n          |                              ^\n      894 |       });\n      895 |\n      896 |       test('should handle missing feature file during operations', async () => {\n\n      at Object.toContain (test/unit/feature-management.test.js:893:30)\n\n  ● Feature Management Lifecycle › Error Scenarios and Edge Cases › Data Corruption Handling › should handle missing feature file during operations\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      898 |         const result = await api.suggestFeature(TEST_FIXTURES.validFeature);\n      899 |\n    > 900 |         expect(result.success).toBe(true);\n          |                                ^\n      901 |         expect(mockFs.hasFile(TEST_FEATURES_PATH)).toBe(true);\n      902 |       });\n      903 |     });\n\n      at Object.toBe (test/unit/feature-management.test.js:900:32)\n","testResults":[{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":5,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:83:32)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should create feature suggestion with all required fields","status":"failed","title":"should create feature suggestion with all required fields"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:109:34)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should handle different feature categories correctly","status":"failed","title":"should handle different feature categories correctly"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:129:34)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should auto-generate unique feature IDs","status":"failed","title":"should auto-generate unique feature IDs"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Basic Feature Suggestion"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:159:32)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Basic Feature Suggestion should preserve custom metadata in feature suggestions","status":"failed","title":"should preserve custom metadata in feature suggestions"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Feature title must be between 10 and 200 characters\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:176:30)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce minimum title length requirements","status":"failed","title":"should enforce minimum title length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Feature title must be between 10 and 200 characters\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:188:30)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce maximum title length requirements","status":"failed","title":"should enforce maximum title length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Feature description must be between 20 and 2000 characters\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:200:30)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce minimum description length requirements","status":"failed","title":"should enforce minimum description length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Feature description must be between 20 and 2000 characters\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:212:30)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should enforce maximum description length requirements","status":"failed","title":"should enforce maximum description length requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Business value must be between 10 and 1000 characters\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:225:32)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should validate business value field requirements","status":"failed","title":"should validate business value field requirements"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Invalid category\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:238:30)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should validate category field against allowed values","status":"failed","title":"should validate category field against allowed values"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Validation"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Required field 'title' is missing or empty\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:252:32)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Validation should require all mandatory fields","status":"failed","title":"should require all mandatory fields"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Metadata Management"],"duration":0,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:259:33)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update total feature count after suggestion","status":"failed","title":"should update total feature count after suggestion"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Metadata Management"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:270:32)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should update last modified timestamp","status":"failed","title":"should update last modified timestamp"},{"ancestorTitles":["Feature Management Lifecycle","Feature Suggestion Lifecycle","Feature Suggestion Metadata Management"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:289:37)"],"fullName":"Feature Management Lifecycle Feature Suggestion Lifecycle Feature Suggestion Metadata Management should preserve existing features when adding new ones","status":"failed","title":"should preserve existing features when adding new ones"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve suggested feature with full approval data","status":"failed","title":"should approve suggested feature with full approval data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should approve feature with minimal approval data","status":"failed","title":"should approve feature with minimal approval data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should update feature timestamps on approval","status":"failed","title":"should update feature timestamps on approval"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Basic Feature Approval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Basic Feature Approval should maintain original feature data during approval","status":"failed","title":"should maintain original feature data during approval"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should add approval entry to history","status":"failed","title":"should add approval entry to history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval History Management"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle multiple feature approvals in history","status":"failed","title":"should handle multiple feature approvals in history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval History Management should handle approval when metadata structure is missing","status":"failed","title":"should handle approval when metadata structure is missing"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of non-existent feature","status":"failed","title":"should reject approval of non-existent feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of already approved feature","status":"failed","title":"should reject approval of already approved feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Approval Lifecycle","Approval Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:310:50)"],"fullName":"Feature Management Lifecycle Feature Approval Lifecycle Approval Validation and Constraints should reject approval of rejected feature","status":"failed","title":"should reject approval of rejected feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Basic Feature Rejection"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject suggested feature with full rejection data","status":"failed","title":"should reject suggested feature with full rejection data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Basic Feature Rejection"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should reject feature with minimal rejection data","status":"failed","title":"should reject feature with minimal rejection data"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Basic Feature Rejection"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Basic Feature Rejection should update feature timestamps on rejection","status":"failed","title":"should update feature timestamps on rejection"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection History Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection History Management should add rejection entry to approval history","status":"failed","title":"should add rejection entry to approval history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of non-existent feature","status":"failed","title":"should reject rejection of non-existent feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already approved feature","status":"failed","title":"should reject rejection of already approved feature"},{"ancestorTitles":["Feature Management Lifecycle","Feature Rejection Lifecycle","Rejection Validation and Constraints"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:476:50)"],"fullName":"Feature Management Lifecycle Feature Rejection Lifecycle Rejection Validation and Constraints should reject rejection of already rejected feature","status":"failed","title":"should reject rejection of already rejected feature"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:598:49)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should approve all features in bulk successfully","status":"failed","title":"should approve all features in bulk successfully"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:598:49)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle mixed success and failure scenarios in bulk approval","status":"failed","title":"should handle mixed success and failure scenarios in bulk approval"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:598:49)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle empty feature IDs array in bulk approval","status":"failed","title":"should handle empty feature IDs array in bulk approval"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:598:49)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should handle non-existent feature IDs in bulk approval","status":"failed","title":"should handle non-existent feature IDs in bulk approval"},{"ancestorTitles":["Feature Management Lifecycle","Bulk Operations","Bulk Approval Operations"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:598:49)"],"fullName":"Feature Management Lifecycle Bulk Operations Bulk Approval Operations should update approval history correctly for bulk operations","status":"failed","title":"should update approval history correctly for bulk operations"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Basic Feature Listing"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:695:32)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should list all features without filters","status":"failed","title":"should list all features without filters"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Basic Feature Listing"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:709:32)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Basic Feature Listing should include metadata in listing results","status":"failed","title":"should include metadata in listing results"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:723:34)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by status","status":"failed","title":"should filter features by status"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:736:34)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should filter features by category","status":"failed","title":"should filter features by category"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:746:32)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should return empty results for non-matching filters","status":"failed","title":"should return empty results for non-matching filters"},{"ancestorTitles":["Feature Management Lifecycle","Feature Listing and Filtering","Feature Filtering"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:758:32)"],"fullName":"Feature Management Lifecycle Feature Listing and Filtering Feature Filtering should handle combined filters","status":"failed","title":"should handle combined filters"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Basic Statistics"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:777:32)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should calculate feature statistics correctly","status":"failed","title":"should calculate feature statistics correctly"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Basic Statistics"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:798:32)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should include recent activity from approval history","status":"failed","title":"should include recent activity from approval history"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Basic Statistics"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:816:32)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Basic Statistics should handle empty features file for statistics","status":"failed","title":"should handle empty features file for statistics"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Advanced Statistics Scenarios"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:847:32)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should handle features with duplicate categories","status":"failed","title":"should handle features with duplicate categories"},{"ancestorTitles":["Feature Management Lifecycle","Feature Statistics and Analytics","Advanced Statistics Scenarios"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:856:32)"],"fullName":"Feature Management Lifecycle Feature Statistics and Analytics Advanced Statistics Scenarios should limit recent activity to last 10 entries","status":"failed","title":"should limit recent activity to last 10 entries"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","File System Error Handling"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to load features\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:872:30)"],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file read errors in feature listing","status":"failed","title":"should handle file read errors in feature listing"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","File System Error Handling"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to save features\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:882:30)"],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases File System Error Handling should handle file write errors in feature suggestion","status":"failed","title":"should handle file write errors in feature suggestion"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","Data Corruption Handling"],"duration":2,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to load features\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/feature-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:893:30)"],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases Data Corruption Handling should handle corrupted JSON gracefully","status":"failed","title":"should handle corrupted JSON gracefully"},{"ancestorTitles":["Feature Management Lifecycle","Error Scenarios and Edge Cases","Data Corruption Handling"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management.test.js:900:32)"],"fullName":"Feature Management Lifecycle Error Scenarios and Edge Cases Data Corruption Handling should handle missing feature file during operations","status":"failed","title":"should handle missing feature file during operations"}]},{"numFailingTests":2,"numPassingTests":62,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640234524,"loadTestEnvironmentEnd":1758640224397,"loadTestEnvironmentStart":1758640224395,"runtime":10127,"setupAfterEnvEnd":1758640224406,"setupAfterEnvStart":1758640224405,"setupFilesEnd":1758640224397,"setupFilesStart":1758640224397,"slow":true,"start":1758640224397},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/taskmanager-api.test.js","failureMessage":"  ● FeatureManagerAPI › Feature Management › bulkApproveFeatures › should handle mixed success and failure scenarios\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Feature must be in 'suggested' status to approve\"\n    Received string:    \"Feature feature_1758628800000_bbbbbbbbbbbb must be in 'suggested' status to approve. Current status: approved\"\n\n      504 |         expect(result.approved_features).toHaveLength(2);\n      505 |         expect(result.errors).toHaveLength(1);\n    > 506 |         expect(result.errors[0]).toContain(\"Feature must be in 'suggested' status to approve\");\n          |                                  ^\n      507 |       });\n      508 |\n      509 |       test('should handle non-existent feature IDs', async () => {\n\n      at Object.toContain (test/unit/taskmanager-api.test.js:506:34)\n\n  ● FeatureManagerAPI › Error Handling › should handle file permission errors\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Failed to save features\"\n    Received string:    \"Permission denied\"\n\n      683 |\n      684 |       expect(result.success).toBe(false);\n    > 685 |       expect(result.error).toContain('Permission denied');\n          |                            ^\n      686 |     });\n      687 |\n      688 |     test('should handle unexpected errors in operations', async () => {\n\n      at Object.toContain (test/unit/taskmanager-api.test.js:685:28)\n","testResults":[{"ancestorTitles":["FeatureManagerAPI","Constructor and Initialization"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Constructor and Initialization should initialize with correct default values","status":"passed","title":"should initialize with correct default values"},{"ancestorTitles":["FeatureManagerAPI","Constructor and Initialization"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Constructor and Initialization should set features path correctly","status":"passed","title":"should set features path correctly"},{"ancestorTitles":["FeatureManagerAPI","Constructor and Initialization"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Constructor and Initialization should have withTimeout method for operation timeouts","status":"passed","title":"should have withTimeout method for operation timeouts"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_ensureFeaturesFile"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _ensureFeaturesFile should create FEATURES.json if it does not exist","status":"passed","title":"should create FEATURES.json if it does not exist"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_ensureFeaturesFile"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _ensureFeaturesFile should not overwrite existing FEATURES.json","status":"passed","title":"should not overwrite existing FEATURES.json"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should load existing features file successfully","status":"passed","title":"should load existing features file successfully"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should create file and return default structure if file does not exist","status":"passed","title":"should create file and return default structure if file does not exist"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":13,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should handle JSON parsing errors gracefully","status":"passed","title":"should handle JSON parsing errors gracefully"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_loadFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _loadFeatures should handle file read errors","status":"passed","title":"should handle file read errors"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_saveFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _saveFeatures should save features to file successfully","status":"passed","title":"should save features to file successfully"},{"ancestorTitles":["FeatureManagerAPI","File Operations","_saveFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI File Operations _saveFeatures should handle file write errors","status":"passed","title":"should handle file write errors"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should validate correct feature data successfully","status":"passed","title":"should validate correct feature data successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject null or undefined feature data","status":"passed","title":"should reject null or undefined feature data"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject missing required fields","status":"passed","title":"should reject missing required fields"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject empty required fields","status":"passed","title":"should reject empty required fields"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject invalid category","status":"passed","title":"should reject invalid category"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject title length violations","status":"passed","title":"should reject title length violations"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject description length violations","status":"passed","title":"should reject description length violations"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_validateFeatureData"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _validateFeatureData should reject business value length violations","status":"passed","title":"should reject business value length violations"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_generateFeatureId"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _generateFeatureId should generate unique feature IDs","status":"passed","title":"should generate unique feature IDs"},{"ancestorTitles":["FeatureManagerAPI","Feature Validation","_generateFeatureId"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Validation _generateFeatureId should generate IDs with correct format","status":"passed","title":"should generate IDs with correct format"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should create new feature suggestion successfully","status":"passed","title":"should create new feature suggestion successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should handle validation errors gracefully","status":"passed","title":"should handle validation errors gracefully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should handle file system errors during feature creation","status":"passed","title":"should handle file system errors during feature creation"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","suggestFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management suggestFeature should update metadata correctly","status":"passed","title":"should update metadata correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should approve suggested feature successfully","status":"passed","title":"should approve suggested feature successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should approve feature with default approval data","status":"passed","title":"should approve feature with default approval data"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should reject approval of non-existent feature","status":"passed","title":"should reject approval of non-existent feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should reject approval of non-suggested feature","status":"passed","title":"should reject approval of non-suggested feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should update approval history correctly","status":"passed","title":"should update approval history correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","approveFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management approveFeature should handle missing metadata gracefully","status":"passed","title":"should handle missing metadata gracefully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject suggested feature successfully","status":"passed","title":"should reject suggested feature successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject feature with default rejection data","status":"passed","title":"should reject feature with default rejection data"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject rejection of non-existent feature","status":"passed","title":"should reject rejection of non-existent feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should reject rejection of non-suggested feature","status":"passed","title":"should reject rejection of non-suggested feature"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","rejectFeature"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management rejectFeature should update approval history correctly","status":"passed","title":"should update approval history correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should approve multiple features successfully","status":"passed","title":"should approve multiple features successfully"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Feature must be in 'suggested' status to approve\"\nReceived string:    \"Feature feature_1758628800000_bbbbbbbbbbbb must be in 'suggested' status to approve. Current status: approved\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/taskmanager-api.test.js:506:34)"],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should handle mixed success and failure scenarios","status":"failed","title":"should handle mixed success and failure scenarios"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should handle non-existent feature IDs","status":"passed","title":"should handle non-existent feature IDs"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","bulkApproveFeatures"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management bulkApproveFeatures should handle empty feature IDs array","status":"passed","title":"should handle empty feature IDs array"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should list all features without filter","status":"passed","title":"should list all features without filter"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should filter features by status","status":"passed","title":"should filter features by status"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should filter features by category","status":"passed","title":"should filter features by category"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should return empty array for non-matching filters","status":"passed","title":"should return empty array for non-matching filters"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","listFeatures"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management listFeatures should handle file system errors","status":"passed","title":"should handle file system errors"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","getFeatureStats"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management getFeatureStats should calculate feature statistics correctly","status":"passed","title":"should calculate feature statistics correctly"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","getFeatureStats"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management getFeatureStats should include recent activity from approval history","status":"passed","title":"should include recent activity from approval history"},{"ancestorTitles":["FeatureManagerAPI","Feature Management","getFeatureStats"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Feature Management getFeatureStats should handle empty features file","status":"passed","title":"should handle empty features file"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should resolve normally for quick operations","status":"passed","title":"should resolve normally for quick operations"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":51,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should timeout slow operations with custom timeout","status":"passed","title":"should timeout slow operations with custom timeout"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":10002,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should use default timeout when not specified","status":"passed","title":"should use default timeout when not specified"},{"ancestorTitles":["FeatureManagerAPI","Timeout Handling","withTimeout"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Timeout Handling withTimeout should handle promise rejections correctly","status":"passed","title":"should handle promise rejections correctly"},{"ancestorTitles":["FeatureManagerAPI","Error Handling"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Error Handling should handle corrupted FEATURES.json gracefully","status":"passed","title":"should handle corrupted FEATURES.json gracefully"},{"ancestorTitles":["FeatureManagerAPI","Error Handling"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Failed to save features\"\nReceived string:    \"Permission denied\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/taskmanager-api.test.js:685:28)"],"fullName":"FeatureManagerAPI Error Handling should handle file permission errors","status":"failed","title":"should handle file permission errors"},{"ancestorTitles":["FeatureManagerAPI","Error Handling"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI Error Handling should handle unexpected errors in operations","status":"passed","title":"should handle unexpected errors in operations"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getApiMethods"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getApiMethods should return API methods information","status":"passed","title":"should return API methods information"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getApiMethods"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getApiMethods should include CLI mapping for all commands","status":"passed","title":"should include CLI mapping for all commands"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should return comprehensive guide with timeout","status":"passed","title":"should return comprehensive guide with timeout"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should include feature workflow information","status":"passed","title":"should include feature workflow information"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should include usage examples","status":"passed","title":"should include usage examples"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","getComprehensiveGuide"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods getComprehensiveGuide should handle timeout errors gracefully","status":"passed","title":"should handle timeout errors gracefully"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","_getFallbackGuide"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods _getFallbackGuide should return fallback guide for different contexts","status":"passed","title":"should return fallback guide for different contexts"},{"ancestorTitles":["FeatureManagerAPI","API Documentation Methods","_getFallbackGuide"],"duration":0,"failureMessages":[],"fullName":"FeatureManagerAPI API Documentation Methods _getFallbackGuide should include essential commands in fallback guide","status":"passed","title":"should include essential commands in fallback guide"},{"ancestorTitles":["FeatureManagerAPI","Cleanup"],"duration":1,"failureMessages":[],"fullName":"FeatureManagerAPI Cleanup should cleanup resources","status":"passed","title":"should cleanup resources"}]},{"numFailingTests":32,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640234844,"loadTestEnvironmentEnd":1758640234528,"loadTestEnvironmentStart":1758640234525,"runtime":316,"setupAfterEnvEnd":1758640234540,"setupAfterEnvStart":1758640234540,"setupFilesEnd":1758640234528,"setupFilesStart":1758640234528,"slow":false,"start":1758640234528},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js","failureMessage":"  ● Initialization Statistics › Time Bucket Calculations › Current Time Bucket Detection › should identify morning time bucket (07:00-11:59)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"07:00-11:59\"\n    Received: \"22:00-02:59\"\n\n      70 |           timeUtils.mockCurrentTimeISO(timeStr);\n      71 |           const bucket = api._getCurrentTimeBucket();\n    > 72 |           expect(bucket).toBe('07:00-11:59');\n         |                          ^\n      73 |         });\n      74 |       });\n      75 |\n\n      at toBe (test/unit/initialization-stats.test.js:72:26)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/unit/initialization-stats.test.js:69:22)\n\n  ● Initialization Statistics › Time Bucket Calculations › Current Time Bucket Detection › should identify afternoon time bucket (12:00-16:59)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"12:00-16:59\"\n    Received: \"07:00-11:59\"\n\n      84 |           timeUtils.mockCurrentTimeISO(timeStr);\n      85 |           const bucket = api._getCurrentTimeBucket();\n    > 86 |           expect(bucket).toBe('12:00-16:59');\n         |                          ^\n      87 |         });\n      88 |       });\n      89 |\n\n      at toBe (test/unit/initialization-stats.test.js:86:26)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/unit/initialization-stats.test.js:83:24)\n\n  ● Initialization Statistics › Time Bucket Calculations › Current Time Bucket Detection › should identify evening time bucket (17:00-21:59)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"17:00-21:59\"\n    Received: \"12:00-16:59\"\n\n       98 |           timeUtils.mockCurrentTimeISO(timeStr);\n       99 |           const bucket = api._getCurrentTimeBucket();\n    > 100 |           expect(bucket).toBe('17:00-21:59');\n          |                          ^\n      101 |         });\n      102 |       });\n      103 |\n\n      at toBe (test/unit/initialization-stats.test.js:100:26)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/unit/initialization-stats.test.js:97:22)\n\n  ● Initialization Statistics › Time Bucket Calculations › Current Time Bucket Detection › should identify late night time bucket (22:00-02:59)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"22:00-02:59\"\n    Received: \"17:00-21:59\"\n\n      113 |           timeUtils.mockCurrentTimeISO(timeStr);\n      114 |           const bucket = api._getCurrentTimeBucket();\n    > 115 |           expect(bucket).toBe('22:00-02:59');\n          |                          ^\n      116 |         });\n      117 |       });\n      118 |\n\n      at toBe (test/unit/initialization-stats.test.js:115:26)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/unit/initialization-stats.test.js:112:24)\n\n  ● Initialization Statistics › Time Bucket Calculations › Current Time Bucket Detection › should identify early morning time bucket (03:00-06:59)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"03:00-06:59\"\n    Received: \"22:00-02:59\"\n\n      127 |           timeUtils.mockCurrentTimeISO(timeStr);\n      128 |           const bucket = api._getCurrentTimeBucket();\n    > 129 |           expect(bucket).toBe('03:00-06:59');\n          |                          ^\n      130 |         });\n      131 |       });\n      132 |\n\n      at toBe (test/unit/initialization-stats.test.js:129:26)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/unit/initialization-stats.test.js:126:27)\n\n  ● Initialization Statistics › Time Bucket Calculations › Current Time Bucket Detection › should handle time bucket edge cases\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"07:00-11:59\"\n    Received: \"03:00-06:59\"\n\n      144 |           timeUtils.mockCurrentTimeISO(time);\n      145 |           const bucket = api._getCurrentTimeBucket();\n    > 146 |           expect(bucket).toBe(expected);\n          |                          ^\n      147 |         });\n      148 |       });\n      149 |     });\n\n      at toBe (test/unit/initialization-stats.test.js:146:26)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (test/unit/initialization-stats.test.js:143:19)\n\n  ● Initialization Statistics › Time Bucket Tracking › Initialization Tracking › should track initialization in correct time bucket\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      215 |       test('should track initialization in correct time bucket', async () => {\n      216 |         const result = await api._updateTimeBucketStats('init');\n    > 217 |         expect(result).toBe(true);\n          |                        ^\n      218 |\n      219 |         const features = await api._loadFeatures();\n      220 |         const stats = features.metadata.initialization_stats;\n\n      at Object.toBe (test/unit/initialization-stats.test.js:217:24)\n\n  ● Initialization Statistics › Time Bucket Tracking › Initialization Tracking › should track reinitialization in correct time bucket\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      231 |       test('should track reinitialization in correct time bucket', async () => {\n      232 |         const result = await api._updateTimeBucketStats('reinit');\n    > 233 |         expect(result).toBe(true);\n          |                        ^\n      234 |\n      235 |         const features = await api._loadFeatures();\n      236 |         const stats = features.metadata.initialization_stats;\n\n      at Object.toBe (test/unit/initialization-stats.test.js:233:24)\n\n  ● Initialization Statistics › Time Bucket Tracking › Initialization Tracking › should accumulate multiple operations in same time bucket\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:248:26)\n\n  ● Initialization Statistics › Time Bucket Tracking › Initialization Tracking › should distribute operations across different time buckets\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:270:26)\n\n  ● Initialization Statistics › Time Bucket Tracking › Initialization Tracking › should update last_updated timestamp\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:286:26)\n\n  ● Initialization Statistics › Time Bucket Tracking › Integration with Agent Operations › should track initialization through initializeAgent\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      294 |       test('should track initialization through initializeAgent', async () => {\n      295 |         const result = await api.initializeAgent('test-agent');\n    > 296 |         expect(result.success).toBe(true);\n          |                                ^\n      297 |\n      298 |         const statsResult = await api.getInitializationStats();\n      299 |         expect(statsResult.success).toBe(true);\n\n      at Object.toBe (test/unit/initialization-stats.test.js:296:32)\n\n  ● Initialization Statistics › Time Bucket Tracking › Integration with Agent Operations › should track reinitialization through reinitializeAgent\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      308 |         // Then reinitialize\n      309 |         const result = await api.reinitializeAgent('test-agent');\n    > 310 |         expect(result.success).toBe(true);\n          |                                ^\n      311 |\n      312 |         const statsResult = await api.getInitializationStats();\n      313 |         expect(statsResult.success).toBe(true);\n\n      at Object.toBe (test/unit/initialization-stats.test.js:310:32)\n\n  ● Initialization Statistics › Daily Reset Logic › Reset Detection › should detect day change and reset buckets\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:334:26)\n\n  ● Initialization Statistics › Daily Reset Logic › Reset Detection › should preserve historical data when resetting\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:362:26)\n\n  ● Initialization Statistics › Daily Reset Logic › Reset Detection › should not reset within the same day\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:384:26)\n\n  ● Initialization Statistics › Daily Reset Logic › Reset Detection › should skip reset if no activity to preserve\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:398:26)\n\n  ● Initialization Statistics › Daily Reset Logic › Reset Detection › should maintain rolling 30-day history\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:415:30)\n\n  ● Initialization Statistics › Statistics Retrieval › Basic Statistics Retrieval › should retrieve initialization statistics successfully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      448 |         const result = await api.getInitializationStats();\n      449 |\n    > 450 |         expect(result.success).toBe(true);\n          |                                ^\n      451 |         expect(result.stats).toBeDefined();\n      452 |         expect(result.message).toBe('Initialization statistics retrieved successfully');\n      453 |\n\n      at Object.toBe (test/unit/initialization-stats.test.js:450:32)\n\n  ● Initialization Statistics › Statistics Retrieval › Basic Statistics Retrieval › should format time buckets correctly\n\n    TypeError: Cannot read properties of undefined (reading 'time_buckets')\n\n      467 |         const result = await api.getInitializationStats();\n      468 |\n    > 469 |         const buckets = result.stats.time_buckets;\n          |                                      ^\n      470 |         const expectedBuckets = ['07:00-11:59', '12:00-16:59', '17:00-21:59', '22:00-02:59', '03:00-06:59'];\n      471 |\n      472 |         expectedBuckets.forEach(bucketName => {\n\n      at Object.time_buckets (test/unit/initialization-stats.test.js:469:38)\n\n  ● Initialization Statistics › Statistics Retrieval › Basic Statistics Retrieval › should calculate today totals correctly\n\n    TypeError: Cannot read properties of undefined (reading 'today_totals')\n\n      484 |         const result = await api.getInitializationStats();\n      485 |\n    > 486 |         const todayTotals = result.stats.today_totals;\n          |                                          ^\n      487 |         const buckets = result.stats.time_buckets;\n      488 |\n      489 |         const expectedInit = Object.values(buckets).reduce((sum, bucket) => sum + bucket.initializations, 0);\n\n      at Object.today_totals (test/unit/initialization-stats.test.js:486:42)\n\n  ● Initialization Statistics › Statistics Retrieval › Basic Statistics Retrieval › should include recent activity history\n\n    TypeError: Cannot read properties of undefined (reading 'recent_activity')\n\n      498 |         const result = await api.getInitializationStats();\n      499 |\n    > 500 |         expect(result.stats.recent_activity).toBeDefined();\n          |                             ^\n      501 |         expect(Array.isArray(result.stats.recent_activity)).toBe(true);\n      502 |         expect(result.stats.recent_activity.length).toBeLessThanOrEqual(7); // Last 7 days\n      503 |       });\n\n      at Object.recent_activity (test/unit/initialization-stats.test.js:500:29)\n\n  ● Initialization Statistics › Statistics Retrieval › Basic Statistics Retrieval › should handle missing initialization stats gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      511 |         const result = await api.getInitializationStats();\n      512 |\n    > 513 |         expect(result.success).toBe(true);\n          |                                ^\n      514 |         expect(result.stats.total_initializations).toBe(0);\n      515 |         expect(result.stats.total_reinitializations).toBe(0);\n      516 |         expect(result.stats.today_totals.combined).toBe(0);\n\n      at Object.toBe (test/unit/initialization-stats.test.js:513:32)\n\n  ● Initialization Statistics › Statistics Retrieval › Real-time Statistics Updates › should reflect real-time updates from agent operations\n\n    TypeError: Cannot read properties of undefined (reading 'total_initializations')\n\n      532 |         const updatedStats = await api.getInitializationStats();\n      533 |\n    > 534 |         expect(updatedStats.stats.total_initializations).toBeGreaterThan(\n          |                                   ^\n      535 |           initialStats.stats.total_initializations\n      536 |         );\n      537 |         expect(updatedStats.stats.total_reinitializations).toBeGreaterThan(\n\n      at Object.total_initializations (test/unit/initialization-stats.test.js:534:35)\n\n  ● Initialization Statistics › Statistics Retrieval › Real-time Statistics Updates › should update across time bucket changes\n\n    TypeError: Cannot read properties of undefined (reading 'time_buckets')\n\n      554 |         const stats = await api.getInitializationStats();\n      555 |\n    > 556 |         expect(stats.stats.time_buckets['12:00-16:59'].initializations).toBe(1);\n          |                            ^\n      557 |         expect(stats.stats.time_buckets['17:00-21:59'].reinitializations).toBe(1);\n      558 |         expect(stats.stats.current_bucket).toBe('17:00-21:59');\n      559 |       });\n\n      at Object.time_buckets (test/unit/initialization-stats.test.js:556:28)\n\n  ● Initialization Statistics › Error Handling › File System Errors › should handle file read errors in getInitializationStats\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Permission denied\"\n    Received string:    \"ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\"\n\n      571 |\n      572 |         expect(result.success).toBe(false);\n    > 573 |         expect(result.error).toContain('Permission denied');\n          |                              ^\n      574 |         expect(result.timestamp).toBeDefined();\n      575 |       });\n      576 |\n\n      at Object.toContain (test/unit/initialization-stats.test.js:573:30)\n\n  ● Initialization Statistics › Error Handling › Data Recovery › should recover from missing metadata structure\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      604 |         const result = await api.getInitializationStats();\n      605 |\n    > 606 |         expect(result.success).toBe(true);\n          |                                ^\n      607 |         expect(result.stats.total_initializations).toBe(0);\n      608 |         expect(result.stats.time_buckets).toBeDefined();\n      609 |       });\n\n      at Object.toBe (test/unit/initialization-stats.test.js:606:32)\n\n  ● Initialization Statistics › Error Handling › Data Recovery › should handle malformed time bucket data\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:621:33)\n\n  ● Initialization Statistics › Edge Cases and Boundaries › Time Boundary Edge Cases › should handle midnight crossover correctly\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:641:26)\n\n  ● Initialization Statistics › Edge Cases and Boundaries › Time Boundary Edge Cases › should handle year boundary crossover\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:675:26)\n\n  ● Initialization Statistics › Edge Cases and Boundaries › Large Data Sets › should handle large initialization counts\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      692 |         const result = await api.getInitializationStats();\n      693 |\n    > 694 |         expect(result.success).toBe(true);\n          |                                ^\n      695 |         expect(result.stats.total_initializations).toBe(1000);\n      696 |       });\n      697 |\n\n      at Object.toBe (test/unit/initialization-stats.test.js:694:32)\n\n  ● Initialization Statistics › Edge Cases and Boundaries › Large Data Sets › should handle extensive daily history\n\n    ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/initialization-stats.test.js:711:28)\n","testResults":[{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"07:00-11:59\"\nReceived: \"22:00-02:59\"\n    at toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:72:26)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:69:22)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify morning time bucket (07:00-11:59)","status":"failed","title":"should identify morning time bucket (07:00-11:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"12:00-16:59\"\nReceived: \"07:00-11:59\"\n    at toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:86:26)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:83:24)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify afternoon time bucket (12:00-16:59)","status":"failed","title":"should identify afternoon time bucket (12:00-16:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"17:00-21:59\"\nReceived: \"12:00-16:59\"\n    at toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:100:26)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:97:22)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify evening time bucket (17:00-21:59)","status":"failed","title":"should identify evening time bucket (17:00-21:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"22:00-02:59\"\nReceived: \"17:00-21:59\"\n    at toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:115:26)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:112:24)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify late night time bucket (22:00-02:59)","status":"failed","title":"should identify late night time bucket (22:00-02:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"03:00-06:59\"\nReceived: \"22:00-02:59\"\n    at toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:129:26)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:126:27)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should identify early morning time bucket (03:00-06:59)","status":"failed","title":"should identify early morning time bucket (03:00-06:59)"},{"ancestorTitles":["Initialization Statistics","Time Bucket Calculations","Current Time Bucket Detection"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"07:00-11:59\"\nReceived: \"03:00-06:59\"\n    at toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:146:26)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:143:19)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Initialization Statistics Time Bucket Calculations Current Time Bucket Detection should handle time bucket edge cases","status":"failed","title":"should handle time bucket edge cases"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":0,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should create initialization stats structure when missing","status":"passed","title":"should create initialization stats structure when missing"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":1,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should create all required time buckets","status":"passed","title":"should create all required time buckets"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":0,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should preserve existing stats structure","status":"passed","title":"should preserve existing stats structure"},{"ancestorTitles":["Initialization Statistics","Initialization Stats Structure","Stats Structure Creation"],"duration":0,"failureMessages":[],"fullName":"Initialization Statistics Initialization Stats Structure Stats Structure Creation should create metadata if completely missing","status":"passed","title":"should create metadata if completely missing"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":5,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:217:24)"],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should track initialization in correct time bucket","status":"failed","title":"should track initialization in correct time bucket"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:233:24)"],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should track reinitialization in correct time bucket","status":"failed","title":"should track reinitialization in correct time bucket"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":8,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:248:26)"],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should accumulate multiple operations in same time bucket","status":"failed","title":"should accumulate multiple operations in same time bucket"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:270:26)"],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should distribute operations across different time buckets","status":"failed","title":"should distribute operations across different time buckets"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Initialization Tracking"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:286:26)"],"fullName":"Initialization Statistics Time Bucket Tracking Initialization Tracking should update last_updated timestamp","status":"failed","title":"should update last_updated timestamp"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Integration with Agent Operations"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:296:32)"],"fullName":"Initialization Statistics Time Bucket Tracking Integration with Agent Operations should track initialization through initializeAgent","status":"failed","title":"should track initialization through initializeAgent"},{"ancestorTitles":["Initialization Statistics","Time Bucket Tracking","Integration with Agent Operations"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:310:32)"],"fullName":"Initialization Statistics Time Bucket Tracking Integration with Agent Operations should track reinitialization through reinitializeAgent","status":"failed","title":"should track reinitialization through reinitializeAgent"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:334:26)"],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should detect day change and reset buckets","status":"failed","title":"should detect day change and reset buckets"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":0,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:362:26)"],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should preserve historical data when resetting","status":"failed","title":"should preserve historical data when resetting"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:384:26)"],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should not reset within the same day","status":"failed","title":"should not reset within the same day"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":0,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:398:26)"],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should skip reset if no activity to preserve","status":"failed","title":"should skip reset if no activity to preserve"},{"ancestorTitles":["Initialization Statistics","Daily Reset Logic","Reset Detection"],"duration":0,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:415:30)"],"fullName":"Initialization Statistics Daily Reset Logic Reset Detection should maintain rolling 30-day history","status":"failed","title":"should maintain rolling 30-day history"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:450:32)"],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should retrieve initialization statistics successfully","status":"failed","title":"should retrieve initialization statistics successfully"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'time_buckets')\n    at Object.time_buckets (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:469:38)"],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should format time buckets correctly","status":"failed","title":"should format time buckets correctly"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'today_totals')\n    at Object.today_totals (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:486:42)"],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should calculate today totals correctly","status":"failed","title":"should calculate today totals correctly"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'recent_activity')\n    at Object.recent_activity (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:500:29)"],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should include recent activity history","status":"failed","title":"should include recent activity history"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Basic Statistics Retrieval"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:513:32)"],"fullName":"Initialization Statistics Statistics Retrieval Basic Statistics Retrieval should handle missing initialization stats gracefully","status":"failed","title":"should handle missing initialization stats gracefully"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Real-time Statistics Updates"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'total_initializations')\n    at Object.total_initializations (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:534:35)"],"fullName":"Initialization Statistics Statistics Retrieval Real-time Statistics Updates should reflect real-time updates from agent operations","status":"failed","title":"should reflect real-time updates from agent operations"},{"ancestorTitles":["Initialization Statistics","Statistics Retrieval","Real-time Statistics Updates"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'time_buckets')\n    at Object.time_buckets (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:556:28)"],"fullName":"Initialization Statistics Statistics Retrieval Real-time Statistics Updates should update across time bucket changes","status":"failed","title":"should update across time bucket changes"},{"ancestorTitles":["Initialization Statistics","Error Handling","File System Errors"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Permission denied\"\nReceived string:    \"ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\"\n    at Object.toContain (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:573:30)"],"fullName":"Initialization Statistics Error Handling File System Errors should handle file read errors in getInitializationStats","status":"failed","title":"should handle file read errors in getInitializationStats"},{"ancestorTitles":["Initialization Statistics","Error Handling","File System Errors"],"duration":0,"failureMessages":[],"fullName":"Initialization Statistics Error Handling File System Errors should handle file write errors in _updateTimeBucketStats","status":"passed","title":"should handle file write errors in _updateTimeBucketStats"},{"ancestorTitles":["Initialization Statistics","Error Handling","File System Errors"],"duration":0,"failureMessages":[],"fullName":"Initialization Statistics Error Handling File System Errors should handle corrupted features file","status":"passed","title":"should handle corrupted features file"},{"ancestorTitles":["Initialization Statistics","Error Handling","Data Recovery"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:606:32)"],"fullName":"Initialization Statistics Error Handling Data Recovery should recover from missing metadata structure","status":"failed","title":"should recover from missing metadata structure"},{"ancestorTitles":["Initialization Statistics","Error Handling","Data Recovery"],"duration":0,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:621:33)"],"fullName":"Initialization Statistics Error Handling Data Recovery should handle malformed time bucket data","status":"failed","title":"should handle malformed time bucket data"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Time Boundary Edge Cases"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:641:26)"],"fullName":"Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle midnight crossover correctly","status":"failed","title":"should handle midnight crossover correctly"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Time Boundary Edge Cases"],"duration":0,"failureMessages":[],"fullName":"Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle daylight saving time transitions","status":"passed","title":"should handle daylight saving time transitions"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Time Boundary Edge Cases"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:675:26)"],"fullName":"Initialization Statistics Edge Cases and Boundaries Time Boundary Edge Cases should handle year boundary crossover","status":"failed","title":"should handle year boundary crossover"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Large Data Sets"],"duration":199,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:694:32)"],"fullName":"Initialization Statistics Edge Cases and Boundaries Large Data Sets should handle large initialization counts","status":"failed","title":"should handle large initialization counts"},{"ancestorTitles":["Initialization Statistics","Edge Cases and Boundaries","Large Data Sets"],"duration":1,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/stats-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/initialization-stats.test.js:711:28)"],"fullName":"Initialization Statistics Edge Cases and Boundaries Large Data Sets should handle extensive daily history","status":"failed","title":"should handle extensive daily history"}]},{"numFailingTests":31,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640234924,"loadTestEnvironmentEnd":1758640234847,"loadTestEnvironmentStart":1758640234845,"runtime":76,"setupAfterEnvEnd":1758640234857,"setupAfterEnvStart":1758640234857,"setupFilesEnd":1758640234848,"setupFilesStart":1758640234848,"slow":false,"start":1758640234848},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js","failureMessage":"  ● Agent Management › Agent Initialization › Basic Agent Initialization › should initialize new agent successfully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      77 |         const result = await api.initializeAgent(agentId);\n      78 |\n    > 79 |         expect(result.success).toBe(true);\n         |                                ^\n      80 |         expect(result.agent).toBeDefined();\n      81 |         expect(result.agent.id).toBe(agentId);\n      82 |         expect(result.agent.status).toBe('initialized');\n\n      at Object.toBe (test/unit/agent-management.test.js:79:32)\n\n  ● Agent Management › Agent Initialization › Basic Agent Initialization › should generate unique session IDs for different agents\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      93 |         const result2 = await api.initializeAgent(agent2);\n      94 |\n    > 95 |         expect(result1.success).toBe(true);\n         |                                 ^\n      96 |         expect(result2.success).toBe(true);\n      97 |         expect(result1.agent.sessionId).toBeDefined();\n      98 |         expect(result2.agent.sessionId).toBeDefined();\n\n      at Object.toBe (test/unit/agent-management.test.js:95:33)\n\n  ● Agent Management › Agent Initialization › Basic Agent Initialization › should update features file with agent data\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      104 |\n      105 |         const result = await api.initializeAgent(agentId);\n    > 106 |         expect(result.success).toBe(true);\n          |                                ^\n      107 |\n      108 |         const features = await api._loadFeatures();\n      109 |         expect(features.agents).toBeDefined();\n\n      at Object.toBe (test/unit/agent-management.test.js:106:32)\n\n  ● Agent Management › Agent Initialization › Basic Agent Initialization › should track initialization in time bucket stats\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      119 |\n      120 |         const result = await api.initializeAgent(agentId);\n    > 121 |         expect(result.success).toBe(true);\n          |                                ^\n      122 |\n      123 |         // Verify initialization stats were updated\n      124 |         const statsResult = await api.getInitializationStats();\n\n      at Object.toBe (test/unit/agent-management.test.js:121:32)\n\n  ● Agent Management › Agent Initialization › Basic Agent Initialization › should handle agent initialization with special characters in ID\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      138 |           const result = await api.initializeAgent(agentId);\n      139 |\n    > 140 |           expect(result.success).toBe(true);\n          |                                  ^\n      141 |           expect(result.agent.id).toBe(agentId);\n      142 |         }\n      143 |       });\n\n      at Object.toBe (test/unit/agent-management.test.js:140:34)\n\n  ● Agent Management › Agent Initialization › Agent Session Management › should create agent entry in features file\n\n    ENOENT: no such file or directory, open '/test/agent-project/FEATURES.json'\n\n      102 |       };\n      103 |\n    > 104 |       await fs.writeFile(this.featuresPath, JSON.stringify(initialStructure, null, 2));\n          |       ^\n      105 |     }\n      106 |   }\n      107 |\n\n      at FeatureManagerAPI._ensureFeaturesFile (taskmanager-api.js:104:7)\n      at FeatureManagerAPI._loadFeatures (taskmanager-api.js:733:9)\n      at Object.<anonymous> (test/unit/agent-management.test.js:152:26)\n\n  ● Agent Management › Agent Initialization › Agent Session Management › should overwrite existing agent data on new initialization\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      165 |         // First initialization\n      166 |         const result1 = await api.initializeAgent(agentId);\n    > 167 |         const sessionId1 = result1.agent.sessionId;\n          |                                          ^\n      168 |\n      169 |         // Advance time slightly\n      170 |         timeUtils.mockCurrentTimeISO('2025-09-23T12:05:00.000Z');\n\n      at Object.sessionId (test/unit/agent-management.test.js:167:42)\n\n  ● Agent Management › Agent Initialization › Agent Session Management › should initialize agents section if it does not exist\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      195 |         const result = await api.initializeAgent(agentId);\n      196 |\n    > 197 |         expect(result.success).toBe(true);\n          |                                ^\n      198 |\n      199 |         const features = await api._loadFeatures();\n      200 |         expect(features.agents).toBeDefined();\n\n      at Object.toBe (test/unit/agent-management.test.js:197:32)\n\n  ● Agent Management › Agent Initialization › Initialization Error Handling › should handle empty agent ID gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      226 |         const result = await api.initializeAgent('');\n      227 |\n    > 228 |         expect(result.success).toBe(true);\n          |                                ^\n      229 |         expect(result.agent.id).toBe('');\n      230 |       });\n      231 |     });\n\n      at Object.toBe (test/unit/agent-management.test.js:228:32)\n\n  ● Agent Management › Agent Reinitialization › Basic Agent Reinitialization › should reinitialize existing agent successfully\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Basic Agent Reinitialization › should preserve agent history during reinitialization\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Basic Agent Reinitialization › should update timestamps on reinitialization\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Basic Agent Reinitialization › should track reinitialization in time bucket stats\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Reinitialization Session Management › should accumulate previous sessions across multiple reinitializations\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Reinitialization Session Management › should reinitialize non-existent agent as new agent\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Reinitialization Session Management › should handle agent without previous session data\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Reinitialization Error Handling › should handle file write errors during reinitialization\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Agent Reinitialization › Reinitialization Error Handling › should handle corrupted features file during reinitialization\n\n    TypeError: Cannot read properties of undefined (reading 'sessionId')\n\n      241 |       existingAgentId = 'existing-agent';\n      242 |       const initResult = await api.initializeAgent(existingAgentId);\n    > 243 |       originalSessionId = initResult.agent.sessionId;\n          |                                            ^\n      244 |     });\n      245 |\n      246 |     describe('Basic Agent Reinitialization', () => {\n\n      at Object.sessionId (test/unit/agent-management.test.js:243:44)\n\n  ● Agent Management › Stop Authorization › Basic Stop Authorization › should create .stop-allowed flag file\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      416 |\n      417 |         // Verify flag file was created\n    > 418 |         expect(mockFs.hasFile(TEST_STOP_FLAG_PATH)).toBe(true);\n          |                                                     ^\n      419 |\n      420 |         const flagContent = JSON.parse(mockFs.getFile(TEST_STOP_FLAG_PATH));\n      421 |         expect(flagContent.stop_allowed).toBe(true);\n\n      at Object.toBe (test/unit/agent-management.test.js:418:53)\n\n  ● Agent Management › Stop Authorization › Basic Stop Authorization › should include comprehensive stop data in flag file\n\n    SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n\n      432 |         expect(result.success).toBe(true);\n      433 |\n    > 434 |         const flagContent = JSON.parse(mockFs.getFile(TEST_STOP_FLAG_PATH));\n          |                                  ^\n      435 |\n      436 |         expect(flagContent).toEqual({\n      437 |           stop_allowed: true,\n\n      at Object.parse (test/unit/agent-management.test.js:434:34)\n\n  ● Agent Management › Stop Authorization › Stop Authorization Edge Cases › should handle empty agent ID\n\n    SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n\n      451 |         expect(result.authorization.authorized_by).toBe('');\n      452 |\n    > 453 |         const flagContent = JSON.parse(mockFs.getFile(TEST_STOP_FLAG_PATH));\n          |                                  ^\n      454 |         expect(flagContent.authorized_by).toBe('');\n      455 |       });\n      456 |\n\n      at Object.parse (test/unit/agent-management.test.js:453:34)\n\n  ● Agent Management › Stop Authorization › Stop Authorization Edge Cases › should handle very long reasons\n\n    SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n\n      464 |         expect(result.authorization.reason).toBe(longReason);\n      465 |\n    > 466 |         const flagContent = JSON.parse(mockFs.getFile(TEST_STOP_FLAG_PATH));\n          |                                  ^\n      467 |         expect(flagContent.reason).toBe(longReason);\n      468 |       });\n      469 |\n\n      at Object.parse (test/unit/agent-management.test.js:466:34)\n\n  ● Agent Management › Stop Authorization › Stop Authorization Edge Cases › should overwrite existing stop flag\n\n    SyntaxError: \"undefined\" is not valid JSON\n        at JSON.parse (<anonymous>)\n\n      494 |         expect(result2.success).toBe(true);\n      495 |\n    > 496 |         const flagContent = JSON.parse(mockFs.getFile(TEST_STOP_FLAG_PATH));\n          |                                  ^\n      497 |         expect(flagContent.authorized_by).toBe(secondAgent);\n      498 |         expect(flagContent.reason).toBe('Second stop reason');\n      499 |         expect(flagContent.timestamp).toBe('2025-09-23T13:00:00.000Z');\n\n      at Object.parse (test/unit/agent-management.test.js:496:34)\n\n  ● Agent Management › Stop Authorization › Stop Authorization Error Handling › should handle file write errors during stop authorization\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      507 |         const result = await api.authorizeStop('error-agent');\n      508 |\n    > 509 |         expect(result.success).toBe(false);\n          |                                ^\n      510 |         expect(result.error).toContain('Failed to authorize stop');\n      511 |         expect(result.timestamp).toBeDefined();\n      512 |       });\n\n      at Object.toBe (test/unit/agent-management.test.js:509:32)\n\n  ● Agent Management › Stop Authorization › Stop Authorization Error Handling › should handle file system errors gracefully\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n\n  ● Agent Management › Agent Management Integration › Agent Lifecycle Integration › should handle complete agent lifecycle\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:44:18)\n\n  ● Agent Management › Agent Management Integration › Agent Lifecycle Integration › should handle complete agent lifecycle\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n\n  ● Agent Management › Agent Management Integration › Agent Lifecycle Integration › should handle multiple agents with different lifecycles\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:44:18)\n\n  ● Agent Management › Agent Management Integration › Agent Lifecycle Integration › should handle multiple agents with different lifecycles\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n\n  ● Agent Management › Agent Management Integration › Agent Management with Feature Operations › should maintain agent state during feature operations\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:44:18)\n\n  ● Agent Management › Agent Management Integration › Agent Management with Feature Operations › should maintain agent state during feature operations\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n\n  ● Agent Management › Edge Cases and Error Recovery › Data Consistency › should handle partial agent data gracefully\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:44:18)\n\n  ● Agent Management › Edge Cases and Error Recovery › Data Consistency › should handle partial agent data gracefully\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n\n  ● Agent Management › Edge Cases and Error Recovery › Data Consistency › should handle malformed agent data\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:44:18)\n\n  ● Agent Management › Edge Cases and Error Recovery › Data Consistency › should handle malformed agent data\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n\n  ● Agent Management › Edge Cases and Error Recovery › Concurrent Operations › should handle multiple agent operations on same file\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:44:18)\n\n  ● Agent Management › Edge Cases and Error Recovery › Concurrent Operations › should handle multiple agent operations on same file\n\n    File system unavailable\n\n      516 |         const originalRequire = require;\n      517 |         jest.doMock('fs', () => {\n    > 518 |           throw new Error('File system unavailable');\n          |                 ^\n      519 |         });\n      520 |\n      521 |         try {\n\n      at test/unit/agent-management.test.js:518:17\n      at Object.require (test/unit/agent-management.test.js:62:16)\n","testResults":[{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":2,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:79:32)"],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should initialize new agent successfully","status":"failed","title":"should initialize new agent successfully"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":3,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:95:33)"],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should generate unique session IDs for different agents","status":"failed","title":"should generate unique session IDs for different agents"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:106:32)"],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should update features file with agent data","status":"failed","title":"should update features file with agent data"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:121:32)"],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should track initialization in time bucket stats","status":"failed","title":"should track initialization in time bucket stats"},{"ancestorTitles":["Agent Management","Agent Initialization","Basic Agent Initialization"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:140:34)"],"fullName":"Agent Management Agent Initialization Basic Agent Initialization should handle agent initialization with special characters in ID","status":"failed","title":"should handle agent initialization with special characters in ID"},{"ancestorTitles":["Agent Management","Agent Initialization","Agent Session Management"],"duration":0,"failureMessages":["Error: ENOENT: no such file or directory, open '/test/agent-project/FEATURES.json'\n    at open (node:internal/fs/promises:641:25)\n    at Object.writeFile (node:internal/fs/promises:1215:14)\n    at FeatureManagerAPI._ensureFeaturesFile (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:104:7)\n    at FeatureManagerAPI._loadFeatures (/Users/jeremyparker/infinite-continue-stop-hook/taskmanager-api.js:733:9)\n    at Object.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:152:26)"],"fullName":"Agent Management Agent Initialization Agent Session Management should create agent entry in features file","status":"failed","title":"should create agent entry in features file"},{"ancestorTitles":["Agent Management","Agent Initialization","Agent Session Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:167:42)"],"fullName":"Agent Management Agent Initialization Agent Session Management should overwrite existing agent data on new initialization","status":"failed","title":"should overwrite existing agent data on new initialization"},{"ancestorTitles":["Agent Management","Agent Initialization","Agent Session Management"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:197:32)"],"fullName":"Agent Management Agent Initialization Agent Session Management should initialize agents section if it does not exist","status":"failed","title":"should initialize agents section if it does not exist"},{"ancestorTitles":["Agent Management","Agent Initialization","Initialization Error Handling"],"duration":1,"failureMessages":[],"fullName":"Agent Management Agent Initialization Initialization Error Handling should handle file write errors during initialization","status":"passed","title":"should handle file write errors during initialization"},{"ancestorTitles":["Agent Management","Agent Initialization","Initialization Error Handling"],"duration":0,"failureMessages":[],"fullName":"Agent Management Agent Initialization Initialization Error Handling should handle corrupted features file during initialization","status":"passed","title":"should handle corrupted features file during initialization"},{"ancestorTitles":["Agent Management","Agent Initialization","Initialization Error Handling"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:228:32)"],"fullName":"Agent Management Agent Initialization Initialization Error Handling should handle empty agent ID gracefully","status":"failed","title":"should handle empty agent ID gracefully"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should reinitialize existing agent successfully","status":"failed","title":"should reinitialize existing agent successfully"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should preserve agent history during reinitialization","status":"failed","title":"should preserve agent history during reinitialization"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should update timestamps on reinitialization","status":"failed","title":"should update timestamps on reinitialization"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Basic Agent Reinitialization"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Basic Agent Reinitialization should track reinitialization in time bucket stats","status":"failed","title":"should track reinitialization in time bucket stats"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Session Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Reinitialization Session Management should accumulate previous sessions across multiple reinitializations","status":"failed","title":"should accumulate previous sessions across multiple reinitializations"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Session Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Reinitialization Session Management should reinitialize non-existent agent as new agent","status":"failed","title":"should reinitialize non-existent agent as new agent"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Session Management"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Reinitialization Session Management should handle agent without previous session data","status":"failed","title":"should handle agent without previous session data"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Error Handling"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Reinitialization Error Handling should handle file write errors during reinitialization","status":"failed","title":"should handle file write errors during reinitialization"},{"ancestorTitles":["Agent Management","Agent Reinitialization","Reinitialization Error Handling"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'sessionId')\n    at Object.sessionId (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:243:44)"],"fullName":"Agent Management Agent Reinitialization Reinitialization Error Handling should handle corrupted features file during reinitialization","status":"failed","title":"should handle corrupted features file during reinitialization"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":1,"failureMessages":[],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should authorize stop successfully with reason","status":"passed","title":"should authorize stop successfully with reason"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":0,"failureMessages":[],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should authorize stop with default reason when none provided","status":"passed","title":"should authorize stop with default reason when none provided"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:418:53)"],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should create .stop-allowed flag file","status":"failed","title":"should create .stop-allowed flag file"},{"ancestorTitles":["Agent Management","Stop Authorization","Basic Stop Authorization"],"duration":1,"failureMessages":["SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:434:34)"],"fullName":"Agent Management Stop Authorization Basic Stop Authorization should include comprehensive stop data in flag file","status":"failed","title":"should include comprehensive stop data in flag file"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":0,"failureMessages":["SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:453:34)"],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should handle empty agent ID","status":"failed","title":"should handle empty agent ID"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":0,"failureMessages":["SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:466:34)"],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should handle very long reasons","status":"failed","title":"should handle very long reasons"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":1,"failureMessages":[],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should handle special characters in agent ID and reason","status":"passed","title":"should handle special characters in agent ID and reason"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Edge Cases"],"duration":0,"failureMessages":["SyntaxError: \"undefined\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Object.parse (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:496:34)"],"fullName":"Agent Management Stop Authorization Stop Authorization Edge Cases should overwrite existing stop flag","status":"failed","title":"should overwrite existing stop flag"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Error Handling"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:509:32)"],"fullName":"Agent Management Stop Authorization Stop Authorization Error Handling should handle file write errors during stop authorization","status":"failed","title":"should handle file write errors during stop authorization"},{"ancestorTitles":["Agent Management","Stop Authorization","Stop Authorization Error Handling"],"duration":1,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Stop Authorization Stop Authorization Error Handling should handle file system errors gracefully","status":"failed","title":"should handle file system errors gracefully"},{"ancestorTitles":["Agent Management","Agent Management Integration","Agent Lifecycle Integration"],"duration":0,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:44:18)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:940:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)","Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Agent Management Integration Agent Lifecycle Integration should handle complete agent lifecycle","status":"failed","title":"should handle complete agent lifecycle"},{"ancestorTitles":["Agent Management","Agent Management Integration","Agent Lifecycle Integration"],"duration":0,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:44:18)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:940:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)","Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Agent Management Integration Agent Lifecycle Integration should handle multiple agents with different lifecycles","status":"failed","title":"should handle multiple agents with different lifecycles"},{"ancestorTitles":["Agent Management","Agent Management Integration","Agent Management with Feature Operations"],"duration":0,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:44:18)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:940:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)","Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Agent Management Integration Agent Management with Feature Operations should maintain agent state during feature operations","status":"failed","title":"should maintain agent state during feature operations"},{"ancestorTitles":["Agent Management","Edge Cases and Error Recovery","Data Consistency"],"duration":0,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:44:18)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:940:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)","Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Edge Cases and Error Recovery Data Consistency should handle partial agent data gracefully","status":"failed","title":"should handle partial agent data gracefully"},{"ancestorTitles":["Agent Management","Edge Cases and Error Recovery","Data Consistency"],"duration":0,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:44:18)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:940:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)","Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Edge Cases and Error Recovery Data Consistency should handle malformed agent data","status":"failed","title":"should handle malformed agent data"},{"ancestorTitles":["Agent Management","Edge Cases and Error Recovery","Concurrent Operations"],"duration":0,"failureMessages":["Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:44:18)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:940:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)","Error: File system unavailable\n    at /Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:518:17\n    at Runtime.requireMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:874:55)\n    at Runtime.requireModuleOrMock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runtime/build/index.js:962:21)\n    at Object.require (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/agent-management.test.js:62:16)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusHook (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:975:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:948:5)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Agent Management Edge Cases and Error Recovery Concurrent Operations should handle multiple agent operations on same file","status":"failed","title":"should handle multiple agent operations on same file"}]},{"numFailingTests":18,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640235472,"loadTestEnvironmentEnd":1758640234928,"loadTestEnvironmentStart":1758640234926,"runtime":544,"setupAfterEnvEnd":1758640234936,"setupAfterEnvStart":1758640234936,"setupFilesEnd":1758640234928,"setupFilesStart":1758640234928,"slow":false,"start":1758640234928},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js","failureMessage":"  ● Feature Management System Unit Tests › Agent Initialization › should initialize agent successfully\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Agent Initialization › should reinitialize existing agent successfully\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Suggestion › should create feature suggestion with enhancement category\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Suggestion › should create feature suggestion with new-feature category\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Suggestion › should create feature suggestion with bug-fix category\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Suggestion › should handle incomplete feature data appropriately\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Suggestion › should handle invalid category appropriately\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Listing › should list all features\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Listing › should filter features by status\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Listing › should filter features by category\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Approval Workflow › should approve feature successfully\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Approval Workflow › should reject feature successfully\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Approval Workflow › should handle non-existent feature appropriately\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Statistics › should attempt to generate feature statistics\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Feature Statistics › should handle statistics requests gracefully\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Initialization Statistics › should get initialization statistics\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › Initialization Statistics › should include time bucket statistics\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n\n  ● Feature Management System Unit Tests › API Documentation › should provide API guide\n\n    Command failed (code 1): node:internal/modules/cjs/loader:1386\n      throw err;\n      ^\n\n    Error: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n\n      68 |         } catch {\n      69 |           reject(\n    > 70 |             new Error(\n         |             ^\n      71 |               `Command failed (code ${code}): ${stderr}\\nStdout: ${stdout}\\nParse error: ${parseError.message}`,\n      72 |             ),\n      73 |           );\n\n      at node:internal/main/run_main_module:36:49 {\n        code: 'MODULE_NOT_FOUND',\n        requireStack: []\n      }\n      Node.js v22.19.0\n      Stdout: \n      Parse error: Unexpected end of JSON input\n      at ChildProcess.<anonymous> (test/unit/feature-management-system.test.js:70:13)\n","testResults":[{"ancestorTitles":["Feature Management System Unit Tests","Agent Initialization"],"duration":33,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Agent Initialization should initialize agent successfully","status":"failed","title":"should initialize agent successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Agent Initialization"],"duration":29,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Agent Initialization should reinitialize existing agent successfully","status":"failed","title":"should reinitialize existing agent successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Suggestion should create feature suggestion with enhancement category","status":"failed","title":"should create feature suggestion with enhancement category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Suggestion should create feature suggestion with new-feature category","status":"failed","title":"should create feature suggestion with new-feature category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Suggestion should create feature suggestion with bug-fix category","status":"failed","title":"should create feature suggestion with bug-fix category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Suggestion should handle incomplete feature data appropriately","status":"failed","title":"should handle incomplete feature data appropriately"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Suggestion"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Suggestion should handle invalid category appropriately","status":"failed","title":"should handle invalid category appropriately"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Listing"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Listing should list all features","status":"failed","title":"should list all features"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Listing"],"duration":26,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Listing should filter features by status","status":"failed","title":"should filter features by status"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Listing"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Listing should filter features by category","status":"failed","title":"should filter features by category"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Approval Workflow"],"duration":26,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Approval Workflow should approve feature successfully","status":"failed","title":"should approve feature successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Approval Workflow"],"duration":26,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Approval Workflow should reject feature successfully","status":"failed","title":"should reject feature successfully"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Approval Workflow"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Approval Workflow should handle non-existent feature appropriately","status":"failed","title":"should handle non-existent feature appropriately"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Statistics"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Statistics should attempt to generate feature statistics","status":"failed","title":"should attempt to generate feature statistics"},{"ancestorTitles":["Feature Management System Unit Tests","Feature Statistics"],"duration":26,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Feature Statistics should handle statistics requests gracefully","status":"failed","title":"should handle statistics requests gracefully"},{"ancestorTitles":["Feature Management System Unit Tests","Initialization Statistics"],"duration":27,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Initialization Statistics should get initialization statistics","status":"failed","title":"should get initialization statistics"},{"ancestorTitles":["Feature Management System Unit Tests","Initialization Statistics"],"duration":26,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests Initialization Statistics should include time bucket statistics","status":"failed","title":"should include time bucket statistics"},{"ancestorTitles":["Feature Management System Unit Tests","API Documentation"],"duration":26,"failureMessages":["Error: Command failed (code 1): node:internal/modules/cjs/loader:1386\n  throw err;\n  ^\n\nError: Cannot find module '/Users/jeremyparker/infinite-continue-stop-hook/test/taskmanager-api.js'\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)\n    at Function._load (node:internal/modules/cjs/loader:1192:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)\n    at node:internal/main/run_main_module:36:49 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n\nNode.js v22.19.0\n\nStdout: \nParse error: Unexpected end of JSON input\n    at ChildProcess.<anonymous> (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/feature-management-system.test.js:70:13)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)"],"fullName":"Feature Management System Unit Tests API Documentation should provide API guide","status":"failed","title":"should provide API guide"},{"ancestorTitles":["Feature Management System Unit Tests","API Documentation"],"duration":26,"failureMessages":[],"fullName":"Feature Management System Unit Tests API Documentation should handle methods request","status":"passed","title":"should handle methods request"}]},{"numFailingTests":4,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640237082,"loadTestEnvironmentEnd":1758640235474,"loadTestEnvironmentStart":1758640235472,"runtime":1608,"setupAfterEnvEnd":1758640235484,"setupAfterEnvStart":1758640235484,"setupFilesEnd":1758640235474,"setupFilesStart":1758640235474,"slow":false,"start":1758640235474},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js","failureMessage":"  ● Example Test with Mock Framework › API Mock Integration › should mock agent initialization\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      392 |   if (mockManager) {\n      393 |     const agent = mockManager.taskManagerAPI.agents.get(agentId);\n    > 394 |     expect(agent).toBeDefined();\n          |                   ^\n      395 |     expect(agent.status).toBe('active');\n      396 |     return agent;\n      397 |   }\n\n      at toBeDefined (test/mocks/mockSetup.js:394:19)\n      at Object.expectAgentInitialized (test/unit/example-with-mocks.test.js:115:7)\n\n  ● Example Test with Mock Framework › API Mock Integration › should mock feature creation\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      381 |     const features = Array.from(mockManager.taskManagerAPI.features.values());\n      382 |     const feature = features.find(f => f.title === featureData.title);\n    > 383 |     expect(feature).toBeDefined();\n          |                     ^\n      384 |     expect(feature.title).toBe(featureData.title);\n      385 |     return feature;\n      386 |   }\n\n      at toBeDefined (test/mocks/mockSetup.js:383:21)\n      at Object.expectFeatureCreated (test/unit/example-with-mocks.test.js:134:7)\n\n  ● Example Test with Mock Framework › API Mock Integration › should handle feature validation errors\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      146 |       const result = await APIExecutor.createTestFeature(invalidFeatureData);\n      147 |\n    > 148 |       expect(result.success).toBe(false);\n          |                              ^\n      149 |       expect(result.error).toContain('Missing required fields');\n      150 |     });\n      151 |\n\n      at Object.toBe (test/unit/example-with-mocks.test.js:148:30)\n\n  ● Example Test with Mock Framework › Test Data Factory › should create consistent test data\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"Test Feature 1758640236953\"\n\n      270 |       const feature2 = TestDataFactory.createFeatureData();\n      271 |\n    > 272 |       expect(feature1.title).not.toBe(feature2.title); // Should be unique\n          |                                  ^\n      273 |       expect(feature1.business_value).toBeDefined();\n      274 |       expect(feature1.category).toBe('enhancement'); // Default category\n      275 |\n\n      at Object.toBe (test/unit/example-with-mocks.test.js:272:34)\n","testResults":[{"ancestorTitles":["Example Test with Mock Framework","Mock Framework Functionality"],"duration":1,"failureMessages":[],"fullName":"Example Test with Mock Framework Mock Framework Functionality should initialize mock manager successfully","status":"passed","title":"should initialize mock manager successfully"},{"ancestorTitles":["Example Test with Mock Framework","Mock Framework Functionality"],"duration":0,"failureMessages":[],"fullName":"Example Test with Mock Framework Mock Framework Functionality should provide access to sample data","status":"passed","title":"should provide access to sample data"},{"ancestorTitles":["Example Test with Mock Framework","Mock Framework Functionality"],"duration":0,"failureMessages":[],"fullName":"Example Test with Mock Framework Mock Framework Functionality should generate unique test identifiers","status":"passed","title":"should generate unique test identifiers"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":36,"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at toBeDefined (/Users/jeremyparker/infinite-continue-stop-hook/test/mocks/mockSetup.js:394:19)\n    at Object.expectAgentInitialized (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js:115:7)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Example Test with Mock Framework API Mock Integration should mock agent initialization","status":"failed","title":"should mock agent initialization"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":66,"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at toBeDefined (/Users/jeremyparker/infinite-continue-stop-hook/test/mocks/mockSetup.js:383:21)\n    at Object.expectFeatureCreated (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js:134:7)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Example Test with Mock Framework API Mock Integration should mock feature creation","status":"failed","title":"should mock feature creation"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":69,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js:148:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Example Test with Mock Framework API Mock Integration should handle feature validation errors","status":"failed","title":"should handle feature validation errors"},{"ancestorTitles":["Example Test with Mock Framework","API Mock Integration"],"duration":130,"failureMessages":[],"fullName":"Example Test with Mock Framework API Mock Integration should mock feature listing with filters","status":"passed","title":"should mock feature listing with filters"},{"ancestorTitles":["Example Test with Mock Framework","Test Environment Management"],"duration":0,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Environment Management should create and manage test environment","status":"passed","title":"should create and manage test environment"},{"ancestorTitles":["Example Test with Mock Framework","Test Environment Management"],"duration":0,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Environment Management should read and write features data","status":"passed","title":"should read and write features data"},{"ancestorTitles":["Example Test with Mock Framework","Performance Testing Utilities"],"duration":101,"failureMessages":[],"fullName":"Example Test with Mock Framework Performance Testing Utilities should measure execution time","status":"passed","title":"should measure execution time"},{"ancestorTitles":["Example Test with Mock Framework","Performance Testing Utilities"],"duration":1,"failureMessages":[],"fullName":"Example Test with Mock Framework Performance Testing Utilities should measure memory usage","status":"passed","title":"should measure memory usage"},{"ancestorTitles":["Example Test with Mock Framework","Test Execution Utilities"],"duration":1006,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Execution Utilities should handle timeouts","status":"passed","title":"should handle timeouts"},{"ancestorTitles":["Example Test with Mock Framework","Test Execution Utilities"],"duration":22,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Execution Utilities should retry failed operations","status":"passed","title":"should retry failed operations"},{"ancestorTitles":["Example Test with Mock Framework","Test Execution Utilities"],"duration":0,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Execution Utilities should execute promises in parallel with concurrency control","status":"passed","title":"should execute promises in parallel with concurrency control"},{"ancestorTitles":["Example Test with Mock Framework","Test Data Factory"],"duration":0,"failureMessages":["Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"Test Feature 1758640236953\"\n    at Object.toBe (/Users/jeremyparker/infinite-continue-stop-hook/test/unit/example-with-mocks.test.js:272:34)\n    at Promise.finally.completed (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at _runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-runner/build/index.js:343:7)"],"fullName":"Example Test with Mock Framework Test Data Factory should create consistent test data","status":"failed","title":"should create consistent test data"},{"ancestorTitles":["Example Test with Mock Framework","Test Data Factory"],"duration":1,"failureMessages":[],"fullName":"Example Test with Mock Framework Test Data Factory should create different types of test data","status":"passed","title":"should create different types of test data"},{"ancestorTitles":["Example Test with Mock Framework","Error Handling"],"duration":59,"failureMessages":[],"fullName":"Example Test with Mock Framework Error Handling should handle API errors gracefully","status":"passed","title":"should handle API errors gracefully"},{"ancestorTitles":["Example Test with Mock Framework","Error Handling"],"duration":66,"failureMessages":[],"fullName":"Example Test with Mock Framework Error Handling should provide meaningful error messages","status":"passed","title":"should provide meaningful error messages"}]},{"numFailingTests":0,"numPassingTests":26,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1758640237398,"loadTestEnvironmentEnd":1758640237085,"loadTestEnvironmentStart":1758640237083,"runtime":313,"setupAfterEnvEnd":1758640237092,"setupAfterEnvStart":1758640237092,"setupFilesEnd":1758640237085,"setupFilesStart":1758640237085,"slow":false,"start":1758640237085},"testFilePath":"/Users/jeremyparker/infinite-continue-stop-hook/test/unit/basic-infrastructure.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique agent IDs","status":"passed","title":"should generate unique agent IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique project IDs","status":"passed","title":"should generate unique project IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique feature IDs","status":"passed","title":"should generate unique feature IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test ID Generation"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test ID Generation should generate unique task IDs","status":"passed","title":"should generate unique task IDs"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid feature data","status":"passed","title":"should create valid feature data"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create feature data with overrides","status":"passed","title":"should create feature data with overrides"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid user data","status":"passed","title":"should create valid user data"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":1,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid project data","status":"passed","title":"should create valid project data"},{"ancestorTitles":["Basic Testing Infrastructure","Test Data Factory"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Data Factory should create valid task data","status":"passed","title":"should create valid task data"},{"ancestorTitles":["Basic Testing Infrastructure","Sample Data Fixtures"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Sample Data Fixtures should provide valid sample features","status":"passed","title":"should provide valid sample features"},{"ancestorTitles":["Basic Testing Infrastructure","Sample Data Fixtures"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Sample Data Fixtures should provide valid sample agents","status":"passed","title":"should provide valid sample agents"},{"ancestorTitles":["Basic Testing Infrastructure","Sample Data Fixtures"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Sample Data Fixtures should provide valid test configurations","status":"passed","title":"should provide valid test configurations"},{"ancestorTitles":["Basic Testing Infrastructure","Performance Utilities"],"duration":50,"failureMessages":[],"fullName":"Basic Testing Infrastructure Performance Utilities should measure execution time accurately","status":"passed","title":"should measure execution time accurately"},{"ancestorTitles":["Basic Testing Infrastructure","Performance Utilities"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Performance Utilities should measure memory usage","status":"passed","title":"should measure memory usage"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":105,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should enforce timeouts","status":"passed","title":"should enforce timeouts"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":52,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should allow operations within timeout","status":"passed","title":"should allow operations within timeout"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":23,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should retry failed operations","status":"passed","title":"should retry failed operations"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":32,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should fail after max retries","status":"passed","title":"should fail after max retries"},{"ancestorTitles":["Basic Testing Infrastructure","Test Execution Utilities"],"duration":13,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Execution Utilities should execute promises in parallel with concurrency control","status":"passed","title":"should execute promises in parallel with concurrency control"},{"ancestorTitles":["Basic Testing Infrastructure","Test Logger"],"duration":8,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Logger should provide logging methods","status":"passed","title":"should provide logging methods"},{"ancestorTitles":["Basic Testing Infrastructure","Test Logger"],"duration":4,"failureMessages":[],"fullName":"Basic Testing Infrastructure Test Logger should log with data objects","status":"passed","title":"should log with data objects"},{"ancestorTitles":["Basic Testing Infrastructure","Data Validation"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Data Validation should validate feature data structure","status":"passed","title":"should validate feature data structure"},{"ancestorTitles":["Basic Testing Infrastructure","Data Validation"],"duration":1,"failureMessages":[],"fullName":"Basic Testing Infrastructure Data Validation should validate agent data structure","status":"passed","title":"should validate agent data structure"},{"ancestorTitles":["Basic Testing Infrastructure","Error Handling"],"duration":1,"failureMessages":[],"fullName":"Basic Testing Infrastructure Error Handling should handle async errors gracefully","status":"passed","title":"should handle async errors gracefully"},{"ancestorTitles":["Basic Testing Infrastructure","Error Handling"],"duration":1,"failureMessages":[],"fullName":"Basic Testing Infrastructure Error Handling should handle synchronous errors","status":"passed","title":"should handle synchronous errors"},{"ancestorTitles":["Basic Testing Infrastructure","Error Handling"],"duration":0,"failureMessages":[],"fullName":"Basic Testing Infrastructure Error Handling should handle undefined/null values","status":"passed","title":"should handle undefined/null values"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["*.js","lib/**/*.js","development/essentials/*.js","scripts/**/*.js","!test/**","!coverage/**","!node_modules/**","!.node-modules-backup/**","!jest.config.js","!eslint.config.js","!babel.config.js","!development/performance-analysis/**","!development/reports/**","!development/docs/**","!development/temp-scripts/**","!development/backups/**","!**/node_modules/**","!**/dist/**","!**/build/**","!**/*.config.js","!**/*.min.js"],"coverageDirectory":"/Users/jeremyparker/infinite-continue-stop-hook/coverage","coverageProvider":"v8","coverageReporters":["text","text-summary","html","json","json-summary","lcov","clover"],"coverageThreshold":{"global":{"branches":75,"functions":80,"lines":80,"statements":80},"./taskmanager-api.js":{"branches":70,"functions":75,"lines":75,"statements":75},"./lib/":{"branches":80,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":["test/unit","test/unit/feature-management-system.test.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/test/unit/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/test/integration/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":45000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/test/e2e/**/*.test.js"],"setupFilesAfterEnv":["<rootDir>/test/setup.js"],"testTimeout":60000,"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook"}],"reporters":[["default",{}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"hideIcon":false,"pageTitle":"TaskManager Test Coverage Report","includeFailureMsg":true,"includeSuiteFailure":true}],["/Users/jeremyparker/infinite-continue-stop-hook/node_modules/jest-junit/index.js",{"outputDirectory":"./coverage","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true}]],"rootDir":"/Users/jeremyparker/infinite-continue-stop-hook","runInBand":false,"runTestsByPath":false,"seed":1595037830,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["test/unit","test/unit/feature-management-system.test.js"],"type":"TestPathPatterns"},"testSequencer":"/Users/jeremyparker/infinite-continue-stop-hook/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1758640237404,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"jest-report.html","expand":true,"pageTitle":"TaskManager Test Coverage Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})