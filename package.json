{
  "name": "claude-taskmanager",
  "version": "1.0.0",
  "description": "Universal TaskManager API for Claude Code projects",
  "main": "taskmanager-api.js",
  "type": "commonjs",
  "bin": {
    "taskmanager": "./taskmanager-api.js",
    "setup-infinite-hook": "./setup-infinite-hook.js",
    "stop-hook": "./stop-hook.js"
  },
  "scripts": {
    "start": "node taskmanager-api.js",
    "setup": "node setup-infinite-hook.js",
    "test": "jest",
    "test:quick": "jest --passWithNoTests --silent",
    "test:api": "jest test/taskmanager-api-comprehensive.test.js",
    "test:unit": "jest test/unit --testTimeout=30000",
    "test:unit:taskmanager": "jest test/unit/taskmanager-api.test.js --testTimeout=30000",
    "test:unit:features": "jest test/unit/feature-management.test.js --testTimeout=30000",
    "test:unit:agents": "jest test/unit/agent-management.test.js --testTimeout=30000",
    "test:unit:stats": "jest test/unit/initialization-stats.test.js --testTimeout=30000",
    "test:unit:coverage": "jest test/unit --coverage --testTimeout=30000",
    "test:unit:watch": "jest test/unit --watch --testTimeout=30000",
    "test:integration": "jest test/integration --testTimeout=45000 --verbose",
    "test:integration:api": "jest test/integration/api-workflow.test.js --testTimeout=45000 --verbose",
    "test:integration:files": "jest test/integration/file-operations.test.js --testTimeout=45000 --verbose",
    "test:integration:cli": "jest test/integration/cli-commands.test.js --testTimeout=45000 --verbose",
    "test:integration:features": "jest test/integration/feature-lifecycle.test.js --testTimeout=45000 --verbose",
    "test:integration:agents": "jest test/integration/agent-lifecycle.test.js --testTimeout=45000 --verbose",
    "test:integration:stress": "jest test/integration/stress-and-recovery.test.js --testTimeout=60000 --verbose --maxWorkers=1",
    "test:integration:coverage": "jest test/integration --coverage --testTimeout=45000",
    "test:integration:watch": "jest test/integration --watch --testTimeout=45000",
    "test:rag": "jest --config test/rag-system/jest.config.js",
    "test:rag:unit": "jest --config test/rag-system/jest.config.js --testPathPatterns=unit",
    "test:rag:integration": "jest --config test/rag-system/jest.config.js --testPathPatterns=integration",
    "test:rag:performance": "jest --config test/rag-system/jest.config.js --testPathPatterns=performance --maxWorkers=1",
    "test:rag:integrity": "jest --config test/rag-system/jest.config.js --testPathPatterns=data-integrity",
    "test:rag:coverage": "jest --config test/rag-system/jest.config.js --coverage",
    "test:rag:watch": "jest --config test/rag-system/jest.config.js --watch",
    "test:e2e": "jest --config test/e2e/jest.config.js test/e2e --verbose",
    "test:e2e:complete-workflows": "jest --config test/e2e/jest.config.js test/e2e/complete-workflows.test.js --verbose",
    "test:e2e:multi-agent": "jest --config test/e2e/jest.config.js test/e2e/multi-agent-scenarios.test.js --verbose",
    "test:e2e:feature-management": "jest --config test/e2e/jest.config.js test/e2e/feature-management-e2e.test.js --verbose",
    "test:e2e:stop-hook": "jest --config test/e2e/jest.config.js test/e2e/stop-hook-integration.test.js --verbose",
    "test:e2e:performance": "jest --config test/e2e/jest.config.js test/e2e/performance-validation.test.js --verbose",
    "test:e2e:watch": "jest --config test/e2e/jest.config.js test/e2e --watch",
    "coverage": "jest --coverage",
    "coverage:watch": "jest --coverage --watch",
    "coverage:ci": "jest --coverage --ci --watchAll=false --passWithNoTests",
    "coverage:report": "jest --coverage --coverageReporters=html --coverageReporters=text-summary",
    "coverage:html": "jest --coverage --coverageReporters=html && open coverage/lcov-report/index.html",
    "coverage:json": "jest --coverage --coverageReporters=json --coverageReporters=json-summary",
    "coverage:lcov": "jest --coverage --coverageReporters=lcov",
    "coverage:check": "jest --coverage --passWithNoTests && npm run coverage:threshold-check",
    "coverage:threshold-check": "node -e \"const fs=require('fs'); const cov=JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); const thresh={lines:80,functions:80,branches:75,statements:80}; Object.entries(thresh).forEach(([k,v])=>{if(cov.total[k].pct<v)throw new Error(\\`Coverage threshold not met for ${k}: ${cov.total[k].pct}% < ${v}%\\`);}); console.log('âœ… All coverage thresholds met!');\"",
    "coverage:badge": "jest --coverage --coverageReporters=json-summary && node -e \"const fs=require('fs'); const cov=JSON.parse(fs.readFileSync('coverage/coverage-summary.json')); const pct=cov.total.lines.pct||0; const color=pct>=90?'brightgreen':pct>=80?'green':pct>=70?'yellow':'red'; const badge=\\`https://img.shields.io/badge/coverage-${pct}%25-${color}\\`; console.log('Coverage Badge URL:', badge);\"",
    "coverage:clean": "rimraf coverage",
    "coverage:monitor": "node scripts/coverage-monitor.js",
    "coverage:check:standalone": "node scripts/coverage-check.js",
    "coverage:check:strict": "node scripts/coverage-check.js --strict",
    "performance:test": "node scripts/test-performance.js",
    "performance:test:verbose": "VERBOSE=true node scripts/test-performance.js",
    "performance:test:json": "JSON_OUTPUT=true node scripts/test-performance.js",
    "performance:monitor": "node scripts/test-performance.js --verbose",
    "ci:quality-check": "npm run lint && npm run coverage:check:standalone && npm run performance:test",
    "ci:full-validation": "npm run lint && npm test && npm run coverage:check:strict && npm run performance:test:verbose",
    "prepare": "husky install",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:focused": "eslint lib/ *.js"
  },
  "keywords": [
    "taskmanager",
    "api",
    "stop-hook",
    "claude-code",
    "automation"
  ],
  "author": "Claude Code Hook System",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.35.0",
    "eslint": "^9.35.0",
    "eslint-plugin-n": "^17.21.3",
    "eslint-plugin-security": "^3.0.1",
    "globals": "^15.15.0",
    "husky": "^8.0.3",
    "jest": "^30.1.3",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "rimraf": "^5.0.10",
    "supertest": "^7.0.0"
  },
  "dependencies": {
    "@xenova/transformers": "^2.17.2",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "faiss-node": "^0.5.1",
    "natural": "^8.1.0",
    "sqlite3": "^5.1.7"
  }
}
