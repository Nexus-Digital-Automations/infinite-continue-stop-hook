a1be5950326fdbd89799dab8b8d0043b
/* istanbul ignore next */
function cov_1kgkf05xw3() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/contaminationResolver.js";
  var hash = "ab8a7664d50398895f09b9c4f6f72f7df22717fe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/contaminationResolver.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 11
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "1": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "4": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "5": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "6": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "7": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "8": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 39,
          column: 17
        }
      },
      "9": {
        start: {
          line: 31,
          column: 36
        },
        end: {
          line: 31,
          column: 69
        }
      },
      "10": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 36,
          column: 21
        }
      },
      "11": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "12": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 77
        }
      },
      "13": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 102
        }
      },
      "14": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "15": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "16": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "17": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 29
        }
      },
      "18": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 42
        }
      },
      "19": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "20": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "21": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 62
        }
      },
      "22": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "23": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "24": {
        start: {
          line: 79,
          column: 36
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "25": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 86,
          column: 21
        }
      },
      "26": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 85,
          column: 27
        }
      },
      "27": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 80
        }
      },
      "28": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "29": {
        start: {
          line: 100,
          column: 29
        },
        end: {
          line: 100,
          column: 61
        }
      },
      "30": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "31": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 55
        }
      },
      "32": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 46
        }
      },
      "33": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 27
        }
      },
      "34": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "35": {
        start: {
          line: 110,
          column: 36
        },
        end: {
          line: 110,
          column: 76
        }
      },
      "36": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "37": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "38": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "39": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 59
        }
      },
      "40": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "41": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 88
        }
      },
      "42": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 74
        }
      },
      "43": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 41
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 62
        }
      },
      "45": {
        start: {
          line: 133,
          column: 31
        },
        end: {
          line: 133,
          column: 35
        }
      },
      "46": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "47": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 178,
          column: 2
        }
      },
      "48": {
        start: {
          line: 179,
          column: 15
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "49": {
        start: {
          line: 181,
          column: 31
        },
        end: {
          line: 181,
          column: 60
        }
      },
      "50": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "51": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 71
        }
      },
      "52": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "53": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "54": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 69
        }
      },
      "55": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 74
        }
      },
      "56": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 95
        }
      },
      "57": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 71
        }
      },
      "58": {
        start: {
          line: 203,
          column: 32
        },
        end: {
          line: 208,
          column: 22
        }
      },
      "59": {
        start: {
          line: 204,
          column: 27
        },
        end: {
          line: 204,
          column: 64
        }
      },
      "60": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "61": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 89
        }
      },
      "62": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "63": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 43
        }
      },
      "64": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 60
        }
      },
      "65": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 11
        }
      },
      "66": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 43
        }
      },
      "67": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 99
        }
      },
      "68": {
        start: {
          line: 219,
          column: 55
        },
        end: {
          line: 219,
          column: 69
        }
      },
      "69": {
        start: {
          line: 219,
          column: 83
        },
        end: {
          line: 219,
          column: 97
        }
      },
      "70": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 31
        }
      },
      "71": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "72": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 62
        }
      },
      "73": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "74": {
        start: {
          line: 232,
          column: 32
        },
        end: {
          line: 232,
          column: 65
        }
      },
      "75": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 237,
          column: 17
        }
      },
      "76": {
        start: {
          line: 234,
          column: 39
        },
        end: {
          line: 234,
          column: 68
        }
      },
      "77": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 66
        }
      },
      "78": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 65
        }
      },
      "79": {
        start: {
          line: 243,
          column: 0
        },
        end: {
          line: 243,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 32
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 72
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 47
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 132
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 52
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 200
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 203,
            column: 44
          },
          end: {
            line: 203,
            column: 45
          }
        },
        loc: {
          start: {
            line: 203,
            column: 56
          },
          end: {
            line: 208,
            column: 9
          }
        },
        line: 203
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 28
          }
        },
        loc: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 211
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 214,
            column: 50
          },
          end: {
            line: 214,
            column: 51
          }
        },
        loc: {
          start: {
            line: 214,
            column: 56
          },
          end: {
            line: 214,
            column: 58
          }
        },
        line: 214
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 217,
            column: 29
          },
          end: {
            line: 217,
            column: 30
          }
        },
        loc: {
          start: {
            line: 217,
            column: 35
          },
          end: {
            line: 220,
            column: 9
          }
        },
        line: 217
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 219,
            column: 49
          },
          end: {
            line: 219,
            column: 50
          }
        },
        loc: {
          start: {
            line: 219,
            column: 55
          },
          end: {
            line: 219,
            column: 69
          }
        },
        line: 219
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 219,
            column: 77
          },
          end: {
            line: 219,
            column: 78
          }
        },
        loc: {
          start: {
            line: 219,
            column: 83
          },
          end: {
            line: 219,
            column: 97
          }
        },
        line: 219
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 228
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 43
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 36,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 36,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 15
          },
          end: {
            line: 66,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 15
          },
          end: {
            line: 63,
            column: 49
          }
        }, {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 43
          }
        }, {
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 43
          }
        }, {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 41
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: 119,
            column: 19
          },
          end: {
            line: 123,
            column: 13
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 185,
            column: 9
          }
        }],
        line: 135
      },
      "10": {
        loc: {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "11": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "12": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "13": {
        loc: {
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 200,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 50
          }
        }],
        line: 200
      },
      "14": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "15": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "16": {
        loc: {
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ab8a7664d50398895f09b9c4f6f72f7df22717fe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kgkf05xw3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kgkf05xw3();
/**
 * Contamination Resolver
 * 
 * This module provides immediate cleanup and restoration for JSON contamination
 * in critical node_modules files that occurs during test execution.
 */

const fs =
/* istanbul ignore next */
(cov_1kgkf05xw3().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_1kgkf05xw3().s[1]++, require('path'));
class ContaminationResolver {
  constructor(projectRoot =
  /* istanbul ignore next */
  (cov_1kgkf05xw3().b[0][0]++, process.cwd())) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[0]++;
    cov_1kgkf05xw3().s[2]++;
    this.projectRoot = projectRoot;
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[3]++;
    this.criticalFiles = ['node_modules/exit/lib/exit.js', 'node_modules/jest-worker/build/index.js'];

    // Store original file contents
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[4]++;
    this.originalContents = new Map();
  }

  /**
   * Store original contents of critical files
   */
  async storeOriginalContents() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[1]++;
    cov_1kgkf05xw3().s[5]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[6]++, path.join(this.projectRoot, file));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[7]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[1][0]++;
        cov_1kgkf05xw3().s[8]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_1kgkf05xw3().s[9]++, fs.readFileSync(fullPath, 'utf8'));
          // Only store if it's valid JavaScript (not contaminated)
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[10]++;
          if (this.isValidJavaScript(content)) {
            /* istanbul ignore next */
            cov_1kgkf05xw3().b[2][0]++;
            cov_1kgkf05xw3().s[11]++;
            this.originalContents.set(fullPath, content);
            /* istanbul ignore next */
            cov_1kgkf05xw3().s[12]++;
            console.log(`✅ Stored original content for ${file}`);
          } else
          /* istanbul ignore next */
          {
            cov_1kgkf05xw3().b[2][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[13]++;
          console.warn(`⚠️ Could not store original content for ${file}: ${error.message}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[1][1]++;
      }
    }
  }

  /**
   * Check if content is valid JavaScript (not JSON contaminated)
   */
  isValidJavaScript(content) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[2]++;
    // Check for JSON contamination patterns
    const jsonPatterns =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[14]++, [/^\s*\{.*"project".*\}/s, /^\s*\{.*"tasks".*\}/s, /^\s*\{.*"execution_count".*\}/s]);

    // If any JSON pattern matches at the start, it's contaminated
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[15]++;
    for (const pattern of jsonPatterns) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[16]++;
      if (pattern.test(content)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[3][0]++;
        cov_1kgkf05xw3().s[17]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[3][1]++;
      }
    }

    // Check for proper JavaScript structure
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[18]++;
    return /* istanbul ignore next */(cov_1kgkf05xw3().b[4][0]++, content.includes('module.exports')) ||
    /* istanbul ignore next */
    (cov_1kgkf05xw3().b[4][1]++, content.includes('exports.')) ||
    /* istanbul ignore next */
    (cov_1kgkf05xw3().b[4][2]++, content.includes('function')) ||
    /* istanbul ignore next */
    (cov_1kgkf05xw3().b[4][3]++, content.includes('class '));
  }

  /**
   * Detect contamination in critical files
   */
  async detectContamination() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[3]++;
    const contaminated =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[19]++, []);
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[20]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[21]++, path.join(this.projectRoot, file));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[22]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[5][0]++;
        cov_1kgkf05xw3().s[23]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_1kgkf05xw3().s[24]++, fs.readFileSync(fullPath, 'utf8'));
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[25]++;
          if (!this.isValidJavaScript(content)) {
            /* istanbul ignore next */
            cov_1kgkf05xw3().b[6][0]++;
            cov_1kgkf05xw3().s[26]++;
            contaminated.push({
              file,
              fullPath,
              content: content.substring(0, 200) // First 200 chars for logging
            });
          } else
          /* istanbul ignore next */
          {
            cov_1kgkf05xw3().b[6][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[27]++;
          console.warn(`⚠️ Could not read ${file}: ${error.message}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[5][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[28]++;
    return contaminated;
  }

  /**
   * Restore contaminated files immediately
   */
  async restoreContaminatedFiles() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[4]++;
    const contaminated =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[29]++, await this.detectContamination());
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[30]++;
    if (contaminated.length === 0) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[7][0]++;
      cov_1kgkf05xw3().s[31]++;
      console.log('✅ No contamination detected');
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[32]++;
      return {
        restored: 0,
        files: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_1kgkf05xw3().b[7][1]++;
    }
    const restored =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[33]++, []);
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[34]++;
    for (const item of contaminated) {
      const originalContent =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[35]++, this.originalContents.get(item.fullPath));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[36]++;
      if (originalContent) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[8][0]++;
        cov_1kgkf05xw3().s[37]++;
        try {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[38]++;
          fs.writeFileSync(item.fullPath, originalContent, 'utf8');
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[39]++;
          console.log(`✅ Restored ${item.file}`);
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[40]++;
          restored.push(item.file);
        } catch (error) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[41]++;
          console.error(`❌ Failed to restore ${item.file}: ${error.message}`);
        }
      } else {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[8][1]++;
        cov_1kgkf05xw3().s[42]++;
        // Try to restore from backup or known good content
        await this.restoreFromKnownGood(item.fullPath, item.file);
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[43]++;
        restored.push(item.file);
      }
    }
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[44]++;
    return {
      restored: restored.length,
      files: restored
    };
  }

  /**
   * Restore from known good content for specific files
   */
  async restoreFromKnownGood(fullPath, file) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[5]++;
    let knownGoodContent =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[45]++, null);
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[46]++;
    if (file.includes('exit.js')) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[9][0]++;
      cov_1kgkf05xw3().s[47]++;
      // Known good exit.js content
      knownGoodContent = `/*
 * exit
 * https://github.com/cowboy/node-exit
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function exit(exitCode, streams) {
  if (!streams) { streams = [process.stdout, process.stderr]; }
  var drainCount = 0;
  // Actually exit if all streams are drained.
  function tryToExit() {
    if (drainCount === streams.length) {
      process.exit(exitCode);
    }
  }
  streams.forEach(function(stream) {
    // Count drained streams now, but monitor non-drained streams.
    if (stream.bufferSize === 0) {
      drainCount++;
    } else {
      stream.write('', 'utf-8', function() {
        drainCount++;
        tryToExit();
      });
    }
    // Prevent further writing.
    stream.write = function() {};
  });
  // If all streams were already drained, exit now.
  tryToExit();
  // In Windows, when run as a Node.js child process, a script utilizing
  // this library might just exit with a 0 exit code, regardless. This code,
  // despite the fact that it looks a bit crazy, appears to fix that.
  process.on('exit', function() {
    process.exit(exitCode);
  });
};
`;
    } else {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[9][1]++;
      cov_1kgkf05xw3().s[48]++;
      if (file.includes('jest-worker')) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[10][0]++;
        // Check if backup exists
        const backupPath =
        /* istanbul ignore next */
        (cov_1kgkf05xw3().s[49]++, fullPath + '.backup.original');
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[50]++;
        if (fs.existsSync(backupPath)) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().b[11][0]++;
          cov_1kgkf05xw3().s[51]++;
          knownGoodContent = fs.readFileSync(backupPath, 'utf8');
        } else
        /* istanbul ignore next */
        {
          cov_1kgkf05xw3().b[11][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[52]++;
    if (knownGoodContent) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[12][0]++;
      cov_1kgkf05xw3().s[53]++;
      try {
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[54]++;
        fs.writeFileSync(fullPath, knownGoodContent, 'utf8');
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[55]++;
        console.log(`✅ Restored ${file} from known good content`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[56]++;
        console.error(`❌ Failed to restore ${file} from known good: ${error.message}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kgkf05xw3().b[12][1]++;
    }
  }

  /**
   * Continuous monitoring and cleanup (for use during test runs)
   */
  async startContinuousCleanup(intervalMs =
  /* istanbul ignore next */
  (cov_1kgkf05xw3().b[13][0]++, 1000)) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[6]++;
    cov_1kgkf05xw3().s[57]++;
    console.log('🔄 Starting continuous contamination cleanup...');
    const cleanupInterval =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[58]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[7]++;
      const result =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[59]++, await this.restoreContaminatedFiles());
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[60]++;
      if (result.restored > 0) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[14][0]++;
        cov_1kgkf05xw3().s[61]++;
        console.log(`🧹 Cleaned up contamination in ${result.files.join(', ')}`);
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[14][1]++;
      }
    }, intervalMs));

    // Clean up on process exit
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[62]++;
    process.on('exit', () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[8]++;
      cov_1kgkf05xw3().s[63]++;
      clearInterval(cleanupInterval);
      // Final cleanup before exit
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[64]++;
      this.restoreContaminatedFiles().catch(() => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[9]++;
      });
    });
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[65]++;
    process.on('SIGINT', () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[10]++;
      cov_1kgkf05xw3().s[66]++;
      clearInterval(cleanupInterval);
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[67]++;
      this.restoreContaminatedFiles().then(() => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[11]++;
        cov_1kgkf05xw3().s[68]++;
        return process.exit();
      }).catch(() => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[12]++;
        cov_1kgkf05xw3().s[69]++;
        return process.exit();
      });
    });
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[70]++;
    return cleanupInterval;
  }

  /**
   * Create backups of clean files
   */
  async createBackups() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[13]++;
    cov_1kgkf05xw3().s[71]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[72]++, path.join(this.projectRoot, file));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[73]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[15][0]++;
        const content =
        /* istanbul ignore next */
        (cov_1kgkf05xw3().s[74]++, fs.readFileSync(fullPath, 'utf8'));
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[75]++;
        if (this.isValidJavaScript(content)) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().b[16][0]++;
          const backupPath =
          /* istanbul ignore next */
          (cov_1kgkf05xw3().s[76]++, fullPath + '.backup.original');
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[77]++;
          fs.writeFileSync(backupPath, content, 'utf8');
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[78]++;
          console.log(`📦 Created backup for ${file}`);
        } else
        /* istanbul ignore next */
        {
          cov_1kgkf05xw3().b[16][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[15][1]++;
      }
    }
  }
}
/* istanbul ignore next */
cov_1kgkf05xw3().s[79]++;
module.exports = ContaminationResolver;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,