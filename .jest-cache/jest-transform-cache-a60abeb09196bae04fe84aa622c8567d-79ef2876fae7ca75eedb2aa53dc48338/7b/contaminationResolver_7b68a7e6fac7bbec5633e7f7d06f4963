6a4671aa243de7d1d469b129acd8ef92
/* istanbul ignore next */
function cov_1kgkf05xw3() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/contaminationResolver.js";
  var hash = "3db3945fbc2d26e4037efec9593a1994ee854587";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/contaminationResolver.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 11
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "1": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 20,
          column: 10
        }
      },
      "4": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "5": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "6": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "7": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "8": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "9": {
        start: {
          line: 34,
          column: 36
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "10": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 39,
          column: 21
        }
      },
      "11": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 69
        }
      },
      "12": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 38,
          column: 77
        }
      },
      "13": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 102
        }
      },
      "14": {
        start: {
          line: 52,
          column: 29
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "15": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "16": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "17": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 29
        }
      },
      "18": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 69,
          column: 42
        }
      },
      "19": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "20": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "21": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "22": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "23": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "24": {
        start: {
          line: 82,
          column: 36
        },
        end: {
          line: 82,
          column: 69
        }
      },
      "25": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "26": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 88,
          column: 27
        }
      },
      "27": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 80
        }
      },
      "28": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 28
        }
      },
      "29": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 103,
          column: 61
        }
      },
      "30": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "31": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 55
        }
      },
      "32": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "33": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 110,
          column: 27
        }
      },
      "34": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "35": {
        start: {
          line: 113,
          column: 36
        },
        end: {
          line: 113,
          column: 76
        }
      },
      "36": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "37": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "38": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 77
        }
      },
      "39": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 59
        }
      },
      "40": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "41": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 88
        }
      },
      "42": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 74
        }
      },
      "43": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 41
        }
      },
      "44": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 62
        }
      },
      "45": {
        start: {
          line: 136,
          column: 30
        },
        end: {
          line: 136,
          column: 33
        }
      },
      "46": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 148,
          column: 25
        }
      },
      "47": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "48": {
        start: {
          line: 140,
          column: 37
        },
        end: {
          line: 140,
          column: 69
        }
      },
      "49": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "50": {
        start: {
          line: 142,
          column: 20
        },
        end: {
          line: 142,
          column: 95
        }
      },
      "51": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 58
        }
      },
      "52": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 172,
          column: 11
        }
      },
      "53": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 35
        }
      },
      "54": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 171,
          column: 15
        }
      },
      "55": {
        start: {
          line: 155,
          column: 33
        },
        end: {
          line: 155,
          column: 66
        }
      },
      "56": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "57": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 169,
          column: 21
        }
      },
      "58": {
        start: {
          line: 158,
          column: 40
        },
        end: {
          line: 158,
          column: 73
        }
      },
      "59": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 166,
          column: 25
        }
      },
      "60": {
        start: {
          line: 160,
          column: 52
        },
        end: {
          line: 160,
          column: 87
        }
      },
      "61": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 165,
          column: 29
        }
      },
      "62": {
        start: {
          line: 162,
          column: 32
        },
        end: {
          line: 162,
          column: 84
        }
      },
      "63": {
        start: {
          line: 164,
          column: 32
        },
        end: {
          line: 164,
          column: 74
        }
      },
      "64": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 23
        }
      },
      "65": {
        start: {
          line: 181,
          column: 31
        },
        end: {
          line: 181,
          column: 35
        }
      },
      "66": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "67": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 226,
          column: 2
        }
      },
      "68": {
        start: {
          line: 227,
          column: 15
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "69": {
        start: {
          line: 229,
          column: 31
        },
        end: {
          line: 229,
          column: 60
        }
      },
      "70": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "71": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 71
        }
      },
      "72": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "73": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "74": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 69
        }
      },
      "75": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 74
        }
      },
      "76": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 95
        }
      },
      "77": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 71
        }
      },
      "78": {
        start: {
          line: 251,
          column: 32
        },
        end: {
          line: 256,
          column: 22
        }
      },
      "79": {
        start: {
          line: 252,
          column: 27
        },
        end: {
          line: 252,
          column: 64
        }
      },
      "80": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "81": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 89
        }
      },
      "82": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 263,
          column: 11
        }
      },
      "83": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 43
        }
      },
      "84": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 60
        }
      },
      "85": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "86": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 43
        }
      },
      "87": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 99
        }
      },
      "88": {
        start: {
          line: 267,
          column: 55
        },
        end: {
          line: 267,
          column: 69
        }
      },
      "89": {
        start: {
          line: 267,
          column: 83
        },
        end: {
          line: 267,
          column: 97
        }
      },
      "90": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 31
        }
      },
      "91": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "92": {
        start: {
          line: 278,
          column: 29
        },
        end: {
          line: 278,
          column: 62
        }
      },
      "93": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "94": {
        start: {
          line: 280,
          column: 32
        },
        end: {
          line: 280,
          column: 65
        }
      },
      "95": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 285,
          column: 17
        }
      },
      "96": {
        start: {
          line: 282,
          column: 39
        },
        end: {
          line: 282,
          column: 68
        }
      },
      "97": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 66
        }
      },
      "98": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 65
        }
      },
      "99": {
        start: {
          line: 291,
          column: 0
        },
        end: {
          line: 291,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 34
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 31
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 75
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 37
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 102
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 38
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 135
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 138,
            column: 37
          }
        },
        loc: {
          start: {
            line: 138,
            column: 48
          },
          end: {
            line: 148,
            column: 9
          }
        },
        line: 138
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 151,
            column: 28
          }
        },
        loc: {
          start: {
            line: 151,
            column: 33
          },
          end: {
            line: 172,
            column: 9
          }
        },
        line: 151
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 154,
            column: 39
          },
          end: {
            line: 154,
            column: 40
          }
        },
        loc: {
          start: {
            line: 154,
            column: 47
          },
          end: {
            line: 171,
            column: 13
          }
        },
        line: 154
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 47
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 180
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 52
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 248
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 251,
            column: 44
          },
          end: {
            line: 251,
            column: 45
          }
        },
        loc: {
          start: {
            line: 251,
            column: 56
          },
          end: {
            line: 256,
            column: 9
          }
        },
        line: 251
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 259,
            column: 27
          },
          end: {
            line: 259,
            column: 28
          }
        },
        loc: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 263,
            column: 9
          }
        },
        line: 259
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 262,
            column: 50
          },
          end: {
            line: 262,
            column: 51
          }
        },
        loc: {
          start: {
            line: 262,
            column: 56
          },
          end: {
            line: 262,
            column: 58
          }
        },
        line: 262
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 265,
            column: 29
          },
          end: {
            line: 265,
            column: 30
          }
        },
        loc: {
          start: {
            line: 265,
            column: 35
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 265
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 267,
            column: 49
          },
          end: {
            line: 267,
            column: 50
          }
        },
        loc: {
          start: {
            line: 267,
            column: 55
          },
          end: {
            line: 267,
            column: 69
          }
        },
        line: 267
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 267,
            column: 77
          },
          end: {
            line: 267,
            column: 78
          }
        },
        loc: {
          start: {
            line: 267,
            column: 83
          },
          end: {
            line: 267,
            column: 97
          }
        },
        line: 267
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 276
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 43
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 39,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 39,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 69,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 49
          }
        }, {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 43
          }
        }, {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 43
          }
        }, {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 41
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "6": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 126,
            column: 13
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 166,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 166,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "12": {
        loc: {
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 165,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 165,
            column: 29
          }
        }, {
          start: {
            line: 163,
            column: 35
          },
          end: {
            line: 165,
            column: 29
          }
        }],
        line: 161
      },
      "13": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 233,
            column: 9
          }
        }],
        line: 183
      },
      "14": {
        loc: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "15": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "16": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "17": {
        loc: {
          start: {
            line: 248,
            column: 33
          },
          end: {
            line: 248,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 248,
            column: 46
          },
          end: {
            line: 248,
            column: 50
          }
        }],
        line: 248
      },
      "18": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "19": {
        loc: {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "20": {
        loc: {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3db3945fbc2d26e4037efec9593a1994ee854587"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kgkf05xw3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kgkf05xw3();
/**
 * Contamination Resolver
 * 
 * This module provides immediate cleanup and restoration for JSON contamination
 * in critical node_modules files that occurs during test execution.
 */

const fs =
/* istanbul ignore next */
(cov_1kgkf05xw3().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_1kgkf05xw3().s[1]++, require('path'));
class ContaminationResolver {
  constructor(projectRoot =
  /* istanbul ignore next */
  (cov_1kgkf05xw3().b[0][0]++, process.cwd())) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[0]++;
    cov_1kgkf05xw3().s[2]++;
    this.projectRoot = projectRoot;
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[3]++;
    this.criticalFiles = ['node_modules/exit/lib/exit.js', 'node_modules/jest-worker/build/index.js', 'node_modules/istanbul-lib-report/index.js', 'node_modules/@jest/reporters/build/CoverageReporter.js', 'node_modules/jest-cli/build/run.js'];

    // Store original file contents
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[4]++;
    this.originalContents = new Map();
  }

  /**
   * Store original contents of critical files
   */
  async storeOriginalContents() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[1]++;
    cov_1kgkf05xw3().s[5]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[6]++, path.join(this.projectRoot, file));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[7]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[1][0]++;
        cov_1kgkf05xw3().s[8]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_1kgkf05xw3().s[9]++, fs.readFileSync(fullPath, 'utf8'));
          // Only store if it's valid JavaScript (not contaminated)
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[10]++;
          if (this.isValidJavaScript(content)) {
            /* istanbul ignore next */
            cov_1kgkf05xw3().b[2][0]++;
            cov_1kgkf05xw3().s[11]++;
            this.originalContents.set(fullPath, content);
            /* istanbul ignore next */
            cov_1kgkf05xw3().s[12]++;
            console.log(`✅ Stored original content for ${file}`);
          } else
          /* istanbul ignore next */
          {
            cov_1kgkf05xw3().b[2][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[13]++;
          console.warn(`⚠️ Could not store original content for ${file}: ${error.message}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[1][1]++;
      }
    }
  }

  /**
   * Check if content is valid JavaScript (not JSON contaminated)
   */
  isValidJavaScript(content) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[2]++;
    // Check for JSON contamination patterns
    const jsonPatterns =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[14]++, [/^\s*\{.*"project".*\}/s, /^\s*\{.*"tasks".*\}/s, /^\s*\{.*"execution_count".*\}/s]);

    // If any JSON pattern matches at the start, it's contaminated
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[15]++;
    for (const pattern of jsonPatterns) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[16]++;
      if (pattern.test(content)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[3][0]++;
        cov_1kgkf05xw3().s[17]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[3][1]++;
      }
    }

    // Check for proper JavaScript structure
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[18]++;
    return /* istanbul ignore next */(cov_1kgkf05xw3().b[4][0]++, content.includes('module.exports')) ||
    /* istanbul ignore next */
    (cov_1kgkf05xw3().b[4][1]++, content.includes('exports.')) ||
    /* istanbul ignore next */
    (cov_1kgkf05xw3().b[4][2]++, content.includes('function')) ||
    /* istanbul ignore next */
    (cov_1kgkf05xw3().b[4][3]++, content.includes('class '));
  }

  /**
   * Detect contamination in critical files
   */
  async detectContamination() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[3]++;
    const contaminated =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[19]++, []);
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[20]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[21]++, path.join(this.projectRoot, file));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[22]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[5][0]++;
        cov_1kgkf05xw3().s[23]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_1kgkf05xw3().s[24]++, fs.readFileSync(fullPath, 'utf8'));
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[25]++;
          if (!this.isValidJavaScript(content)) {
            /* istanbul ignore next */
            cov_1kgkf05xw3().b[6][0]++;
            cov_1kgkf05xw3().s[26]++;
            contaminated.push({
              file,
              fullPath,
              content: content.substring(0, 200) // First 200 chars for logging
            });
          } else
          /* istanbul ignore next */
          {
            cov_1kgkf05xw3().b[6][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[27]++;
          console.warn(`⚠️ Could not read ${file}: ${error.message}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[5][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[28]++;
    return contaminated;
  }

  /**
   * Restore contaminated files immediately
   */
  async restoreContaminatedFiles() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[4]++;
    const contaminated =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[29]++, await this.detectContamination());
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[30]++;
    if (contaminated.length === 0) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[7][0]++;
      cov_1kgkf05xw3().s[31]++;
      console.log('✅ No contamination detected');
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[32]++;
      return {
        restored: 0,
        files: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_1kgkf05xw3().b[7][1]++;
    }
    const restored =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[33]++, []);
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[34]++;
    for (const item of contaminated) {
      const originalContent =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[35]++, this.originalContents.get(item.fullPath));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[36]++;
      if (originalContent) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[8][0]++;
        cov_1kgkf05xw3().s[37]++;
        try {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[38]++;
          fs.writeFileSync(item.fullPath, originalContent, 'utf8');
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[39]++;
          console.log(`✅ Restored ${item.file}`);
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[40]++;
          restored.push(item.file);
        } catch (error) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[41]++;
          console.error(`❌ Failed to restore ${item.file}: ${error.message}`);
        }
      } else {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[8][1]++;
        cov_1kgkf05xw3().s[42]++;
        // Try to restore from backup or known good content
        await this.restoreFromKnownGood(item.fullPath, item.file);
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[43]++;
        restored.push(item.file);
      }
    }
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[44]++;
    return {
      restored: restored.length,
      files: restored
    };
  }

  /**
   * Enhanced automatic recovery system that prevents contamination
   */
  async startContinuousMonitoring() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[5]++;
    const checkInterval =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[45]++, 100); // Check every 100ms for contamination

    const monitor =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[46]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[6]++;
      cov_1kgkf05xw3().s[47]++;
      try {
        const contaminated =
        /* istanbul ignore next */
        (cov_1kgkf05xw3().s[48]++, await this.detectContamination());
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[49]++;
        if (contaminated.length > 0) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().b[9][0]++;
          cov_1kgkf05xw3().s[50]++;
          console.log(`🧹 Auto-fixing ${contaminated.length} contaminated files...`);
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[51]++;
          await this.restoreContaminatedFiles();
        } else
        /* istanbul ignore next */
        {
          cov_1kgkf05xw3().b[9][1]++;
        }
      } catch {
        // Silent fail to prevent breaking the main process
      }
    }, checkInterval));

    // Clean up monitoring on process exit
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[52]++;
    process.on('exit', () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[7]++;
      cov_1kgkf05xw3().s[53]++;
      clearInterval(monitor);
      // Emergency restoration
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[54]++;
      this.criticalFiles.forEach(file => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[8]++;
        const fullPath =
        /* istanbul ignore next */
        (cov_1kgkf05xw3().s[55]++, path.join(this.projectRoot, file));
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[56]++;
        if (fs.existsSync(fullPath)) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().b[10][0]++;
          cov_1kgkf05xw3().s[57]++;
          try {
            const content =
            /* istanbul ignore next */
            (cov_1kgkf05xw3().s[58]++, fs.readFileSync(fullPath, 'utf8'));
            /* istanbul ignore next */
            cov_1kgkf05xw3().s[59]++;
            if (!this.isValidJavaScript(content)) {
              /* istanbul ignore next */
              cov_1kgkf05xw3().b[11][0]++;
              const originalContent =
              /* istanbul ignore next */
              (cov_1kgkf05xw3().s[60]++, this.originalContents.get(fullPath));
              /* istanbul ignore next */
              cov_1kgkf05xw3().s[61]++;
              if (originalContent) {
                /* istanbul ignore next */
                cov_1kgkf05xw3().b[12][0]++;
                cov_1kgkf05xw3().s[62]++;
                fs.writeFileSync(fullPath, originalContent, 'utf8');
              } else {
                /* istanbul ignore next */
                cov_1kgkf05xw3().b[12][1]++;
                cov_1kgkf05xw3().s[63]++;
                this.restoreFromKnownGood(fullPath, file);
              }
            } else
            /* istanbul ignore next */
            {
              cov_1kgkf05xw3().b[11][1]++;
            }
          } catch {
            // Silent fail during exit
          }
        } else
        /* istanbul ignore next */
        {
          cov_1kgkf05xw3().b[10][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[64]++;
    return monitor;
  }

  /**
   * Restore from known good content for specific files
   */
  async restoreFromKnownGood(fullPath, file) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[9]++;
    let knownGoodContent =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[65]++, null);
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[66]++;
    if (file.includes('exit.js')) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[13][0]++;
      cov_1kgkf05xw3().s[67]++;
      // Known good exit.js content
      knownGoodContent = `/*
 * exit
 * https://github.com/cowboy/node-exit
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function exit(exitCode, streams) {
  if (!streams) { streams = [process.stdout, process.stderr]; }
  var drainCount = 0;
  // Actually exit if all streams are drained.
  function tryToExit() {
    if (drainCount === streams.length) {
      process.exit(exitCode);
    }
  }
  streams.forEach(function(stream) {
    // Count drained streams now, but monitor non-drained streams.
    if (stream.bufferSize === 0) {
      drainCount++;
    } else {
      stream.write('', 'utf-8', function() {
        drainCount++;
        tryToExit();
      });
    }
    // Prevent further writing.
    stream.write = function() {};
  });
  // If all streams were already drained, exit now.
  tryToExit();
  // In Windows, when run as a Node.js child process, a script utilizing
  // this library might just exit with a 0 exit code, regardless. This code,
  // despite the fact that it looks a bit crazy, appears to fix that.
  process.on('exit', function() {
    process.exit(exitCode);
  });
};
`;
    } else {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[13][1]++;
      cov_1kgkf05xw3().s[68]++;
      if (file.includes('jest-worker')) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[14][0]++;
        // Check if backup exists
        const backupPath =
        /* istanbul ignore next */
        (cov_1kgkf05xw3().s[69]++, fullPath + '.backup.original');
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[70]++;
        if (fs.existsSync(backupPath)) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().b[15][0]++;
          cov_1kgkf05xw3().s[71]++;
          knownGoodContent = fs.readFileSync(backupPath, 'utf8');
        } else
        /* istanbul ignore next */
        {
          cov_1kgkf05xw3().b[15][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[14][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[72]++;
    if (knownGoodContent) {
      /* istanbul ignore next */
      cov_1kgkf05xw3().b[16][0]++;
      cov_1kgkf05xw3().s[73]++;
      try {
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[74]++;
        fs.writeFileSync(fullPath, knownGoodContent, 'utf8');
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[75]++;
        console.log(`✅ Restored ${file} from known good content`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[76]++;
        console.error(`❌ Failed to restore ${file} from known good: ${error.message}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kgkf05xw3().b[16][1]++;
    }
  }

  /**
   * Continuous monitoring and cleanup (for use during test runs)
   */
  async startContinuousCleanup(intervalMs =
  /* istanbul ignore next */
  (cov_1kgkf05xw3().b[17][0]++, 1000)) {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[10]++;
    cov_1kgkf05xw3().s[77]++;
    console.log('🔄 Starting continuous contamination cleanup...');
    const cleanupInterval =
    /* istanbul ignore next */
    (cov_1kgkf05xw3().s[78]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[11]++;
      const result =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[79]++, await this.restoreContaminatedFiles());
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[80]++;
      if (result.restored > 0) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[18][0]++;
        cov_1kgkf05xw3().s[81]++;
        console.log(`🧹 Cleaned up contamination in ${result.files.join(', ')}`);
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[18][1]++;
      }
    }, intervalMs));

    // Clean up on process exit
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[82]++;
    process.on('exit', () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[12]++;
      cov_1kgkf05xw3().s[83]++;
      clearInterval(cleanupInterval);
      // Final cleanup before exit
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[84]++;
      this.restoreContaminatedFiles().catch(() => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[13]++;
      });
    });
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[85]++;
    process.on('SIGINT', () => {
      /* istanbul ignore next */
      cov_1kgkf05xw3().f[14]++;
      cov_1kgkf05xw3().s[86]++;
      clearInterval(cleanupInterval);
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[87]++;
      this.restoreContaminatedFiles().then(() => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[15]++;
        cov_1kgkf05xw3().s[88]++;
        return process.exit();
      }).catch(() => {
        /* istanbul ignore next */
        cov_1kgkf05xw3().f[16]++;
        cov_1kgkf05xw3().s[89]++;
        return process.exit();
      });
    });
    /* istanbul ignore next */
    cov_1kgkf05xw3().s[90]++;
    return cleanupInterval;
  }

  /**
   * Create backups of clean files
   */
  async createBackups() {
    /* istanbul ignore next */
    cov_1kgkf05xw3().f[17]++;
    cov_1kgkf05xw3().s[91]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_1kgkf05xw3().s[92]++, path.join(this.projectRoot, file));
      /* istanbul ignore next */
      cov_1kgkf05xw3().s[93]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_1kgkf05xw3().b[19][0]++;
        const content =
        /* istanbul ignore next */
        (cov_1kgkf05xw3().s[94]++, fs.readFileSync(fullPath, 'utf8'));
        /* istanbul ignore next */
        cov_1kgkf05xw3().s[95]++;
        if (this.isValidJavaScript(content)) {
          /* istanbul ignore next */
          cov_1kgkf05xw3().b[20][0]++;
          const backupPath =
          /* istanbul ignore next */
          (cov_1kgkf05xw3().s[96]++, fullPath + '.backup.original');
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[97]++;
          fs.writeFileSync(backupPath, content, 'utf8');
          /* istanbul ignore next */
          cov_1kgkf05xw3().s[98]++;
          console.log(`📦 Created backup for ${file}`);
        } else
        /* istanbul ignore next */
        {
          cov_1kgkf05xw3().b[20][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1kgkf05xw3().b[19][1]++;
      }
    }
  }
}
/* istanbul ignore next */
cov_1kgkf05xw3().s[99]++;
module.exports = ContaminationResolver;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,