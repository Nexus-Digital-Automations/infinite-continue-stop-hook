1dcc6aeff590359a2ef27059fff485e3
/* istanbul ignore next */
function cov_oepys2yyb() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/errorRecovery.js";
  var hash = "50f621d177b9374c1e92074236403dfeacecdd22";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/errorRecovery.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 11
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "1": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "2": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "8": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "9": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 33,
          column: 18
        }
      },
      "10": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "11": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 41,
          column: 18
        }
      },
      "12": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "13": {
        start: {
          line: 45,
          column: 34
        },
        end: {
          line: 45,
          column: 68
        }
      },
      "14": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "15": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 65
        }
      },
      "16": {
        start: {
          line: 53,
          column: 30
        },
        end: {
          line: 53,
          column: 76
        }
      },
      "17": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 65
        }
      },
      "18": {
        start: {
          line: 55,
          column: 29
        },
        end: {
          line: 55,
          column: 100
        }
      },
      "19": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 78
        }
      },
      "20": {
        start: {
          line: 57,
          column: 31
        },
        end: {
          line: 57,
          column: 71
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "22": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 57
        }
      },
      "23": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "24": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "25": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "26": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "27": {
        start: {
          line: 91,
          column: 34
        },
        end: {
          line: 91,
          column: 68
        }
      },
      "28": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "29": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "30": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "31": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 75
        }
      },
      "32": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 111,
          column: 17
        }
      },
      "33": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 110,
          column: 22
        }
      },
      "34": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 64
        }
      },
      "35": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "36": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 120,
          column: 22
        }
      },
      "37": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 50
        }
      },
      "38": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 126,
          column: 80
        }
      },
      "39": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "40": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "41": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "42": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 50
        }
      },
      "43": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 55
        }
      },
      "44": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "45": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "46": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "47": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "48": {
        start: {
          line: 176,
          column: 25
        },
        end: {
          line: 176,
          column: 56
        }
      },
      "49": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 177,
          column: 31
        }
      },
      "50": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "51": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "52": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 65
        }
      },
      "53": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "54": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "55": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 56
        }
      },
      "56": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "57": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 36
        }
      },
      "58": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 40
        }
      },
      "59": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 204,
          column: 18
        }
      },
      "60": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 46
        }
      },
      "61": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "62": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "63": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "64": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 44
        }
      },
      "65": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 230,
          column: 14
        }
      },
      "66": {
        start: {
          line: 240,
          column: 25
        },
        end: {
          line: 240,
          column: 43
        }
      },
      "67": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 241,
          column: 61
        }
      },
      "68": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "69": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "70": {
        start: {
          line: 246,
          column: 33
        },
        end: {
          line: 246,
          column: 61
        }
      },
      "71": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 256,
          column: 17
        }
      },
      "72": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 252,
          column: 22
        }
      },
      "73": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 255,
          column: 44
        }
      },
      "74": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "75": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 73
        }
      },
      "76": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 65
        }
      },
      "77": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 274,
          column: 14
        }
      },
      "78": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 281,
          column: 14
        }
      },
      "79": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "80": {
        start: {
          line: 293,
          column: 31
        },
        end: {
          line: 293,
          column: 61
        }
      },
      "81": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "82": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 298,
          column: 18
        }
      },
      "83": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "84": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 51
        }
      },
      "85": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 46
        }
      },
      "86": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 14
        }
      },
      "87": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 317,
          column: 14
        }
      },
      "88": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "89": {
        start: {
          line: 328,
          column: 28
        },
        end: {
          line: 328,
          column: 50
        }
      },
      "90": {
        start: {
          line: 329,
          column: 34
        },
        end: {
          line: 329,
          column: 68
        }
      },
      "91": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 333,
          column: 13
        }
      },
      "92": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 26
        }
      },
      "93": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 52
        }
      },
      "94": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 22
        }
      },
      "95": {
        start: {
          line: 348,
          column: 27
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "96": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "97": {
        start: {
          line: 356,
          column: 27
        },
        end: {
          line: 356,
          column: 82
        }
      },
      "98": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "99": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 363,
          column: 18
        }
      },
      "100": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 371,
          column: 10
        }
      },
      "101": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "102": {
        start: {
          line: 380,
          column: 28
        },
        end: {
          line: 380,
          column: 60
        }
      },
      "103": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 391,
          column: 13
        }
      },
      "104": {
        start: {
          line: 383,
          column: 33
        },
        end: {
          line: 383,
          column: 63
        }
      },
      "105": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "106": {
        start: {
          line: 385,
          column: 20
        },
        end: {
          line: 389,
          column: 21
        }
      },
      "107": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 386,
          column: 51
        }
      },
      "108": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 60
        }
      },
      "109": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "110": {
        start: {
          line: 406,
          column: 32
        },
        end: {
          line: 406,
          column: 59
        }
      },
      "111": {
        start: {
          line: 407,
          column: 34
        },
        end: {
          line: 407,
          column: 70
        }
      },
      "112": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 418,
          column: 13
        }
      },
      "113": {
        start: {
          line: 410,
          column: 33
        },
        end: {
          line: 410,
          column: 69
        }
      },
      "114": {
        start: {
          line: 411,
          column: 16
        },
        end: {
          line: 417,
          column: 19
        }
      },
      "115": {
        start: {
          line: 412,
          column: 20
        },
        end: {
          line: 416,
          column: 21
        }
      },
      "116": {
        start: {
          line: 413,
          column: 24
        },
        end: {
          line: 413,
          column: 51
        }
      },
      "117": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "118": {
        start: {
          line: 429,
          column: 26
        },
        end: {
          line: 446,
          column: 18
        }
      },
      "119": {
        start: {
          line: 430,
          column: 32
        },
        end: {
          line: 430,
          column: 70
        }
      },
      "120": {
        start: {
          line: 432,
          column: 37
        },
        end: {
          line: 432,
          column: 65
        }
      },
      "121": {
        start: {
          line: 433,
          column: 34
        },
        end: {
          line: 433,
          column: 55
        }
      },
      "122": {
        start: {
          line: 436,
          column: 36
        },
        end: {
          line: 436,
          column: 76
        }
      },
      "123": {
        start: {
          line: 437,
          column: 38
        },
        end: {
          line: 437,
          column: 72
        }
      },
      "124": {
        start: {
          line: 439,
          column: 20
        },
        end: {
          line: 445,
          column: 22
        }
      },
      "125": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 63
        }
      },
      "126": {
        start: {
          line: 449,
          column: 40
        },
        end: {
          line: 449,
          column: 61
        }
      },
      "127": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 22
        }
      },
      "128": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "129": {
        start: {
          line: 463,
          column: 32
        },
        end: {
          line: 463,
          column: 54
        }
      },
      "130": {
        start: {
          line: 464,
          column: 34
        },
        end: {
          line: 464,
          column: 70
        }
      },
      "131": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 473,
          column: 13
        }
      },
      "132": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 472,
          column: 18
        }
      },
      "133": {
        start: {
          line: 475,
          column: 29
        },
        end: {
          line: 475,
          column: 65
        }
      },
      "134": {
        start: {
          line: 476,
          column: 27
        },
        end: {
          line: 476,
          column: 66
        }
      },
      "135": {
        start: {
          line: 477,
          column: 31
        },
        end: {
          line: 477,
          column: 32
        }
      },
      "136": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 486,
          column: 15
        }
      },
      "137": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 485,
          column: 17
        }
      },
      "138": {
        start: {
          line: 481,
          column: 20
        },
        end: {
          line: 481,
          column: 47
        }
      },
      "139": {
        start: {
          line: 482,
          column: 20
        },
        end: {
          line: 482,
          column: 35
        }
      },
      "140": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 494,
          column: 14
        }
      },
      "141": {
        start: {
          line: 493,
          column: 43
        },
        end: {
          line: 493,
          column: 53
        }
      },
      "142": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 502,
          column: 14
        }
      },
      "143": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 537,
          column: 9
        }
      },
      "144": {
        start: {
          line: 511,
          column: 26
        },
        end: {
          line: 530,
          column: 18
        }
      },
      "145": {
        start: {
          line: 512,
          column: 32
        },
        end: {
          line: 512,
          column: 89
        }
      },
      "146": {
        start: {
          line: 514,
          column: 37
        },
        end: {
          line: 514,
          column: 67
        }
      },
      "147": {
        start: {
          line: 515,
          column: 34
        },
        end: {
          line: 515,
          column: 55
        }
      },
      "148": {
        start: {
          line: 518,
          column: 36
        },
        end: {
          line: 518,
          column: 86
        }
      },
      "149": {
        start: {
          line: 519,
          column: 38
        },
        end: {
          line: 519,
          column: 63
        }
      },
      "150": {
        start: {
          line: 520,
          column: 37
        },
        end: {
          line: 520,
          column: 62
        }
      },
      "151": {
        start: {
          line: 522,
          column: 20
        },
        end: {
          line: 529,
          column: 22
        }
      },
      "152": {
        start: {
          line: 533,
          column: 12
        },
        end: {
          line: 533,
          column: 63
        }
      },
      "153": {
        start: {
          line: 533,
          column: 40
        },
        end: {
          line: 533,
          column: 61
        }
      },
      "154": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 22
        }
      },
      "155": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 572,
          column: 9
        }
      },
      "156": {
        start: {
          line: 545,
          column: 28
        },
        end: {
          line: 545,
          column: 63
        }
      },
      "157": {
        start: {
          line: 546,
          column: 25
        },
        end: {
          line: 546,
          column: 44
        }
      },
      "158": {
        start: {
          line: 549,
          column: 12
        },
        end: {
          line: 554,
          column: 13
        }
      },
      "159": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 553,
          column: 18
        }
      },
      "160": {
        start: {
          line: 556,
          column: 26
        },
        end: {
          line: 556,
          column: 49
        }
      },
      "161": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 565,
          column: 14
        }
      },
      "162": {
        start: {
          line: 568,
          column: 12
        },
        end: {
          line: 571,
          column: 14
        }
      },
      "163": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 584,
          column: 9
        }
      },
      "164": {
        start: {
          line: 580,
          column: 28
        },
        end: {
          line: 580,
          column: 61
        }
      },
      "165": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 581,
          column: 39
        }
      },
      "166": {
        start: {
          line: 583,
          column: 12
        },
        end: {
          line: 583,
          column: 24
        }
      },
      "167": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 591,
          column: 59
        }
      },
      "168": {
        start: {
          line: 591,
          column: 46
        },
        end: {
          line: 591,
          column: 59
        }
      },
      "169": {
        start: {
          line: 593,
          column: 20
        },
        end: {
          line: 593,
          column: 51
        }
      },
      "170": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 594,
          column: 38
        }
      },
      "171": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 612,
          column: 9
        }
      },
      "172": {
        start: {
          line: 603,
          column: 16
        },
        end: {
          line: 603,
          column: 71
        }
      },
      "173": {
        start: {
          line: 605,
          column: 16
        },
        end: {
          line: 605,
          column: 70
        }
      },
      "174": {
        start: {
          line: 607,
          column: 16
        },
        end: {
          line: 607,
          column: 74
        }
      },
      "175": {
        start: {
          line: 609,
          column: 16
        },
        end: {
          line: 609,
          column: 76
        }
      },
      "176": {
        start: {
          line: 611,
          column: 16
        },
        end: {
          line: 611,
          column: 71
        }
      },
      "177": {
        start: {
          line: 616,
          column: 23
        },
        end: {
          line: 616,
          column: 61
        }
      },
      "178": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 623,
          column: 9
        }
      },
      "179": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 622,
          column: 14
        }
      },
      "180": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 57
        }
      },
      "181": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 647,
          column: 9
        }
      },
      "182": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 95
        }
      },
      "183": {
        start: {
          line: 629,
          column: 42
        },
        end: {
          line: 629,
          column: 95
        }
      },
      "184": {
        start: {
          line: 631,
          column: 26
        },
        end: {
          line: 631,
          column: 59
        }
      },
      "185": {
        start: {
          line: 634,
          column: 12
        },
        end: {
          line: 634,
          column: 60
        }
      },
      "186": {
        start: {
          line: 635,
          column: 12
        },
        end: {
          line: 635,
          column: 60
        }
      },
      "187": {
        start: {
          line: 637,
          column: 25
        },
        end: {
          line: 637,
          column: 44
        }
      },
      "188": {
        start: {
          line: 638,
          column: 12
        },
        end: {
          line: 638,
          column: 76
        }
      },
      "189": {
        start: {
          line: 640,
          column: 12
        },
        end: {
          line: 644,
          column: 14
        }
      },
      "190": {
        start: {
          line: 646,
          column: 12
        },
        end: {
          line: 646,
          column: 87
        }
      },
      "191": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 652,
          column: 80
        }
      },
      "192": {
        start: {
          line: 656,
          column: 33
        },
        end: {
          line: 663,
          column: 9
        }
      },
      "193": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 84
        }
      },
      "194": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 671,
          column: 10
        }
      },
      "195": {
        start: {
          line: 675,
          column: 0
        },
        end: {
          line: 675,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 61
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 88
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 62
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 165
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 32
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 239
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        loc: {
          start: {
            line: 291,
            column: 40
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 291
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 326
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 41
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 347
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 44
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 377
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 384,
            column: 33
          },
          end: {
            line: 384,
            column: 34
          }
        },
        loc: {
          start: {
            line: 384,
            column: 43
          },
          end: {
            line: 390,
            column: 17
          }
        },
        line: 384
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        loc: {
          start: {
            line: 403,
            column: 47
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 403
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 411,
            column: 33
          },
          end: {
            line: 411,
            column: 34
          }
        },
        loc: {
          start: {
            line: 411,
            column: 43
          },
          end: {
            line: 417,
            column: 17
          }
        },
        line: 411
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 36
          },
          end: {
            line: 454,
            column: 5
          }
        },
        line: 427
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 430,
            column: 24
          },
          end: {
            line: 430,
            column: 25
          }
        },
        loc: {
          start: {
            line: 430,
            column: 32
          },
          end: {
            line: 430,
            column: 70
          }
        },
        line: 430
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 431,
            column: 21
          },
          end: {
            line: 431,
            column: 22
          }
        },
        loc: {
          start: {
            line: 431,
            column: 29
          },
          end: {
            line: 446,
            column: 17
          }
        },
        line: 431
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 449,
            column: 30
          },
          end: {
            line: 449,
            column: 31
          }
        },
        loc: {
          start: {
            line: 449,
            column: 40
          },
          end: {
            line: 449,
            column: 61
          }
        },
        line: 449
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        loc: {
          start: {
            line: 461,
            column: 41
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 461
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 479,
            column: 29
          },
          end: {
            line: 479,
            column: 30
          }
        },
        loc: {
          start: {
            line: 479,
            column: 39
          },
          end: {
            line: 486,
            column: 13
          }
        },
        line: 479
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 493,
            column: 38
          },
          end: {
            line: 493,
            column: 39
          }
        },
        loc: {
          start: {
            line: 493,
            column: 43
          },
          end: {
            line: 493,
            column: 53
          }
        },
        line: 493
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 509,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        },
        loc: {
          start: {
            line: 509,
            column: 32
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 509
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 512,
            column: 24
          },
          end: {
            line: 512,
            column: 25
          }
        },
        loc: {
          start: {
            line: 512,
            column: 32
          },
          end: {
            line: 512,
            column: 89
          }
        },
        line: 512
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 513,
            column: 21
          },
          end: {
            line: 513,
            column: 22
          }
        },
        loc: {
          start: {
            line: 513,
            column: 29
          },
          end: {
            line: 530,
            column: 17
          }
        },
        line: 513
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 533,
            column: 30
          },
          end: {
            line: 533,
            column: 31
          }
        },
        loc: {
          start: {
            line: 533,
            column: 40
          },
          end: {
            line: 533,
            column: 61
          }
        },
        line: 533
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 38
          },
          end: {
            line: 573,
            column: 5
          }
        },
        line: 543
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 578,
            column: 4
          },
          end: {
            line: 578,
            column: 5
          }
        },
        loc: {
          start: {
            line: 578,
            column: 28
          },
          end: {
            line: 585,
            column: 5
          }
        },
        line: 578
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 590,
            column: 4
          },
          end: {
            line: 590,
            column: 5
          }
        },
        loc: {
          start: {
            line: 590,
            column: 27
          },
          end: {
            line: 595,
            column: 5
          }
        },
        line: 590
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 600,
            column: 4
          },
          end: {
            line: 600,
            column: 5
          }
        },
        loc: {
          start: {
            line: 600,
            column: 55
          },
          end: {
            line: 613,
            column: 5
          }
        },
        line: 600
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 615,
            column: 5
          }
        },
        loc: {
          start: {
            line: 615,
            column: 47
          },
          end: {
            line: 625,
            column: 5
          }
        },
        line: 615
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 627,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        },
        loc: {
          start: {
            line: 627,
            column: 46
          },
          end: {
            line: 648,
            column: 5
          }
        },
        line: 627
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        loc: {
          start: {
            line: 650,
            column: 51
          },
          end: {
            line: 653,
            column: 5
          }
        },
        line: 650
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 655,
            column: 5
          }
        },
        loc: {
          start: {
            line: 655,
            column: 52
          },
          end: {
            line: 672,
            column: 5
          }
        },
        line: 655
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 28
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 44
          }
        }, {
          start: {
            line: 14,
            column: 48
          },
          end: {
            line: 14,
            column: 49
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 42
          }
        }, {
          start: {
            line: 15,
            column: 46
          },
          end: {
            line: 15,
            column: 61
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 46
          }
        }, {
          start: {
            line: 16,
            column: 50
          },
          end: {
            line: 16,
            column: 54
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 49
          }
        }, {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 28,
            column: 84
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 88,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 59
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: 112,
            column: 19
          },
          end: {
            line: 123,
            column: 13
          }
        }],
        line: 103
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "15": {
        loc: {
          start: {
            line: 165,
            column: 41
          },
          end: {
            line: 165,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 56
          },
          end: {
            line: 165,
            column: 60
          }
        }],
        line: 165
      },
      "16": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "17": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 168,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 45
          }
        }, {
          start: {
            line: 167,
            column: 49
          },
          end: {
            line: 167,
            column: 75
          }
        }, {
          start: {
            line: 167,
            column: 79
          },
          end: {
            line: 167,
            column: 105
          }
        }, {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 168,
            column: 38
          }
        }, {
          start: {
            line: 168,
            column: 42
          },
          end: {
            line: 168,
            column: 71
          }
        }, {
          start: {
            line: 168,
            column: 75
          },
          end: {
            line: 168,
            column: 106
          }
        }],
        line: 167
      },
      "18": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "19": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 181,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 181,
            column: 28
          }
        }, {
          start: {
            line: 181,
            column: 32
          },
          end: {
            line: 181,
            column: 55
          }
        }],
        line: 181
      },
      "20": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "21": {
        loc: {
          start: {
            line: 203,
            column: 35
          },
          end: {
            line: 203,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 203,
            column: 70
          }
        }, {
          start: {
            line: 203,
            column: 73
          },
          end: {
            line: 203,
            column: 78
          }
        }],
        line: 203
      },
      "22": {
        loc: {
          start: {
            line: 212,
            column: 31
          },
          end: {
            line: 212,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 46
          },
          end: {
            line: 212,
            column: 66
          }
        }, {
          start: {
            line: 212,
            column: 69
          },
          end: {
            line: 212,
            column: 74
          }
        }],
        line: 212
      },
      "23": {
        loc: {
          start: {
            line: 213,
            column: 28
          },
          end: {
            line: 213,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 43
          },
          end: {
            line: 213,
            column: 66
          }
        }, {
          start: {
            line: 213,
            column: 69
          },
          end: {
            line: 213,
            column: 73
          }
        }],
        line: 213
      },
      "24": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "25": {
        loc: {
          start: {
            line: 229,
            column: 31
          },
          end: {
            line: 229,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 46
          },
          end: {
            line: 229,
            column: 66
          }
        }, {
          start: {
            line: 229,
            column: 69
          },
          end: {
            line: 229,
            column: 74
          }
        }],
        line: 229
      },
      "26": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "27": {
        loc: {
          start: {
            line: 247,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        }, {
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 256,
            column: 17
          }
        }],
        line: 247
      },
      "28": {
        loc: {
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 247,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 247,
            column: 28
          }
        }, {
          start: {
            line: 247,
            column: 32
          },
          end: {
            line: 247,
            column: 59
          }
        }],
        line: 247
      },
      "29": {
        loc: {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "30": {
        loc: {
          start: {
            line: 294,
            column: 16
          },
          end: {
            line: 294,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 16
          },
          end: {
            line: 294,
            column: 27
          }
        }, {
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 294,
            column: 59
          }
        }],
        line: 294
      },
      "31": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "32": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "33": {
        loc: {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "34": {
        loc: {
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "35": {
        loc: {
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 418,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 418,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "36": {
        loc: {
          start: {
            line: 437,
            column: 38
          },
          end: {
            line: 437,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 437,
            column: 48
          },
          end: {
            line: 437,
            column: 68
          }
        }, {
          start: {
            line: 437,
            column: 71
          },
          end: {
            line: 437,
            column: 72
          }
        }],
        line: 437
      },
      "37": {
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 473,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 473,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "38": {
        loc: {
          start: {
            line: 512,
            column: 32
          },
          end: {
            line: 512,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 32
          },
          end: {
            line: 512,
            column: 61
          }
        }, {
          start: {
            line: 512,
            column: 65
          },
          end: {
            line: 512,
            column: 89
          }
        }],
        line: 512
      },
      "39": {
        loc: {
          start: {
            line: 519,
            column: 38
          },
          end: {
            line: 519,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 519,
            column: 48
          },
          end: {
            line: 519,
            column: 58
          }
        }, {
          start: {
            line: 519,
            column: 61
          },
          end: {
            line: 519,
            column: 63
          }
        }],
        line: 519
      },
      "40": {
        loc: {
          start: {
            line: 520,
            column: 37
          },
          end: {
            line: 520,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 520,
            column: 47
          },
          end: {
            line: 520,
            column: 57
          }
        }, {
          start: {
            line: 520,
            column: 60
          },
          end: {
            line: 520,
            column: 62
          }
        }],
        line: 520
      },
      "41": {
        loc: {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "42": {
        loc: {
          start: {
            line: 549,
            column: 16
          },
          end: {
            line: 549,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 16
          },
          end: {
            line: 549,
            column: 29
          }
        }, {
          start: {
            line: 549,
            column: 33
          },
          end: {
            line: 549,
            column: 59
          }
        }],
        line: 549
      },
      "43": {
        loc: {
          start: {
            line: 591,
            column: 8
          },
          end: {
            line: 591,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 591,
            column: 8
          },
          end: {
            line: 591,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 591
      },
      "44": {
        loc: {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 591,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 591,
            column: 21
          }
        }, {
          start: {
            line: 591,
            column: 25
          },
          end: {
            line: 591,
            column: 44
          }
        }],
        line: 591
      },
      "45": {
        loc: {
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 612,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 602,
            column: 12
          },
          end: {
            line: 603,
            column: 71
          }
        }, {
          start: {
            line: 604,
            column: 12
          },
          end: {
            line: 605,
            column: 70
          }
        }, {
          start: {
            line: 606,
            column: 12
          },
          end: {
            line: 607,
            column: 74
          }
        }, {
          start: {
            line: 608,
            column: 12
          },
          end: {
            line: 609,
            column: 76
          }
        }, {
          start: {
            line: 610,
            column: 12
          },
          end: {
            line: 611,
            column: 71
          }
        }],
        line: 601
      },
      "46": {
        loc: {
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 623,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 623,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "47": {
        loc: {
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 629,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 629,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0, 0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "50f621d177b9374c1e92074236403dfeacecdd22"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_oepys2yyb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_oepys2yyb();
/**
 * Error Recovery Manager
 * 
 * Handles backup creation, file recovery, and atomic operations
 * for TODO.json files to ensure data safety during modifications.
 */

const fs =
/* istanbul ignore next */
(cov_oepys2yyb().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_oepys2yyb().s[1]++, require('path'));
const crypto =
/* istanbul ignore next */
(cov_oepys2yyb().s[2]++, require('crypto'));
class ErrorRecovery {
  constructor(options =
  /* istanbul ignore next */
  (cov_oepys2yyb().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[0]++;
    cov_oepys2yyb().s[3]++;
    this.maxBackups =
    /* istanbul ignore next */
    (cov_oepys2yyb().b[1][0]++, options.maxBackups) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[1][1]++, 3);
    /* istanbul ignore next */
    cov_oepys2yyb().s[4]++;
    this.backupDir =
    /* istanbul ignore next */
    (cov_oepys2yyb().b[2][0]++, options.backupDir) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[2][1]++, '.todo-backups');
    /* istanbul ignore next */
    cov_oepys2yyb().s[5]++;
    this.lockTimeout =
    /* istanbul ignore next */
    (cov_oepys2yyb().b[3][0]++, options.lockTimeout) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[3][1]++, 5000); // 5 seconds
    /* istanbul ignore next */
    cov_oepys2yyb().s[6]++;
    this.activeLocks = new Map();
  }

  /**
   * Creates a backup of the TODO.json file before modifications
   * @param {string} filePath - Path to the TODO.json file
   * @returns {Object} Backup creation result
   */
  async createBackup(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[1]++;
    cov_oepys2yyb().s[7]++;
    try {
      /* istanbul ignore next */
      cov_oepys2yyb().s[8]++;
      // CRITICAL SAFETY CHECK: Only backup TODO.json files
      if (
      /* istanbul ignore next */
      (cov_oepys2yyb().b[5][0]++, filePath.includes('node_modules')) ||
      /* istanbul ignore next */
      (cov_oepys2yyb().b[5][1]++, !filePath.includes('TODO.json'))) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[4][0]++;
        cov_oepys2yyb().s[9]++;
        return {
          success: false,
          error: `Unsafe backup source: ${filePath}. Only TODO.json files can be backed up.`,
          backupPath: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[4][1]++;
      }
      cov_oepys2yyb().s[10]++;
      if (!fs.existsSync(filePath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[6][0]++;
        cov_oepys2yyb().s[11]++;
        return {
          success: false,
          error: 'File does not exist',
          backupPath: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[6][1]++;
      }
      const fileDir =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[12]++, path.dirname(filePath));
      const backupDirPath =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[13]++, path.join(fileDir, this.backupDir));

      // Ensure backup directory exists
      /* istanbul ignore next */
      cov_oepys2yyb().s[14]++;
      if (!fs.existsSync(backupDirPath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[7][0]++;
        cov_oepys2yyb().s[15]++;
        fs.mkdirSync(backupDirPath, {
          recursive: true
        });
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[7][1]++;
      }

      // Generate backup filename with timestamp and checksum
      const timestamp =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[16]++, new Date().toISOString().replace(/[:.]/g, '-'));
      const fileContent =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[17]++, fs.readFileSync(filePath, 'utf8'));
      const checksum =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[18]++, crypto.createHash('md5').update(fileContent).digest('hex').substr(0, 8));
      const backupFilename =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[19]++, `TODO.json.${timestamp}.${checksum}.backup`);
      const backupPath =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[20]++, path.join(backupDirPath, backupFilename));

      // Copy file to backup location
      /* istanbul ignore next */
      cov_oepys2yyb().s[21]++;
      fs.copyFileSync(filePath, backupPath);

      // Clean up old backups
      /* istanbul ignore next */
      cov_oepys2yyb().s[22]++;
      await this._cleanupOldBackups(backupDirPath);
      /* istanbul ignore next */
      cov_oepys2yyb().s[23]++;
      return {
        success: true,
        backupPath,
        timestamp,
        checksum,
        size: fs.statSync(backupPath).size
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[24]++;
      return {
        success: false,
        error: error.message,
        backupPath: null
      };
    }
  }

  /**
   * Restores TODO.json from the most recent backup
   * @param {string} filePath - Path to the TODO.json file
   * @param {string} specificBackup - Optional specific backup file to restore
   * @returns {Object} Restoration result
   */
  async restoreFromBackup(filePath, specificBackup =
  /* istanbul ignore next */
  (cov_oepys2yyb().b[8][0]++, null)) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[2]++;
    cov_oepys2yyb().s[25]++;
    try {
      const fileDir =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[26]++, path.dirname(filePath));
      const backupDirPath =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[27]++, path.join(fileDir, this.backupDir));
      /* istanbul ignore next */
      cov_oepys2yyb().s[28]++;
      if (!fs.existsSync(backupDirPath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[9][0]++;
        cov_oepys2yyb().s[29]++;
        return {
          success: false,
          error: 'No backup directory found',
          restoredFrom: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[9][1]++;
      }
      let backupToRestore;
      /* istanbul ignore next */
      cov_oepys2yyb().s[30]++;
      if (specificBackup) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[10][0]++;
        cov_oepys2yyb().s[31]++;
        backupToRestore = path.join(backupDirPath, specificBackup);
        /* istanbul ignore next */
        cov_oepys2yyb().s[32]++;
        if (!fs.existsSync(backupToRestore)) {
          /* istanbul ignore next */
          cov_oepys2yyb().b[11][0]++;
          cov_oepys2yyb().s[33]++;
          return {
            success: false,
            error: 'Specified backup file not found',
            restoredFrom: null
          };
        } else
        /* istanbul ignore next */
        {
          cov_oepys2yyb().b[11][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_oepys2yyb().b[10][1]++;
        // Find the most recent backup
        const backups =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[34]++, this._listBackups(backupDirPath));
        /* istanbul ignore next */
        cov_oepys2yyb().s[35]++;
        if (backups.length === 0) {
          /* istanbul ignore next */
          cov_oepys2yyb().b[12][0]++;
          cov_oepys2yyb().s[36]++;
          return {
            success: false,
            error: 'No backup files found',
            restoredFrom: null
          };
        } else
        /* istanbul ignore next */
        {
          cov_oepys2yyb().b[12][1]++;
        }
        cov_oepys2yyb().s[37]++;
        backupToRestore = backups[0].path; // Most recent first
      }

      // Validate backup before restoring
      const validationResult =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[38]++, await this._validateBackup(backupToRestore));
      /* istanbul ignore next */
      cov_oepys2yyb().s[39]++;
      if (!validationResult.isValid) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[13][0]++;
        cov_oepys2yyb().s[40]++;
        return {
          success: false,
          error: `Backup validation failed: ${validationResult.error}`,
          restoredFrom: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[13][1]++;
      }

      // Create backup of current file before restoring
      cov_oepys2yyb().s[41]++;
      if (fs.existsSync(filePath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[14][0]++;
        cov_oepys2yyb().s[42]++;
        await this.createBackup(filePath);
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[14][1]++;
      }

      // Restore from backup
      cov_oepys2yyb().s[43]++;
      fs.copyFileSync(backupToRestore, filePath);
      /* istanbul ignore next */
      cov_oepys2yyb().s[44]++;
      return {
        success: true,
        restoredFrom: backupToRestore,
        backupInfo: validationResult.backupInfo
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[45]++;
      return {
        success: false,
        error: error.message,
        restoredFrom: null
      };
    }
  }

  /**
   * Performs atomic write operation with rollback capability
   * @param {string} filePath - Path to the file
   * @param {string} content - Content to write
   * @param {boolean} createBackup - Whether to create backup before writing
   * @returns {Object} Write operation result
   */
  async atomicWrite(filePath, content, createBackup =
  /* istanbul ignore next */
  (cov_oepys2yyb().b[15][0]++, true)) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[3]++;
    cov_oepys2yyb().s[46]++;
    // CRITICAL SAFETY CHECK: Prevent writing to node_modules or system files
    if (
    /* istanbul ignore next */
    (cov_oepys2yyb().b[17][0]++, filePath.includes('node_modules')) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[17][1]++, filePath.includes('/usr/')) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[17][2]++, filePath.includes('/bin/')) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[17][3]++, filePath.includes('/lib/')) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[17][4]++, filePath.includes('/system/')) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[17][5]++, !filePath.includes('TODO.json'))) {
      /* istanbul ignore next */
      cov_oepys2yyb().b[16][0]++;
      cov_oepys2yyb().s[47]++;
      return {
        success: false,
        error: `Unsafe file path detected: ${filePath}. Only TODO.json files are allowed.`,
        backupCreated: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_oepys2yyb().b[16][1]++;
    }
    const tempPath =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[48]++, `${filePath}.tmp.${Date.now()}`);
    let backupResult =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[49]++, null);
    /* istanbul ignore next */
    cov_oepys2yyb().s[50]++;
    try {
      /* istanbul ignore next */
      cov_oepys2yyb().s[51]++;
      // Create backup if requested and file exists
      if (
      /* istanbul ignore next */
      (cov_oepys2yyb().b[19][0]++, createBackup) &&
      /* istanbul ignore next */
      (cov_oepys2yyb().b[19][1]++, fs.existsSync(filePath))) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[18][0]++;
        cov_oepys2yyb().s[52]++;
        backupResult = await this.createBackup(filePath);
        /* istanbul ignore next */
        cov_oepys2yyb().s[53]++;
        if (!backupResult.success) {
          /* istanbul ignore next */
          cov_oepys2yyb().b[20][0]++;
          cov_oepys2yyb().s[54]++;
          return {
            success: false,
            error: `Backup failed: ${backupResult.error}`,
            backupCreated: false
          };
        } else
        /* istanbul ignore next */
        {
          cov_oepys2yyb().b[20][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[18][1]++;
      }

      // Write to temporary file first
      cov_oepys2yyb().s[55]++;
      fs.writeFileSync(tempPath, content, 'utf8');

      // Validate the written content
      /* istanbul ignore next */
      cov_oepys2yyb().s[56]++;
      try {
        /* istanbul ignore next */
        cov_oepys2yyb().s[57]++;
        JSON.parse(content);
      } catch (jsonError) {
        /* istanbul ignore next */
        cov_oepys2yyb().s[58]++;
        fs.unlinkSync(tempPath);
        /* istanbul ignore next */
        cov_oepys2yyb().s[59]++;
        return {
          success: false,
          error: `Invalid JSON content: ${jsonError.message}`,
          backupCreated: backupResult ?
          /* istanbul ignore next */
          (cov_oepys2yyb().b[21][0]++, backupResult.success) :
          /* istanbul ignore next */
          (cov_oepys2yyb().b[21][1]++, false)
        };
      }

      // Atomic move from temp to final location
      /* istanbul ignore next */
      cov_oepys2yyb().s[60]++;
      fs.renameSync(tempPath, filePath);
      /* istanbul ignore next */
      cov_oepys2yyb().s[61]++;
      return {
        success: true,
        backupCreated: backupResult ?
        /* istanbul ignore next */
        (cov_oepys2yyb().b[22][0]++, backupResult.success) :
        /* istanbul ignore next */
        (cov_oepys2yyb().b[22][1]++, false),
        backupPath: backupResult ?
        /* istanbul ignore next */
        (cov_oepys2yyb().b[23][0]++, backupResult.backupPath) :
        /* istanbul ignore next */
        (cov_oepys2yyb().b[23][1]++, null)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[62]++;
      // Clean up temp file if it exists
      if (fs.existsSync(tempPath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[24][0]++;
        cov_oepys2yyb().s[63]++;
        try {
          /* istanbul ignore next */
          cov_oepys2yyb().s[64]++;
          fs.unlinkSync(tempPath);
        } catch {
          // Ignore cleanup errors
        }
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[24][1]++;
      }
      cov_oepys2yyb().s[65]++;
      return {
        success: false,
        error: error.message,
        backupCreated: backupResult ?
        /* istanbul ignore next */
        (cov_oepys2yyb().b[25][0]++, backupResult.success) :
        /* istanbul ignore next */
        (cov_oepys2yyb().b[25][1]++, false)
      };
    }
  }

  /**
   * Acquires a file lock to prevent concurrent modifications
   * @param {string} filePath - Path to the file to lock
   * @returns {Object} Lock acquisition result
   */
  async acquireLock(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[4]++;
    const lockPath =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[66]++, `${filePath}.lock`);
    const lockId =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[67]++, crypto.randomBytes(16).toString('hex'));
    /* istanbul ignore next */
    cov_oepys2yyb().s[68]++;
    try {
      /* istanbul ignore next */
      cov_oepys2yyb().s[69]++;
      // Check if lock already exists
      if (fs.existsSync(lockPath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[26][0]++;
        const lockInfo =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[70]++, this._readLockFile(lockPath));
        /* istanbul ignore next */
        cov_oepys2yyb().s[71]++;
        if (
        /* istanbul ignore next */
        (cov_oepys2yyb().b[28][0]++, lockInfo) &&
        /* istanbul ignore next */
        (cov_oepys2yyb().b[28][1]++, this._isLockValid(lockInfo))) {
          /* istanbul ignore next */
          cov_oepys2yyb().b[27][0]++;
          cov_oepys2yyb().s[72]++;
          return {
            success: false,
            error: 'File is locked by another process',
            lockId: null
          };
        } else {
          /* istanbul ignore next */
          cov_oepys2yyb().b[27][1]++;
          cov_oepys2yyb().s[73]++;
          // Remove stale lock
          fs.unlinkSync(lockPath);
        }
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[26][1]++;
      }

      // Create lock file
      const lockData =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[74]++, {
        lockId,
        pid: process.pid,
        timestamp: Date.now(),
        filePath
      });
      /* istanbul ignore next */
      cov_oepys2yyb().s[75]++;
      fs.writeFileSync(lockPath, JSON.stringify(lockData), 'utf8');
      /* istanbul ignore next */
      cov_oepys2yyb().s[76]++;
      this.activeLocks.set(filePath, {
        lockId,
        lockPath
      });
      /* istanbul ignore next */
      cov_oepys2yyb().s[77]++;
      return {
        success: true,
        lockId,
        lockPath
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[78]++;
      return {
        success: false,
        error: error.message,
        lockId: null
      };
    }
  }

  /**
   * Releases a file lock
   * @param {string} filePath - Path to the file to unlock
   * @param {string} lockId - Lock ID for verification
   * @returns {Object} Lock release result
   */
  async releaseLock(filePath, lockId) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[5]++;
    cov_oepys2yyb().s[79]++;
    try {
      const activeLock =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[80]++, this.activeLocks.get(filePath));
      /* istanbul ignore next */
      cov_oepys2yyb().s[81]++;
      if (
      /* istanbul ignore next */
      (cov_oepys2yyb().b[30][0]++, !activeLock) ||
      /* istanbul ignore next */
      (cov_oepys2yyb().b[30][1]++, activeLock.lockId !== lockId)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[29][0]++;
        cov_oepys2yyb().s[82]++;
        return {
          success: false,
          error: 'Invalid lock ID or file not locked by this process'
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[29][1]++;
      }

      // Remove lock file
      cov_oepys2yyb().s[83]++;
      if (fs.existsSync(activeLock.lockPath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[31][0]++;
        cov_oepys2yyb().s[84]++;
        fs.unlinkSync(activeLock.lockPath);
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[31][1]++;
      }

      // Remove from active locks
      cov_oepys2yyb().s[85]++;
      this.activeLocks.delete(filePath);
      /* istanbul ignore next */
      cov_oepys2yyb().s[86]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[87]++;
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * Lists available backups for a TODO.json file
   * @param {string} filePath - Path to the TODO.json file
   * @returns {Array} List of available backups
   */
  listAvailableBackups(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[6]++;
    cov_oepys2yyb().s[88]++;
    try {
      const fileDir =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[89]++, path.dirname(filePath));
      const backupDirPath =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[90]++, path.join(fileDir, this.backupDir));
      /* istanbul ignore next */
      cov_oepys2yyb().s[91]++;
      if (!fs.existsSync(backupDirPath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[32][0]++;
        cov_oepys2yyb().s[92]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[32][1]++;
      }
      cov_oepys2yyb().s[93]++;
      return this._listBackups(backupDirPath);
    } catch {
      /* istanbul ignore next */
      cov_oepys2yyb().s[94]++;
      return [];
    }
  }

  /**
   * Recovers from corrupted TODO.json using various strategies
   * @param {string} filePath - Path to the corrupted file
   * @returns {Object} Recovery result
   */
  async recoverCorruptedFile(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[7]++;
    const strategies =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[95]++, ['restore_from_backup', 'repair_json_syntax', 'rebuild_from_fragments', 'create_minimal_structure']);
    /* istanbul ignore next */
    cov_oepys2yyb().s[96]++;
    for (const strategy of strategies) {
      const result =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[97]++, await this._executeRecoveryStrategy(strategy, filePath));
      /* istanbul ignore next */
      cov_oepys2yyb().s[98]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[33][0]++;
        cov_oepys2yyb().s[99]++;
        return {
          success: true,
          strategy,
          message: result.message,
          recoveredData: result.data
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[33][1]++;
      }
    }
    /* istanbul ignore next */
    cov_oepys2yyb().s[100]++;
    return {
      success: false,
      error: 'All recovery strategies failed',
      strategies: strategies
    };
  }

  /**
   * Cleans up old backup files in both current and legacy locations
   */
  async _cleanupOldBackups(backupDirPath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[8]++;
    cov_oepys2yyb().s[101]++;
    try {
      // Clean up current backups in .todo-backups directory
      const backups =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[102]++, this._listBackups(backupDirPath));
      /* istanbul ignore next */
      cov_oepys2yyb().s[103]++;
      if (backups.length > this.maxBackups) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[34][0]++;
        const toDelete =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[104]++, backups.slice(this.maxBackups));
        /* istanbul ignore next */
        cov_oepys2yyb().s[105]++;
        toDelete.forEach(backup => {
          /* istanbul ignore next */
          cov_oepys2yyb().f[9]++;
          cov_oepys2yyb().s[106]++;
          try {
            /* istanbul ignore next */
            cov_oepys2yyb().s[107]++;
            fs.unlinkSync(backup.path);
          } catch {
            // Ignore individual deletion errors
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[34][1]++;
      }

      // Clean up legacy backups in project root directory
      cov_oepys2yyb().s[108]++;
      await this._cleanupLegacyBackups(backupDirPath);
    } catch {
      // Ignore cleanup errors
    }
  }

  /**
   * Cleans up legacy backup files in the project root directory
   */
  async _cleanupLegacyBackups(backupDirPath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[10]++;
    cov_oepys2yyb().s[109]++;
    try {
      // Get the project root directory (parent of .todo-backups)
      const projectRoot =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[110]++, path.dirname(backupDirPath));
      const legacyBackups =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[111]++, this._listLegacyBackups(projectRoot));
      /* istanbul ignore next */
      cov_oepys2yyb().s[112]++;
      if (legacyBackups.length > this.maxBackups) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[35][0]++;
        const toDelete =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[113]++, legacyBackups.slice(this.maxBackups));
        /* istanbul ignore next */
        cov_oepys2yyb().s[114]++;
        toDelete.forEach(backup => {
          /* istanbul ignore next */
          cov_oepys2yyb().f[11]++;
          cov_oepys2yyb().s[115]++;
          try {
            /* istanbul ignore next */
            cov_oepys2yyb().s[116]++;
            fs.unlinkSync(backup.path);
          } catch {
            // Ignore individual deletion errors
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[35][1]++;
      }
    } catch {
      // Ignore cleanup errors for legacy backups
    }
  }

  /**
   * Lists and sorts legacy backup files from project root
   */
  _listLegacyBackups(projectRoot) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[12]++;
    cov_oepys2yyb().s[117]++;
    try {
      const files =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[118]++, fs.readdirSync(projectRoot).filter(file => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[13]++;
        cov_oepys2yyb().s[119]++;
        return /^TODO\.json\.backup\.\d+$/.test(file);
      }).map(file => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[14]++;
        const filePath =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[120]++, path.join(projectRoot, file));
        const stats =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[121]++, fs.statSync(filePath));

        // Extract timestamp from filename (unix timestamp)
        const matches =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[122]++, file.match(/TODO\.json\.backup\.(\d+)$/));
        const timestamp =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[123]++, matches ?
        /* istanbul ignore next */
        (cov_oepys2yyb().b[36][0]++, parseInt(matches[1])) :
        /* istanbul ignore next */
        (cov_oepys2yyb().b[36][1]++, 0));
        /* istanbul ignore next */
        cov_oepys2yyb().s[124]++;
        return {
          filename: file,
          path: filePath,
          timestamp,
          size: stats.size,
          created: stats.mtime
        };
      }));

      // Sort by creation time (newest first)
      /* istanbul ignore next */
      cov_oepys2yyb().s[125]++;
      return files.sort((a, b) => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[15]++;
        cov_oepys2yyb().s[126]++;
        return b.created - a.created;
      });
    } catch {
      /* istanbul ignore next */
      cov_oepys2yyb().s[127]++;
      return [];
    }
  }

  /**
   * Manually cleans up all legacy backup files, keeping only the most recent ones
   * @param {string} filePath - Path to the TODO.json file
   * @returns {Object} Cleanup result
   */
  async cleanupLegacyBackups(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[16]++;
    cov_oepys2yyb().s[128]++;
    try {
      const projectRoot =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[129]++, path.dirname(filePath));
      const legacyBackups =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[130]++, this._listLegacyBackups(projectRoot));
      /* istanbul ignore next */
      cov_oepys2yyb().s[131]++;
      if (legacyBackups.length <= this.maxBackups) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[37][0]++;
        cov_oepys2yyb().s[132]++;
        return {
          success: true,
          message: `Found ${legacyBackups.length} legacy backups, no cleanup needed`,
          deletedCount: 0,
          keptCount: legacyBackups.length
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[37][1]++;
      }
      const toDelete =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[133]++, legacyBackups.slice(this.maxBackups));
      const toKeep =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[134]++, legacyBackups.slice(0, this.maxBackups));
      let deletedCount =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[135]++, 0);
      /* istanbul ignore next */
      cov_oepys2yyb().s[136]++;
      toDelete.forEach(backup => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[17]++;
        cov_oepys2yyb().s[137]++;
        try {
          /* istanbul ignore next */
          cov_oepys2yyb().s[138]++;
          fs.unlinkSync(backup.path);
          /* istanbul ignore next */
          cov_oepys2yyb().s[139]++;
          deletedCount++;
        } catch {
          // Log but continue with other deletions
        }
      });
      /* istanbul ignore next */
      cov_oepys2yyb().s[140]++;
      return {
        success: true,
        message: `Cleaned up ${deletedCount} legacy backup files, kept ${toKeep.length} most recent`,
        deletedCount,
        keptCount: toKeep.length,
        keptFiles: toKeep.map(b => {
          /* istanbul ignore next */
          cov_oepys2yyb().f[18]++;
          cov_oepys2yyb().s[141]++;
          return b.filename;
        })
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[142]++;
      return {
        success: false,
        error: error.message,
        deletedCount: 0,
        keptCount: 0
      };
    }
  }

  /**
   * Lists and sorts backup files
   */
  _listBackups(backupDirPath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[19]++;
    cov_oepys2yyb().s[143]++;
    try {
      const files =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[144]++, fs.readdirSync(backupDirPath).filter(file => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[20]++;
        cov_oepys2yyb().s[145]++;
        return /* istanbul ignore next */(cov_oepys2yyb().b[38][0]++, file.startsWith('TODO.json.')) &&
        /* istanbul ignore next */
        (cov_oepys2yyb().b[38][1]++, file.endsWith('.backup'));
      }).map(file => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[21]++;
        const filePath =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[146]++, path.join(backupDirPath, file));
        const stats =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[147]++, fs.statSync(filePath));

        // Extract timestamp from filename
        const matches =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[148]++, file.match(/TODO\.json\.([^.]+)\.([^.]+)\.backup/));
        const timestamp =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[149]++, matches ?
        /* istanbul ignore next */
        (cov_oepys2yyb().b[39][0]++, matches[1]) :
        /* istanbul ignore next */
        (cov_oepys2yyb().b[39][1]++, ''));
        const checksum =
        /* istanbul ignore next */
        (cov_oepys2yyb().s[150]++, matches ?
        /* istanbul ignore next */
        (cov_oepys2yyb().b[40][0]++, matches[2]) :
        /* istanbul ignore next */
        (cov_oepys2yyb().b[40][1]++, ''));
        /* istanbul ignore next */
        cov_oepys2yyb().s[151]++;
        return {
          filename: file,
          path: filePath,
          timestamp,
          checksum,
          size: stats.size,
          created: stats.mtime
        };
      }));

      // Sort by creation time (newest first)
      /* istanbul ignore next */
      cov_oepys2yyb().s[152]++;
      return files.sort((a, b) => {
        /* istanbul ignore next */
        cov_oepys2yyb().f[22]++;
        cov_oepys2yyb().s[153]++;
        return b.created - a.created;
      });
    } catch {
      /* istanbul ignore next */
      cov_oepys2yyb().s[154]++;
      return [];
    }
  }

  /**
   * Validates a backup file
   */
  async _validateBackup(backupPath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[23]++;
    cov_oepys2yyb().s[155]++;
    try {
      const content =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[156]++, fs.readFileSync(backupPath, 'utf8'));
      const data =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[157]++, JSON.parse(content));

      // Basic structure validation
      /* istanbul ignore next */
      cov_oepys2yyb().s[158]++;
      if (
      /* istanbul ignore next */
      (cov_oepys2yyb().b[42][0]++, !data.project) ||
      /* istanbul ignore next */
      (cov_oepys2yyb().b[42][1]++, !Array.isArray(data.tasks))) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[41][0]++;
        cov_oepys2yyb().s[159]++;
        return {
          isValid: false,
          error: 'Invalid TODO.json structure in backup'
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[41][1]++;
      }
      const stats =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[160]++, fs.statSync(backupPath));
      /* istanbul ignore next */
      cov_oepys2yyb().s[161]++;
      return {
        isValid: true,
        backupInfo: {
          size: stats.size,
          created: stats.mtime,
          taskCount: data.tasks.length,
          project: data.project
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[162]++;
      return {
        isValid: false,
        error: error.message
      };
    }
  }

  /**
   * Reads lock file information
   */
  _readLockFile(lockPath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[24]++;
    cov_oepys2yyb().s[163]++;
    try {
      const content =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[164]++, fs.readFileSync(lockPath, 'utf8'));
      /* istanbul ignore next */
      cov_oepys2yyb().s[165]++;
      return JSON.parse(content);
    } catch {
      /* istanbul ignore next */
      cov_oepys2yyb().s[166]++;
      return null;
    }
  }

  /**
   * Checks if a lock is still valid
   */
  _isLockValid(lockInfo) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[25]++;
    cov_oepys2yyb().s[167]++;
    if (
    /* istanbul ignore next */
    (cov_oepys2yyb().b[44][0]++, !lockInfo) ||
    /* istanbul ignore next */
    (cov_oepys2yyb().b[44][1]++, !lockInfo.timestamp)) {
      /* istanbul ignore next */
      cov_oepys2yyb().b[43][0]++;
      cov_oepys2yyb().s[168]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_oepys2yyb().b[43][1]++;
    }
    const age =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[169]++, Date.now() - lockInfo.timestamp);
    /* istanbul ignore next */
    cov_oepys2yyb().s[170]++;
    return age < this.lockTimeout;
  }

  /**
   * Executes a specific recovery strategy
   */
  async _executeRecoveryStrategy(strategy, filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[26]++;
    cov_oepys2yyb().s[171]++;
    switch (strategy) {
      case 'restore_from_backup':
        /* istanbul ignore next */
        cov_oepys2yyb().b[45][0]++;
        cov_oepys2yyb().s[172]++;
        return await this._strategyRestoreFromBackup(filePath);
      case 'repair_json_syntax':
        /* istanbul ignore next */
        cov_oepys2yyb().b[45][1]++;
        cov_oepys2yyb().s[173]++;
        return await this._strategyRepairJsonSyntax(filePath);
      case 'rebuild_from_fragments':
        /* istanbul ignore next */
        cov_oepys2yyb().b[45][2]++;
        cov_oepys2yyb().s[174]++;
        return await this._strategyRebuildFromFragments(filePath);
      case 'create_minimal_structure':
        /* istanbul ignore next */
        cov_oepys2yyb().b[45][3]++;
        cov_oepys2yyb().s[175]++;
        return await this._strategyCreateMinimalStructure(filePath);
      default:
        /* istanbul ignore next */
        cov_oepys2yyb().b[45][4]++;
        cov_oepys2yyb().s[176]++;
        return {
          success: false,
          message: 'Unknown strategy'
        };
    }
  }
  async _strategyRestoreFromBackup(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[27]++;
    const result =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[177]++, await this.restoreFromBackup(filePath));
    /* istanbul ignore next */
    cov_oepys2yyb().s[178]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_oepys2yyb().b[46][0]++;
      cov_oepys2yyb().s[179]++;
      return {
        success: true,
        message: 'Restored from backup successfully',
        data: JSON.parse(fs.readFileSync(filePath, 'utf8'))
      };
    } else
    /* istanbul ignore next */
    {
      cov_oepys2yyb().b[46][1]++;
    }
    cov_oepys2yyb().s[180]++;
    return {
      success: false,
      message: result.error
    };
  }
  async _strategyRepairJsonSyntax(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[28]++;
    cov_oepys2yyb().s[181]++;
    try {
      /* istanbul ignore next */
      cov_oepys2yyb().s[182]++;
      if (!fs.existsSync(filePath)) {
        /* istanbul ignore next */
        cov_oepys2yyb().b[47][0]++;
        cov_oepys2yyb().s[183]++;
        return {
          success: false,
          message: 'File not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_oepys2yyb().b[47][1]++;
      }
      let content =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[184]++, fs.readFileSync(filePath, 'utf8'));

      // Try basic JSON repairs
      /* istanbul ignore next */
      cov_oepys2yyb().s[185]++;
      content = content.replace(/,(\s*[}\]])/g, '$1'); // Remove trailing commas
      /* istanbul ignore next */
      cov_oepys2yyb().s[186]++;
      content = content.replace(/([^\\])"/g, '$1\\"'); // Escape quotes

      const data =
      /* istanbul ignore next */
      (cov_oepys2yyb().s[187]++, JSON.parse(content));
      /* istanbul ignore next */
      cov_oepys2yyb().s[188]++;
      await this.atomicWrite(filePath, JSON.stringify(data, null, 2));
      /* istanbul ignore next */
      cov_oepys2yyb().s[189]++;
      return {
        success: true,
        message: 'Repaired JSON syntax',
        data
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_oepys2yyb().s[190]++;
      return {
        success: false,
        message: `JSON repair failed: ${error.message}`
      };
    }
  }
  async _strategyRebuildFromFragments(_filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[29]++;
    cov_oepys2yyb().s[191]++;
    // This would implement more sophisticated recovery from partial data
    return {
      success: false,
      message: 'Fragment recovery not implemented'
    };
  }
  async _strategyCreateMinimalStructure(filePath) {
    /* istanbul ignore next */
    cov_oepys2yyb().f[30]++;
    const minimalStructure =
    /* istanbul ignore next */
    (cov_oepys2yyb().s[192]++, {
      project: path.basename(path.dirname(filePath)),
      tasks: [],
      review_strikes: 0,
      strikes_completed_last_run: false,
      current_task_index: 0,
      last_mode: null
    });
    /* istanbul ignore next */
    cov_oepys2yyb().s[193]++;
    await this.atomicWrite(filePath, JSON.stringify(minimalStructure, null, 2));
    /* istanbul ignore next */
    cov_oepys2yyb().s[194]++;
    return {
      success: true,
      message: 'Created minimal TODO.json structure',
      data: minimalStructure
    };
  }
}
/* istanbul ignore next */
cov_oepys2yyb().s[195]++;
module.exports = ErrorRecovery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,