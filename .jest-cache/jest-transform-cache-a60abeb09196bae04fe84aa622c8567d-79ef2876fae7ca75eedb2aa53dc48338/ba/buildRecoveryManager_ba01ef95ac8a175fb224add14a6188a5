0b99fb91a369b1128ef7c302e15fa482
/* istanbul ignore next */
function cov_21xyfeqr7p() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/buildRecoveryManager.js";
  var hash = "b6ae70047324d358f9fdb9569fd94432279cfcf9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/buildRecoveryManager.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 9,
          column: 64
        }
      },
      "1": {
        start: {
          line: 10,
          column: 29
        },
        end: {
          line: 10,
          column: 60
        }
      },
      "2": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "3": {
        start: {
          line: 12,
          column: 11
        },
        end: {
          line: 12,
          column: 24
        }
      },
      "4": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 50
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 34
        }
      },
      "14": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 72
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "17": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "18": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "19": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 76
        }
      },
      "20": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 51,
          column: 32
        }
      },
      "21": {
        start: {
          line: 52,
          column: 40
        },
        end: {
          line: 52,
          column: 45
        }
      },
      "22": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "23": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 54,
          column: 32
        }
      },
      "24": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "25": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 81
        }
      },
      "26": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "27": {
        start: {
          line: 60,
          column: 45
        },
        end: {
          line: 60,
          column: 99
        }
      },
      "28": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "29": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 105
        }
      },
      "30": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 53
        }
      },
      "31": {
        start: {
          line: 66,
          column: 46
        },
        end: {
          line: 66,
          column: 105
        }
      },
      "32": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "33": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 109
        }
      },
      "34": {
        start: {
          line: 73,
          column: 40
        },
        end: {
          line: 73,
          column: 84
        }
      },
      "35": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 104,
          column: 21
        }
      },
      "36": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 74
        }
      },
      "37": {
        start: {
          line: 79,
          column: 49
        },
        end: {
          line: 79,
          column: 81
        }
      },
      "38": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 101,
          column: 25
        }
      },
      "39": {
        start: {
          line: 83,
          column: 54
        },
        end: {
          line: 83,
          column: 108
        }
      },
      "40": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 97,
          column: 29
        }
      },
      "41": {
        start: {
          line: 85,
          column: 54
        },
        end: {
          line: 85,
          column: 76
        }
      },
      "42": {
        start: {
          line: 86,
          column: 32
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "43": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 95,
          column: 113
        }
      },
      "44": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 96,
          column: 91
        }
      },
      "45": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 99,
          column: 71
        }
      },
      "46": {
        start: {
          line: 100,
          column: 28
        },
        end: {
          line: 100,
          column: 84
        }
      },
      "47": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 91
        }
      },
      "48": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 38
        }
      },
      "49": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 82
        }
      },
      "50": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "51": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 112,
          column: 53
        }
      },
      "52": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 86
        }
      },
      "53": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 130,
          column: 17
        }
      },
      "54": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 92
        }
      },
      "55": {
        start: {
          line: 121,
          column: 43
        },
        end: {
          line: 121,
          column: 84
        }
      },
      "56": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 129,
          column: 21
        }
      },
      "57": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 84
        }
      },
      "58": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 58
        }
      },
      "59": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 102
        }
      },
      "60": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 62
        }
      },
      "61": {
        start: {
          line: 134,
          column: 34
        },
        end: {
          line: 134,
          column: 56
        }
      },
      "62": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 143,
          column: 14
        }
      },
      "63": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "64": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 151,
          column: 14
        }
      },
      "65": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "66": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 56
        }
      },
      "67": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 69
        }
      },
      "68": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "69": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "70": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 64
        }
      },
      "71": {
        start: {
          line: 172,
          column: 34
        },
        end: {
          line: 172,
          column: 88
        }
      },
      "72": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "73": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 77
        }
      },
      "74": {
        start: {
          line: 175,
          column: 38
        },
        end: {
          line: 175,
          column: 97
        }
      },
      "75": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "76": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 88
        }
      },
      "77": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 85
        }
      },
      "78": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 57
        }
      },
      "79": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 37
        }
      },
      "80": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 60
        }
      },
      "81": {
        start: {
          line: 196,
          column: 26
        },
        end: {
          line: 196,
          column: 50
        }
      },
      "82": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "83": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "84": {
        start: {
          line: 201,
          column: 37
        },
        end: {
          line: 205,
          column: 18
        }
      },
      "85": {
        start: {
          line: 207,
          column: 29
        },
        end: {
          line: 207,
          column: 31
        }
      },
      "86": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 31
        }
      },
      "87": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 212,
          column: 19
        }
      },
      "88": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 46
        }
      },
      "89": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 216,
          column: 19
        }
      },
      "90": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 46
        }
      },
      "91": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 235,
          column: 19
        }
      },
      "92": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 234,
          column: 21
        }
      },
      "93": {
        start: {
          line: 220,
          column: 24
        },
        end: {
          line: 225,
          column: 27
        }
      },
      "94": {
        start: {
          line: 227,
          column: 24
        },
        end: {
          line: 233,
          column: 27
        }
      },
      "95": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 242,
          column: 19
        }
      },
      "96": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 241,
          column: 23
        }
      },
      "97": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 248,
          column: 19
        }
      },
      "98": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 257,
          column: 40
        }
      },
      "99": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 46
        }
      },
      "100": {
        start: {
          line: 260,
          column: 31
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "101": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "102": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 62
        }
      },
      "103": {
        start: {
          line: 273,
          column: 42
        },
        end: {
          line: 273,
          column: 87
        }
      },
      "104": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 61
        }
      },
      "105": {
        start: {
          line: 277,
          column: 30
        },
        end: {
          line: 277,
          column: 63
        }
      },
      "106": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 49
        }
      },
      "107": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 72
        }
      },
      "108": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 55
        }
      },
      "109": {
        start: {
          line: 285,
          column: 36
        },
        end: {
          line: 285,
          column: 68
        }
      },
      "110": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 55
        }
      },
      "111": {
        start: {
          line: 289,
          column: 32
        },
        end: {
          line: 289,
          column: 67
        }
      },
      "112": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 51
        }
      },
      "113": {
        start: {
          line: 293,
          column: 37
        },
        end: {
          line: 293,
          column: 76
        }
      },
      "114": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 56
        }
      },
      "115": {
        start: {
          line: 297,
          column: 44
        },
        end: {
          line: 299,
          column: 41
        }
      },
      "116": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 119
        }
      },
      "117": {
        start: {
          line: 299,
          column: 28
        },
        end: {
          line: 299,
          column: 40
        }
      },
      "118": {
        start: {
          line: 301,
          column: 39
        },
        end: {
          line: 301,
          column: 87
        }
      },
      "119": {
        start: {
          line: 301,
          column: 74
        },
        end: {
          line: 301,
          column: 86
        }
      },
      "120": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 61
        }
      },
      "121": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 67
        }
      },
      "122": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "123": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 75
        }
      },
      "124": {
        start: {
          line: 309,
          column: 19
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "125": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 90
        }
      },
      "126": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 77
        }
      },
      "127": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 43
        }
      },
      "128": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 49
        }
      },
      "129": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 67
        }
      },
      "130": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 66
        }
      },
      "131": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 50
        }
      },
      "132": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 30
        }
      },
      "133": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 57
        }
      },
      "134": {
        start: {
          line: 338,
          column: 21
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "135": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "136": {
        start: {
          line: 345,
          column: 34
        },
        end: {
          line: 345,
          column: 88
        }
      },
      "137": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 67
        }
      },
      "138": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "139": {
        start: {
          line: 349,
          column: 33
        },
        end: {
          line: 349,
          column: 92
        }
      },
      "140": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 63
        }
      },
      "141": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 60
        }
      },
      "142": {
        start: {
          line: 354,
          column: 47
        },
        end: {
          line: 354,
          column: 101
        }
      },
      "143": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 67
        }
      },
      "144": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 84
        }
      },
      "145": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 36
        }
      },
      "146": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 64
        }
      },
      "147": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 39
        }
      },
      "148": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 20
        }
      },
      "149": {
        start: {
          line: 373,
          column: 21
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "150": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "151": {
        start: {
          line: 380,
          column: 34
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "152": {
        start: {
          line: 386,
          column: 31
        },
        end: {
          line: 386,
          column: 33
        }
      },
      "153": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "154": {
        start: {
          line: 389,
          column: 33
        },
        end: {
          line: 389,
          column: 66
        }
      },
      "155": {
        start: {
          line: 390,
          column: 31
        },
        end: {
          line: 390,
          column: 54
        }
      },
      "156": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 50
        }
      },
      "157": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 395,
          column: 17
        }
      },
      "158": {
        start: {
          line: 394,
          column: 20
        },
        end: {
          line: 394,
          column: 41
        }
      },
      "159": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 49
        }
      },
      "160": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 33
        }
      },
      "161": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 39
        }
      },
      "162": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 20
        }
      },
      "163": {
        start: {
          line: 412,
          column: 21
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "164": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "165": {
        start: {
          line: 420,
          column: 36
        },
        end: {
          line: 420,
          column: 79
        }
      },
      "166": {
        start: {
          line: 421,
          column: 27
        },
        end: {
          line: 421,
          column: 57
        }
      },
      "167": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 52
        }
      },
      "168": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 441,
          column: 13
        }
      },
      "169": {
        start: {
          line: 427,
          column: 41
        },
        end: {
          line: 427,
          column: 67
        }
      },
      "170": {
        start: {
          line: 428,
          column: 38
        },
        end: {
          line: 428,
          column: 40
        }
      },
      "171": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 434,
          column: 17
        }
      },
      "172": {
        start: {
          line: 431,
          column: 36
        },
        end: {
          line: 431,
          column: 67
        }
      },
      "173": {
        start: {
          line: 432,
          column: 38
        },
        end: {
          line: 432,
          column: 60
        }
      },
      "174": {
        start: {
          line: 433,
          column: 20
        },
        end: {
          line: 433,
          column: 76
        }
      },
      "175": {
        start: {
          line: 436,
          column: 16
        },
        end: {
          line: 436,
          column: 59
        }
      },
      "176": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 66
        }
      },
      "177": {
        start: {
          line: 437,
          column: 56
        },
        end: {
          line: 437,
          column: 64
        }
      },
      "178": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 439,
          column: 85
        }
      },
      "179": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 440,
          column: 37
        }
      },
      "180": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 39
        }
      },
      "181": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 20
        }
      },
      "182": {
        start: {
          line: 454,
          column: 21
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "183": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "184": {
        start: {
          line: 462,
          column: 33
        },
        end: {
          line: 462,
          column: 34
        }
      },
      "185": {
        start: {
          line: 463,
          column: 30
        },
        end: {
          line: 463,
          column: 31
        }
      },
      "186": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 479,
          column: 13
        }
      },
      "187": {
        start: {
          line: 465,
          column: 28
        },
        end: {
          line: 465,
          column: 29
        }
      },
      "188": {
        start: {
          line: 466,
          column: 38
        },
        end: {
          line: 466,
          column: 92
        }
      },
      "189": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 85
        }
      },
      "190": {
        start: {
          line: 469,
          column: 16
        },
        end: {
          line: 478,
          column: 17
        }
      },
      "191": {
        start: {
          line: 470,
          column: 37
        },
        end: {
          line: 470,
          column: 96
        }
      },
      "192": {
        start: {
          line: 471,
          column: 20
        },
        end: {
          line: 471,
          column: 81
        }
      },
      "193": {
        start: {
          line: 472,
          column: 20
        },
        end: {
          line: 472,
          column: 56
        }
      },
      "194": {
        start: {
          line: 475,
          column: 20
        },
        end: {
          line: 475,
          column: 42
        }
      },
      "195": {
        start: {
          line: 477,
          column: 20
        },
        end: {
          line: 477,
          column: 26
        }
      },
      "196": {
        start: {
          line: 482,
          column: 39
        },
        end: {
          line: 482,
          column: 93
        }
      },
      "197": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 59
        }
      },
      "198": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 57
        }
      },
      "199": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 72
        }
      },
      "200": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 39
        }
      },
      "201": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 20
        }
      },
      "202": {
        start: {
          line: 498,
          column: 21
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "203": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "204": {
        start: {
          line: 505,
          column: 37
        },
        end: {
          line: 509,
          column: 13
        }
      },
      "205": {
        start: {
          line: 511,
          column: 35
        },
        end: {
          line: 511,
          column: 37
        }
      },
      "206": {
        start: {
          line: 512,
          column: 32
        },
        end: {
          line: 512,
          column: 34
        }
      },
      "207": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 537,
          column: 13
        }
      },
      "208": {
        start: {
          line: 515,
          column: 33
        },
        end: {
          line: 515,
          column: 66
        }
      },
      "209": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 536,
          column: 17
        }
      },
      "210": {
        start: {
          line: 517,
          column: 20
        },
        end: {
          line: 535,
          column: 21
        }
      },
      "211": {
        start: {
          line: 518,
          column: 40
        },
        end: {
          line: 518,
          column: 73
        }
      },
      "212": {
        start: {
          line: 521,
          column: 24
        },
        end: {
          line: 532,
          column: 25
        }
      },
      "213": {
        start: {
          line: 523,
          column: 45
        },
        end: {
          line: 523,
          column: 104
        }
      },
      "214": {
        start: {
          line: 524,
          column: 28
        },
        end: {
          line: 528,
          column: 29
        }
      },
      "215": {
        start: {
          line: 525,
          column: 32
        },
        end: {
          line: 525,
          column: 58
        }
      },
      "216": {
        start: {
          line: 527,
          column: 32
        },
        end: {
          line: 527,
          column: 55
        }
      },
      "217": {
        start: {
          line: 531,
          column: 28
        },
        end: {
          line: 531,
          column: 54
        }
      },
      "218": {
        start: {
          line: 534,
          column: 24
        },
        end: {
          line: 534,
          column: 73
        }
      },
      "219": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 57
        }
      },
      "220": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 51
        }
      },
      "221": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 52
        }
      },
      "222": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 544,
          column: 39
        }
      },
      "223": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 20
        }
      },
      "224": {
        start: {
          line: 554,
          column: 21
        },
        end: {
          line: 558,
          column: 9
        }
      },
      "225": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 640,
          column: 9
        }
      },
      "226": {
        start: {
          line: 561,
          column: 35
        },
        end: {
          line: 567,
          column: 13
        }
      },
      "227": {
        start: {
          line: 569,
          column: 33
        },
        end: {
          line: 569,
          column: 35
        }
      },
      "228": {
        start: {
          line: 570,
          column: 35
        },
        end: {
          line: 570,
          column: 37
        }
      },
      "229": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 590,
          column: 13
        }
      },
      "230": {
        start: {
          line: 573,
          column: 35
        },
        end: {
          line: 573,
          column: 70
        }
      },
      "231": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 589,
          column: 17
        }
      },
      "232": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 588,
          column: 21
        }
      },
      "233": {
        start: {
          line: 577,
          column: 43
        },
        end: {
          line: 577,
          column: 80
        }
      },
      "234": {
        start: {
          line: 578,
          column: 24
        },
        end: {
          line: 583,
          column: 25
        }
      },
      "235": {
        start: {
          line: 579,
          column: 28
        },
        end: {
          line: 579,
          column: 56
        }
      },
      "236": {
        start: {
          line: 581,
          column: 28
        },
        end: {
          line: 581,
          column: 84
        }
      },
      "237": {
        start: {
          line: 582,
          column: 28
        },
        end: {
          line: 582,
          column: 54
        }
      },
      "238": {
        start: {
          line: 586,
          column: 24
        },
        end: {
          line: 586,
          column: 86
        }
      },
      "239": {
        start: {
          line: 587,
          column: 24
        },
        end: {
          line: 587,
          column: 90
        }
      },
      "240": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 605,
          column: 13
        }
      },
      "241": {
        start: {
          line: 594,
          column: 37
        },
        end: {
          line: 594,
          column: 94
        }
      },
      "242": {
        start: {
          line: 595,
          column: 16
        },
        end: {
          line: 601,
          column: 17
        }
      },
      "243": {
        start: {
          line: 596,
          column: 20
        },
        end: {
          line: 600,
          column: 21
        }
      },
      "244": {
        start: {
          line: 597,
          column: 44
        },
        end: {
          line: 597,
          column: 82
        }
      },
      "245": {
        start: {
          line: 598,
          column: 24
        },
        end: {
          line: 598,
          column: 81
        }
      },
      "246": {
        start: {
          line: 599,
          column: 24
        },
        end: {
          line: 599,
          column: 53
        }
      },
      "247": {
        start: {
          line: 603,
          column: 16
        },
        end: {
          line: 603,
          column: 78
        }
      },
      "248": {
        start: {
          line: 604,
          column: 16
        },
        end: {
          line: 604,
          column: 96
        }
      },
      "249": {
        start: {
          line: 608,
          column: 12
        },
        end: {
          line: 623,
          column: 13
        }
      },
      "250": {
        start: {
          line: 609,
          column: 39
        },
        end: {
          line: 609,
          column: 81
        }
      },
      "251": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 619,
          column: 17
        }
      },
      "252": {
        start: {
          line: 611,
          column: 37
        },
        end: {
          line: 611,
          column: 67
        }
      },
      "253": {
        start: {
          line: 612,
          column: 20
        },
        end: {
          line: 618,
          column: 21
        }
      },
      "254": {
        start: {
          line: 613,
          column: 24
        },
        end: {
          line: 617,
          column: 25
        }
      },
      "255": {
        start: {
          line: 614,
          column: 45
        },
        end: {
          line: 614,
          column: 76
        }
      },
      "256": {
        start: {
          line: 615,
          column: 28
        },
        end: {
          line: 615,
          column: 52
        }
      },
      "257": {
        start: {
          line: 616,
          column: 28
        },
        end: {
          line: 616,
          column: 69
        }
      },
      "258": {
        start: {
          line: 621,
          column: 16
        },
        end: {
          line: 621,
          column: 78
        }
      },
      "259": {
        start: {
          line: 622,
          column: 16
        },
        end: {
          line: 622,
          column: 101
        }
      },
      "260": {
        start: {
          line: 625,
          column: 12
        },
        end: {
          line: 625,
          column: 53
        }
      },
      "261": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 57
        }
      },
      "262": {
        start: {
          line: 629,
          column: 45
        },
        end: {
          line: 629,
          column: 99
        }
      },
      "263": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 84
        }
      },
      "264": {
        start: {
          line: 632,
          column: 12
        },
        end: {
          line: 635,
          column: 13
        }
      },
      "265": {
        start: {
          line: 633,
          column: 16
        },
        end: {
          line: 633,
          column: 37
        }
      },
      "266": {
        start: {
          line: 634,
          column: 16
        },
        end: {
          line: 634,
          column: 60
        }
      },
      "267": {
        start: {
          line: 638,
          column: 12
        },
        end: {
          line: 638,
          column: 39
        }
      },
      "268": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 639,
          column: 33
        }
      },
      "269": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 642,
          column: 20
        }
      },
      "270": {
        start: {
          line: 649,
          column: 21
        },
        end: {
          line: 653,
          column: 9
        }
      },
      "271": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 699,
          column: 9
        }
      },
      "272": {
        start: {
          line: 657,
          column: 34
        },
        end: {
          line: 657,
          column: 88
        }
      },
      "273": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 658,
          column: 67
        }
      },
      "274": {
        start: {
          line: 661,
          column: 34
        },
        end: {
          line: 664,
          column: 13
        }
      },
      "275": {
        start: {
          line: 666,
          column: 31
        },
        end: {
          line: 666,
          column: 33
        }
      },
      "276": {
        start: {
          line: 667,
          column: 33
        },
        end: {
          line: 667,
          column: 35
        }
      },
      "277": {
        start: {
          line: 669,
          column: 12
        },
        end: {
          line: 685,
          column: 13
        }
      },
      "278": {
        start: {
          line: 670,
          column: 33
        },
        end: {
          line: 670,
          column: 66
        }
      },
      "279": {
        start: {
          line: 671,
          column: 16
        },
        end: {
          line: 684,
          column: 17
        }
      },
      "280": {
        start: {
          line: 672,
          column: 20
        },
        end: {
          line: 683,
          column: 21
        }
      },
      "281": {
        start: {
          line: 673,
          column: 40
        },
        end: {
          line: 673,
          column: 73
        }
      },
      "282": {
        start: {
          line: 674,
          column: 40
        },
        end: {
          line: 674,
          column: 105
        }
      },
      "283": {
        start: {
          line: 676,
          column: 24
        },
        end: {
          line: 680,
          column: 25
        }
      },
      "284": {
        start: {
          line: 677,
          column: 28
        },
        end: {
          line: 677,
          column: 50
        }
      },
      "285": {
        start: {
          line: 679,
          column: 28
        },
        end: {
          line: 679,
          column: 52
        }
      },
      "286": {
        start: {
          line: 682,
          column: 24
        },
        end: {
          line: 682,
          column: 74
        }
      },
      "287": {
        start: {
          line: 687,
          column: 12
        },
        end: {
          line: 687,
          column: 49
        }
      },
      "288": {
        start: {
          line: 688,
          column: 12
        },
        end: {
          line: 688,
          column: 53
        }
      },
      "289": {
        start: {
          line: 691,
          column: 37
        },
        end: {
          line: 691,
          column: 83
        }
      },
      "290": {
        start: {
          line: 692,
          column: 12
        },
        end: {
          line: 692,
          column: 61
        }
      },
      "291": {
        start: {
          line: 695,
          column: 12
        },
        end: {
          line: 695,
          column: 103
        }
      },
      "292": {
        start: {
          line: 698,
          column: 12
        },
        end: {
          line: 698,
          column: 39
        }
      },
      "293": {
        start: {
          line: 701,
          column: 8
        },
        end: {
          line: 701,
          column: 20
        }
      },
      "294": {
        start: {
          line: 710,
          column: 8
        },
        end: {
          line: 710,
          column: 21
        }
      },
      "295": {
        start: {
          line: 717,
          column: 8
        },
        end: {
          line: 717,
          column: 51
        }
      },
      "296": {
        start: {
          line: 724,
          column: 8
        },
        end: {
          line: 739,
          column: 9
        }
      },
      "297": {
        start: {
          line: 726,
          column: 34
        },
        end: {
          line: 726,
          column: 88
        }
      },
      "298": {
        start: {
          line: 728,
          column: 12
        },
        end: {
          line: 732,
          column: 14
        }
      },
      "299": {
        start: {
          line: 735,
          column: 12
        },
        end: {
          line: 738,
          column: 14
        }
      },
      "300": {
        start: {
          line: 746,
          column: 8
        },
        end: {
          line: 746,
          column: 63
        }
      },
      "301": {
        start: {
          line: 746,
          column: 38
        },
        end: {
          line: 746,
          column: 61
        }
      },
      "302": {
        start: {
          line: 753,
          column: 8
        },
        end: {
          line: 753,
          column: 53
        }
      },
      "303": {
        start: {
          line: 757,
          column: 0
        },
        end: {
          line: 757,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 49
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 34
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 158
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 195
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 198,
            column: 27
          },
          end: {
            line: 198,
            column: 28
          }
        },
        loc: {
          start: {
            line: 198,
            column: 40
          },
          end: {
            line: 250,
            column: 9
          }
        },
        line: 198
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 210,
            column: 47
          },
          end: {
            line: 210,
            column: 48
          }
        },
        loc: {
          start: {
            line: 210,
            column: 57
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 210
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 214,
            column: 47
          },
          end: {
            line: 214,
            column: 48
          }
        },
        loc: {
          start: {
            line: 214,
            column: 57
          },
          end: {
            line: 216,
            column: 17
          }
        },
        line: 214
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 218,
            column: 41
          },
          end: {
            line: 218,
            column: 42
          }
        },
        loc: {
          start: {
            line: 218,
            column: 51
          },
          end: {
            line: 235,
            column: 17
          }
        },
        line: 218
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 237,
            column: 41
          },
          end: {
            line: 237,
            column: 42
          }
        },
        loc: {
          start: {
            line: 237,
            column: 52
          },
          end: {
            line: 242,
            column: 17
          }
        },
        line: 237
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 256
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 297,
            column: 72
          },
          end: {
            line: 297,
            column: 73
          }
        },
        loc: {
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 298,
            column: 119
          }
        },
        line: 298
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 299,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        },
        loc: {
          start: {
            line: 299,
            column: 28
          },
          end: {
            line: 299,
            column: 40
          }
        },
        line: 299
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 301,
            column: 66
          },
          end: {
            line: 301,
            column: 67
          }
        },
        loc: {
          start: {
            line: 301,
            column: 74
          },
          end: {
            line: 301,
            column: 86
          }
        },
        line: 301
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 33
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 330
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 37
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 337
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 33
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 372
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 36
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 411
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 437,
            column: 51
          },
          end: {
            line: 437,
            column: 52
          }
        },
        loc: {
          start: {
            line: 437,
            column: 56
          },
          end: {
            line: 437,
            column: 64
          }
        },
        line: 437
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 453,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        loc: {
          start: {
            line: 453,
            column: 45
          },
          end: {
            line: 492,
            column: 5
          }
        },
        line: 453
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 32
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 497
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 553,
            column: 4
          },
          end: {
            line: 553,
            column: 5
          }
        },
        loc: {
          start: {
            line: 553,
            column: 35
          },
          end: {
            line: 643,
            column: 5
          }
        },
        line: 553
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 648,
            column: 4
          },
          end: {
            line: 648,
            column: 5
          }
        },
        loc: {
          start: {
            line: 648,
            column: 39
          },
          end: {
            line: 702,
            column: 5
          }
        },
        line: 648
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 707,
            column: 5
          }
        },
        loc: {
          start: {
            line: 707,
            column: 38
          },
          end: {
            line: 711,
            column: 5
          }
        },
        line: 707
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 716,
            column: 4
          },
          end: {
            line: 716,
            column: 5
          }
        },
        loc: {
          start: {
            line: 716,
            column: 27
          },
          end: {
            line: 718,
            column: 5
          }
        },
        line: 716
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 723,
            column: 4
          },
          end: {
            line: 723,
            column: 5
          }
        },
        loc: {
          start: {
            line: 723,
            column: 32
          },
          end: {
            line: 740,
            column: 5
          }
        },
        line: 723
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 745,
            column: 4
          },
          end: {
            line: 745,
            column: 5
          }
        },
        loc: {
          start: {
            line: 745,
            column: 20
          },
          end: {
            line: 747,
            column: 5
          }
        },
        line: 745
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 746,
            column: 27
          },
          end: {
            line: 746,
            column: 28
          }
        },
        loc: {
          start: {
            line: 746,
            column: 38
          },
          end: {
            line: 746,
            column: 61
          }
        },
        line: 746
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 752,
            column: 4
          },
          end: {
            line: 752,
            column: 5
          }
        },
        loc: {
          start: {
            line: 752,
            column: 17
          },
          end: {
            line: 754,
            column: 5
          }
        },
        line: 752
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 28
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 46
          }
        }, {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 17,
            column: 63
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 44
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 49
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 44
          }
        }, {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 52
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 69,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 69,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        }, {
          start: {
            line: 102,
            column: 27
          },
          end: {
            line: 104,
            column: 21
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 101,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 101,
            column: 25
          }
        }, {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 101,
            column: 25
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 97,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 97,
            column: 29
          }
        }, {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 97,
            column: 29
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 63
          }
        }, {
          start: {
            line: 103,
            column: 67
          },
          end: {
            line: 103,
            column: 89
          }
        }],
        line: 103
      },
      "11": {
        loc: {
          start: {
            line: 111,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 61
          }
        }, {
          start: {
            line: 111,
            column: 65
          },
          end: {
            line: 111,
            column: 107
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 130,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 130,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 20
          },
          end: {
            line: 129,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 20
          },
          end: {
            line: 129,
            column: 21
          }
        }, {
          start: {
            line: 126,
            column: 27
          },
          end: {
            line: 129,
            column: 21
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "16": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 39
          }
        }, {
          start: {
            line: 167,
            column: 43
          },
          end: {
            line: 167,
            column: 104
          }
        }],
        line: 167
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        }, {
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 181,
            column: 17
          }
        }],
        line: 177
      },
      "19": {
        loc: {
          start: {
            line: 219,
            column: 20
          },
          end: {
            line: 234,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 20
          },
          end: {
            line: 234,
            column: 21
          }
        }, {
          start: {
            line: 226,
            column: 27
          },
          end: {
            line: 234,
            column: 21
          }
        }],
        line: 219
      },
      "20": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: 309,
            column: 19
          },
          end: {
            line: 313,
            column: 13
          }
        }],
        line: 307
      },
      "21": {
        loc: {
          start: {
            line: 309,
            column: 19
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 19
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: 311,
            column: 19
          },
          end: {
            line: 313,
            column: 13
          }
        }],
        line: 309
      },
      "22": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        }, {
          start: {
            line: 357,
            column: 19
          },
          end: {
            line: 360,
            column: 13
          }
        }],
        line: 348
      },
      "23": {
        loc: {
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 395,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 395,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "24": {
        loc: {
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 441,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 441,
            column: 13
          }
        }, {
          start: {
            line: 438,
            column: 19
          },
          end: {
            line: 441,
            column: 13
          }
        }],
        line: 425
      },
      "25": {
        loc: {
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 478,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 478,
            column: 17
          }
        }, {
          start: {
            line: 476,
            column: 23
          },
          end: {
            line: 478,
            column: 17
          }
        }],
        line: 469
      },
      "26": {
        loc: {
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 536,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 536,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "27": {
        loc: {
          start: {
            line: 521,
            column: 24
          },
          end: {
            line: 532,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 24
          },
          end: {
            line: 532,
            column: 25
          }
        }, {
          start: {
            line: 529,
            column: 31
          },
          end: {
            line: 532,
            column: 25
          }
        }],
        line: 521
      },
      "28": {
        loc: {
          start: {
            line: 521,
            column: 28
          },
          end: {
            line: 521,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 28
          },
          end: {
            line: 521,
            column: 58
          }
        }, {
          start: {
            line: 521,
            column: 62
          },
          end: {
            line: 521,
            column: 91
          }
        }],
        line: 521
      },
      "29": {
        loc: {
          start: {
            line: 524,
            column: 28
          },
          end: {
            line: 528,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 28
          },
          end: {
            line: 528,
            column: 29
          }
        }, {
          start: {
            line: 526,
            column: 35
          },
          end: {
            line: 528,
            column: 29
          }
        }],
        line: 524
      },
      "30": {
        loc: {
          start: {
            line: 574,
            column: 16
          },
          end: {
            line: 589,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 16
          },
          end: {
            line: 589,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "31": {
        loc: {
          start: {
            line: 578,
            column: 24
          },
          end: {
            line: 583,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 578,
            column: 24
          },
          end: {
            line: 583,
            column: 25
          }
        }, {
          start: {
            line: 580,
            column: 31
          },
          end: {
            line: 583,
            column: 25
          }
        }],
        line: 578
      },
      "32": {
        loc: {
          start: {
            line: 586,
            column: 53
          },
          end: {
            line: 586,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 586,
            column: 53
          },
          end: {
            line: 586,
            column: 79
          }
        }, {
          start: {
            line: 586,
            column: 83
          },
          end: {
            line: 586,
            column: 85
          }
        }],
        line: 586
      },
      "33": {
        loc: {
          start: {
            line: 596,
            column: 20
          },
          end: {
            line: 600,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 596,
            column: 20
          },
          end: {
            line: 600,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 596
      },
      "34": {
        loc: {
          start: {
            line: 596,
            column: 24
          },
          end: {
            line: 596,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 596,
            column: 24
          },
          end: {
            line: 596,
            column: 42
          }
        }, {
          start: {
            line: 596,
            column: 46
          },
          end: {
            line: 596,
            column: 80
          }
        }],
        line: 596
      },
      "35": {
        loc: {
          start: {
            line: 603,
            column: 45
          },
          end: {
            line: 603,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 45
          },
          end: {
            line: 603,
            column: 71
          }
        }, {
          start: {
            line: 603,
            column: 75
          },
          end: {
            line: 603,
            column: 77
          }
        }],
        line: 603
      },
      "36": {
        loc: {
          start: {
            line: 610,
            column: 16
          },
          end: {
            line: 619,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 610,
            column: 16
          },
          end: {
            line: 619,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 610
      },
      "37": {
        loc: {
          start: {
            line: 613,
            column: 24
          },
          end: {
            line: 617,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 613,
            column: 24
          },
          end: {
            line: 617,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 613
      },
      "38": {
        loc: {
          start: {
            line: 613,
            column: 28
          },
          end: {
            line: 613,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 613,
            column: 28
          },
          end: {
            line: 613,
            column: 64
          }
        }, {
          start: {
            line: 613,
            column: 68
          },
          end: {
            line: 613,
            column: 89
          }
        }],
        line: 613
      },
      "39": {
        loc: {
          start: {
            line: 621,
            column: 45
          },
          end: {
            line: 621,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 621,
            column: 45
          },
          end: {
            line: 621,
            column: 71
          }
        }, {
          start: {
            line: 621,
            column: 75
          },
          end: {
            line: 621,
            column: 77
          }
        }],
        line: 621
      },
      "40": {
        loc: {
          start: {
            line: 632,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 632
      },
      "41": {
        loc: {
          start: {
            line: 671,
            column: 16
          },
          end: {
            line: 684,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 671,
            column: 16
          },
          end: {
            line: 684,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 671
      },
      "42": {
        loc: {
          start: {
            line: 674,
            column: 40
          },
          end: {
            line: 674,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 674,
            column: 40
          },
          end: {
            line: 674,
            column: 71
          }
        }, {
          start: {
            line: 674,
            column: 75
          },
          end: {
            line: 674,
            column: 105
          }
        }],
        line: 674
      },
      "43": {
        loc: {
          start: {
            line: 676,
            column: 24
          },
          end: {
            line: 680,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 24
          },
          end: {
            line: 680,
            column: 25
          }
        }, {
          start: {
            line: 678,
            column: 31
          },
          end: {
            line: 680,
            column: 25
          }
        }],
        line: 676
      },
      "44": {
        loc: {
          start: {
            line: 695,
            column: 27
          },
          end: {
            line: 695,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 695,
            column: 27
          },
          end: {
            line: 695,
            column: 53
          }
        }, {
          start: {
            line: 695,
            column: 57
          },
          end: {
            line: 695,
            column: 82
          }
        }, {
          start: {
            line: 695,
            column: 86
          },
          end: {
            line: 695,
            column: 102
          }
        }],
        line: 695
      },
      "45": {
        loc: {
          start: {
            line: 731,
            column: 25
          },
          end: {
            line: 731,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 731,
            column: 54
          },
          end: {
            line: 731,
            column: 77
          }
        }, {
          start: {
            line: 731,
            column: 80
          },
          end: {
            line: 731,
            column: 130
          }
        }],
        line: 731
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0, 0],
      "45": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b6ae70047324d358f9fdb9569fd94432279cfcf9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21xyfeqr7p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21xyfeqr7p();
/**
 * Build Recovery Manager
 * 
 * Provides advanced recovery capabilities for build failures,
 * integrating with the existing error recovery and contamination
 * resolution systems to ensure robust build processes.
 */

const ContaminationResolver =
/* istanbul ignore next */
(cov_21xyfeqr7p().s[0]++, require('./contaminationResolver'));
const {
  getGlobalMonitor
} =
/* istanbul ignore next */
(cov_21xyfeqr7p().s[1]++, require('./nodeModulesMonitor'));
const ErrorRecovery =
/* istanbul ignore next */
(cov_21xyfeqr7p().s[2]++, require('./errorRecovery'));
const fs =
/* istanbul ignore next */
(cov_21xyfeqr7p().s[3]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_21xyfeqr7p().s[4]++, require('path'));
class BuildRecoveryManager {
  constructor(options =
  /* istanbul ignore next */
  (cov_21xyfeqr7p().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[0]++;
    cov_21xyfeqr7p().s[5]++;
    this.projectRoot =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().b[1][0]++, options.projectRoot) ||
    /* istanbul ignore next */
    (cov_21xyfeqr7p().b[1][1]++, process.cwd());
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[6]++;
    this.maxRetries =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().b[2][0]++, options.maxRetries) ||
    /* istanbul ignore next */
    (cov_21xyfeqr7p().b[2][1]++, 3);
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[7]++;
    this.retryDelay =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().b[3][0]++, options.retryDelay) ||
    /* istanbul ignore next */
    (cov_21xyfeqr7p().b[3][1]++, 2000);

    // Initialize recovery components
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[8]++;
    this.contaminationResolver = new ContaminationResolver(this.projectRoot);
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[9]++;
    this.nodeModulesMonitor = getGlobalMonitor({
      enableBackup: true,
      enableRestore: true,
      enableDetailed: true
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[10]++;
    this.errorRecovery = new ErrorRecovery();

    // Recovery state
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[11]++;
    this.recoveryAttempts = 0;
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[12]++;
    this.lastRecoveryTime = null;
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[13]++;
    this.recoveryHistory = [];
  }

  /**
   * Execute build with automatic recovery on failure and enhanced contamination protection
   */
  async executeBuildWithRecovery(buildCommand) {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[14]++, Date.now());
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[15]++;
    this.log('Starting enhanced build with recovery protection...');
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[16]++;
    try {
      // Pre-build validation and setup with enhanced protection
      const setupResult =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[17]++, await this.setupBuildEnvironment());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[18]++;
      if (!setupResult.success) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[4][0]++;
        cov_21xyfeqr7p().s[19]++;
        throw new Error(`Build setup failed: ${setupResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_21xyfeqr7p().b[4][1]++;
      }

      // Execute build with enhanced retry logic
      let lastError =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[20]++, null);
      let contaminationDetected =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[21]++, false);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[22]++;
      for (let attempt =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[23]++, 1); attempt <= this.maxRetries; attempt++) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[24]++;
        this.recoveryAttempts = attempt;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[25]++;
        this.log(`Enhanced build attempt ${attempt}/${this.maxRetries}`);
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[26]++;
        try {
          // Pre-attempt contamination check
          const preContamination =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[27]++, await this.contaminationResolver.detectContamination());
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[28]++;
          if (preContamination.length > 0) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[5][0]++;
            cov_21xyfeqr7p().s[29]++;
            this.log(`Pre-attempt contamination detected: ${preContamination.length} files`);
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[30]++;
            contaminationDetected = true;

            // Attempt immediate cleanup
            const cleanupResult =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[31]++, await this.contaminationResolver.restoreContaminatedFiles());
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[32]++;
            if (cleanupResult.restored > 0) {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[6][0]++;
              cov_21xyfeqr7p().s[33]++;
              this.log(`Cleaned up ${cleanupResult.restored} contaminated files before build`);
            } else
            /* istanbul ignore next */
            {
              cov_21xyfeqr7p().b[6][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_21xyfeqr7p().b[5][1]++;
          }

          // Run the actual build command with protection
          const buildResult =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[34]++, await this.executeBuildCommand(buildCommand));
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[35]++;
          if (buildResult.success) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[7][0]++;
            cov_21xyfeqr7p().s[36]++;
            this.log(`Build succeeded on attempt ${attempt}`);

            // Enhanced post-build validation
            const validationResult =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[37]++, await this.validateBuildOutput());
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[38]++;
            if (validationResult.success) {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[8][0]++;
              // Final contamination sweep
              const postContamination =
              /* istanbul ignore next */
              (cov_21xyfeqr7p().s[39]++, await this.contaminationResolver.detectContamination());
              /* istanbul ignore next */
              cov_21xyfeqr7p().s[40]++;
              if (postContamination.length === 0) {
                /* istanbul ignore next */
                cov_21xyfeqr7p().b[9][0]++;
                const executionTime =
                /* istanbul ignore next */
                (cov_21xyfeqr7p().s[41]++, Date.now() - startTime);
                /* istanbul ignore next */
                cov_21xyfeqr7p().s[42]++;
                return {
                  success: true,
                  attempt,
                  executionTime,
                  validationResult,
                  contaminationDetected,
                  message: `Enhanced build completed successfully after ${attempt} attempt(s)`
                };
              } else {
                /* istanbul ignore next */
                cov_21xyfeqr7p().b[9][1]++;
                cov_21xyfeqr7p().s[43]++;
                this.log(`Post-build contamination detected: ${postContamination.length} files`);
                /* istanbul ignore next */
                cov_21xyfeqr7p().s[44]++;
                lastError = new Error('Post-build contamination detected');
              }
            } else {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[8][1]++;
              cov_21xyfeqr7p().s[45]++;
              this.log('Build output validation failed');
              /* istanbul ignore next */
              cov_21xyfeqr7p().s[46]++;
              lastError = new Error('Build output validation failed');
            }
          } else {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[7][1]++;
            cov_21xyfeqr7p().s[47]++;
            lastError = new Error(
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[10][0]++, buildResult.error) ||
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[10][1]++, 'Build command failed'));
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[48]++;
          lastError = error;
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[49]++;
          this.log(`Build attempt ${attempt} failed: ${error.message}`);

          // Check if failure was due to contamination
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[50]++;
          if (
          /* istanbul ignore next */
          (cov_21xyfeqr7p().b[12][0]++, error.message.includes('SyntaxError')) ||
          /* istanbul ignore next */
          (cov_21xyfeqr7p().b[12][1]++, error.message.includes('Unexpected token'))) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[11][0]++;
            cov_21xyfeqr7p().s[51]++;
            contaminationDetected = true;
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[52]++;
            this.log('Build failure appears to be contamination-related');
          } else
          /* istanbul ignore next */
          {
            cov_21xyfeqr7p().b[11][1]++;
          }
        }

        // If this isn't the last attempt, try enhanced recovery
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[53]++;
        if (attempt < this.maxRetries) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[13][0]++;
          cov_21xyfeqr7p().s[54]++;
          this.log(`Attempting enhanced recovery before retry ${attempt + 1}...`);
          const recoveryResult =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[55]++, await this.performEnhancedBuildRecovery());
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[56]++;
          if (recoveryResult.success) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[14][0]++;
            cov_21xyfeqr7p().s[57]++;
            this.log('Enhanced recovery successful, retrying build...');
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[58]++;
            await this.delay(this.retryDelay);
          } else {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[14][1]++;
            cov_21xyfeqr7p().s[59]++;
            this.log('Enhanced recovery failed, will still retry with extended delay...');
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[60]++;
            await this.delay(this.retryDelay * 3);
          }
        } else
        /* istanbul ignore next */
        {
          cov_21xyfeqr7p().b[13][1]++;
        }
      }

      // All attempts failed
      const executionTime =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[61]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[62]++;
      return {
        success: false,
        attempts: this.maxRetries,
        executionTime,
        lastError: lastError.message,
        recoveryHistory: this.recoveryHistory,
        contaminationDetected,
        message: `Enhanced build failed after ${this.maxRetries} attempts with recovery`
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[63]++;
      this.log(`Enhanced build execution failed: ${error.message}`);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[64]++;
      return {
        success: false,
        error: error.message,
        executionTime: Date.now() - startTime
      };
    }
  }

  /**
   * Setup build environment with validation and backup
   */
  async setupBuildEnvironment() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[2]++;
    cov_21xyfeqr7p().s[65]++;
    try {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[66]++;
      this.log('Setting up build environment...');

      // Create backup of critical files
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[67]++;
      await this.contaminationResolver.storeOriginalContents();
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[68]++;
      await this.contaminationResolver.createBackups();

      // Initialize monitoring
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[69]++;
      if (
      /* istanbul ignore next */
      (cov_21xyfeqr7p().b[16][0]++, this.nodeModulesMonitor) &&
      /* istanbul ignore next */
      (cov_21xyfeqr7p().b[16][1]++, typeof this.nodeModulesMonitor.startMonitoring === 'function')) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[15][0]++;
        cov_21xyfeqr7p().s[70]++;
        await this.nodeModulesMonitor.startMonitoring();
      } else
      /* istanbul ignore next */
      {
        cov_21xyfeqr7p().b[15][1]++;
      }

      // Pre-build contamination check
      const contamination =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[71]++, await this.contaminationResolver.detectContamination());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[72]++;
      if (contamination.length > 0) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[17][0]++;
        cov_21xyfeqr7p().s[73]++;
        this.log('Pre-build contamination detected, cleaning up...');
        const cleanupResult =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[74]++, await this.contaminationResolver.restoreContaminatedFiles());
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[75]++;
        if (cleanupResult.restored > 0) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[18][0]++;
          cov_21xyfeqr7p().s[76]++;
          this.log(`Cleaned up ${cleanupResult.restored} contaminated files`);
        } else {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[18][1]++;
          cov_21xyfeqr7p().s[77]++;
          throw new Error('Unable to clean up contamination before build');
        }
      } else
      /* istanbul ignore next */
      {
        cov_21xyfeqr7p().b[17][1]++;
      }
      cov_21xyfeqr7p().s[78]++;
      this.log('Build environment setup complete');
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[79]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[80]++;
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * Execute the actual build command
   */
  async executeBuildCommand(buildCommand) {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[3]++;
    const {
      spawn
    } =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[81]++, require('child_process'));
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[82]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_21xyfeqr7p().f[4]++;
      cov_21xyfeqr7p().s[83]++;
      try {
        // Use shell to properly handle command chains with && operators
        const buildProcess =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[84]++, spawn('sh', ['-c', buildCommand], {
          cwd: this.projectRoot,
          stdio: 'pipe',
          env: {
            ...process.env,
            NODE_ENV: 'production'
          }
        }));
        let stdout =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[85]++, '');
        let stderr =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[86]++, '');
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[87]++;
        buildProcess.stdout.on('data', data => {
          /* istanbul ignore next */
          cov_21xyfeqr7p().f[5]++;
          cov_21xyfeqr7p().s[88]++;
          stdout += data.toString();
        });
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[89]++;
        buildProcess.stderr.on('data', data => {
          /* istanbul ignore next */
          cov_21xyfeqr7p().f[6]++;
          cov_21xyfeqr7p().s[90]++;
          stderr += data.toString();
        });
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[91]++;
        buildProcess.on('close', code => {
          /* istanbul ignore next */
          cov_21xyfeqr7p().f[7]++;
          cov_21xyfeqr7p().s[92]++;
          if (code === 0) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[19][0]++;
            cov_21xyfeqr7p().s[93]++;
            resolve({
              success: true,
              stdout,
              stderr,
              exitCode: code
            });
          } else {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[19][1]++;
            cov_21xyfeqr7p().s[94]++;
            resolve({
              success: false,
              stdout,
              stderr,
              exitCode: code,
              error: `Build process exited with code ${code}`
            });
          }
        });
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[95]++;
        buildProcess.on('error', error => {
          /* istanbul ignore next */
          cov_21xyfeqr7p().f[8]++;
          cov_21xyfeqr7p().s[96]++;
          resolve({
            success: false,
            error: error.message
          });
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[97]++;
        resolve({
          success: false,
          error: error.message
        });
      }
    });
  }

  /**
   * Perform enhanced build recovery with deep contamination protection
   */
  async performEnhancedBuildRecovery() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[9]++;
    const recoveryStart =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[98]++, Date.now());
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[99]++;
    this.lastRecoveryTime = recoveryStart;
    const recoveryResult =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[100]++, {
      timestamp: new Date().toISOString(),
      attempt: this.recoveryAttempts,
      success: false,
      steps: [],
      issues: [],
      enhanced: true
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[101]++;
    try {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[102]++;
      this.log('Performing enhanced build recovery...');

      // Step 1: Deep contamination analysis and recovery
      const deepContaminationStep =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[103]++, await this.performDeepContaminationRecovery());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[104]++;
      recoveryResult.steps.push(deepContaminationStep);

      // Step 2: Critical file integrity restoration
      const filesStep =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[105]++, await this.recoverCriticalFiles());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[106]++;
      recoveryResult.steps.push(filesStep);

      // Step 3: Node modules comprehensive reset
      const nodeModulesStep =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[107]++, await this.recoverNodeModulesState());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[108]++;
      recoveryResult.steps.push(nodeModulesStep);

      // Step 4: Exit handler specific protection
      const exitHandlerStep =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[109]++, await this.protectExitHandlers());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[110]++;
      recoveryResult.steps.push(exitHandlerStep);

      // Step 5: Enhanced cleanup with protection verification
      const cleanupStep =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[111]++, await this.performEnhancedCleanup());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[112]++;
      recoveryResult.steps.push(cleanupStep);

      // Step 6: Verify recovery completeness
      const verificationStep =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[113]++, await this.verifyRecoveryCompleteness());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[114]++;
      recoveryResult.steps.push(verificationStep);

      // Determine overall success
      const criticalStepsSuccessful =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[115]++, recoveryResult.steps.filter(step => {
        /* istanbul ignore next */
        cov_21xyfeqr7p().f[10]++;
        cov_21xyfeqr7p().s[116]++;
        return ['Deep Contamination Recovery', 'Exit Handler Protection', 'Recovery Verification'].includes(step.name);
      }).every(step => {
        /* istanbul ignore next */
        cov_21xyfeqr7p().f[11]++;
        cov_21xyfeqr7p().s[117]++;
        return step.success;
      }));
      const allStepsSuccessful =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[118]++, recoveryResult.steps.every(step => {
        /* istanbul ignore next */
        cov_21xyfeqr7p().f[12]++;
        cov_21xyfeqr7p().s[119]++;
        return step.success;
      }));

      // Success if critical steps pass, even if some non-critical steps fail
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[120]++;
      recoveryResult.success = criticalStepsSuccessful;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[121]++;
      recoveryResult.allStepsSuccessful = allStepsSuccessful;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[122]++;
      if (allStepsSuccessful) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[20][0]++;
        cov_21xyfeqr7p().s[123]++;
        this.log('Enhanced build recovery completed successfully');
      } else {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[20][1]++;
        cov_21xyfeqr7p().s[124]++;
        if (criticalStepsSuccessful) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[21][0]++;
          cov_21xyfeqr7p().s[125]++;
          this.log('Enhanced build recovery completed - critical steps successful');
        } else {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[21][1]++;
          cov_21xyfeqr7p().s[126]++;
          this.log('Enhanced build recovery failed on critical steps');
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[127]++;
      recoveryResult.success = false;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[128]++;
      recoveryResult.error = error.message;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[129]++;
      this.log(`Enhanced recovery failed: ${error.message}`);
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[130]++;
    recoveryResult.executionTime = Date.now() - recoveryStart;
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[131]++;
    this.recoveryHistory.push(recoveryResult);
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[132]++;
    return recoveryResult;
  }

  /**
   * Perform comprehensive build recovery (legacy method maintained for compatibility)
   */
  async performBuildRecovery() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[13]++;
    cov_21xyfeqr7p().s[133]++;
    return await this.performEnhancedBuildRecovery();
  }

  /**
   * Recover from contamination issues
   */
  async recoverFromContamination() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[14]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[134]++, {
      name: 'Contamination Recovery',
      success: false,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[135]++;
    try {
      const contamination =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[136]++, await this.contaminationResolver.detectContamination());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[137]++;
      step.details.contaminationFound = contamination.length;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[138]++;
      if (contamination.length > 0) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[22][0]++;
        const recovery =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[139]++, await this.contaminationResolver.restoreContaminatedFiles());
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[140]++;
        step.details.filesRestored = recovery.restored;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[141]++;
        step.details.restoredFiles = recovery.files;

        // Verify recovery
        const remainingContamination =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[142]++, await this.contaminationResolver.detectContamination());
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[143]++;
        step.success = remainingContamination.length === 0;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[144]++;
        step.details.remainingContamination = remainingContamination.length;
      } else {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[22][1]++;
        cov_21xyfeqr7p().s[145]++;
        step.success = true;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[146]++;
        step.details.message = 'No contamination found';
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[147]++;
      step.error = error.message;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[148]++;
    return step;
  }

  /**
   * Recover critical files
   */
  async recoverCriticalFiles() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[15]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[149]++, {
      name: 'Critical Files Recovery',
      success: true,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[150]++;
    try {
      const criticalFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[151]++, ['package.json', 'stop-hook.js', 'lib/taskManager.js']);
      const fileStatus =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[152]++, []);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[153]++;
      for (const file of criticalFiles) {
        const fullPath =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[154]++, path.join(this.projectRoot, file));
        const exists =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[155]++, fs.existsSync(fullPath));
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[156]++;
        fileStatus.push({
          file,
          exists
        });
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[157]++;
        if (!exists) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[23][0]++;
          cov_21xyfeqr7p().s[158]++;
          step.success = false;
        } else
        /* istanbul ignore next */
        {
          cov_21xyfeqr7p().b[23][1]++;
        }
      }
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[159]++;
      step.details.fileStatus = fileStatus;
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[160]++;
      step.success = false;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[161]++;
      step.error = error.message;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[162]++;
    return step;
  }

  /**
   * Recover node_modules state
   */
  async recoverNodeModulesState() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[16]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[163]++, {
      name: 'Node Modules State Recovery',
      success: false,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[164]++;
    try {
      // Check if node_modules exists
      const nodeModulesPath =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[165]++, path.join(this.projectRoot, 'node_modules'));
      const exists =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[166]++, fs.existsSync(nodeModulesPath));
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[167]++;
      step.details.nodeModulesExists = exists;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[168]++;
      if (exists) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[24][0]++;
        // Validate critical packages
        const criticalPackages =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[169]++, ['jest', 'eslint', 'exit']);
        const packageStatus =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[170]++, []);
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[171]++;
        for (const pkg of criticalPackages) {
          const pkgPath =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[172]++, path.join(nodeModulesPath, pkg));
          const pkgExists =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[173]++, fs.existsSync(pkgPath));
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[174]++;
          packageStatus.push({
            package: pkg,
            exists: pkgExists
          });
        }
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[175]++;
        step.details.packageStatus = packageStatus;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[176]++;
        step.success = packageStatus.every(p => {
          /* istanbul ignore next */
          cov_21xyfeqr7p().f[17]++;
          cov_21xyfeqr7p().s[177]++;
          return p.exists;
        });
      } else {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[24][1]++;
        cov_21xyfeqr7p().s[178]++;
        step.details.message = 'node_modules missing - requires npm install';
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[179]++;
        step.success = false;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[180]++;
      step.error = error.message;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[181]++;
    return step;
  }

  /**
   * Perform deep contamination recovery
   */
  async performDeepContaminationRecovery() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[18]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[182]++, {
      name: 'Deep Contamination Recovery',
      success: false,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[183]++;
    try {
      // Multi-pass contamination detection and recovery
      let totalRecovered =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[184]++, 0);
      const maxPasses =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[185]++, 3);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[186]++;
      for (let pass =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[187]++, 1); pass <= maxPasses; pass++) {
        const contamination =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[188]++, await this.contaminationResolver.detectContamination());
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[189]++;
        step.details[`pass${pass}ContaminationFound`] = contamination.length;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[190]++;
        if (contamination.length > 0) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[25][0]++;
          const recovery =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[191]++, await this.contaminationResolver.restoreContaminatedFiles());
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[192]++;
          step.details[`pass${pass}FilesRestored`] = recovery.restored;
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[193]++;
          totalRecovered += recovery.restored;

          // Brief delay between passes to allow filesystem to settle
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[194]++;
          await this.delay(100);
        } else {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[25][1]++;
          cov_21xyfeqr7p().s[195]++;
          break; // No contamination found, we're done
        }
      }

      // Final verification
      const finalContamination =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[196]++, await this.contaminationResolver.detectContamination());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[197]++;
      step.success = finalContamination.length === 0;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[198]++;
      step.details.totalRecovered = totalRecovered;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[199]++;
      step.details.finalContamination = finalContamination.length;
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[200]++;
      step.error = error.message;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[201]++;
    return step;
  }

  /**
   * Protect exit handlers from contamination
   */
  async protectExitHandlers() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[19]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[202]++, {
      name: 'Exit Handler Protection',
      success: false,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[203]++;
    try {
      const exitHandlerFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[204]++, ['node_modules/exit/lib/exit.js', 'node_modules/jest-cli/build/run.js', 'node_modules/jest-worker/build/index.js']);
      const protectedFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[205]++, []);
      const failedFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[206]++, []);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[207]++;
      for (const file of exitHandlerFiles) {
        const fullPath =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[208]++, path.join(this.projectRoot, file));
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[209]++;
        if (fs.existsSync(fullPath)) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[26][0]++;
          cov_21xyfeqr7p().s[210]++;
          try {
            const content =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[211]++, fs.readFileSync(fullPath, 'utf8'));

            // Check if file contains JSON contamination
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[212]++;
            if (
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[28][0]++, content.trim().startsWith('{')) &&
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[28][1]++, content.includes('"project"'))) {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[27][0]++;
              // File is contaminated, restore from backup
              const restored =
              /* istanbul ignore next */
              (cov_21xyfeqr7p().s[213]++, await this.contaminationResolver.restoreContaminatedFiles());
              /* istanbul ignore next */
              cov_21xyfeqr7p().s[214]++;
              if (restored.files.includes(fullPath)) {
                /* istanbul ignore next */
                cov_21xyfeqr7p().b[29][0]++;
                cov_21xyfeqr7p().s[215]++;
                protectedFiles.push(file);
              } else {
                /* istanbul ignore next */
                cov_21xyfeqr7p().b[29][1]++;
                cov_21xyfeqr7p().s[216]++;
                failedFiles.push(file);
              }
            } else {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[27][1]++;
              cov_21xyfeqr7p().s[217]++;
              // File is clean
              protectedFiles.push(file);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[218]++;
            failedFiles.push({
              file,
              error: error.message
            });
          }
        } else
        /* istanbul ignore next */
        {
          cov_21xyfeqr7p().b[26][1]++;
        }
      }
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[219]++;
      step.details.protectedFiles = protectedFiles;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[220]++;
      step.details.failedFiles = failedFiles;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[221]++;
      step.success = failedFiles.length === 0;
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[222]++;
      step.error = error.message;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[223]++;
    return step;
  }

  /**
   * Perform enhanced cleanup with protection verification
   */
  async performEnhancedCleanup() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[20]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[224]++, {
      name: 'Enhanced Cleanup',
      success: true,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[225]++;
    try {
      const cleanupTargets =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[226]++, ['.jest-cache', 'coverage', '.nyc_output', 'node_modules/.cache', '.test-isolated']);
      const cleanedItems =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[227]++, []);
      const protectedItems =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[228]++, []);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[229]++;
      for (const target of cleanupTargets) {
        const targetPath =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[230]++, path.join(this.projectRoot, target));
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[231]++;
        if (fs.existsSync(targetPath)) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[30][0]++;
          cov_21xyfeqr7p().s[232]++;
          try {
            // Check if target contains any critical files before deletion
            const isCritical =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[233]++, await this.isCriticalPath(targetPath));
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[234]++;
            if (isCritical) {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[31][0]++;
              cov_21xyfeqr7p().s[235]++;
              protectedItems.push(target);
            } else {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[31][1]++;
              cov_21xyfeqr7p().s[236]++;
              fs.rmSync(targetPath, {
                recursive: true,
                force: true
              });
              /* istanbul ignore next */
              cov_21xyfeqr7p().s[237]++;
              cleanedItems.push(target);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[238]++;
            // Non-critical - continue with other cleanup
            step.details.cleanupErrors =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[32][0]++, step.details.cleanupErrors) ||
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[32][1]++, []);
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[239]++;
            step.details.cleanupErrors.push({
              target,
              error: error.message
            });
          }
        } else
        /* istanbul ignore next */
        {
          cov_21xyfeqr7p().b[30][1]++;
        }
      }

      // Clean up test environment directories with pattern .test-env-*
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[240]++;
      try {
        const projectFiles =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[241]++, fs.readdirSync(this.projectRoot, {
          withFileTypes: true
        }));
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[242]++;
        for (const file of projectFiles) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[243]++;
          if (
          /* istanbul ignore next */
          (cov_21xyfeqr7p().b[34][0]++, file.isDirectory()) &&
          /* istanbul ignore next */
          (cov_21xyfeqr7p().b[34][1]++, file.name.startsWith('.test-env-'))) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().b[33][0]++;
            const testEnvPath =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[244]++, path.join(this.projectRoot, file.name));
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[245]++;
            fs.rmSync(testEnvPath, {
              recursive: true,
              force: true
            });
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[246]++;
            cleanedItems.push(file.name);
          } else
          /* istanbul ignore next */
          {
            cov_21xyfeqr7p().b[33][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[247]++;
        step.details.cleanupErrors =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().b[35][0]++, step.details.cleanupErrors) ||
        /* istanbul ignore next */
        (cov_21xyfeqr7p().b[35][1]++, []);
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[248]++;
        step.details.cleanupErrors.push({
          target: 'test-env-*',
          error: error.message
        });
      }

      // Clean up temporary test files
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[249]++;
      try {
        const developmentDir =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[250]++, path.join(this.projectRoot, 'development'));
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[251]++;
        if (fs.existsSync(developmentDir)) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[36][0]++;
          const devFiles =
          /* istanbul ignore next */
          (cov_21xyfeqr7p().s[252]++, fs.readdirSync(developmentDir));
          /* istanbul ignore next */
          cov_21xyfeqr7p().s[253]++;
          for (const file of devFiles) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[254]++;
            if (
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[38][0]++, file.startsWith('test-restoration-')) &&
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[38][1]++, file.endsWith('.tmp'))) {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[37][0]++;
              const tempFile =
              /* istanbul ignore next */
              (cov_21xyfeqr7p().s[255]++, path.join(developmentDir, file));
              /* istanbul ignore next */
              cov_21xyfeqr7p().s[256]++;
              fs.unlinkSync(tempFile);
              /* istanbul ignore next */
              cov_21xyfeqr7p().s[257]++;
              cleanedItems.push(`development/${file}`);
            } else
            /* istanbul ignore next */
            {
              cov_21xyfeqr7p().b[37][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_21xyfeqr7p().b[36][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[258]++;
        step.details.cleanupErrors =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().b[39][0]++, step.details.cleanupErrors) ||
        /* istanbul ignore next */
        (cov_21xyfeqr7p().b[39][1]++, []);
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[259]++;
        step.details.cleanupErrors.push({
          target: 'temp test files',
          error: error.message
        });
      }
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[260]++;
      step.details.cleanedItems = cleanedItems;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[261]++;
      step.details.protectedItems = protectedItems;

      // Verify no contamination was introduced during cleanup
      const postCleanupContamination =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[262]++, await this.contaminationResolver.detectContamination());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[263]++;
      step.details.postCleanupContamination = postCleanupContamination.length;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[264]++;
      if (postCleanupContamination.length > 0) {
        /* istanbul ignore next */
        cov_21xyfeqr7p().b[40][0]++;
        cov_21xyfeqr7p().s[265]++;
        step.success = false;
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[266]++;
        step.details.contaminationIntroduced = true;
      } else
      /* istanbul ignore next */
      {
        cov_21xyfeqr7p().b[40][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[267]++;
      step.error = error.message;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[268]++;
      step.success = false;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[269]++;
    return step;
  }

  /**
   * Verify recovery completeness
   */
  async verifyRecoveryCompleteness() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[21]++;
    const step =
    /* istanbul ignore next */
    (cov_21xyfeqr7p().s[270]++, {
      name: 'Recovery Verification',
      success: false,
      details: {}
    });
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[271]++;
    try {
      // Check 1: No contamination present
      const contamination =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[272]++, await this.contaminationResolver.detectContamination());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[273]++;
      step.details.contaminationCount = contamination.length;

      // Check 2: Critical files are intact and valid
      const criticalFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[274]++, ['node_modules/exit/lib/exit.js', 'node_modules/jest-cli/build/run.js']);
      const validFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[275]++, []);
      const invalidFiles =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[276]++, []);
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[277]++;
      for (const file of criticalFiles) {
        const fullPath =
        /* istanbul ignore next */
        (cov_21xyfeqr7p().s[278]++, path.join(this.projectRoot, file));
        /* istanbul ignore next */
        cov_21xyfeqr7p().s[279]++;
        if (fs.existsSync(fullPath)) {
          /* istanbul ignore next */
          cov_21xyfeqr7p().b[41][0]++;
          cov_21xyfeqr7p().s[280]++;
          try {
            const content =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[281]++, fs.readFileSync(fullPath, 'utf8'));
            const isValid =
            /* istanbul ignore next */
            (cov_21xyfeqr7p().s[282]++,
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[42][0]++, !content.trim().startsWith('{')) ||
            /* istanbul ignore next */
            (cov_21xyfeqr7p().b[42][1]++, !content.includes('"project"')));
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[283]++;
            if (isValid) {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[43][0]++;
              cov_21xyfeqr7p().s[284]++;
              validFiles.push(file);
            } else {
              /* istanbul ignore next */
              cov_21xyfeqr7p().b[43][1]++;
              cov_21xyfeqr7p().s[285]++;
              invalidFiles.push(file);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_21xyfeqr7p().s[286]++;
            invalidFiles.push({
              file,
              error: error.message
            });
          }
        } else
        /* istanbul ignore next */
        {
          cov_21xyfeqr7p().b[41][1]++;
        }
      }
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[287]++;
      step.details.validFiles = validFiles;
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[288]++;
      step.details.invalidFiles = invalidFiles;

      // Check 3: Protection environment is set up
      const protectionActive =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[289]++, process.env.BUILD_PROTECTION_ACTIVE === 'true');
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[290]++;
      step.details.protectionActive = protectionActive;

      // Overall success
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[291]++;
      step.success =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().b[44][0]++, contamination.length === 0) &&
      /* istanbul ignore next */
      (cov_21xyfeqr7p().b[44][1]++, invalidFiles.length === 0) &&
      /* istanbul ignore next */
      (cov_21xyfeqr7p().b[44][2]++, protectionActive);
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[292]++;
      step.error = error.message;
    }
    /* istanbul ignore next */
    cov_21xyfeqr7p().s[293]++;
    return step;
  }

  /**
   * Check if a path contains critical files that shouldn't be deleted
   */
  async isCriticalPath(_targetPath) {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[22]++;
    cov_21xyfeqr7p().s[294]++;
    // For now, consider all paths as non-critical for cleanup
    // This can be extended to check for specific critical files within the path
    return false;
  }

  /**
   * Perform cleanup of temporary files and caches (legacy method)
   */
  async performCleanup() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[23]++;
    cov_21xyfeqr7p().s[295]++;
    return await this.performEnhancedCleanup();
  }

  /**
   * Validate build output
   */
  async validateBuildOutput() {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[24]++;
    cov_21xyfeqr7p().s[296]++;
    try {
      // Final contamination check
      const contamination =
      /* istanbul ignore next */
      (cov_21xyfeqr7p().s[297]++, await this.contaminationResolver.detectContamination());
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[298]++;
      return {
        success: contamination.length === 0,
        contamination: contamination.length,
        message: contamination.length === 0 ?
        /* istanbul ignore next */
        (cov_21xyfeqr7p().b[45][0]++, 'Build output is clean') :
        /* istanbul ignore next */
        (cov_21xyfeqr7p().b[45][1]++, `${contamination.length} contaminated files found`)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_21xyfeqr7p().s[299]++;
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * Delay helper for retry logic
   */
  async delay(ms) {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[25]++;
    cov_21xyfeqr7p().s[300]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_21xyfeqr7p().f[26]++;
      cov_21xyfeqr7p().s[301]++;
      return setTimeout(resolve, ms);
    });
  }

  /**
   * Logging helper
   */
  log(message) {
    /* istanbul ignore next */
    cov_21xyfeqr7p().f[27]++;
    cov_21xyfeqr7p().s[302]++;
    console.log(`🔧 [BuildRecovery] ${message}`);
  }
}
/* istanbul ignore next */
cov_21xyfeqr7p().s[303]++;
module.exports = BuildRecoveryManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,