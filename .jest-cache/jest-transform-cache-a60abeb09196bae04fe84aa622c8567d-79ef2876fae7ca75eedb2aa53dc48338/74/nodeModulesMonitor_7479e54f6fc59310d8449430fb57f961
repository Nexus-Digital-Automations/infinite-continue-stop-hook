0d6d7937d19d8182e869113edf432367
/* istanbul ignore next */
function cov_b35kfj846() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/nodeModulesMonitor.js";
  var hash = "8f0881cd96e52782578b73a5ab11b3e6bcee4bbc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/nodeModulesMonitor.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 11
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "1": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "2": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 32
        }
      },
      "3": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 78
        }
      },
      "4": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 75
        }
      },
      "5": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 77
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 88
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 91
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "9": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "10": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "11": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 29
        }
      },
      "12": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 38
        }
      },
      "13": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "14": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "15": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "16": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "17": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "18": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 37
        }
      },
      "19": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 29
        }
      },
      "20": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "21": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "22": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "23": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "24": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "25": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 43
        }
      },
      "26": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "27": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 51
        }
      },
      "28": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "29": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 108,
          column: 14
        }
      },
      "30": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 86
        }
      },
      "31": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 42
        }
      },
      "32": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 89
        }
      },
      "33": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "34": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 84
        }
      },
      "35": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 52
        }
      },
      "36": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "37": {
        start: {
          line: 129,
          column: 31
        },
        end: {
          line: 129,
          column: 33
        }
      },
      "38": {
        start: {
          line: 130,
          column: 37
        },
        end: {
          line: 130,
          column: 46
        }
      },
      "39": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "40": {
        start: {
          line: 134,
          column: 40
        },
        end: {
          line: 134,
          column: 82
        }
      },
      "41": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 64
        }
      },
      "42": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "43": {
        start: {
          line: 138,
          column: 38
        },
        end: {
          line: 144,
          column: 21
        }
      },
      "44": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "45": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 81
        }
      },
      "46": {
        start: {
          line: 152,
          column: 29
        },
        end: {
          line: 152,
          column: 63
        }
      },
      "47": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "48": {
        start: {
          line: 154,
          column: 34
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "49": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 43
        }
      },
      "50": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 72
        }
      },
      "51": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 41
        }
      },
      "52": {
        start: {
          line: 165,
          column: 27
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "53": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "54": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 177,
          column: 28
        }
      },
      "55": {
        start: {
          line: 176,
          column: 59
        },
        end: {
          line: 176,
          column: 65
        }
      },
      "56": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 97
        }
      },
      "57": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 26
        }
      },
      "58": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 82
        }
      },
      "59": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 72
        }
      },
      "60": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "61": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 49
        }
      },
      "62": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 72
        }
      },
      "63": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "64": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 58
        }
      },
      "65": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 64
        }
      },
      "66": {
        start: {
          line: 205,
          column: 33
        },
        end: {
          line: 205,
          column: 65
        }
      },
      "67": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "68": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 74
        }
      },
      "69": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 52
        }
      },
      "70": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 46
        }
      },
      "71": {
        start: {
          line: 212,
          column: 28
        },
        end: {
          line: 212,
          column: 29
        }
      },
      "72": {
        start: {
          line: 213,
          column: 30
        },
        end: {
          line: 213,
          column: 32
        }
      },
      "73": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "74": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "75": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 227,
          column: 17
        }
      },
      "76": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 218,
          column: 59
        }
      },
      "77": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 55
        }
      },
      "78": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 36
        }
      },
      "79": {
        start: {
          line: 221,
          column: 20
        },
        end: {
          line: 221,
          column: 72
        }
      },
      "80": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 226,
          column: 32
        }
      },
      "81": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "82": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 240,
          column: 10
        }
      },
      "83": {
        start: {
          line: 247,
          column: 23
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "84": {
        start: {
          line: 254,
          column: 60
        },
        end: {
          line: 254,
          column: 90
        }
      },
      "85": {
        start: {
          line: 255,
          column: 61
        },
        end: {
          line: 255,
          column: 89
        }
      },
      "86": {
        start: {
          line: 259,
          column: 33
        },
        end: {
          line: 259,
          column: 70
        }
      },
      "87": {
        start: {
          line: 260,
          column: 34
        },
        end: {
          line: 260,
          column: 80
        }
      },
      "88": {
        start: {
          line: 260,
          column: 60
        },
        end: {
          line: 260,
          column: 79
        }
      },
      "89": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 265,
          column: 18
        }
      },
      "90": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 22
        }
      },
      "91": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 53
        }
      },
      "92": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "93": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 40
        }
      },
      "94": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "95": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 39
        }
      },
      "96": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 38
        }
      },
      "97": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "98": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 300,
          column: 10
        }
      },
      "99": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 38
        }
      },
      "100": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "101": {
        start: {
          line: 314,
          column: 29
        },
        end: {
          line: 314,
          column: 66
        }
      },
      "102": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "103": {
        start: {
          line: 316,
          column: 33
        },
        end: {
          line: 316,
          column: 75
        }
      },
      "104": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 62
        }
      },
      "105": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "106": {
        start: {
          line: 323,
          column: 34
        },
        end: {
          line: 327,
          column: 13
        }
      },
      "107": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "108": {
        start: {
          line: 330,
          column: 40
        },
        end: {
          line: 330,
          column: 84
        }
      },
      "109": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 333,
          column: 17
        }
      },
      "110": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 64
        }
      },
      "111": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "112": {
        start: {
          line: 343,
          column: 26
        },
        end: {
          line: 343,
          column: 82
        }
      },
      "113": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 353,
          column: 13
        }
      },
      "114": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 349,
          column: 17
        }
      },
      "115": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 29
        }
      },
      "116": {
        start: {
          line: 351,
          column: 33
        },
        end: {
          line: 351,
          column: 71
        }
      },
      "117": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 58
        }
      },
      "118": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 358,
          column: 23
        }
      },
      "119": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 404,
          column: 11
        }
      },
      "120": {
        start: {
          line: 367,
          column: 25
        },
        end: {
          line: 367,
          column: 29
        }
      },
      "121": {
        start: {
          line: 368,
          column: 23
        },
        end: {
          line: 368,
          column: 27
        }
      },
      "122": {
        start: {
          line: 370,
          column: 28
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "123": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 379,
          column: 17
        }
      },
      "124": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 377,
          column: 21
        }
      },
      "125": {
        start: {
          line: 373,
          column: 24
        },
        end: {
          line: 373,
          column: 41
        }
      },
      "126": {
        start: {
          line: 376,
          column: 24
        },
        end: {
          line: 376,
          column: 42
        }
      },
      "127": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 378,
          column: 34
        }
      },
      "128": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 403,
          column: 13
        }
      },
      "129": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 55
        }
      },
      "130": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 72
        }
      },
      "131": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 389,
          column: 19
        }
      },
      "132": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 30
        }
      },
      "133": {
        start: {
          line: 388,
          column: 20
        },
        end: {
          line: 388,
          column: 91
        }
      },
      "134": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 393,
          column: 19
        }
      },
      "135": {
        start: {
          line: 392,
          column: 20
        },
        end: {
          line: 392,
          column: 39
        }
      },
      "136": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 398,
          column: 19
        }
      },
      "137": {
        start: {
          line: 396,
          column: 20
        },
        end: {
          line: 396,
          column: 30
        }
      },
      "138": {
        start: {
          line: 397,
          column: 20
        },
        end: {
          line: 397,
          column: 48
        }
      },
      "139": {
        start: {
          line: 401,
          column: 16
        },
        end: {
          line: 401,
          column: 26
        }
      },
      "140": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 402,
          column: 100
        }
      },
      "141": {
        start: {
          line: 411,
          column: 26
        },
        end: {
          line: 411,
          column: 69
        }
      },
      "142": {
        start: {
          line: 412,
          column: 27
        },
        end: {
          line: 412,
          column: 63
        }
      },
      "143": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 65
        }
      },
      "144": {
        start: {
          line: 416,
          column: 28
        },
        end: {
          line: 416,
          column: 29
        }
      },
      "145": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "146": {
        start: {
          line: 419,
          column: 31
        },
        end: {
          line: 419,
          column: 68
        }
      },
      "147": {
        start: {
          line: 420,
          column: 35
        },
        end: {
          line: 420,
          column: 62
        }
      },
      "148": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "149": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "150": {
        start: {
          line: 424,
          column: 20
        },
        end: {
          line: 424,
          column: 95
        }
      },
      "151": {
        start: {
          line: 425,
          column: 20
        },
        end: {
          line: 425,
          column: 75
        }
      },
      "152": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 426,
          column: 36
        }
      },
      "153": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 431,
          column: 31
        }
      },
      "154": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 39
        }
      },
      "155": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 442,
          column: 11
        }
      },
      "156": {
        start: {
          line: 449,
          column: 24
        },
        end: {
          line: 449,
          column: 56
        }
      },
      "157": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "158": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 68
        }
      },
      "159": {
        start: {
          line: 454,
          column: 29
        },
        end: {
          line: 454,
          column: 39
        }
      },
      "160": {
        start: {
          line: 455,
          column: 29
        },
        end: {
          line: 455,
          column: 74
        }
      },
      "161": {
        start: {
          line: 456,
          column: 31
        },
        end: {
          line: 456,
          column: 84
        }
      },
      "162": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "163": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 67
        }
      },
      "164": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 61
        }
      },
      "165": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 468,
          column: 11
        }
      },
      "166": {
        start: {
          line: 475,
          column: 32
        },
        end: {
          line: 475,
          column: 34
        }
      },
      "167": {
        start: {
          line: 478,
          column: 35
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "168": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "169": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 499,
          column: 13
        }
      },
      "170": {
        start: {
          line: 485,
          column: 30
        },
        end: {
          line: 485,
          column: 77
        }
      },
      "171": {
        start: {
          line: 486,
          column: 32
        },
        end: {
          line: 486,
          column: 72
        }
      },
      "172": {
        start: {
          line: 486,
          column: 53
        },
        end: {
          line: 486,
          column: 71
        }
      },
      "173": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 493,
          column: 17
        }
      },
      "174": {
        start: {
          line: 490,
          column: 20
        },
        end: {
          line: 492,
          column: 21
        }
      },
      "175": {
        start: {
          line: 491,
          column: 24
        },
        end: {
          line: 491,
          column: 52
        }
      },
      "176": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 498,
          column: 27
        }
      },
      "177": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 31
        }
      },
      "178": {
        start: {
          line: 509,
          column: 25
        },
        end: {
          line: 509,
          column: 48
        }
      },
      "179": {
        start: {
          line: 510,
          column: 32
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "180": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 50
        }
      },
      "181": {
        start: {
          line: 524,
          column: 22
        },
        end: {
          line: 524,
          column: 24
        }
      },
      "182": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 547,
          column: 13
        }
      },
      "183": {
        start: {
          line: 528,
          column: 30
        },
        end: {
          line: 528,
          column: 56
        }
      },
      "184": {
        start: {
          line: 530,
          column: 16
        },
        end: {
          line: 544,
          column: 17
        }
      },
      "185": {
        start: {
          line: 531,
          column: 37
        },
        end: {
          line: 531,
          column: 64
        }
      },
      "186": {
        start: {
          line: 532,
          column: 33
        },
        end: {
          line: 532,
          column: 54
        }
      },
      "187": {
        start: {
          line: 534,
          column: 20
        },
        end: {
          line: 543,
          column: 21
        }
      },
      "188": {
        start: {
          line: 536,
          column: 24
        },
        end: {
          line: 538,
          column: 25
        }
      },
      "189": {
        start: {
          line: 537,
          column: 28
        },
        end: {
          line: 537,
          column: 47
        }
      },
      "190": {
        start: {
          line: 539,
          column: 27
        },
        end: {
          line: 543,
          column: 21
        }
      },
      "191": {
        start: {
          line: 540,
          column: 24
        },
        end: {
          line: 542,
          column: 25
        }
      },
      "192": {
        start: {
          line: 541,
          column: 28
        },
        end: {
          line: 541,
          column: 49
        }
      },
      "193": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 550,
          column: 22
        }
      },
      "194": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 21
        }
      },
      "195": {
        start: {
          line: 558,
          column: 21
        },
        end: {
          line: 558,
          column: 42
        }
      },
      "196": {
        start: {
          line: 559,
          column: 25
        },
        end: {
          line: 559,
          column: 48
        }
      },
      "197": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 564,
          column: 9
        }
      },
      "198": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 24
        }
      },
      "199": {
        start: {
          line: 567,
          column: 29
        },
        end: {
          line: 575,
          column: 9
        }
      },
      "200": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 577,
          column: 68
        }
      },
      "201": {
        start: {
          line: 577,
          column: 44
        },
        end: {
          line: 577,
          column: 66
        }
      },
      "202": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 588,
          column: 9
        }
      },
      "203": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 585,
          column: 73
        }
      },
      "204": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 587,
          column: 83
        }
      },
      "205": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 624,
          column: 9
        }
      },
      "206": {
        start: {
          line: 596,
          column: 12
        },
        end: {
          line: 598,
          column: 13
        }
      },
      "207": {
        start: {
          line: 597,
          column: 16
        },
        end: {
          line: 597,
          column: 26
        }
      },
      "208": {
        start: {
          line: 600,
          column: 26
        },
        end: {
          line: 600,
          column: 67
        }
      },
      "209": {
        start: {
          line: 601,
          column: 28
        },
        end: {
          line: 601,
          column: 30
        }
      },
      "210": {
        start: {
          line: 603,
          column: 12
        },
        end: {
          line: 614,
          column: 13
        }
      },
      "211": {
        start: {
          line: 604,
          column: 33
        },
        end: {
          line: 604,
          column: 64
        }
      },
      "212": {
        start: {
          line: 605,
          column: 29
        },
        end: {
          line: 605,
          column: 61
        }
      },
      "213": {
        start: {
          line: 607,
          column: 16
        },
        end: {
          line: 613,
          column: 17
        }
      },
      "214": {
        start: {
          line: 608,
          column: 20
        },
        end: {
          line: 612,
          column: 23
        }
      },
      "215": {
        start: {
          line: 617,
          column: 12
        },
        end: {
          line: 619,
          column: 44
        }
      },
      "216": {
        start: {
          line: 618,
          column: 32
        },
        end: {
          line: 618,
          column: 49
        }
      },
      "217": {
        start: {
          line: 619,
          column: 31
        },
        end: {
          line: 619,
          column: 42
        }
      },
      "218": {
        start: {
          line: 622,
          column: 12
        },
        end: {
          line: 622,
          column: 90
        }
      },
      "219": {
        start: {
          line: 623,
          column: 12
        },
        end: {
          line: 623,
          column: 22
        }
      },
      "220": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 646,
          column: 9
        }
      },
      "221": {
        start: {
          line: 632,
          column: 28
        },
        end: {
          line: 632,
          column: 60
        }
      },
      "222": {
        start: {
          line: 634,
          column: 12
        },
        end: {
          line: 643,
          column: 13
        }
      },
      "223": {
        start: {
          line: 636,
          column: 33
        },
        end: {
          line: 636,
          column: 70
        }
      },
      "224": {
        start: {
          line: 638,
          column: 16
        },
        end: {
          line: 642,
          column: 17
        }
      },
      "225": {
        start: {
          line: 639,
          column: 39
        },
        end: {
          line: 639,
          column: 72
        }
      },
      "226": {
        start: {
          line: 640,
          column: 20
        },
        end: {
          line: 640,
          column: 87
        }
      },
      "227": {
        start: {
          line: 641,
          column: 20
        },
        end: {
          line: 641,
          column: 63
        }
      },
      "228": {
        start: {
          line: 645,
          column: 12
        },
        end: {
          line: 645,
          column: 88
        }
      },
      "229": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 666,
          column: 9
        }
      },
      "230": {
        start: {
          line: 654,
          column: 33
        },
        end: {
          line: 658,
          column: 13
        }
      },
      "231": {
        start: {
          line: 660,
          column: 12
        },
        end: {
          line: 663,
          column: 14
        }
      },
      "232": {
        start: {
          line: 665,
          column: 12
        },
        end: {
          line: 665,
          column: 83
        }
      },
      "233": {
        start: {
          line: 673,
          column: 25
        },
        end: {
          line: 678,
          column: 9
        }
      },
      "234": {
        start: {
          line: 681,
          column: 27
        },
        end: {
          line: 685,
          column: 9
        }
      },
      "235": {
        start: {
          line: 688,
          column: 8
        },
        end: {
          line: 691,
          column: 9
        }
      },
      "236": {
        start: {
          line: 689,
          column: 12
        },
        end: {
          line: 690,
          column: 65
        }
      },
      "237": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 696,
          column: 11
        }
      },
      "238": {
        start: {
          line: 703,
          column: 8
        },
        end: {
          line: 716,
          column: 9
        }
      },
      "239": {
        start: {
          line: 705,
          column: 12
        },
        end: {
          line: 707,
          column: 13
        }
      },
      "240": {
        start: {
          line: 706,
          column: 16
        },
        end: {
          line: 706,
          column: 23
        }
      },
      "241": {
        start: {
          line: 710,
          column: 12
        },
        end: {
          line: 710,
          column: 85
        }
      },
      "242": {
        start: {
          line: 712,
          column: 28
        },
        end: {
          line: 712,
          column: 59
        }
      },
      "243": {
        start: {
          line: 713,
          column: 12
        },
        end: {
          line: 713,
          column: 64
        }
      },
      "244": {
        start: {
          line: 724,
          column: 8
        },
        end: {
          line: 729,
          column: 9
        }
      },
      "245": {
        start: {
          line: 725,
          column: 12
        },
        end: {
          line: 727,
          column: 15
        }
      },
      "246": {
        start: {
          line: 728,
          column: 12
        },
        end: {
          line: 728,
          column: 19
        }
      },
      "247": {
        start: {
          line: 731,
          column: 8
        },
        end: {
          line: 769,
          column: 9
        }
      },
      "248": {
        start: {
          line: 732,
          column: 12
        },
        end: {
          line: 760,
          column: 13
        }
      },
      "249": {
        start: {
          line: 733,
          column: 33
        },
        end: {
          line: 733,
          column: 70
        }
      },
      "250": {
        start: {
          line: 734,
          column: 16
        },
        end: {
          line: 759,
          column: 17
        }
      },
      "251": {
        start: {
          line: 735,
          column: 36
        },
        end: {
          line: 745,
          column: 22
        }
      },
      "252": {
        start: {
          line: 737,
          column: 24
        },
        end: {
          line: 744,
          column: 25
        }
      },
      "253": {
        start: {
          line: 738,
          column: 28
        },
        end: {
          line: 738,
          column: 71
        }
      },
      "254": {
        start: {
          line: 740,
          column: 28
        },
        end: {
          line: 743,
          column: 40
        }
      },
      "255": {
        start: {
          line: 748,
          column: 20
        },
        end: {
          line: 756,
          column: 23
        }
      },
      "256": {
        start: {
          line: 749,
          column: 24
        },
        end: {
          line: 752,
          column: 36
        }
      },
      "257": {
        start: {
          line: 755,
          column: 24
        },
        end: {
          line: 755,
          column: 63
        }
      },
      "258": {
        start: {
          line: 758,
          column: 20
        },
        end: {
          line: 758,
          column: 65
        }
      },
      "259": {
        start: {
          line: 762,
          column: 12
        },
        end: {
          line: 764,
          column: 15
        }
      },
      "260": {
        start: {
          line: 766,
          column: 12
        },
        end: {
          line: 768,
          column: 23
        }
      },
      "261": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 804,
          column: 9
        }
      },
      "262": {
        start: {
          line: 777,
          column: 12
        },
        end: {
          line: 803,
          column: 13
        }
      },
      "263": {
        start: {
          line: 779,
          column: 41
        },
        end: {
          line: 779,
          column: 76
        }
      },
      "264": {
        start: {
          line: 780,
          column: 16
        },
        end: {
          line: 797,
          column: 17
        }
      },
      "265": {
        start: {
          line: 781,
          column: 44
        },
        end: {
          line: 781,
          column: 86
        }
      },
      "266": {
        start: {
          line: 783,
          column: 20
        },
        end: {
          line: 796,
          column: 21
        }
      },
      "267": {
        start: {
          line: 784,
          column: 24
        },
        end: {
          line: 784,
          column: 57
        }
      },
      "268": {
        start: {
          line: 785,
          column: 24
        },
        end: {
          line: 790,
          column: 36
        }
      },
      "269": {
        start: {
          line: 793,
          column: 24
        },
        end: {
          line: 795,
          column: 25
        }
      },
      "270": {
        start: {
          line: 794,
          column: 28
        },
        end: {
          line: 794,
          column: 65
        }
      },
      "271": {
        start: {
          line: 799,
          column: 16
        },
        end: {
          line: 802,
          column: 28
        }
      },
      "272": {
        start: {
          line: 811,
          column: 23
        },
        end: {
          line: 811,
          column: 60
        }
      },
      "273": {
        start: {
          line: 812,
          column: 29
        },
        end: {
          line: 812,
          column: 61
        }
      },
      "274": {
        start: {
          line: 813,
          column: 25
        },
        end: {
          line: 813,
          column: 49
        }
      },
      "275": {
        start: {
          line: 815,
          column: 8
        },
        end: {
          line: 825,
          column: 9
        }
      },
      "276": {
        start: {
          line: 816,
          column: 12
        },
        end: {
          line: 816,
          column: 40
        }
      },
      "277": {
        start: {
          line: 817,
          column: 12
        },
        end: {
          line: 819,
          column: 23
        }
      },
      "278": {
        start: {
          line: 822,
          column: 12
        },
        end: {
          line: 824,
          column: 13
        }
      },
      "279": {
        start: {
          line: 823,
          column: 16
        },
        end: {
          line: 823,
          column: 46
        }
      },
      "280": {
        start: {
          line: 832,
          column: 8
        },
        end: {
          line: 856,
          column: 9
        }
      },
      "281": {
        start: {
          line: 833,
          column: 12
        },
        end: {
          line: 833,
          column: 45
        }
      },
      "282": {
        start: {
          line: 834,
          column: 12
        },
        end: {
          line: 834,
          column: 73
        }
      },
      "283": {
        start: {
          line: 837,
          column: 37
        },
        end: {
          line: 837,
          column: 72
        }
      },
      "284": {
        start: {
          line: 838,
          column: 37
        },
        end: {
          line: 838,
          column: 79
        }
      },
      "285": {
        start: {
          line: 840,
          column: 12
        },
        end: {
          line: 849,
          column: 13
        }
      },
      "286": {
        start: {
          line: 841,
          column: 16
        },
        end: {
          line: 841,
          column: 74
        }
      },
      "287": {
        start: {
          line: 843,
          column: 16
        },
        end: {
          line: 843,
          column: 53
        }
      },
      "288": {
        start: {
          line: 844,
          column: 16
        },
        end: {
          line: 848,
          column: 28
        }
      },
      "289": {
        start: {
          line: 851,
          column: 12
        },
        end: {
          line: 851,
          column: 49
        }
      },
      "290": {
        start: {
          line: 852,
          column: 12
        },
        end: {
          line: 855,
          column: 24
        }
      },
      "291": {
        start: {
          line: 863,
          column: 8
        },
        end: {
          line: 866,
          column: 20
        }
      },
      "292": {
        start: {
          line: 869,
          column: 8
        },
        end: {
          line: 875,
          column: 9
        }
      },
      "293": {
        start: {
          line: 870,
          column: 12
        },
        end: {
          line: 873,
          column: 23
        }
      },
      "294": {
        start: {
          line: 874,
          column: 12
        },
        end: {
          line: 874,
          column: 19
        }
      },
      "295": {
        start: {
          line: 879,
          column: 8
        },
        end: {
          line: 881,
          column: 9
        }
      },
      "296": {
        start: {
          line: 880,
          column: 12
        },
        end: {
          line: 880,
          column: 36
        }
      },
      "297": {
        start: {
          line: 888,
          column: 8
        },
        end: {
          line: 897,
          column: 9
        }
      },
      "298": {
        start: {
          line: 889,
          column: 12
        },
        end: {
          line: 896,
          column: 13
        }
      },
      "299": {
        start: {
          line: 890,
          column: 16
        },
        end: {
          line: 890,
          column: 32
        }
      },
      "300": {
        start: {
          line: 892,
          column: 16
        },
        end: {
          line: 895,
          column: 27
        }
      },
      "301": {
        start: {
          line: 898,
          column: 8
        },
        end: {
          line: 898,
          column: 38
        }
      },
      "302": {
        start: {
          line: 899,
          column: 8
        },
        end: {
          line: 899,
          column: 47
        }
      },
      "303": {
        start: {
          line: 906,
          column: 23
        },
        end: {
          line: 912,
          column: 9
        }
      },
      "304": {
        start: {
          line: 914,
          column: 8
        },
        end: {
          line: 914,
          column: 53
        }
      },
      "305": {
        start: {
          line: 917,
          column: 8
        },
        end: {
          line: 919,
          column: 9
        }
      },
      "306": {
        start: {
          line: 918,
          column: 12
        },
        end: {
          line: 918,
          column: 46
        }
      },
      "307": {
        start: {
          line: 922,
          column: 8
        },
        end: {
          line: 935,
          column: 9
        }
      },
      "308": {
        start: {
          line: 925,
          column: 16
        },
        end: {
          line: 925,
          column: 53
        }
      },
      "309": {
        start: {
          line: 926,
          column: 16
        },
        end: {
          line: 926,
          column: 22
        }
      },
      "310": {
        start: {
          line: 928,
          column: 16
        },
        end: {
          line: 928,
          column: 49
        }
      },
      "311": {
        start: {
          line: 929,
          column: 16
        },
        end: {
          line: 929,
          column: 22
        }
      },
      "312": {
        start: {
          line: 931,
          column: 16
        },
        end: {
          line: 931,
          column: 49
        }
      },
      "313": {
        start: {
          line: 932,
          column: 16
        },
        end: {
          line: 932,
          column: 22
        }
      },
      "314": {
        start: {
          line: 934,
          column: 16
        },
        end: {
          line: 934,
          column: 51
        }
      },
      "315": {
        start: {
          line: 938,
          column: 8
        },
        end: {
          line: 940,
          column: 9
        }
      },
      "316": {
        start: {
          line: 939,
          column: 12
        },
        end: {
          line: 939,
          column: 46
        }
      },
      "317": {
        start: {
          line: 942,
          column: 8
        },
        end: {
          line: 942,
          column: 22
        }
      },
      "318": {
        start: {
          line: 949,
          column: 8
        },
        end: {
          line: 954,
          column: 20
        }
      },
      "319": {
        start: {
          line: 957,
          column: 8
        },
        end: {
          line: 968,
          column: 9
        }
      },
      "320": {
        start: {
          line: 958,
          column: 12
        },
        end: {
          line: 967,
          column: 15
        }
      },
      "321": {
        start: {
          line: 959,
          column: 16
        },
        end: {
          line: 966,
          column: 17
        }
      },
      "322": {
        start: {
          line: 960,
          column: 20
        },
        end: {
          line: 960,
          column: 80
        }
      },
      "323": {
        start: {
          line: 962,
          column: 20
        },
        end: {
          line: 965,
          column: 32
        }
      },
      "324": {
        start: {
          line: 971,
          column: 8
        },
        end: {
          line: 971,
          column: 36
        }
      },
      "325": {
        start: {
          line: 972,
          column: 8
        },
        end: {
          line: 972,
          column: 52
        }
      },
      "326": {
        start: {
          line: 979,
          column: 8
        },
        end: {
          line: 983,
          column: 20
        }
      },
      "327": {
        start: {
          line: 986,
          column: 8
        },
        end: {
          line: 986,
          column: 54
        }
      },
      "328": {
        start: {
          line: 989,
          column: 8
        },
        end: {
          line: 991,
          column: 9
        }
      },
      "329": {
        start: {
          line: 990,
          column: 12
        },
        end: {
          line: 990,
          column: 46
        }
      },
      "330": {
        start: {
          line: 998,
          column: 8
        },
        end: {
          line: 998,
          column: 85
        }
      },
      "331": {
        start: {
          line: 1000,
          column: 8
        },
        end: {
          line: 1021,
          column: 9
        }
      },
      "332": {
        start: {
          line: 1002,
          column: 37
        },
        end: {
          line: 1002,
          column: 72
        }
      },
      "333": {
        start: {
          line: 1003,
          column: 12
        },
        end: {
          line: 1015,
          column: 13
        }
      },
      "334": {
        start: {
          line: 1004,
          column: 40
        },
        end: {
          line: 1004,
          column: 82
        }
      },
      "335": {
        start: {
          line: 1006,
          column: 16
        },
        end: {
          line: 1014,
          column: 17
        }
      },
      "336": {
        start: {
          line: 1007,
          column: 20
        },
        end: {
          line: 1010,
          column: 32
        }
      },
      "337": {
        start: {
          line: 1013,
          column: 20
        },
        end: {
          line: 1013,
          column: 57
        }
      },
      "338": {
        start: {
          line: 1017,
          column: 12
        },
        end: {
          line: 1020,
          column: 24
        }
      },
      "339": {
        start: {
          line: 1028,
          column: 8
        },
        end: {
          line: 1031,
          column: 20
        }
      },
      "340": {
        start: {
          line: 1034,
          column: 8
        },
        end: {
          line: 1034,
          column: 56
        }
      },
      "341": {
        start: {
          line: 1037,
          column: 8
        },
        end: {
          line: 1037,
          column: 43
        }
      },
      "342": {
        start: {
          line: 1044,
          column: 33
        },
        end: {
          line: 1049,
          column: 9
        }
      },
      "343": {
        start: {
          line: 1051,
          column: 8
        },
        end: {
          line: 1054,
          column: 11
        }
      },
      "344": {
        start: {
          line: 1058,
          column: 8
        },
        end: {
          line: 1058,
          column: 45
        }
      },
      "345": {
        start: {
          line: 1065,
          column: 8
        },
        end: {
          line: 1067,
          column: 9
        }
      },
      "346": {
        start: {
          line: 1066,
          column: 12
        },
        end: {
          line: 1066,
          column: 24
        }
      },
      "347": {
        start: {
          line: 1069,
          column: 24
        },
        end: {
          line: 1069,
          column: 26
        }
      },
      "348": {
        start: {
          line: 1071,
          column: 8
        },
        end: {
          line: 1159,
          column: 9
        }
      },
      "349": {
        start: {
          line: 1073,
          column: 39
        },
        end: {
          line: 1098,
          column: 13
        }
      },
      "350": {
        start: {
          line: 1100,
          column: 12
        },
        end: {
          line: 1109,
          column: 13
        }
      },
      "351": {
        start: {
          line: 1101,
          column: 16
        },
        end: {
          line: 1108,
          column: 17
        }
      },
      "352": {
        start: {
          line: 1102,
          column: 20
        },
        end: {
          line: 1107,
          column: 23
        }
      },
      "353": {
        start: {
          line: 1112,
          column: 12
        },
        end: {
          line: 1129,
          column: 13
        }
      },
      "354": {
        start: {
          line: 1113,
          column: 38
        },
        end: {
          line: 1113,
          column: 39
        }
      },
      "355": {
        start: {
          line: 1114,
          column: 16
        },
        end: {
          line: 1119,
          column: 17
        }
      },
      "356": {
        start: {
          line: 1114,
          column: 29
        },
        end: {
          line: 1114,
          column: 30
        }
      },
      "357": {
        start: {
          line: 1115,
          column: 33
        },
        end: {
          line: 1115,
          column: 54
        }
      },
      "358": {
        start: {
          line: 1116,
          column: 20
        },
        end: {
          line: 1118,
          column: 21
        }
      },
      "359": {
        start: {
          line: 1117,
          column: 24
        },
        end: {
          line: 1117,
          column: 42
        }
      },
      "360": {
        start: {
          line: 1121,
          column: 16
        },
        end: {
          line: 1128,
          column: 17
        }
      },
      "361": {
        start: {
          line: 1122,
          column: 20
        },
        end: {
          line: 1127,
          column: 23
        }
      },
      "362": {
        start: {
          line: 1132,
          column: 12
        },
        end: {
          line: 1149,
          column: 13
        }
      },
      "363": {
        start: {
          line: 1133,
          column: 44
        },
        end: {
          line: 1137,
          column: 17
        }
      },
      "364": {
        start: {
          line: 1139,
          column: 16
        },
        end: {
          line: 1148,
          column: 17
        }
      },
      "365": {
        start: {
          line: 1140,
          column: 20
        },
        end: {
          line: 1147,
          column: 21
        }
      },
      "366": {
        start: {
          line: 1141,
          column: 24
        },
        end: {
          line: 1146,
          column: 27
        }
      },
      "367": {
        start: {
          line: 1151,
          column: 12
        },
        end: {
          line: 1151,
          column: 55
        }
      },
      "368": {
        start: {
          line: 1154,
          column: 12
        },
        end: {
          line: 1157,
          column: 24
        }
      },
      "369": {
        start: {
          line: 1158,
          column: 12
        },
        end: {
          line: 1158,
          column: 24
        }
      },
      "370": {
        start: {
          line: 1166,
          column: 8
        },
        end: {
          line: 1168,
          column: 9
        }
      },
      "371": {
        start: {
          line: 1167,
          column: 12
        },
        end: {
          line: 1167,
          column: 47
        }
      },
      "372": {
        start: {
          line: 1170,
          column: 8
        },
        end: {
          line: 1170,
          column: 53
        }
      },
      "373": {
        start: {
          line: 1172,
          column: 28
        },
        end: {
          line: 1176,
          column: 9
        }
      },
      "374": {
        start: {
          line: 1178,
          column: 30
        },
        end: {
          line: 1184,
          column: 9
        }
      },
      "375": {
        start: {
          line: 1186,
          column: 8
        },
        end: {
          line: 1211,
          column: 9
        }
      },
      "376": {
        start: {
          line: 1187,
          column: 12
        },
        end: {
          line: 1210,
          column: 13
        }
      },
      "377": {
        start: {
          line: 1188,
          column: 16
        },
        end: {
          line: 1204,
          column: 17
        }
      },
      "378": {
        start: {
          line: 1189,
          column: 36
        },
        end: {
          line: 1189,
          column: 69
        }
      },
      "379": {
        start: {
          line: 1190,
          column: 36
        },
        end: {
          line: 1190,
          column: 92
        }
      },
      "380": {
        start: {
          line: 1192,
          column: 20
        },
        end: {
          line: 1201,
          column: 21
        }
      },
      "381": {
        start: {
          line: 1193,
          column: 24
        },
        end: {
          line: 1193,
          column: 61
        }
      },
      "382": {
        start: {
          line: 1194,
          column: 24
        },
        end: {
          line: 1194,
          column: 109
        }
      },
      "383": {
        start: {
          line: 1194,
          column: 75
        },
        end: {
          line: 1194,
          column: 100
        }
      },
      "384": {
        start: {
          line: 1196,
          column: 24
        },
        end: {
          line: 1200,
          column: 36
        }
      },
      "385": {
        start: {
          line: 1199,
          column: 54
        },
        end: {
          line: 1199,
          column: 60
        }
      },
      "386": {
        start: {
          line: 1203,
          column: 20
        },
        end: {
          line: 1203,
          column: 42
        }
      },
      "387": {
        start: {
          line: 1206,
          column: 16
        },
        end: {
          line: 1209,
          column: 27
        }
      },
      "388": {
        start: {
          line: 1213,
          column: 8
        },
        end: {
          line: 1213,
          column: 58
        }
      },
      "389": {
        start: {
          line: 1216,
          column: 8
        },
        end: {
          line: 1222,
          column: 9
        }
      },
      "390": {
        start: {
          line: 1217,
          column: 12
        },
        end: {
          line: 1217,
          column: 49
        }
      },
      "391": {
        start: {
          line: 1219,
          column: 12
        },
        end: {
          line: 1221,
          column: 13
        }
      },
      "392": {
        start: {
          line: 1220,
          column: 16
        },
        end: {
          line: 1220,
          column: 55
        }
      },
      "393": {
        start: {
          line: 1224,
          column: 8
        },
        end: {
          line: 1224,
          column: 27
        }
      },
      "394": {
        start: {
          line: 1231,
          column: 8
        },
        end: {
          line: 1234,
          column: 20
        }
      },
      "395": {
        start: {
          line: 1237,
          column: 8
        },
        end: {
          line: 1237,
          column: 61
        }
      },
      "396": {
        start: {
          line: 1238,
          column: 8
        },
        end: {
          line: 1238,
          column: 61
        }
      },
      "397": {
        start: {
          line: 1241,
          column: 8
        },
        end: {
          line: 1241,
          column: 40
        }
      },
      "398": {
        start: {
          line: 1244,
          column: 8
        },
        end: {
          line: 1244,
          column: 46
        }
      },
      "399": {
        start: {
          line: 1246,
          column: 8
        },
        end: {
          line: 1250,
          column: 10
        }
      },
      "400": {
        start: {
          line: 1255,
          column: 28
        },
        end: {
          line: 1255,
          column: 32
        }
      },
      "401": {
        start: {
          line: 1261,
          column: 4
        },
        end: {
          line: 1263,
          column: 5
        }
      },
      "402": {
        start: {
          line: 1262,
          column: 8
        },
        end: {
          line: 1262,
          column: 64
        }
      },
      "403": {
        start: {
          line: 1264,
          column: 4
        },
        end: {
          line: 1264,
          column: 33
        }
      },
      "404": {
        start: {
          line: 1271,
          column: 4
        },
        end: {
          line: 1275,
          column: 5
        }
      },
      "405": {
        start: {
          line: 1272,
          column: 8
        },
        end: {
          line: 1274,
          column: 11
        }
      },
      "406": {
        start: {
          line: 1276,
          column: 4
        },
        end: {
          line: 1276,
          column: 33
        }
      },
      "407": {
        start: {
          line: 1279,
          column: 0
        },
        end: {
          line: 1279,
          column: 36
        }
      },
      "408": {
        start: {
          line: 1280,
          column: 0
        },
        end: {
          line: 1280,
          column: 51
        }
      },
      "409": {
        start: {
          line: 1281,
          column: 0
        },
        end: {
          line: 1281,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 28
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 74
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 121
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 153,
            column: 29
          },
          end: {
            line: 153,
            column: 30
          }
        },
        loc: {
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 161,
            column: 13
          }
        },
        line: 153
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 176,
            column: 54
          },
          end: {
            line: 176,
            column: 55
          }
        },
        loc: {
          start: {
            line: 176,
            column: 59
          },
          end: {
            line: 176,
            column: 65
          }
        },
        line: 176
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 34
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 193
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 246
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 254,
            column: 55
          },
          end: {
            line: 254,
            column: 56
          }
        },
        loc: {
          start: {
            line: 254,
            column: 60
          },
          end: {
            line: 254,
            column: 90
          }
        },
        line: 254
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 255,
            column: 56
          },
          end: {
            line: 255,
            column: 57
          }
        },
        loc: {
          start: {
            line: 255,
            column: 61
          },
          end: {
            line: 255,
            column: 89
          }
        },
        line: 255
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 258,
            column: 50
          },
          end: {
            line: 258,
            column: 51
          }
        },
        loc: {
          start: {
            line: 258,
            column: 58
          },
          end: {
            line: 266,
            column: 13
          }
        },
        line: 258
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 260,
            column: 55
          },
          end: {
            line: 260,
            column: 56
          }
        },
        loc: {
          start: {
            line: 260,
            column: 60
          },
          end: {
            line: 260,
            column: 79
          }
        },
        line: 260
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 27
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 275
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 30
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 310
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 39
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 341
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 42
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 365
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 366,
            column: 27
          },
          end: {
            line: 366,
            column: 28
          }
        },
        loc: {
          start: {
            line: 366,
            column: 48
          },
          end: {
            line: 404,
            column: 9
          }
        },
        line: 366
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 370,
            column: 28
          },
          end: {
            line: 370,
            column: 29
          }
        },
        loc: {
          start: {
            line: 370,
            column: 34
          },
          end: {
            line: 380,
            column: 13
          }
        },
        line: 370
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 386,
            column: 35
          },
          end: {
            line: 386,
            column: 36
          }
        },
        loc: {
          start: {
            line: 386,
            column: 46
          },
          end: {
            line: 389,
            column: 17
          }
        },
        line: 386
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 391,
            column: 34
          },
          end: {
            line: 391,
            column: 35
          }
        },
        loc: {
          start: {
            line: 391,
            column: 45
          },
          end: {
            line: 393,
            column: 17
          }
        },
        line: 391
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 395,
            column: 33
          },
          end: {
            line: 395,
            column: 34
          }
        },
        loc: {
          start: {
            line: 395,
            column: 39
          },
          end: {
            line: 398,
            column: 17
          }
        },
        line: 395
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        },
        loc: {
          start: {
            line: 410,
            column: 26
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 410
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 32
          },
          end: {
            line: 469,
            column: 5
          }
        },
        line: 448
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        loc: {
          start: {
            line: 474,
            column: 34
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 474
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 486,
            column: 45
          },
          end: {
            line: 486,
            column: 46
          }
        },
        loc: {
          start: {
            line: 486,
            column: 53
          },
          end: {
            line: 486,
            column: 71
          }
        },
        line: 486
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 31
          },
          end: {
            line: 518,
            column: 5
          }
        },
        line: 508
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        loc: {
          start: {
            line: 523,
            column: 49
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 523
      },
      "26": {
        name: "traverse",
        decl: {
          start: {
            line: 526,
            column: 17
          },
          end: {
            line: 526,
            column: 25
          }
        },
        loc: {
          start: {
            line: 526,
            column: 38
          },
          end: {
            line: 548,
            column: 9
          }
        },
        line: 526
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 557,
            column: 5
          }
        },
        loc: {
          start: {
            line: 557,
            column: 29
          },
          end: {
            line: 578,
            column: 5
          }
        },
        line: 557
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 577,
            column: 33
          },
          end: {
            line: 577,
            column: 34
          }
        },
        loc: {
          start: {
            line: 577,
            column: 44
          },
          end: {
            line: 577,
            column: 66
          }
        },
        line: 577
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 583,
            column: 4
          },
          end: {
            line: 583,
            column: 5
          }
        },
        loc: {
          start: {
            line: 583,
            column: 34
          },
          end: {
            line: 589,
            column: 5
          }
        },
        line: 583
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 594,
            column: 4
          },
          end: {
            line: 594,
            column: 5
          }
        },
        loc: {
          start: {
            line: 594,
            column: 32
          },
          end: {
            line: 625,
            column: 5
          }
        },
        line: 594
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 618,
            column: 22
          },
          end: {
            line: 618,
            column: 23
          }
        },
        loc: {
          start: {
            line: 618,
            column: 32
          },
          end: {
            line: 618,
            column: 49
          }
        },
        line: 618
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 619,
            column: 21
          },
          end: {
            line: 619,
            column: 22
          }
        },
        loc: {
          start: {
            line: 619,
            column: 31
          },
          end: {
            line: 619,
            column: 42
          }
        },
        line: 619
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 5
          }
        },
        loc: {
          start: {
            line: 630,
            column: 30
          },
          end: {
            line: 647,
            column: 5
          }
        },
        line: 630
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 652,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        },
        loc: {
          start: {
            line: 652,
            column: 26
          },
          end: {
            line: 667,
            column: 5
          }
        },
        line: 652
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 672,
            column: 4
          },
          end: {
            line: 672,
            column: 5
          }
        },
        loc: {
          start: {
            line: 672,
            column: 44
          },
          end: {
            line: 697,
            column: 5
          }
        },
        line: 672
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 694,
            column: 44
          },
          end: {
            line: 694,
            column: 45
          }
        },
        loc: {
          start: {
            line: 694,
            column: 50
          },
          end: {
            line: 696,
            column: 9
          }
        },
        line: 694
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 702,
            column: 4
          },
          end: {
            line: 702,
            column: 5
          }
        },
        loc: {
          start: {
            line: 702,
            column: 35
          },
          end: {
            line: 717,
            column: 5
          }
        },
        line: 702
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 722,
            column: 4
          },
          end: {
            line: 722,
            column: 5
          }
        },
        loc: {
          start: {
            line: 722,
            column: 34
          },
          end: {
            line: 770,
            column: 5
          }
        },
        line: 722
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 735,
            column: 55
          },
          end: {
            line: 735,
            column: 56
          }
        },
        loc: {
          start: {
            line: 735,
            column: 81
          },
          end: {
            line: 745,
            column: 21
          }
        },
        line: 735
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 748,
            column: 40
          },
          end: {
            line: 748,
            column: 41
          }
        },
        loc: {
          start: {
            line: 748,
            column: 51
          },
          end: {
            line: 756,
            column: 21
          }
        },
        line: 748
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 775,
            column: 4
          },
          end: {
            line: 775,
            column: 5
          }
        },
        loc: {
          start: {
            line: 775,
            column: 48
          },
          end: {
            line: 805,
            column: 5
          }
        },
        line: 775
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 810,
            column: 4
          },
          end: {
            line: 810,
            column: 5
          }
        },
        loc: {
          start: {
            line: 810,
            column: 34
          },
          end: {
            line: 826,
            column: 5
          }
        },
        line: 810
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 831,
            column: 4
          },
          end: {
            line: 831,
            column: 5
          }
        },
        loc: {
          start: {
            line: 831,
            column: 36
          },
          end: {
            line: 857,
            column: 5
          }
        },
        line: 831
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 862,
            column: 4
          },
          end: {
            line: 862,
            column: 5
          }
        },
        loc: {
          start: {
            line: 862,
            column: 29
          },
          end: {
            line: 882,
            column: 5
          }
        },
        line: 862
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 887,
            column: 4
          },
          end: {
            line: 887,
            column: 5
          }
        },
        loc: {
          start: {
            line: 887,
            column: 27
          },
          end: {
            line: 900,
            column: 5
          }
        },
        line: 887
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 905,
            column: 4
          },
          end: {
            line: 905,
            column: 5
          }
        },
        loc: {
          start: {
            line: 905,
            column: 38
          },
          end: {
            line: 943,
            column: 5
          }
        },
        line: 905
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 948,
            column: 4
          },
          end: {
            line: 948,
            column: 5
          }
        },
        loc: {
          start: {
            line: 948,
            column: 33
          },
          end: {
            line: 973,
            column: 5
          }
        },
        line: 948
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 958,
            column: 29
          },
          end: {
            line: 958,
            column: 30
          }
        },
        loc: {
          start: {
            line: 958,
            column: 41
          },
          end: {
            line: 967,
            column: 13
          }
        },
        line: 958
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 978,
            column: 4
          },
          end: {
            line: 978,
            column: 5
          }
        },
        loc: {
          start: {
            line: 978,
            column: 33
          },
          end: {
            line: 992,
            column: 5
          }
        },
        line: 978
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 997,
            column: 4
          },
          end: {
            line: 997,
            column: 5
          }
        },
        loc: {
          start: {
            line: 997,
            column: 44
          },
          end: {
            line: 1022,
            column: 5
          }
        },
        line: 997
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 1027,
            column: 4
          },
          end: {
            line: 1027,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1027,
            column: 33
          },
          end: {
            line: 1038,
            column: 5
          }
        },
        line: 1027
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1043,
            column: 4
          },
          end: {
            line: 1043,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1043,
            column: 34
          },
          end: {
            line: 1059,
            column: 5
          }
        },
        line: 1043
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1064,
            column: 4
          },
          end: {
            line: 1064,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1064,
            column: 56
          },
          end: {
            line: 1160,
            column: 5
          }
        },
        line: 1064
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 1165,
            column: 4
          },
          end: {
            line: 1165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1165,
            column: 33
          },
          end: {
            line: 1225,
            column: 5
          }
        },
        line: 1165
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 1194,
            column: 70
          },
          end: {
            line: 1194,
            column: 71
          }
        },
        loc: {
          start: {
            line: 1194,
            column: 75
          },
          end: {
            line: 1194,
            column: 100
          }
        },
        line: 1194
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 1199,
            column: 49
          },
          end: {
            line: 1199,
            column: 50
          }
        },
        loc: {
          start: {
            line: 1199,
            column: 54
          },
          end: {
            line: 1199,
            column: 60
          }
        },
        line: 1199
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 1230,
            column: 4
          },
          end: {
            line: 1230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1230,
            column: 38
          },
          end: {
            line: 1251,
            column: 5
          }
        },
        line: 1230
      },
      "58": {
        name: "getGlobalMonitor",
        decl: {
          start: {
            line: 1260,
            column: 9
          },
          end: {
            line: 1260,
            column: 25
          }
        },
        loc: {
          start: {
            line: 1260,
            column: 40
          },
          end: {
            line: 1265,
            column: 1
          }
        },
        line: 1260
      },
      "59": {
        name: "resetGlobalMonitor",
        decl: {
          start: {
            line: 1270,
            column: 9
          },
          end: {
            line: 1270,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1270,
            column: 30
          },
          end: {
            line: 1277,
            column: 1
          }
        },
        line: 1270
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 1272,
            column: 53
          },
          end: {
            line: 1272,
            column: 54
          }
        },
        loc: {
          start: {
            line: 1272,
            column: 59
          },
          end: {
            line: 1274,
            column: 9
          }
        },
        line: 1272
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 28
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 22,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 22,
            column: 59
          }
        }, {
          start: {
            line: 22,
            column: 63
          },
          end: {
            line: 22,
            column: 76
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 42
          }
        }, {
          start: {
            line: 41,
            column: 46
          },
          end: {
            line: 41,
            column: 47
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 56
          }
        }, {
          start: {
            line: 42,
            column: 60
          },
          end: {
            line: 42,
            column: 68
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: 178,
            column: 19
          },
          end: {
            line: 180,
            column: 13
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "11": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "12": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "13": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "14": {
        loc: {
          start: {
            line: 256,
            column: 33
          },
          end: {
            line: 256,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 64
          },
          end: {
            line: 256,
            column: 71
          }
        }, {
          start: {
            line: 256,
            column: 74
          },
          end: {
            line: 256,
            column: 87
          }
        }],
        line: 256
      },
      "15": {
        loc: {
          start: {
            line: 263,
            column: 28
          },
          end: {
            line: 263,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 40
          },
          end: {
            line: 263,
            column: 53
          }
        }, {
          start: {
            line: 263,
            column: 56
          },
          end: {
            line: 263,
            column: 63
          }
        }],
        line: 263
      },
      "16": {
        loc: {
          start: {
            line: 264,
            column: 31
          },
          end: {
            line: 264,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 31
          },
          end: {
            line: 264,
            column: 40
          }
        }, {
          start: {
            line: 264,
            column: 44
          },
          end: {
            line: 264,
            column: 48
          }
        }],
        line: 264
      },
      "17": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "18": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "19": {
        loc: {
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "20": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "21": {
        loc: {
          start: {
            line: 331,
            column: 16
          },
          end: {
            line: 333,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 16
          },
          end: {
            line: 333,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "22": {
        loc: {
          start: {
            line: 347,
            column: 16
          },
          end: {
            line: 349,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 16
          },
          end: {
            line: 349,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "23": {
        loc: {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 379,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 379,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "24": {
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 433,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 433,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "25": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "26": {
        loc: {
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "27": {
        loc: {
          start: {
            line: 490,
            column: 20
          },
          end: {
            line: 492,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 20
          },
          end: {
            line: 492,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "28": {
        loc: {
          start: {
            line: 523,
            column: 30
          },
          end: {
            line: 523,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 523,
            column: 43
          },
          end: {
            line: 523,
            column: 47
          }
        }],
        line: 523
      },
      "29": {
        loc: {
          start: {
            line: 534,
            column: 20
          },
          end: {
            line: 543,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 20
          },
          end: {
            line: 543,
            column: 21
          }
        }, {
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 543,
            column: 21
          }
        }],
        line: 534
      },
      "30": {
        loc: {
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 538,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 538,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "31": {
        loc: {
          start: {
            line: 536,
            column: 28
          },
          end: {
            line: 536,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 536,
            column: 28
          },
          end: {
            line: 536,
            column: 49
          }
        }, {
          start: {
            line: 536,
            column: 53
          },
          end: {
            line: 536,
            column: 76
          }
        }],
        line: 536
      },
      "32": {
        loc: {
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 543,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 543,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "33": {
        loc: {
          start: {
            line: 540,
            column: 24
          },
          end: {
            line: 542,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 540,
            column: 24
          },
          end: {
            line: 542,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 540
      },
      "34": {
        loc: {
          start: {
            line: 540,
            column: 28
          },
          end: {
            line: 540,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 540,
            column: 28
          },
          end: {
            line: 540,
            column: 39
          }
        }, {
          start: {
            line: 540,
            column: 43
          },
          end: {
            line: 540,
            column: 86
          }
        }],
        line: 540
      },
      "35": {
        loc: {
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "36": {
        loc: {
          start: {
            line: 596,
            column: 12
          },
          end: {
            line: 598,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 596,
            column: 12
          },
          end: {
            line: 598,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 596
      },
      "37": {
        loc: {
          start: {
            line: 607,
            column: 16
          },
          end: {
            line: 613,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 607,
            column: 16
          },
          end: {
            line: 613,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 607
      },
      "38": {
        loc: {
          start: {
            line: 634,
            column: 12
          },
          end: {
            line: 643,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 634,
            column: 12
          },
          end: {
            line: 643,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 634
      },
      "39": {
        loc: {
          start: {
            line: 672,
            column: 17
          },
          end: {
            line: 672,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 672,
            column: 24
          },
          end: {
            line: 672,
            column: 26
          }
        }],
        line: 672
      },
      "40": {
        loc: {
          start: {
            line: 672,
            column: 28
          },
          end: {
            line: 672,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 672,
            column: 36
          },
          end: {
            line: 672,
            column: 42
          }
        }],
        line: 672
      },
      "41": {
        loc: {
          start: {
            line: 688,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 688,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 688
      },
      "42": {
        loc: {
          start: {
            line: 689,
            column: 27
          },
          end: {
            line: 689,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 689,
            column: 27
          },
          end: {
            line: 689,
            column: 44
          }
        }, {
          start: {
            line: 689,
            column: 48
          },
          end: {
            line: 689,
            column: 52
          }
        }],
        line: 689
      },
      "43": {
        loc: {
          start: {
            line: 690,
            column: 23
          },
          end: {
            line: 690,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 690,
            column: 54
          },
          end: {
            line: 690,
            column: 58
          }
        }, {
          start: {
            line: 690,
            column: 61
          },
          end: {
            line: 690,
            column: 63
          }
        }],
        line: 690
      },
      "44": {
        loc: {
          start: {
            line: 705,
            column: 12
          },
          end: {
            line: 707,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 12
          },
          end: {
            line: 707,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 705
      },
      "45": {
        loc: {
          start: {
            line: 724,
            column: 8
          },
          end: {
            line: 729,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 724,
            column: 8
          },
          end: {
            line: 729,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 724
      },
      "46": {
        loc: {
          start: {
            line: 734,
            column: 16
          },
          end: {
            line: 759,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 734,
            column: 16
          },
          end: {
            line: 759,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 734
      },
      "47": {
        loc: {
          start: {
            line: 776,
            column: 8
          },
          end: {
            line: 804,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 776,
            column: 8
          },
          end: {
            line: 804,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 776
      },
      "48": {
        loc: {
          start: {
            line: 780,
            column: 16
          },
          end: {
            line: 797,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 780,
            column: 16
          },
          end: {
            line: 797,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 780
      },
      "49": {
        loc: {
          start: {
            line: 783,
            column: 20
          },
          end: {
            line: 796,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 783,
            column: 20
          },
          end: {
            line: 796,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 783
      },
      "50": {
        loc: {
          start: {
            line: 793,
            column: 24
          },
          end: {
            line: 795,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 793,
            column: 24
          },
          end: {
            line: 795,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 793
      },
      "51": {
        loc: {
          start: {
            line: 815,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 815,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 815
      },
      "52": {
        loc: {
          start: {
            line: 822,
            column: 12
          },
          end: {
            line: 824,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 822,
            column: 12
          },
          end: {
            line: 824,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 822
      },
      "53": {
        loc: {
          start: {
            line: 822,
            column: 16
          },
          end: {
            line: 822,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 822,
            column: 16
          },
          end: {
            line: 822,
            column: 47
          }
        }, {
          start: {
            line: 822,
            column: 51
          },
          end: {
            line: 822,
            column: 89
          }
        }],
        line: 822
      },
      "54": {
        loc: {
          start: {
            line: 840,
            column: 12
          },
          end: {
            line: 849,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 840,
            column: 12
          },
          end: {
            line: 849,
            column: 13
          }
        }, {
          start: {
            line: 842,
            column: 19
          },
          end: {
            line: 849,
            column: 13
          }
        }],
        line: 840
      },
      "55": {
        loc: {
          start: {
            line: 869,
            column: 8
          },
          end: {
            line: 875,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 869,
            column: 8
          },
          end: {
            line: 875,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 869
      },
      "56": {
        loc: {
          start: {
            line: 879,
            column: 8
          },
          end: {
            line: 881,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 879,
            column: 8
          },
          end: {
            line: 881,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 879
      },
      "57": {
        loc: {
          start: {
            line: 879,
            column: 12
          },
          end: {
            line: 879,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 879,
            column: 12
          },
          end: {
            line: 879,
            column: 46
          }
        }, {
          start: {
            line: 879,
            column: 50
          },
          end: {
            line: 879,
            column: 81
          }
        }],
        line: 879
      },
      "58": {
        loc: {
          start: {
            line: 911,
            column: 23
          },
          end: {
            line: 911,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 911,
            column: 23
          },
          end: {
            line: 911,
            column: 37
          }
        }, {
          start: {
            line: 911,
            column: 41
          },
          end: {
            line: 911,
            column: 64
          }
        }],
        line: 911
      },
      "59": {
        loc: {
          start: {
            line: 917,
            column: 8
          },
          end: {
            line: 919,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 917,
            column: 8
          },
          end: {
            line: 919,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 917
      },
      "60": {
        loc: {
          start: {
            line: 922,
            column: 8
          },
          end: {
            line: 935,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 923,
            column: 12
          },
          end: {
            line: 923,
            column: 44
          }
        }, {
          start: {
            line: 924,
            column: 12
          },
          end: {
            line: 926,
            column: 22
          }
        }, {
          start: {
            line: 927,
            column: 12
          },
          end: {
            line: 929,
            column: 22
          }
        }, {
          start: {
            line: 930,
            column: 12
          },
          end: {
            line: 932,
            column: 22
          }
        }, {
          start: {
            line: 933,
            column: 12
          },
          end: {
            line: 934,
            column: 51
          }
        }],
        line: 922
      },
      "61": {
        loc: {
          start: {
            line: 938,
            column: 8
          },
          end: {
            line: 940,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 938,
            column: 8
          },
          end: {
            line: 940,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 938
      },
      "62": {
        loc: {
          start: {
            line: 957,
            column: 8
          },
          end: {
            line: 968,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 957,
            column: 8
          },
          end: {
            line: 968,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 957
      },
      "63": {
        loc: {
          start: {
            line: 957,
            column: 12
          },
          end: {
            line: 957,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 957,
            column: 12
          },
          end: {
            line: 957,
            column: 35
          }
        }, {
          start: {
            line: 957,
            column: 39
          },
          end: {
            line: 957,
            column: 74
          }
        }],
        line: 957
      },
      "64": {
        loc: {
          start: {
            line: 989,
            column: 8
          },
          end: {
            line: 991,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 989,
            column: 8
          },
          end: {
            line: 991,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 989
      },
      "65": {
        loc: {
          start: {
            line: 1003,
            column: 12
          },
          end: {
            line: 1015,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1003,
            column: 12
          },
          end: {
            line: 1015,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1003
      },
      "66": {
        loc: {
          start: {
            line: 1006,
            column: 16
          },
          end: {
            line: 1014,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1006,
            column: 16
          },
          end: {
            line: 1014,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1006
      },
      "67": {
        loc: {
          start: {
            line: 1065,
            column: 8
          },
          end: {
            line: 1067,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1065,
            column: 8
          },
          end: {
            line: 1067,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1065
      },
      "68": {
        loc: {
          start: {
            line: 1101,
            column: 16
          },
          end: {
            line: 1108,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1101,
            column: 16
          },
          end: {
            line: 1108,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1101
      },
      "69": {
        loc: {
          start: {
            line: 1112,
            column: 12
          },
          end: {
            line: 1129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1112,
            column: 12
          },
          end: {
            line: 1129,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1112
      },
      "70": {
        loc: {
          start: {
            line: 1116,
            column: 20
          },
          end: {
            line: 1118,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1116,
            column: 20
          },
          end: {
            line: 1118,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1116
      },
      "71": {
        loc: {
          start: {
            line: 1116,
            column: 24
          },
          end: {
            line: 1116,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1116,
            column: 25
          },
          end: {
            line: 1116,
            column: 34
          }
        }, {
          start: {
            line: 1116,
            column: 38
          },
          end: {
            line: 1116,
            column: 48
          }
        }, {
          start: {
            line: 1116,
            column: 52
          },
          end: {
            line: 1116,
            column: 63
          }
        }, {
          start: {
            line: 1116,
            column: 67
          },
          end: {
            line: 1116,
            column: 78
          }
        }, {
          start: {
            line: 1116,
            column: 83
          },
          end: {
            line: 1116,
            column: 95
          }
        }],
        line: 1116
      },
      "72": {
        loc: {
          start: {
            line: 1121,
            column: 16
          },
          end: {
            line: 1128,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1121,
            column: 16
          },
          end: {
            line: 1128,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1121
      },
      "73": {
        loc: {
          start: {
            line: 1132,
            column: 12
          },
          end: {
            line: 1149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1132,
            column: 12
          },
          end: {
            line: 1149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1132
      },
      "74": {
        loc: {
          start: {
            line: 1132,
            column: 16
          },
          end: {
            line: 1132,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1132,
            column: 16
          },
          end: {
            line: 1132,
            column: 40
          }
        }, {
          start: {
            line: 1132,
            column: 44
          },
          end: {
            line: 1132,
            column: 71
          }
        }],
        line: 1132
      },
      "75": {
        loc: {
          start: {
            line: 1140,
            column: 20
          },
          end: {
            line: 1147,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1140,
            column: 20
          },
          end: {
            line: 1147,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1140
      },
      "76": {
        loc: {
          start: {
            line: 1151,
            column: 19
          },
          end: {
            line: 1151,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1151,
            column: 40
          },
          end: {
            line: 1151,
            column: 47
          }
        }, {
          start: {
            line: 1151,
            column: 50
          },
          end: {
            line: 1151,
            column: 54
          }
        }],
        line: 1151
      },
      "77": {
        loc: {
          start: {
            line: 1166,
            column: 8
          },
          end: {
            line: 1168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1166,
            column: 8
          },
          end: {
            line: 1168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1166
      },
      "78": {
        loc: {
          start: {
            line: 1188,
            column: 16
          },
          end: {
            line: 1204,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1188,
            column: 16
          },
          end: {
            line: 1204,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1188
      },
      "79": {
        loc: {
          start: {
            line: 1192,
            column: 20
          },
          end: {
            line: 1201,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1192,
            column: 20
          },
          end: {
            line: 1201,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1192
      },
      "80": {
        loc: {
          start: {
            line: 1192,
            column: 24
          },
          end: {
            line: 1192,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1192,
            column: 24
          },
          end: {
            line: 1192,
            column: 31
          }
        }, {
          start: {
            line: 1192,
            column: 35
          },
          end: {
            line: 1192,
            column: 53
          }
        }],
        line: 1192
      },
      "81": {
        loc: {
          start: {
            line: 1216,
            column: 8
          },
          end: {
            line: 1222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1216,
            column: 8
          },
          end: {
            line: 1222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1216
      },
      "82": {
        loc: {
          start: {
            line: 1216,
            column: 12
          },
          end: {
            line: 1216,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1216,
            column: 12
          },
          end: {
            line: 1216,
            column: 43
          }
        }, {
          start: {
            line: 1216,
            column: 47
          },
          end: {
            line: 1216,
            column: 87
          }
        }],
        line: 1216
      },
      "83": {
        loc: {
          start: {
            line: 1219,
            column: 12
          },
          end: {
            line: 1221,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1219,
            column: 12
          },
          end: {
            line: 1221,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1219
      },
      "84": {
        loc: {
          start: {
            line: 1260,
            column: 26
          },
          end: {
            line: 1260,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1260,
            column: 36
          },
          end: {
            line: 1260,
            column: 38
          }
        }],
        line: 1260
      },
      "85": {
        loc: {
          start: {
            line: 1261,
            column: 4
          },
          end: {
            line: 1263,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1261,
            column: 4
          },
          end: {
            line: 1263,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1261
      },
      "86": {
        loc: {
          start: {
            line: 1271,
            column: 4
          },
          end: {
            line: 1275,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1271,
            column: 4
          },
          end: {
            line: 1275,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1271
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0, 0, 0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0, 0, 0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0],
      "85": [0, 0],
      "86": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f0881cd96e52782578b73a5ab11b3e6bcee4bbc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b35kfj846 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b35kfj846();
/**
 * Node Modules File Integrity Monitor
 * 
 * This module provides comprehensive monitoring of node_modules file integrity
 * to detect corruption attempts during test runs. It creates checksums before
 * test runs and validates them afterward to ensure no files were contaminated.
 * 
 * Features:
 * - Pre/post test integrity checking
 * - Checksum-based corruption detection
 * - Automatic backup and restoration
 * - Detailed corruption reporting
 * - Integration with test lifecycle
 */

const fs =
/* istanbul ignore next */
(cov_b35kfj846().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_b35kfj846().s[1]++, require('path'));
const crypto =
/* istanbul ignore next */
(cov_b35kfj846().s[2]++, require('crypto'));
class NodeModulesMonitor {
  constructor(options =
  /* istanbul ignore next */
  (cov_b35kfj846().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_b35kfj846().f[0]++;
    cov_b35kfj846().s[3]++;
    this.projectRoot = path.resolve(
    /* istanbul ignore next */
    (cov_b35kfj846().b[1][0]++, options.projectRoot) ||
    /* istanbul ignore next */
    (cov_b35kfj846().b[1][1]++, process.cwd()));
    /* istanbul ignore next */
    cov_b35kfj846().s[4]++;
    this.nodeModulesPath = path.join(this.projectRoot, 'node_modules');
    /* istanbul ignore next */
    cov_b35kfj846().s[5]++;
    this.backupDir = path.join(this.projectRoot, '.node-modules-backup');
    /* istanbul ignore next */
    cov_b35kfj846().s[6]++;
    this.checksumFile = path.join(this.projectRoot, '.node-modules-checksums.json');
    /* istanbul ignore next */
    cov_b35kfj846().s[7]++;
    this.logFile = path.join(this.projectRoot, 'development/node-modules-monitor.log');

    // Critical files to monitor closely
    /* istanbul ignore next */
    cov_b35kfj846().s[8]++;
    this.criticalFiles = ['exit/lib/exit.js', 'jest-worker/build/index.js', 'jest/package.json', 'exit/package.json'];

    // Configuration
    /* istanbul ignore next */
    cov_b35kfj846().s[9]++;
    this.config = {
      enableBackup: options.enableBackup !== false,
      enableRestore: options.enableRestore !== false,
      enableDetailed: options.enableDetailed !== false,
      maxBackups:
      /* istanbul ignore next */
      (cov_b35kfj846().b[2][0]++, options.maxBackups) ||
      /* istanbul ignore next */
      (cov_b35kfj846().b[2][1]++, 3),
      checksumAlgorithm:
      /* istanbul ignore next */
      (cov_b35kfj846().b[3][0]++, options.checksumAlgorithm) ||
      /* istanbul ignore next */
      (cov_b35kfj846().b[3][1]++, 'sha256'),
      ...options.config
    };

    // Runtime state
    /* istanbul ignore next */
    cov_b35kfj846().s[10]++;
    this.preTestChecksums = new Map();
    /* istanbul ignore next */
    cov_b35kfj846().s[11]++;
    this.violations = [];
    /* istanbul ignore next */
    cov_b35kfj846().s[12]++;
    this.monitoringActive = false;
    /* istanbul ignore next */
    cov_b35kfj846().s[13]++;
    this.realTimeWatchers = new Map();
    /* istanbul ignore next */
    cov_b35kfj846().s[14]++;
    this.threatLevel = 'LOW';

    // Enhanced protection features
    /* istanbul ignore next */
    cov_b35kfj846().s[15]++;
    this.protectionFeatures = {
      realTimeWatch: options.realTimeWatch !== false,
      autoRestore: options.autoRestore !== false,
      threatEscalation: options.threatEscalation !== false,
      quarantineMode: options.quarantineMode !== false,
      deepContentAnalysis: options.deepContentAnalysis !== false,
      proactiveScanning: options.proactiveScanning !== false,
      emergencyLockdown: options.emergencyLockdown !== false
    };
    /* istanbul ignore next */
    cov_b35kfj846().s[16]++;
    this.log('NodeModulesMonitor initialized', {
      projectRoot: this.projectRoot,
      features: this.protectionFeatures
    });
  }

  /**
   * Start monitoring before test run
   * Creates checksums and backups of critical files
   */
  async startMonitoring() {
    /* istanbul ignore next */
    cov_b35kfj846().f[1]++;
    cov_b35kfj846().s[17]++;
    this.log('Starting node_modules integrity monitoring');
    /* istanbul ignore next */
    cov_b35kfj846().s[18]++;
    this.monitoringActive = true;
    /* istanbul ignore next */
    cov_b35kfj846().s[19]++;
    this.violations = [];
    /* istanbul ignore next */
    cov_b35kfj846().s[20]++;
    try {
      /* istanbul ignore next */
      cov_b35kfj846().s[21]++;
      // Create backup directory if needed
      if (this.config.enableBackup) {
        /* istanbul ignore next */
        cov_b35kfj846().b[4][0]++;
        cov_b35kfj846().s[22]++;
        await this.ensureBackupDirectory();
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[4][1]++;
      }

      // Generate checksums for critical files
      cov_b35kfj846().s[23]++;
      await this.generateChecksums();

      // Create backups of critical files
      /* istanbul ignore next */
      cov_b35kfj846().s[24]++;
      if (this.config.enableBackup) {
        /* istanbul ignore next */
        cov_b35kfj846().b[5][0]++;
        cov_b35kfj846().s[25]++;
        await this.createBackups();
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[5][1]++;
      }

      // Start real-time watching if enabled
      cov_b35kfj846().s[26]++;
      if (this.protectionFeatures.realTimeWatch) {
        /* istanbul ignore next */
        cov_b35kfj846().b[6][0]++;
        cov_b35kfj846().s[27]++;
        await this.startRealTimeWatching();
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[6][1]++;
      }
      cov_b35kfj846().s[28]++;
      this.log('Node_modules monitoring started successfully', {
        filesMonitored: this.preTestChecksums.size,
        backupsCreated: this.config.enableBackup,
        realTimeWatching: this.protectionFeatures.realTimeWatch
      });
      /* istanbul ignore next */
      cov_b35kfj846().s[29]++;
      return {
        success: true,
        filesMonitored: this.preTestChecksums.size,
        timestamp: new Date().toISOString()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[30]++;
      this.log('Failed to start monitoring', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_b35kfj846().s[31]++;
      this.monitoringActive = false;
      /* istanbul ignore next */
      cov_b35kfj846().s[32]++;
      throw new Error(`Failed to start node_modules monitoring: ${error.message}`);
    }
  }

  /**
   * Check integrity after test run
   * Validates checksums and detects any corruption
   */
  async checkIntegrity() {
    /* istanbul ignore next */
    cov_b35kfj846().f[2]++;
    cov_b35kfj846().s[33]++;
    if (!this.monitoringActive) {
      /* istanbul ignore next */
      cov_b35kfj846().b[7][0]++;
      cov_b35kfj846().s[34]++;
      throw new Error('Monitoring not active - call startMonitoring() first');
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[7][1]++;
    }
    cov_b35kfj846().s[35]++;
    this.log('Checking node_modules integrity');
    /* istanbul ignore next */
    cov_b35kfj846().s[36]++;
    try {
      const violations =
      /* istanbul ignore next */
      (cov_b35kfj846().s[37]++, []);
      const currentChecksums =
      /* istanbul ignore next */
      (cov_b35kfj846().s[38]++, new Map());

      // Check each monitored file
      /* istanbul ignore next */
      cov_b35kfj846().s[39]++;
      for (const [filePath, originalChecksum] of this.preTestChecksums) {
        const currentChecksum =
        /* istanbul ignore next */
        (cov_b35kfj846().s[40]++, await this.calculateFileChecksum(filePath));
        /* istanbul ignore next */
        cov_b35kfj846().s[41]++;
        currentChecksums.set(filePath, currentChecksum);
        /* istanbul ignore next */
        cov_b35kfj846().s[42]++;
        if (currentChecksum !== originalChecksum) {
          /* istanbul ignore next */
          cov_b35kfj846().b[8][0]++;
          const violation =
          /* istanbul ignore next */
          (cov_b35kfj846().s[43]++, {
            file: filePath,
            type: 'CHECKSUM_MISMATCH',
            originalChecksum,
            currentChecksum,
            timestamp: new Date().toISOString()
          });
          /* istanbul ignore next */
          cov_b35kfj846().s[44]++;
          violations.push(violation);
          /* istanbul ignore next */
          cov_b35kfj846().s[45]++;
          this.log('Integrity violation detected', violation, 'error');
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[8][1]++;
        }
      }

      // Check for new files that shouldn't exist
      const newFiles =
      /* istanbul ignore next */
      (cov_b35kfj846().s[46]++, await this.detectUnexpectedFiles());
      /* istanbul ignore next */
      cov_b35kfj846().s[47]++;
      newFiles.forEach(file => {
        /* istanbul ignore next */
        cov_b35kfj846().f[3]++;
        const violation =
        /* istanbul ignore next */
        (cov_b35kfj846().s[48]++, {
          file: file,
          type: 'UNEXPECTED_FILE',
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_b35kfj846().s[49]++;
        violations.push(violation);
        /* istanbul ignore next */
        cov_b35kfj846().s[50]++;
        this.log('Unexpected file detected', violation, 'warn');
      });
      /* istanbul ignore next */
      cov_b35kfj846().s[51]++;
      this.violations = violations;
      const result =
      /* istanbul ignore next */
      (cov_b35kfj846().s[52]++, {
        success: violations.length === 0,
        violations,
        filesChecked: this.preTestChecksums.size,
        unexpectedFiles: newFiles.length,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_b35kfj846().s[53]++;
      if (violations.length > 0) {
        /* istanbul ignore next */
        cov_b35kfj846().b[9][0]++;
        cov_b35kfj846().s[54]++;
        this.log('Integrity check FAILED', {
          violationCount: violations.length,
          types: [...new Set(violations.map(v => {
            /* istanbul ignore next */
            cov_b35kfj846().f[4]++;
            cov_b35kfj846().s[55]++;
            return v.type;
          }))]
        }, 'error');
      } else {
        /* istanbul ignore next */
        cov_b35kfj846().b[9][1]++;
        cov_b35kfj846().s[56]++;
        this.log('Integrity check PASSED', {
          filesChecked: this.preTestChecksums.size
        });
      }
      /* istanbul ignore next */
      cov_b35kfj846().s[57]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[58]++;
      this.log('Integrity check failed', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_b35kfj846().s[59]++;
      throw new Error(`Integrity check failed: ${error.message}`);
    }
  }

  /**
   * Restore corrupted files from backups
   */
  async restoreCorruptedFiles() {
    /* istanbul ignore next */
    cov_b35kfj846().f[5]++;
    cov_b35kfj846().s[60]++;
    if (this.violations.length === 0) {
      /* istanbul ignore next */
      cov_b35kfj846().b[10][0]++;
      cov_b35kfj846().s[61]++;
      this.log('No violations to restore');
      /* istanbul ignore next */
      cov_b35kfj846().s[62]++;
      return {
        restored: 0,
        message: 'No corrupted files found'
      };
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[10][1]++;
    }
    cov_b35kfj846().s[63]++;
    if (!this.config.enableRestore) {
      /* istanbul ignore next */
      cov_b35kfj846().b[11][0]++;
      cov_b35kfj846().s[64]++;
      this.log('Restore disabled in configuration');
      /* istanbul ignore next */
      cov_b35kfj846().s[65]++;
      return {
        restored: 0,
        message: 'Restore disabled'
      };
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[11][1]++;
    }

    // Check if backups are available before attempting restoration
    const availableBackups =
    /* istanbul ignore next */
    (cov_b35kfj846().s[66]++, await this.getAvailableBackups());
    /* istanbul ignore next */
    cov_b35kfj846().s[67]++;
    if (availableBackups.length === 0) {
      /* istanbul ignore next */
      cov_b35kfj846().b[12][0]++;
      cov_b35kfj846().s[68]++;
      this.log('No backups available for restoration', {}, 'error');
      /* istanbul ignore next */
      cov_b35kfj846().s[69]++;
      throw new Error('No backups available');
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[12][1]++;
    }
    cov_b35kfj846().s[70]++;
    this.log('Starting file restoration');
    let restoredCount =
    /* istanbul ignore next */
    (cov_b35kfj846().s[71]++, 0);
    const restoredFiles =
    /* istanbul ignore next */
    (cov_b35kfj846().s[72]++, []);
    /* istanbul ignore next */
    cov_b35kfj846().s[73]++;
    for (const violation of this.violations) {
      /* istanbul ignore next */
      cov_b35kfj846().s[74]++;
      if (violation.type === 'CHECKSUM_MISMATCH') {
        /* istanbul ignore next */
        cov_b35kfj846().b[13][0]++;
        cov_b35kfj846().s[75]++;
        try {
          /* istanbul ignore next */
          cov_b35kfj846().s[76]++;
          await this.restoreFile(violation.file);
          /* istanbul ignore next */
          cov_b35kfj846().s[77]++;
          restoredFiles.push(violation.file);
          /* istanbul ignore next */
          cov_b35kfj846().s[78]++;
          restoredCount++;
          /* istanbul ignore next */
          cov_b35kfj846().s[79]++;
          this.log('File restored', {
            file: violation.file
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_b35kfj846().s[80]++;
          this.log('Failed to restore file', {
            file: violation.file,
            error: error.message
          }, 'error');
        }
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[13][1]++;
      }
    }
    /* istanbul ignore next */
    cov_b35kfj846().s[81]++;
    this.log('File restoration completed', {
      restoredCount,
      totalViolations: this.violations.length
    });
    /* istanbul ignore next */
    cov_b35kfj846().s[82]++;
    return {
      restored: restoredCount,
      files: restoredFiles,
      message: `Restored ${restoredCount} corrupted files`
    };
  }

  /**
   * Generate detailed integrity report
   */
  generateReport() {
    /* istanbul ignore next */
    cov_b35kfj846().f[6]++;
    const report =
    /* istanbul ignore next */
    (cov_b35kfj846().s[83]++, {
      timestamp: new Date().toISOString(),
      monitoringActive: this.monitoringActive,
      filesMonitored: this.preTestChecksums.size,
      violations: this.violations,
      summary: {
        totalViolations: this.violations.length,
        corruptedFiles: this.violations.filter(v => {
          /* istanbul ignore next */
          cov_b35kfj846().f[7]++;
          cov_b35kfj846().s[84]++;
          return v.type === 'CHECKSUM_MISMATCH';
        }).length,
        unexpectedFiles: this.violations.filter(v => {
          /* istanbul ignore next */
          cov_b35kfj846().f[8]++;
          cov_b35kfj846().s[85]++;
          return v.type === 'UNEXPECTED_FILE';
        }).length,
        integrityStatus: this.violations.length === 0 ?
        /* istanbul ignore next */
        (cov_b35kfj846().b[14][0]++, 'CLEAN') :
        /* istanbul ignore next */
        (cov_b35kfj846().b[14][1]++, 'COMPROMISED')
      },
      criticalFiles: this.criticalFiles.map(file => {
        /* istanbul ignore next */
        cov_b35kfj846().f[9]++;
        const fullPath =
        /* istanbul ignore next */
        (cov_b35kfj846().s[86]++, path.join(this.nodeModulesPath, file));
        const violation =
        /* istanbul ignore next */
        (cov_b35kfj846().s[87]++, this.violations.find(v => {
          /* istanbul ignore next */
          cov_b35kfj846().f[10]++;
          cov_b35kfj846().s[88]++;
          return v.file === fullPath;
        }));
        /* istanbul ignore next */
        cov_b35kfj846().s[89]++;
        return {
          file,
          status: violation ?
          /* istanbul ignore next */
          (cov_b35kfj846().b[15][0]++, 'COMPROMISED') :
          /* istanbul ignore next */
          (cov_b35kfj846().b[15][1]++, 'CLEAN'),
          violation:
          /* istanbul ignore next */
          (cov_b35kfj846().b[16][0]++, violation) ||
          /* istanbul ignore next */
          (cov_b35kfj846().b[16][1]++, null)
        };
      })
    });
    /* istanbul ignore next */
    cov_b35kfj846().s[90]++;
    return report;
  }

  /**
   * Stop monitoring and cleanup
   */
  async stopMonitoring() {
    /* istanbul ignore next */
    cov_b35kfj846().f[11]++;
    cov_b35kfj846().s[91]++;
    this.log('Stopping node_modules monitoring');

    // Stop real-time watching
    /* istanbul ignore next */
    cov_b35kfj846().s[92]++;
    if (this.protectionFeatures.realTimeWatch) {
      /* istanbul ignore next */
      cov_b35kfj846().b[17][0]++;
      cov_b35kfj846().s[93]++;
      this.stopRealTimeWatching();
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[17][1]++;
    }

    // Save final checksums for future reference
    cov_b35kfj846().s[94]++;
    if (this.preTestChecksums.size > 0) {
      /* istanbul ignore next */
      cov_b35kfj846().b[18][0]++;
      cov_b35kfj846().s[95]++;
      await this.saveChecksums();
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[18][1]++;
    }
    cov_b35kfj846().s[96]++;
    this.monitoringActive = false;
    /* istanbul ignore next */
    cov_b35kfj846().s[97]++;
    this.log('Node_modules monitoring stopped', {
      finalThreatLevel: this.threatLevel,
      totalViolations: this.violations.length
    });
    /* istanbul ignore next */
    cov_b35kfj846().s[98]++;
    return {
      success: true,
      finalViolations: this.violations.length,
      finalThreatLevel: this.threatLevel,
      timestamp: new Date().toISOString()
    };
  }

  // ========================================================================
  // PRIVATE METHODS
  // ========================================================================

  /**
   * Generate checksums for all critical files
   */
  async generateChecksums() {
    /* istanbul ignore next */
    cov_b35kfj846().f[12]++;
    cov_b35kfj846().s[99]++;
    this.preTestChecksums.clear();
    /* istanbul ignore next */
    cov_b35kfj846().s[100]++;
    for (const file of this.criticalFiles) {
      const fullPath =
      /* istanbul ignore next */
      (cov_b35kfj846().s[101]++, path.join(this.nodeModulesPath, file));
      /* istanbul ignore next */
      cov_b35kfj846().s[102]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_b35kfj846().b[19][0]++;
        const checksum =
        /* istanbul ignore next */
        (cov_b35kfj846().s[103]++, await this.calculateFileChecksum(fullPath));
        /* istanbul ignore next */
        cov_b35kfj846().s[104]++;
        this.preTestChecksums.set(fullPath, checksum);
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[19][1]++;
      }
    }

    // If detailed monitoring enabled, check all JS files in critical packages
    /* istanbul ignore next */
    cov_b35kfj846().s[105]++;
    if (this.config.enableDetailed) {
      /* istanbul ignore next */
      cov_b35kfj846().b[20][0]++;
      const detailedPaths =
      /* istanbul ignore next */
      (cov_b35kfj846().s[106]++, ['exit', 'jest-worker', 'jest']);
      /* istanbul ignore next */
      cov_b35kfj846().s[107]++;
      for (const packagePath of detailedPaths) {
        const fullPackagePath =
        /* istanbul ignore next */
        (cov_b35kfj846().s[108]++, path.join(this.nodeModulesPath, packagePath));
        /* istanbul ignore next */
        cov_b35kfj846().s[109]++;
        if (fs.existsSync(fullPackagePath)) {
          /* istanbul ignore next */
          cov_b35kfj846().b[21][0]++;
          cov_b35kfj846().s[110]++;
          await this.addPackageFiles(fullPackagePath);
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[21][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[20][1]++;
    }
  }

  /**
   * Add all JS files from a package to monitoring
   */
  async addPackageFiles(packagePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[13]++;
    cov_b35kfj846().s[111]++;
    try {
      const files =
      /* istanbul ignore next */
      (cov_b35kfj846().s[112]++, this.getAllFilesRecursive(packagePath, ['.js', '.json']));
      /* istanbul ignore next */
      cov_b35kfj846().s[113]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_b35kfj846().s[114]++;
        // Skip large files and test files
        if (this.shouldSkipFile(file)) {
          /* istanbul ignore next */
          cov_b35kfj846().b[22][0]++;
          cov_b35kfj846().s[115]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[22][1]++;
        }
        const checksum =
        /* istanbul ignore next */
        (cov_b35kfj846().s[116]++, await this.calculateFileChecksum(file));
        /* istanbul ignore next */
        cov_b35kfj846().s[117]++;
        this.preTestChecksums.set(file, checksum);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[118]++;
      this.log('Failed to add package files', {
        package: packagePath,
        error: error.message
      }, 'warn');
    }
  }

  /**
   * Calculate checksum for a file with proper resource cleanup
   */
  async calculateFileChecksum(filePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[14]++;
    cov_b35kfj846().s[119]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_b35kfj846().f[15]++;
      let stream =
      /* istanbul ignore next */
      (cov_b35kfj846().s[120]++, null);
      let hash =
      /* istanbul ignore next */
      (cov_b35kfj846().s[121]++, null);
      /* istanbul ignore next */
      cov_b35kfj846().s[122]++;
      const cleanup = () => {
        /* istanbul ignore next */
        cov_b35kfj846().f[16]++;
        cov_b35kfj846().s[123]++;
        if (stream) {
          /* istanbul ignore next */
          cov_b35kfj846().b[23][0]++;
          cov_b35kfj846().s[124]++;
          try {
            /* istanbul ignore next */
            cov_b35kfj846().s[125]++;
            stream.destroy();
          } catch (cleanupError) {
            /* istanbul ignore next */
            cov_b35kfj846().s[126]++;
            // Silent cleanup, but prevent empty catch
            void cleanupError;
          }
          /* istanbul ignore next */
          cov_b35kfj846().s[127]++;
          stream = null;
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[23][1]++;
        }
      };
      /* istanbul ignore next */
      cov_b35kfj846().s[128]++;
      try {
        /* istanbul ignore next */
        cov_b35kfj846().s[129]++;
        stream = fs.createReadStream(filePath);
        /* istanbul ignore next */
        cov_b35kfj846().s[130]++;
        hash = crypto.createHash(this.config.checksumAlgorithm);
        /* istanbul ignore next */
        cov_b35kfj846().s[131]++;
        stream.on('error', error => {
          /* istanbul ignore next */
          cov_b35kfj846().f[17]++;
          cov_b35kfj846().s[132]++;
          cleanup();
          /* istanbul ignore next */
          cov_b35kfj846().s[133]++;
          reject(new Error(`Failed to read file ${filePath}: ${error.message}`));
        });
        /* istanbul ignore next */
        cov_b35kfj846().s[134]++;
        stream.on('data', chunk => {
          /* istanbul ignore next */
          cov_b35kfj846().f[18]++;
          cov_b35kfj846().s[135]++;
          hash.update(chunk);
        });
        /* istanbul ignore next */
        cov_b35kfj846().s[136]++;
        stream.on('end', () => {
          /* istanbul ignore next */
          cov_b35kfj846().f[19]++;
          cov_b35kfj846().s[137]++;
          cleanup();
          /* istanbul ignore next */
          cov_b35kfj846().s[138]++;
          resolve(hash.digest('hex'));
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_b35kfj846().s[139]++;
        cleanup();
        /* istanbul ignore next */
        cov_b35kfj846().s[140]++;
        reject(new Error(`Failed to calculate checksum for ${filePath}: ${error.message}`));
      }
    });
  }

  /**
   * Create backups of critical files
   */
  async createBackups() {
    /* istanbul ignore next */
    cov_b35kfj846().f[20]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_b35kfj846().s[141]++, new Date().toISOString().replace(/:/g, '-'));
    const backupPath =
    /* istanbul ignore next */
    (cov_b35kfj846().s[142]++, path.join(this.backupDir, timestamp));
    /* istanbul ignore next */
    cov_b35kfj846().s[143]++;
    await fs.promises.mkdir(backupPath, {
      recursive: true
    });
    let backedUpCount =
    /* istanbul ignore next */
    (cov_b35kfj846().s[144]++, 0);
    /* istanbul ignore next */
    cov_b35kfj846().s[145]++;
    for (const file of this.criticalFiles) {
      const sourcePath =
      /* istanbul ignore next */
      (cov_b35kfj846().s[146]++, path.join(this.nodeModulesPath, file));
      const backupFilePath =
      /* istanbul ignore next */
      (cov_b35kfj846().s[147]++, path.join(backupPath, file));
      /* istanbul ignore next */
      cov_b35kfj846().s[148]++;
      if (fs.existsSync(sourcePath)) {
        /* istanbul ignore next */
        cov_b35kfj846().b[24][0]++;
        cov_b35kfj846().s[149]++;
        try {
          /* istanbul ignore next */
          cov_b35kfj846().s[150]++;
          await fs.promises.mkdir(path.dirname(backupFilePath), {
            recursive: true
          });
          /* istanbul ignore next */
          cov_b35kfj846().s[151]++;
          await fs.promises.copyFile(sourcePath, backupFilePath);
          /* istanbul ignore next */
          cov_b35kfj846().s[152]++;
          backedUpCount++;
        } catch (error) {
          /* istanbul ignore next */
          cov_b35kfj846().s[153]++;
          this.log('Failed to backup file', {
            file,
            error: error.message
          }, 'warn');
        }
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[24][1]++;
      }
    }

    // Cleanup old backups
    /* istanbul ignore next */
    cov_b35kfj846().s[154]++;
    await this.cleanupOldBackups();
    /* istanbul ignore next */
    cov_b35kfj846().s[155]++;
    this.log('Backups created', {
      backupPath,
      filesBackedUp: backedUpCount
    });
  }

  /**
   * Restore a file from the most recent backup
   */
  async restoreFile(filePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[21]++;
    const backups =
    /* istanbul ignore next */
    (cov_b35kfj846().s[156]++, await this.getAvailableBackups());
    /* istanbul ignore next */
    cov_b35kfj846().s[157]++;
    if (backups.length === 0) {
      /* istanbul ignore next */
      cov_b35kfj846().b[25][0]++;
      cov_b35kfj846().s[158]++;
      throw new Error('No backups available for restoration');
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[25][1]++;
    }
    const latestBackup =
    /* istanbul ignore next */
    (cov_b35kfj846().s[159]++, backups[0]); // Sorted by date, most recent first
    const relativePath =
    /* istanbul ignore next */
    (cov_b35kfj846().s[160]++, path.relative(this.nodeModulesPath, filePath));
    const backupFilePath =
    /* istanbul ignore next */
    (cov_b35kfj846().s[161]++, path.join(this.backupDir, latestBackup, relativePath));
    /* istanbul ignore next */
    cov_b35kfj846().s[162]++;
    if (!fs.existsSync(backupFilePath)) {
      /* istanbul ignore next */
      cov_b35kfj846().b[26][0]++;
      cov_b35kfj846().s[163]++;
      throw new Error(`Backup not found: ${backupFilePath}`);
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[26][1]++;
    }

    // Restore the file
    cov_b35kfj846().s[164]++;
    await fs.promises.copyFile(backupFilePath, filePath);
    /* istanbul ignore next */
    cov_b35kfj846().s[165]++;
    this.log('File restored from backup', {
      file: filePath,
      backup: latestBackup
    });
  }

  /**
   * Detect unexpected files in node_modules
   */
  async detectUnexpectedFiles() {
    /* istanbul ignore next */
    cov_b35kfj846().f[22]++;
    const unexpectedFiles =
    /* istanbul ignore next */
    (cov_b35kfj846().s[166]++, []);

    // Check for JSON files in critical packages that shouldn't be there
    const suspiciousPatterns =
    /* istanbul ignore next */
    (cov_b35kfj846().s[167]++, [/node_modules\/exit\/.*\.json$/, /node_modules\/jest-worker\/.*\.json$/]);
    /* istanbul ignore next */
    cov_b35kfj846().s[168]++;
    for (const pattern of suspiciousPatterns) {
      /* istanbul ignore next */
      cov_b35kfj846().s[169]++;
      try {
        const files =
        /* istanbul ignore next */
        (cov_b35kfj846().s[170]++, this.getAllFilesRecursive(this.nodeModulesPath));
        const matches =
        /* istanbul ignore next */
        (cov_b35kfj846().s[171]++, files.filter(file => {
          /* istanbul ignore next */
          cov_b35kfj846().f[23]++;
          cov_b35kfj846().s[172]++;
          return pattern.test(file);
        }));
        /* istanbul ignore next */
        cov_b35kfj846().s[173]++;
        for (const match of matches) {
          /* istanbul ignore next */
          cov_b35kfj846().s[174]++;
          // Check if it's a legitimate file (package.json, etc.)
          if (!this.isLegitimateFile(match)) {
            /* istanbul ignore next */
            cov_b35kfj846().b[27][0]++;
            cov_b35kfj846().s[175]++;
            unexpectedFiles.push(match);
          } else
          /* istanbul ignore next */
          {
            cov_b35kfj846().b[27][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_b35kfj846().s[176]++;
        this.log('Error detecting unexpected files', {
          pattern: pattern.toString(),
          error: error.message
        }, 'warn');
      }
    }
    /* istanbul ignore next */
    cov_b35kfj846().s[177]++;
    return unexpectedFiles;
  }

  /**
   * Check if a file is legitimate in node_modules
   */
  isLegitimateFile(filePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[24]++;
    const basename =
    /* istanbul ignore next */
    (cov_b35kfj846().s[178]++, path.basename(filePath));
    const legitimateFiles =
    /* istanbul ignore next */
    (cov_b35kfj846().s[179]++, ['package.json', 'package-lock.json', 'README.json', 'tsconfig.json']);
    /* istanbul ignore next */
    cov_b35kfj846().s[180]++;
    return legitimateFiles.includes(basename);
  }

  /**
   * Get all files recursively from a directory
   */
  getAllFilesRecursive(dir, extensions =
  /* istanbul ignore next */
  (cov_b35kfj846().b[28][0]++, null)) {
    /* istanbul ignore next */
    cov_b35kfj846().f[25]++;
    const files =
    /* istanbul ignore next */
    (cov_b35kfj846().s[181]++, []);
    function traverse(currentDir) {
      /* istanbul ignore next */
      cov_b35kfj846().f[26]++;
      cov_b35kfj846().s[182]++;
      try {
        const items =
        /* istanbul ignore next */
        (cov_b35kfj846().s[183]++, fs.readdirSync(currentDir));
        /* istanbul ignore next */
        cov_b35kfj846().s[184]++;
        for (const item of items) {
          const fullPath =
          /* istanbul ignore next */
          (cov_b35kfj846().s[185]++, path.join(currentDir, item));
          const stat =
          /* istanbul ignore next */
          (cov_b35kfj846().s[186]++, fs.statSync(fullPath));
          /* istanbul ignore next */
          cov_b35kfj846().s[187]++;
          if (stat.isDirectory()) {
            /* istanbul ignore next */
            cov_b35kfj846().b[29][0]++;
            cov_b35kfj846().s[188]++;
            // Skip node_modules subdirectories and common ignore patterns
            if (
            /* istanbul ignore next */
            (cov_b35kfj846().b[31][0]++, !item.startsWith('.')) &&
            /* istanbul ignore next */
            (cov_b35kfj846().b[31][1]++, item !== 'node_modules')) {
              /* istanbul ignore next */
              cov_b35kfj846().b[30][0]++;
              cov_b35kfj846().s[189]++;
              traverse(fullPath);
            } else
            /* istanbul ignore next */
            {
              cov_b35kfj846().b[30][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_b35kfj846().b[29][1]++;
            cov_b35kfj846().s[190]++;
            if (stat.isFile()) {
              /* istanbul ignore next */
              cov_b35kfj846().b[32][0]++;
              cov_b35kfj846().s[191]++;
              if (
              /* istanbul ignore next */
              (cov_b35kfj846().b[34][0]++, !extensions) ||
              /* istanbul ignore next */
              (cov_b35kfj846().b[34][1]++, extensions.includes(path.extname(fullPath)))) {
                /* istanbul ignore next */
                cov_b35kfj846().b[33][0]++;
                cov_b35kfj846().s[192]++;
                files.push(fullPath);
              } else
              /* istanbul ignore next */
              {
                cov_b35kfj846().b[33][1]++;
              }
            } else
            /* istanbul ignore next */
            {
              cov_b35kfj846().b[32][1]++;
            }
          }
        }
      } catch {
        // Silently ignore permission errors
      }
    }
    /* istanbul ignore next */
    cov_b35kfj846().s[193]++;
    traverse(dir);
    /* istanbul ignore next */
    cov_b35kfj846().s[194]++;
    return files;
  }

  /**
   * Check if a file should be skipped during monitoring
   */
  shouldSkipFile(filePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[27]++;
    const stat =
    /* istanbul ignore next */
    (cov_b35kfj846().s[195]++, fs.statSync(filePath));
    const basename =
    /* istanbul ignore next */
    (cov_b35kfj846().s[196]++, path.basename(filePath));

    // Skip large files (> 1MB)
    /* istanbul ignore next */
    cov_b35kfj846().s[197]++;
    if (stat.size > 1024 * 1024) {
      /* istanbul ignore next */
      cov_b35kfj846().b[35][0]++;
      cov_b35kfj846().s[198]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[35][1]++;
    }

    // Skip test files and common ignore patterns
    const skipPatterns =
    /* istanbul ignore next */
    (cov_b35kfj846().s[199]++, [/\.test\./, /\.spec\./, /test/i, /spec/i, /example/i, /demo/i, /\.min\./]);
    /* istanbul ignore next */
    cov_b35kfj846().s[200]++;
    return skipPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_b35kfj846().f[28]++;
      cov_b35kfj846().s[201]++;
      return pattern.test(basename);
    });
  }

  /**
   * Ensure backup directory exists
   */
  async ensureBackupDirectory() {
    /* istanbul ignore next */
    cov_b35kfj846().f[29]++;
    cov_b35kfj846().s[202]++;
    try {
      /* istanbul ignore next */
      cov_b35kfj846().s[203]++;
      await fs.promises.mkdir(this.backupDir, {
        recursive: true
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[204]++;
      throw new Error(`Failed to create backup directory: ${error.message}`);
    }
  }

  /**
   * Get available backups sorted by date (newest first)
   */
  async getAvailableBackups() {
    /* istanbul ignore next */
    cov_b35kfj846().f[30]++;
    cov_b35kfj846().s[205]++;
    try {
      /* istanbul ignore next */
      cov_b35kfj846().s[206]++;
      if (!fs.existsSync(this.backupDir)) {
        /* istanbul ignore next */
        cov_b35kfj846().b[36][0]++;
        cov_b35kfj846().s[207]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[36][1]++;
      }
      const items =
      /* istanbul ignore next */
      (cov_b35kfj846().s[208]++, await fs.promises.readdir(this.backupDir));
      const backups =
      /* istanbul ignore next */
      (cov_b35kfj846().s[209]++, []);
      /* istanbul ignore next */
      cov_b35kfj846().s[210]++;
      for (const item of items) {
        const itemPath =
        /* istanbul ignore next */
        (cov_b35kfj846().s[211]++, path.join(this.backupDir, item));
        const stat =
        /* istanbul ignore next */
        (cov_b35kfj846().s[212]++, await fs.promises.stat(itemPath));
        /* istanbul ignore next */
        cov_b35kfj846().s[213]++;
        if (stat.isDirectory()) {
          /* istanbul ignore next */
          cov_b35kfj846().b[37][0]++;
          cov_b35kfj846().s[214]++;
          backups.push({
            name: item,
            path: itemPath,
            mtime: stat.mtime
          });
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[37][1]++;
        }
      }

      // Sort by modification time, newest first
      /* istanbul ignore next */
      cov_b35kfj846().s[215]++;
      return backups.sort((a, b) => {
        /* istanbul ignore next */
        cov_b35kfj846().f[31]++;
        cov_b35kfj846().s[216]++;
        return b.mtime - a.mtime;
      }).map(backup => {
        /* istanbul ignore next */
        cov_b35kfj846().f[32]++;
        cov_b35kfj846().s[217]++;
        return backup.name;
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[218]++;
      this.log('Failed to get available backups', {
        error: error.message
      }, 'warn');
      /* istanbul ignore next */
      cov_b35kfj846().s[219]++;
      return [];
    }
  }

  /**
   * Cleanup old backups beyond maxBackups limit
   */
  async cleanupOldBackups() {
    /* istanbul ignore next */
    cov_b35kfj846().f[33]++;
    cov_b35kfj846().s[220]++;
    try {
      const backups =
      /* istanbul ignore next */
      (cov_b35kfj846().s[221]++, await this.getAvailableBackups());
      /* istanbul ignore next */
      cov_b35kfj846().s[222]++;
      if (backups.length > this.config.maxBackups) {
        /* istanbul ignore next */
        cov_b35kfj846().b[38][0]++;
        // Keep only maxBackups, delete the rest (oldest first)
        const toDelete =
        /* istanbul ignore next */
        (cov_b35kfj846().s[223]++, backups.slice(this.config.maxBackups));
        /* istanbul ignore next */
        cov_b35kfj846().s[224]++;
        for (const backup of toDelete) {
          const backupPath =
          /* istanbul ignore next */
          (cov_b35kfj846().s[225]++, path.join(this.backupDir, backup));
          /* istanbul ignore next */
          cov_b35kfj846().s[226]++;
          await fs.promises.rm(backupPath, {
            recursive: true,
            force: true
          });
          /* istanbul ignore next */
          cov_b35kfj846().s[227]++;
          this.log('Old backup deleted', {
            backup
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[38][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[228]++;
      this.log('Failed to cleanup old backups', {
        error: error.message
      }, 'warn');
    }
  }

  /**
   * Save checksums to file for future reference
   */
  async saveChecksums() {
    /* istanbul ignore next */
    cov_b35kfj846().f[34]++;
    cov_b35kfj846().s[229]++;
    try {
      const checksumData =
      /* istanbul ignore next */
      (cov_b35kfj846().s[230]++, {
        timestamp: new Date().toISOString(),
        checksums: Object.fromEntries(this.preTestChecksums),
        algorithm: this.config.checksumAlgorithm
      });
      /* istanbul ignore next */
      cov_b35kfj846().s[231]++;
      await fs.promises.writeFile(this.checksumFile, JSON.stringify(checksumData, null, 2));
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[232]++;
      this.log('Failed to save checksums', {
        error: error.message
      }, 'warn');
    }
  }

  /**
   * Log messages with timestamp and optional level
   */
  log(message, data =
  /* istanbul ignore next */
  (cov_b35kfj846().b[39][0]++, {}), level =
  /* istanbul ignore next */
  (cov_b35kfj846().b[40][0]++, 'info')) {
    /* istanbul ignore next */
    cov_b35kfj846().f[35]++;
    const logEntry =
    /* istanbul ignore next */
    (cov_b35kfj846().s[233]++, {
      timestamp: new Date().toISOString(),
      level: level.toUpperCase(),
      message,
      ...data
    });

    // Console output for immediate feedback
    const levelEmoji =
    /* istanbul ignore next */
    (cov_b35kfj846().s[234]++, {
      info: 'ℹ️',
      warn: '⚠️',
      error: '❌'
    });

    // Skip console output in test environment to avoid conflicts
    /* istanbul ignore next */
    cov_b35kfj846().s[235]++;
    if (process.env.NODE_ENV !== 'test') {
      /* istanbul ignore next */
      cov_b35kfj846().b[41][0]++;
      cov_b35kfj846().s[236]++;
      console.log(`${
      /* istanbul ignore next */
      (cov_b35kfj846().b[42][0]++, levelEmoji[level]) ||
      /* istanbul ignore next */
      (cov_b35kfj846().b[42][1]++, 'ℹ️')} [NodeModulesMonitor] ${message}`, Object.keys(data).length > 0 ?
      /* istanbul ignore next */
      (cov_b35kfj846().b[43][0]++, data) :
      /* istanbul ignore next */
      (cov_b35kfj846().b[43][1]++, ''));
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[41][1]++;
    }

    // File logging (async, non-blocking)
    cov_b35kfj846().s[237]++;
    this.writeLogToFile(logEntry).catch(() => {
      /* istanbul ignore next */
      cov_b35kfj846().f[36]++;
    } // Silently ignore log file write errors
    );
  }

  /**
   * Write log entry to file
   */
  async writeLogToFile(logEntry) {
    /* istanbul ignore next */
    cov_b35kfj846().f[37]++;
    cov_b35kfj846().s[238]++;
    try {
      /* istanbul ignore next */
      cov_b35kfj846().s[239]++;
      // Skip file logging in test environment to avoid conflicts
      if (process.env.NODE_ENV === 'test') {
        /* istanbul ignore next */
        cov_b35kfj846().b[44][0]++;
        cov_b35kfj846().s[240]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[44][1]++;
      }

      // Ensure log directory exists
      cov_b35kfj846().s[241]++;
      await fs.promises.mkdir(path.dirname(this.logFile), {
        recursive: true
      });
      const logLine =
      /* istanbul ignore next */
      (cov_b35kfj846().s[242]++, JSON.stringify(logEntry) + '\n');
      /* istanbul ignore next */
      cov_b35kfj846().s[243]++;
      await fs.promises.appendFile(this.logFile, logLine);
    } catch {
      // Silently ignore - logging should not break the monitor
    }
  }

  /**
   * Start real-time file watching for critical files with proper cleanup
   */
  async startRealTimeWatching() {
    /* istanbul ignore next */
    cov_b35kfj846().f[38]++;
    cov_b35kfj846().s[244]++;
    // Skip real-time watching in test environment to prevent Jest worker issues
    if (process.env.NODE_ENV === 'test') {
      /* istanbul ignore next */
      cov_b35kfj846().b[45][0]++;
      cov_b35kfj846().s[245]++;
      this.log('Real-time watching skipped in test environment', {
        reason: 'prevent_jest_async_handles'
      });
      /* istanbul ignore next */
      cov_b35kfj846().s[246]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[45][1]++;
    }
    cov_b35kfj846().s[247]++;
    try {
      /* istanbul ignore next */
      cov_b35kfj846().s[248]++;
      for (const file of this.criticalFiles) {
        const fullPath =
        /* istanbul ignore next */
        (cov_b35kfj846().s[249]++, path.join(this.nodeModulesPath, file));
        /* istanbul ignore next */
        cov_b35kfj846().s[250]++;
        if (fs.existsSync(fullPath)) {
          /* istanbul ignore next */
          cov_b35kfj846().b[46][0]++;
          const watcher =
          /* istanbul ignore next */
          (cov_b35kfj846().s[251]++, fs.watch(fullPath, (eventType, _filename) => {
            /* istanbul ignore next */
            cov_b35kfj846().f[39]++;
            cov_b35kfj846().s[252]++;
            // Wrap the handler to catch errors and prevent resource leaks
            try {
              /* istanbul ignore next */
              cov_b35kfj846().s[253]++;
              this.handleFileChange(fullPath, eventType);
            } catch (error) {
              /* istanbul ignore next */
              cov_b35kfj846().s[254]++;
              this.log('File change handler error', {
                file: fullPath,
                error: error.message
              }, 'error');
            }
          }));

          // Add error handler to watcher to prevent crashes
          /* istanbul ignore next */
          cov_b35kfj846().s[255]++;
          watcher.on('error', error => {
            /* istanbul ignore next */
            cov_b35kfj846().f[40]++;
            cov_b35kfj846().s[256]++;
            this.log('File watcher error', {
              file: fullPath,
              error: error.message
            }, 'error');

            // Remove failed watcher from tracking
            /* istanbul ignore next */
            cov_b35kfj846().s[257]++;
            this.realTimeWatchers.delete(fullPath);
          });
          /* istanbul ignore next */
          cov_b35kfj846().s[258]++;
          this.realTimeWatchers.set(fullPath, watcher);
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[46][1]++;
        }
      }
      /* istanbul ignore next */
      cov_b35kfj846().s[259]++;
      this.log('Real-time watching started', {
        watchedFiles: this.realTimeWatchers.size
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[260]++;
      this.log('Failed to start real-time watching', {
        error: error.message
      }, 'warn');
    }
  }

  /**
   * Handle real-time file changes
   */
  async handleFileChange(filePath, eventType) {
    /* istanbul ignore next */
    cov_b35kfj846().f[41]++;
    cov_b35kfj846().s[261]++;
    if (eventType === 'change') {
      /* istanbul ignore next */
      cov_b35kfj846().b[47][0]++;
      cov_b35kfj846().s[262]++;
      try {
        // Immediate integrity check on file change
        const originalChecksum =
        /* istanbul ignore next */
        (cov_b35kfj846().s[263]++, this.preTestChecksums.get(filePath));
        /* istanbul ignore next */
        cov_b35kfj846().s[264]++;
        if (originalChecksum) {
          /* istanbul ignore next */
          cov_b35kfj846().b[48][0]++;
          const currentChecksum =
          /* istanbul ignore next */
          (cov_b35kfj846().s[265]++, await this.calculateFileChecksum(filePath));
          /* istanbul ignore next */
          cov_b35kfj846().s[266]++;
          if (currentChecksum !== originalChecksum) {
            /* istanbul ignore next */
            cov_b35kfj846().b[49][0]++;
            cov_b35kfj846().s[267]++;
            this.escalateThreatLevel('HIGH');
            /* istanbul ignore next */
            cov_b35kfj846().s[268]++;
            this.log('REAL-TIME VIOLATION DETECTED', {
              file: filePath,
              originalChecksum,
              currentChecksum,
              threatLevel: this.threatLevel
            }, 'error');

            // Auto-restore if enabled
            /* istanbul ignore next */
            cov_b35kfj846().s[269]++;
            if (this.protectionFeatures.autoRestore) {
              /* istanbul ignore next */
              cov_b35kfj846().b[50][0]++;
              cov_b35kfj846().s[270]++;
              await this.autoRestoreFile(filePath);
            } else
            /* istanbul ignore next */
            {
              cov_b35kfj846().b[50][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_b35kfj846().b[49][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[48][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_b35kfj846().s[271]++;
        this.log('Error handling file change', {
          file: filePath,
          error: error.message
        }, 'error');
      }
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[47][1]++;
    }
  }

  /**
   * Escalate threat level based on violations
   */
  escalateThreatLevel(newLevel) {
    /* istanbul ignore next */
    cov_b35kfj846().f[42]++;
    const levels =
    /* istanbul ignore next */
    (cov_b35kfj846().s[272]++, ['LOW', 'MEDIUM', 'HIGH', 'CRITICAL']);
    const currentIndex =
    /* istanbul ignore next */
    (cov_b35kfj846().s[273]++, levels.indexOf(this.threatLevel));
    const newIndex =
    /* istanbul ignore next */
    (cov_b35kfj846().s[274]++, levels.indexOf(newLevel));
    /* istanbul ignore next */
    cov_b35kfj846().s[275]++;
    if (newIndex > currentIndex) {
      /* istanbul ignore next */
      cov_b35kfj846().b[51][0]++;
      cov_b35kfj846().s[276]++;
      this.threatLevel = newLevel;
      /* istanbul ignore next */
      cov_b35kfj846().s[277]++;
      this.log('Threat level escalated', {
        level: this.threatLevel
      }, 'warn');

      // Trigger enhanced protection measures
      /* istanbul ignore next */
      cov_b35kfj846().s[278]++;
      if (
      /* istanbul ignore next */
      (cov_b35kfj846().b[53][0]++, this.threatLevel === 'CRITICAL') &&
      /* istanbul ignore next */
      (cov_b35kfj846().b[53][1]++, this.protectionFeatures.quarantineMode)) {
        /* istanbul ignore next */
        cov_b35kfj846().b[52][0]++;
        cov_b35kfj846().s[279]++;
        this.activateQuarantineMode();
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[52][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[51][1]++;
    }
  }

  /**
   * Auto-restore a corrupted file
   */
  async autoRestoreFile(filePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[43]++;
    cov_b35kfj846().s[280]++;
    try {
      /* istanbul ignore next */
      cov_b35kfj846().s[281]++;
      await this.restoreFile(filePath);
      /* istanbul ignore next */
      cov_b35kfj846().s[282]++;
      this.log('Auto-restored corrupted file', {
        file: filePath
      });

      // Verify restoration
      const originalChecksum =
      /* istanbul ignore next */
      (cov_b35kfj846().s[283]++, this.preTestChecksums.get(filePath));
      const restoredChecksum =
      /* istanbul ignore next */
      (cov_b35kfj846().s[284]++, await this.calculateFileChecksum(filePath));
      /* istanbul ignore next */
      cov_b35kfj846().s[285]++;
      if (restoredChecksum === originalChecksum) {
        /* istanbul ignore next */
        cov_b35kfj846().b[54][0]++;
        cov_b35kfj846().s[286]++;
        this.log('File restoration verified', {
          file: filePath
        });
      } else {
        /* istanbul ignore next */
        cov_b35kfj846().b[54][1]++;
        cov_b35kfj846().s[287]++;
        this.escalateThreatLevel('CRITICAL');
        /* istanbul ignore next */
        cov_b35kfj846().s[288]++;
        this.log('File restoration FAILED verification', {
          file: filePath,
          expected: originalChecksum,
          actual: restoredChecksum
        }, 'error');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[289]++;
      this.escalateThreatLevel('CRITICAL');
      /* istanbul ignore next */
      cov_b35kfj846().s[290]++;
      this.log('Auto-restore failed', {
        file: filePath,
        error: error.message
      }, 'error');
    }
  }

  /**
   * Activate quarantine mode - maximum protection
   */
  activateQuarantineMode() {
    /* istanbul ignore next */
    cov_b35kfj846().f[44]++;
    cov_b35kfj846().s[291]++;
    this.log('QUARANTINE MODE ACTIVATED', {
      threatLevel: this.threatLevel,
      timestamp: new Date().toISOString()
    }, 'error');

    // In test environment, don't trigger process exit to avoid Jest worker crashes
    /* istanbul ignore next */
    cov_b35kfj846().s[292]++;
    if (process.env.NODE_ENV === 'test') {
      /* istanbul ignore next */
      cov_b35kfj846().b[55][0]++;
      cov_b35kfj846().s[293]++;
      this.log('QUARANTINE MODE: Test environment detected, skipping process exit', {
        testMode: true,
        reason: 'prevent_jest_worker_crash'
      }, 'warn');
      /* istanbul ignore next */
      cov_b35kfj846().s[294]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[55][1]++;
    }

    // Stop all test execution if possible (production only)
    // Additional protection: only emit SIGTERM in non-test environments
    cov_b35kfj846().s[295]++;
    if (
    /* istanbul ignore next */
    (cov_b35kfj846().b[57][0]++, typeof process.emit === 'function') &&
    /* istanbul ignore next */
    (cov_b35kfj846().b[57][1]++, process.env.NODE_ENV !== 'test')) {
      /* istanbul ignore next */
      cov_b35kfj846().b[56][0]++;
      cov_b35kfj846().s[296]++;
      process.emit('SIGTERM');
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[56][1]++;
    }
  }

  /**
   * Stop real-time watching
   */
  stopRealTimeWatching() {
    /* istanbul ignore next */
    cov_b35kfj846().f[45]++;
    cov_b35kfj846().s[297]++;
    for (const [filePath, watcher] of this.realTimeWatchers) {
      /* istanbul ignore next */
      cov_b35kfj846().s[298]++;
      try {
        /* istanbul ignore next */
        cov_b35kfj846().s[299]++;
        watcher.close();
      } catch (error) {
        /* istanbul ignore next */
        cov_b35kfj846().s[300]++;
        this.log('Error closing watcher', {
          file: filePath,
          error: error.message
        }, 'warn');
      }
    }
    /* istanbul ignore next */
    cov_b35kfj846().s[301]++;
    this.realTimeWatchers.clear();
    /* istanbul ignore next */
    cov_b35kfj846().s[302]++;
    this.log('Real-time watching stopped');
  }

  /**
   * Enhanced threat reporting for integration with test/setup.js
   */
  reportThreat(threatType, details) {
    /* istanbul ignore next */
    cov_b35kfj846().f[46]++;
    const threat =
    /* istanbul ignore next */
    (cov_b35kfj846().s[303]++, {
      type: threatType,
      details,
      timestamp: new Date().toISOString(),
      threatLevel: this.threatLevel,
      sessionId:
      /* istanbul ignore next */
      (cov_b35kfj846().b[58][0]++, this.sessionId) ||
      /* istanbul ignore next */
      (cov_b35kfj846().b[58][1]++, `session_${Date.now()}`)
    });
    /* istanbul ignore next */
    cov_b35kfj846().s[304]++;
    this.log('THREAT REPORTED', threat, 'error');

    // ENHANCED: Immediate response to real-time threats
    /* istanbul ignore next */
    cov_b35kfj846().s[305]++;
    if (threatType === 'REALTIME_CONTAMINATION_ATTEMPT') {
      /* istanbul ignore next */
      cov_b35kfj846().b[59][0]++;
      cov_b35kfj846().s[306]++;
      this.handleRealTimeThreat(threat);
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[59][1]++;
    }

    // Escalate based on threat type
    cov_b35kfj846().s[307]++;
    switch (threatType) {
      case 'JSON_TO_JS_CONTAMINATION':
        /* istanbul ignore next */
        cov_b35kfj846().b[60][0]++;
      case 'REALTIME_CONTAMINATION_ATTEMPT':
        /* istanbul ignore next */
        cov_b35kfj846().b[60][1]++;
        cov_b35kfj846().s[308]++;
        this.escalateThreatLevel('CRITICAL');
        /* istanbul ignore next */
        cov_b35kfj846().s[309]++;
        break;
      case 'JSON_CONTAMINATION':
        /* istanbul ignore next */
        cov_b35kfj846().b[60][2]++;
        cov_b35kfj846().s[310]++;
        this.escalateThreatLevel('HIGH');
        /* istanbul ignore next */
        cov_b35kfj846().s[311]++;
        break;
      case 'COVERAGE_CONTAMINATION':
        /* istanbul ignore next */
        cov_b35kfj846().b[60][3]++;
        cov_b35kfj846().s[312]++;
        this.escalateThreatLevel('HIGH');
        /* istanbul ignore next */
        cov_b35kfj846().s[313]++;
        break;
      default:
        /* istanbul ignore next */
        cov_b35kfj846().b[60][4]++;
        cov_b35kfj846().s[314]++;
        this.escalateThreatLevel('MEDIUM');
    }

    // ENHANCED: Coverage-specific threat handling
    /* istanbul ignore next */
    cov_b35kfj846().s[315]++;
    if (details.isCoverageMode) {
      /* istanbul ignore next */
      cov_b35kfj846().b[61][0]++;
      cov_b35kfj846().s[316]++;
      this.handleCoverageThreat(threat);
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[61][1]++;
    }
    cov_b35kfj846().s[317]++;
    return threat;
  }

  /**
   * Handle real-time threats with immediate response
   */
  handleRealTimeThreat(threat) {
    /* istanbul ignore next */
    cov_b35kfj846().f[47]++;
    cov_b35kfj846().s[318]++;
    this.log('REAL-TIME THREAT DETECTED', {
      type: threat.type,
      file: threat.details.filePath,
      writeType: threat.details.writeType,
      emergencyProtocol: 'ACTIVATED'
    }, 'error');

    // Immediate file protection
    /* istanbul ignore next */
    cov_b35kfj846().s[319]++;
    if (
    /* istanbul ignore next */
    (cov_b35kfj846().b[63][0]++, threat.details.filePath) &&
    /* istanbul ignore next */
    (cov_b35kfj846().b[63][1]++, this.protectionFeatures.autoRestore)) {
      /* istanbul ignore next */
      cov_b35kfj846().b[62][0]++;
      cov_b35kfj846().s[320]++;
      process.nextTick(async () => {
        /* istanbul ignore next */
        cov_b35kfj846().f[48]++;
        cov_b35kfj846().s[321]++;
        try {
          /* istanbul ignore next */
          cov_b35kfj846().s[322]++;
          await this.emergencyFileProtection(threat.details.filePath);
        } catch (error) {
          /* istanbul ignore next */
          cov_b35kfj846().s[323]++;
          this.log('Emergency file protection failed', {
            file: threat.details.filePath,
            error: error.message
          }, 'error');
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[62][1]++;
    }

    // Signal emergency state
    cov_b35kfj846().s[324]++;
    this.isEmergencyMode = true;
    /* istanbul ignore next */
    cov_b35kfj846().s[325]++;
    process.env.NODE_MODULES_EMERGENCY = 'true';
  }

  /**
   * Handle coverage-specific threats
   */
  handleCoverageThreat(threat) {
    /* istanbul ignore next */
    cov_b35kfj846().f[49]++;
    cov_b35kfj846().s[326]++;
    this.log('COVERAGE THREAT DETECTED', {
      type: threat.type,
      coverageMode: threat.details.isCoverageMode,
      emergencyAction: 'COVERAGE_PROTECTION_ACTIVATED'
    }, 'error');

    // Set coverage emergency flag
    /* istanbul ignore next */
    cov_b35kfj846().s[327]++;
    process.env.COVERAGE_THREAT_DETECTED = 'true';

    // Enhanced coverage protection measures
    /* istanbul ignore next */
    cov_b35kfj846().s[328]++;
    if (this.protectionFeatures.quarantineMode) {
      /* istanbul ignore next */
      cov_b35kfj846().b[64][0]++;
      cov_b35kfj846().s[329]++;
      this.activateCoverageQuarantine();
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[64][1]++;
    }
  }

  /**
   * Emergency file protection for immediate threats
   */
  async emergencyFileProtection(filePath) {
    /* istanbul ignore next */
    cov_b35kfj846().f[50]++;
    cov_b35kfj846().s[330]++;
    this.log('EMERGENCY FILE PROTECTION ACTIVATED', {
      file: filePath
    }, 'error');
    /* istanbul ignore next */
    cov_b35kfj846().s[331]++;
    try {
      // Check if file is in our monitoring list
      const originalChecksum =
      /* istanbul ignore next */
      (cov_b35kfj846().s[332]++, this.preTestChecksums.get(filePath));
      /* istanbul ignore next */
      cov_b35kfj846().s[333]++;
      if (originalChecksum) {
        /* istanbul ignore next */
        cov_b35kfj846().b[65][0]++;
        const currentChecksum =
        /* istanbul ignore next */
        (cov_b35kfj846().s[334]++, await this.calculateFileChecksum(filePath));
        /* istanbul ignore next */
        cov_b35kfj846().s[335]++;
        if (currentChecksum !== originalChecksum) {
          /* istanbul ignore next */
          cov_b35kfj846().b[66][0]++;
          cov_b35kfj846().s[336]++;
          this.log('EMERGENCY RESTORATION REQUIRED', {
            file: filePath,
            checksumMismatch: true
          }, 'error');

          // Immediate restoration
          /* istanbul ignore next */
          cov_b35kfj846().s[337]++;
          await this.autoRestoreFile(filePath);
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[66][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[65][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[338]++;
      this.log('Emergency protection failed', {
        file: filePath,
        error: error.message
      }, 'error');
    }
  }

  /**
   * Activate coverage-specific quarantine mode
   */
  activateCoverageQuarantine() {
    /* istanbul ignore next */
    cov_b35kfj846().f[51]++;
    cov_b35kfj846().s[339]++;
    this.log('COVERAGE QUARANTINE ACTIVATED', {
      timestamp: new Date().toISOString(),
      threatLevel: this.threatLevel
    }, 'error');

    // Signal to Jest/coverage systems
    /* istanbul ignore next */
    cov_b35kfj846().s[340]++;
    process.env.COVERAGE_QUARANTINE_ACTIVE = 'true';

    // Enhanced monitoring for coverage files
    /* istanbul ignore next */
    cov_b35kfj846().s[341]++;
    this.startCoverageFileMonitoring();
  }

  /**
   * Enhanced monitoring specifically for coverage file operations
   */
  startCoverageFileMonitoring() {
    /* istanbul ignore next */
    cov_b35kfj846().f[52]++;
    const coveragePatterns =
    /* istanbul ignore next */
    (cov_b35kfj846().s[342]++, ['coverage/', '.nyc_output/', 'lcov.info', 'coverage-final.json']);
    /* istanbul ignore next */
    cov_b35kfj846().s[343]++;
    this.log('Starting coverage file monitoring', {
      patterns: coveragePatterns,
      enhanced: true
    });

    // This would be implemented with additional file watchers
    // focused on coverage-related paths
    /* istanbul ignore next */
    cov_b35kfj846().s[344]++;
    this.coverageMonitoringActive = true;
  }

  /**
   * ENHANCED: Deep content analysis for advanced threat detection
   */
  async performDeepContentAnalysis(filePath, content) {
    /* istanbul ignore next */
    cov_b35kfj846().f[53]++;
    cov_b35kfj846().s[345]++;
    if (!this.protectionFeatures.deepContentAnalysis) {
      /* istanbul ignore next */
      cov_b35kfj846().b[67][0]++;
      cov_b35kfj846().s[346]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[67][1]++;
    }
    const threats =
    /* istanbul ignore next */
    (cov_b35kfj846().s[347]++, []);
    /* istanbul ignore next */
    cov_b35kfj846().s[348]++;
    try {
      // Analyze file structure for JSON contamination patterns
      const suspiciousPatterns =
      /* istanbul ignore next */
      (cov_b35kfj846().s[349]++, [
      // TODO.json specific patterns
      /"project"\s*:\s*"[^"]*infinite-continue-stop-hook"/, /"current_mode"\s*:\s*"(development|testing|research|refactoring)"/, /"tasks"\s*:\s*\[\s*\{/, /"execution_count"\s*:\s*\d+/,
      // Hook system contamination
      /infinite-continue-stop-hook/, /stop-hook\.js/, /CLAUDE\.md/,
      // Task management contamination
      /"task_\d{13}_[a-z0-9]+"/, /"status"\s*:\s*"(pending|in_progress|completed)"/, /"priority"\s*:\s*"(high|medium|low|critical)"/,
      // Process manipulation patterns
      /process\.env\.[A-Z_]+\s*=\s*["'][^"']*["']/, /global\.[a-zA-Z_]+\s*=\s*\{/,
      // Coverage system contamination
      /"__coverage__"\s*:\s*\{/, /coverage-final\.json/, /"c"\s*:\s*\{\s*"\d+":/]);
      /* istanbul ignore next */
      cov_b35kfj846().s[350]++;
      for (const pattern of suspiciousPatterns) {
        /* istanbul ignore next */
        cov_b35kfj846().s[351]++;
        if (pattern.test(content)) {
          /* istanbul ignore next */
          cov_b35kfj846().b[68][0]++;
          cov_b35kfj846().s[352]++;
          threats.push({
            type: 'PATTERN_MATCH',
            pattern: pattern.toString(),
            severity: 'HIGH',
            file: filePath
          });
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[68][1]++;
        }
      }

      // Analyze for binary-in-text injection
      /* istanbul ignore next */
      cov_b35kfj846().s[353]++;
      if (typeof content === 'string') {
        /* istanbul ignore next */
        cov_b35kfj846().b[69][0]++;
        let binaryCharCount =
        /* istanbul ignore next */
        (cov_b35kfj846().s[354]++, 0);
        /* istanbul ignore next */
        cov_b35kfj846().s[355]++;
        for (let i =
        /* istanbul ignore next */
        (cov_b35kfj846().s[356]++, 0); i < Math.min(content.length, 2048); i++) {
          const code =
          /* istanbul ignore next */
          (cov_b35kfj846().s[357]++, content.charCodeAt(i));
          /* istanbul ignore next */
          cov_b35kfj846().s[358]++;
          if (
          /* istanbul ignore next */
          (cov_b35kfj846().b[71][0]++, code < 32) &&
          /* istanbul ignore next */
          (cov_b35kfj846().b[71][1]++, code !== 9) &&
          /* istanbul ignore next */
          (cov_b35kfj846().b[71][2]++, code !== 10) &&
          /* istanbul ignore next */
          (cov_b35kfj846().b[71][3]++, code !== 13) ||
          /* istanbul ignore next */
          (cov_b35kfj846().b[71][4]++, code === 127)) {
            /* istanbul ignore next */
            cov_b35kfj846().b[70][0]++;
            cov_b35kfj846().s[359]++;
            binaryCharCount++;
          } else
          /* istanbul ignore next */
          {
            cov_b35kfj846().b[70][1]++;
          }
        }
        /* istanbul ignore next */
        cov_b35kfj846().s[360]++;
        if (binaryCharCount > 10) {
          /* istanbul ignore next */
          cov_b35kfj846().b[72][0]++;
          cov_b35kfj846().s[361]++;
          threats.push({
            type: 'BINARY_INJECTION',
            severity: 'CRITICAL',
            file: filePath,
            binaryCharCount
          });
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[72][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[69][1]++;
      }

      // Check for module export contamination
      cov_b35kfj846().s[362]++;
      if (
      /* istanbul ignore next */
      (cov_b35kfj846().b[74][0]++, filePath.endsWith('.js')) &&
      /* istanbul ignore next */
      (cov_b35kfj846().b[74][1]++, typeof content === 'string')) {
        /* istanbul ignore next */
        cov_b35kfj846().b[73][0]++;
        const exportContamination =
        /* istanbul ignore next */
        (cov_b35kfj846().s[363]++, [/module\.exports\s*=\s*\{[^}]*"project"[^}]*\}/, /exports\.[a-zA-Z_]+\s*=\s*\{[^}]*"tasks"[^}]*\}/, /module\.exports\s*=\s*\{[^}]*"current_mode"[^}]*\}/]);
        /* istanbul ignore next */
        cov_b35kfj846().s[364]++;
        for (const pattern of exportContamination) {
          /* istanbul ignore next */
          cov_b35kfj846().s[365]++;
          if (pattern.test(content)) {
            /* istanbul ignore next */
            cov_b35kfj846().b[75][0]++;
            cov_b35kfj846().s[366]++;
            threats.push({
              type: 'MODULE_EXPORT_CONTAMINATION',
              severity: 'CRITICAL',
              file: filePath,
              pattern: pattern.toString()
            });
          } else
          /* istanbul ignore next */
          {
            cov_b35kfj846().b[75][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[73][1]++;
      }
      cov_b35kfj846().s[367]++;
      return threats.length > 0 ?
      /* istanbul ignore next */
      (cov_b35kfj846().b[76][0]++, threats) :
      /* istanbul ignore next */
      (cov_b35kfj846().b[76][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_b35kfj846().s[368]++;
      this.log('Deep content analysis failed', {
        file: filePath,
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_b35kfj846().s[369]++;
      return null;
    }
  }

  /**
   * ENHANCED: Proactive scanning of critical directories
   */
  async performProactiveScan() {
    /* istanbul ignore next */
    cov_b35kfj846().f[54]++;
    cov_b35kfj846().s[370]++;
    if (!this.protectionFeatures.proactiveScanning) {
      /* istanbul ignore next */
      cov_b35kfj846().b[77][0]++;
      cov_b35kfj846().s[371]++;
      return {
        scanned: 0,
        threats: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[77][1]++;
    }
    cov_b35kfj846().s[372]++;
    this.log('Starting proactive security scan');
    const scanResults =
    /* istanbul ignore next */
    (cov_b35kfj846().s[373]++, {
      scanned: 0,
      threats: [],
      criticalThreats: 0
    });
    const criticalPaths =
    /* istanbul ignore next */
    (cov_b35kfj846().s[374]++, [path.join(this.nodeModulesPath, 'exit/lib/exit.js'), path.join(this.nodeModulesPath, 'jest-worker/build/index.js'), path.join(this.nodeModulesPath, 'jest/package.json'), path.join(this.projectRoot, 'package.json'), path.join(this.projectRoot, 'TODO.json')]);
    /* istanbul ignore next */
    cov_b35kfj846().s[375]++;
    for (const scanPath of criticalPaths) {
      /* istanbul ignore next */
      cov_b35kfj846().s[376]++;
      try {
        /* istanbul ignore next */
        cov_b35kfj846().s[377]++;
        if (fs.existsSync(scanPath)) {
          /* istanbul ignore next */
          cov_b35kfj846().b[78][0]++;
          const content =
          /* istanbul ignore next */
          (cov_b35kfj846().s[378]++, fs.readFileSync(scanPath, 'utf8'));
          const threats =
          /* istanbul ignore next */
          (cov_b35kfj846().s[379]++, await this.performDeepContentAnalysis(scanPath, content));
          /* istanbul ignore next */
          cov_b35kfj846().s[380]++;
          if (
          /* istanbul ignore next */
          (cov_b35kfj846().b[80][0]++, threats) &&
          /* istanbul ignore next */
          (cov_b35kfj846().b[80][1]++, threats.length > 0)) {
            /* istanbul ignore next */
            cov_b35kfj846().b[79][0]++;
            cov_b35kfj846().s[381]++;
            scanResults.threats.push(...threats);
            /* istanbul ignore next */
            cov_b35kfj846().s[382]++;
            scanResults.criticalThreats += threats.filter(t => {
              /* istanbul ignore next */
              cov_b35kfj846().f[55]++;
              cov_b35kfj846().s[383]++;
              return t.severity === 'CRITICAL';
            }).length;
            /* istanbul ignore next */
            cov_b35kfj846().s[384]++;
            this.log('Proactive scan detected threats', {
              file: scanPath,
              threatCount: threats.length,
              threats: threats.map(t => {
                /* istanbul ignore next */
                cov_b35kfj846().f[56]++;
                cov_b35kfj846().s[385]++;
                return t.type;
              })
            }, 'error');
          } else
          /* istanbul ignore next */
          {
            cov_b35kfj846().b[79][1]++;
          }
          cov_b35kfj846().s[386]++;
          scanResults.scanned++;
        } else
        /* istanbul ignore next */
        {
          cov_b35kfj846().b[78][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_b35kfj846().s[387]++;
        this.log('Proactive scan error', {
          file: scanPath,
          error: error.message
        }, 'warn');
      }
    }
    /* istanbul ignore next */
    cov_b35kfj846().s[388]++;
    this.log('Proactive scan completed', scanResults);

    // Auto-escalate if critical threats found
    /* istanbul ignore next */
    cov_b35kfj846().s[389]++;
    if (
    /* istanbul ignore next */
    (cov_b35kfj846().b[82][0]++, scanResults.criticalThreats > 0) &&
    /* istanbul ignore next */
    (cov_b35kfj846().b[82][1]++, this.protectionFeatures.threatEscalation)) {
      /* istanbul ignore next */
      cov_b35kfj846().b[81][0]++;
      cov_b35kfj846().s[390]++;
      this.escalateThreatLevel('CRITICAL');
      /* istanbul ignore next */
      cov_b35kfj846().s[391]++;
      if (this.protectionFeatures.emergencyLockdown) {
        /* istanbul ignore next */
        cov_b35kfj846().b[83][0]++;
        cov_b35kfj846().s[392]++;
        await this.activateEmergencyLockdown();
      } else
      /* istanbul ignore next */
      {
        cov_b35kfj846().b[83][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_b35kfj846().b[81][1]++;
    }
    cov_b35kfj846().s[393]++;
    return scanResults;
  }

  /**
   * ENHANCED: Emergency lockdown mode for critical threats
   */
  async activateEmergencyLockdown() {
    /* istanbul ignore next */
    cov_b35kfj846().f[57]++;
    cov_b35kfj846().s[394]++;
    this.log('EMERGENCY LOCKDOWN ACTIVATED', {
      threatLevel: this.threatLevel,
      timestamp: new Date().toISOString()
    }, 'error');

    // Set emergency environment flags
    /* istanbul ignore next */
    cov_b35kfj846().s[395]++;
    process.env.NODE_MODULES_EMERGENCY_LOCKDOWN = 'true';
    /* istanbul ignore next */
    cov_b35kfj846().s[396]++;
    process.env.FILESYSTEM_PROTECTION_EMERGENCY = 'true';

    // Signal to test systems to halt immediately
    /* istanbul ignore next */
    cov_b35kfj846().s[397]++;
    this.isEmergencyLockdown = true;

    // Enhanced file monitoring
    /* istanbul ignore next */
    cov_b35kfj846().s[398]++;
    this.emergencyMonitoringActive = true;
    /* istanbul ignore next */
    cov_b35kfj846().s[399]++;
    return {
      activated: true,
      timestamp: new Date().toISOString(),
      threatLevel: this.threatLevel
    };
  }
}

// Export singleton instance for global access
let globalMonitorInstance =
/* istanbul ignore next */
(cov_b35kfj846().s[400]++, null);

/**
 * Get or create global monitor instance
 */
function getGlobalMonitor(options =
/* istanbul ignore next */
(cov_b35kfj846().b[84][0]++, {})) {
  /* istanbul ignore next */
  cov_b35kfj846().f[58]++;
  cov_b35kfj846().s[401]++;
  if (!globalMonitorInstance) {
    /* istanbul ignore next */
    cov_b35kfj846().b[85][0]++;
    cov_b35kfj846().s[402]++;
    globalMonitorInstance = new NodeModulesMonitor(options);
  } else
  /* istanbul ignore next */
  {
    cov_b35kfj846().b[85][1]++;
  }
  cov_b35kfj846().s[403]++;
  return globalMonitorInstance;
}

/**
 * Reset global monitor instance (for testing)
 */
function resetGlobalMonitor() {
  /* istanbul ignore next */
  cov_b35kfj846().f[59]++;
  cov_b35kfj846().s[404]++;
  if (globalMonitorInstance) {
    /* istanbul ignore next */
    cov_b35kfj846().b[86][0]++;
    cov_b35kfj846().s[405]++;
    globalMonitorInstance.stopMonitoring().catch(() => {
      /* istanbul ignore next */
      cov_b35kfj846().f[60]++;
    } // Ignore cleanup errors during reset
    );
  } else
  /* istanbul ignore next */
  {
    cov_b35kfj846().b[86][1]++;
  }
  cov_b35kfj846().s[406]++;
  globalMonitorInstance = null;
}
/* istanbul ignore next */
cov_b35kfj846().s[407]++;
module.exports = NodeModulesMonitor;
/* istanbul ignore next */
cov_b35kfj846().s[408]++;
module.exports.getGlobalMonitor = getGlobalMonitor;
/* istanbul ignore next */
cov_b35kfj846().s[409]++;
module.exports.resetGlobalMonitor = resetGlobalMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,