e95851b35c8f603763818750da25a4e1
/* istanbul ignore next */
function cov_25gbrynu21() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/reviewSystem.js";
  var hash = "e67308fea4cd79cd69f5e660103ab207e1e2d3a7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/reviewSystem.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 11
        },
        end: {
          line: 1,
          column: 24
        }
      },
      "1": {
        start: {
          line: 2,
          column: 13
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 21
        },
        end: {
          line: 3,
          column: 45
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "4": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "5": {
        start: {
          line: 52,
          column: 29
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "6": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "7": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "8": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 32
        }
      },
      "9": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "10": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "11": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 36
        }
      },
      "12": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 25
        }
      },
      "13": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "14": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "15": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 98
        }
      },
      "16": {
        start: {
          line: 84,
          column: 15
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "17": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 83
        }
      },
      "18": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 28
        }
      },
      "19": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "20": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "21": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "22": {
        start: {
          line: 108,
          column: 36
        },
        end: {
          line: 108,
          column: 73
        }
      },
      "23": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "24": {
        start: {
          line: 110,
          column: 40
        },
        end: {
          line: 110,
          column: 88
        }
      },
      "25": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 116,
          column: 21
        }
      },
      "26": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 95
        }
      },
      "27": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 115,
          column: 53
        }
      },
      "28": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 122,
          column: 21
        }
      },
      "29": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 107
        }
      },
      "30": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 88
        }
      },
      "31": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 136,
          column: 21
        }
      },
      "32": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 135,
          column: 25
        }
      },
      "33": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 131,
          column: 31
        }
      },
      "34": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 133,
          column: 79
        }
      },
      "35": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "36": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 83
        }
      },
      "37": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 45
        }
      },
      "38": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "39": {
        start: {
          line: 145,
          column: 36
        },
        end: {
          line: 145,
          column: 70
        }
      },
      "40": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 245,
          column: 17
        }
      },
      "41": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 194,
          column: 21
        }
      },
      "42": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 155,
          column: 27
        }
      },
      "43": {
        start: {
          line: 158,
          column: 43
        },
        end: {
          line: 163,
          column: 26
        }
      },
      "44": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 174,
          column: 25
        }
      },
      "45": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 58
        }
      },
      "46": {
        start: {
          line: 171,
          column: 47
        },
        end: {
          line: 171,
          column: 104
        }
      },
      "47": {
        start: {
          line: 171,
          column: 85
        },
        end: {
          line: 171,
          column: 96
        }
      },
      "48": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 172,
          column: 95
        }
      },
      "49": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 173,
          column: 89
        }
      },
      "50": {
        start: {
          line: 176,
          column: 24
        },
        end: {
          line: 193,
          column: 25
        }
      },
      "51": {
        start: {
          line: 177,
          column: 28
        },
        end: {
          line: 177,
          column: 102
        }
      },
      "52": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 178,
          column: 57
        }
      },
      "53": {
        start: {
          line: 181,
          column: 48
        },
        end: {
          line: 181,
          column: 90
        }
      },
      "54": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 192,
          column: 29
        }
      },
      "55": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 183,
          column: 62
        }
      },
      "56": {
        start: {
          line: 185,
          column: 51
        },
        end: {
          line: 185,
          column: 136
        }
      },
      "57": {
        start: {
          line: 185,
          column: 90
        },
        end: {
          line: 185,
          column: 128
        }
      },
      "58": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 191,
          column: 33
        }
      },
      "59": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 187,
          column: 103
        }
      },
      "60": {
        start: {
          line: 188,
          column: 36
        },
        end: {
          line: 188,
          column: 97
        }
      },
      "61": {
        start: {
          line: 190,
          column: 36
        },
        end: {
          line: 190,
          column: 66
        }
      },
      "62": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 245,
          column: 17
        }
      },
      "63": {
        start: {
          line: 197,
          column: 42
        },
        end: {
          line: 199,
          column: 21
        }
      },
      "64": {
        start: {
          line: 200,
          column: 44
        },
        end: {
          line: 202,
          column: 21
        }
      },
      "65": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 68
        }
      },
      "66": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 240,
          column: 21
        }
      },
      "67": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 85
        }
      },
      "68": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 53
        }
      },
      "69": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 239,
          column: 25
        }
      },
      "70": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "71": {
        start: {
          line: 217,
          column: 28
        },
        end: {
          line: 238,
          column: 29
        }
      },
      "72": {
        start: {
          line: 218,
          column: 32
        },
        end: {
          line: 234,
          column: 33
        }
      },
      "73": {
        start: {
          line: 219,
          column: 56
        },
        end: {
          line: 219,
          column: 84
        }
      },
      "74": {
        start: {
          line: 220,
          column: 56
        },
        end: {
          line: 220,
          column: 115
        }
      },
      "75": {
        start: {
          line: 220,
          column: 90
        },
        end: {
          line: 220,
          column: 111
        }
      },
      "76": {
        start: {
          line: 221,
          column: 58
        },
        end: {
          line: 221,
          column: 119
        }
      },
      "77": {
        start: {
          line: 221,
          column: 92
        },
        end: {
          line: 221,
          column: 115
        }
      },
      "78": {
        start: {
          line: 223,
          column: 36
        },
        end: {
          line: 226,
          column: 37
        }
      },
      "79": {
        start: {
          line: 224,
          column: 40
        },
        end: {
          line: 224,
          column: 106
        }
      },
      "80": {
        start: {
          line: 225,
          column: 40
        },
        end: {
          line: 225,
          column: 102
        }
      },
      "81": {
        start: {
          line: 227,
          column: 36
        },
        end: {
          line: 230,
          column: 37
        }
      },
      "82": {
        start: {
          line: 228,
          column: 40
        },
        end: {
          line: 228,
          column: 110
        }
      },
      "83": {
        start: {
          line: 229,
          column: 40
        },
        end: {
          line: 229,
          column: 125
        }
      },
      "84": {
        start: {
          line: 232,
          column: 36
        },
        end: {
          line: 232,
          column: 87
        }
      },
      "85": {
        start: {
          line: 233,
          column: 36
        },
        end: {
          line: 233,
          column: 65
        }
      },
      "86": {
        start: {
          line: 236,
          column: 32
        },
        end: {
          line: 236,
          column: 85
        }
      },
      "87": {
        start: {
          line: 237,
          column: 32
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "88": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 110
        }
      },
      "89": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 49
        }
      },
      "90": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 82
        }
      },
      "91": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 45
        }
      },
      "92": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "93": {
        start: {
          line: 253,
          column: 36
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "94": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 291,
          column: 17
        }
      },
      "95": {
        start: {
          line: 255,
          column: 40
        },
        end: {
          line: 255,
          column: 88
        }
      },
      "96": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "97": {
        start: {
          line: 259,
          column: 24
        },
        end: {
          line: 259,
          column: 78
        }
      },
      "98": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 260,
          column: 53
        }
      },
      "99": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 272,
          column: 25
        }
      },
      "100": {
        start: {
          line: 264,
          column: 28
        },
        end: {
          line: 268,
          column: 31
        }
      },
      "101": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 77
        }
      },
      "102": {
        start: {
          line: 271,
          column: 28
        },
        end: {
          line: 271,
          column: 57
        }
      },
      "103": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "104": {
        start: {
          line: 276,
          column: 28
        },
        end: {
          line: 285,
          column: 29
        }
      },
      "105": {
        start: {
          line: 277,
          column: 32
        },
        end: {
          line: 281,
          column: 35
        }
      },
      "106": {
        start: {
          line: 283,
          column: 32
        },
        end: {
          line: 283,
          column: 85
        }
      },
      "107": {
        start: {
          line: 284,
          column: 32
        },
        end: {
          line: 284,
          column: 96
        }
      },
      "108": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 86
        }
      },
      "109": {
        start: {
          line: 288,
          column: 28
        },
        end: {
          line: 288,
          column: 92
        }
      },
      "110": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 82
        }
      },
      "111": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 45
        }
      },
      "112": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 300,
          column: 64
        }
      },
      "113": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 67
        }
      },
      "114": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 41
        }
      },
      "115": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 23
        }
      },
      "116": {
        start: {
          line: 314,
          column: 23
        },
        end: {
          line: 314,
          column: 25
        }
      },
      "117": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "118": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "119": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 87
        }
      },
      "120": {
        start: {
          line: 318,
          column: 58
        },
        end: {
          line: 318,
          column: 84
        }
      },
      "121": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 355,
          column: 10
        }
      },
      "122": {
        start: {
          line: 337,
          column: 22
        },
        end: {
          line: 337,
          column: 34
        }
      },
      "123": {
        start: {
          line: 364,
          column: 28
        },
        end: {
          line: 364,
          column: 78
        }
      },
      "124": {
        start: {
          line: 364,
          column: 58
        },
        end: {
          line: 364,
          column: 77
        }
      },
      "125": {
        start: {
          line: 365,
          column: 31
        },
        end: {
          line: 365,
          column: 82
        }
      },
      "126": {
        start: {
          line: 365,
          column: 61
        },
        end: {
          line: 365,
          column: 81
        }
      },
      "127": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 372,
          column: 10
        }
      },
      "128": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 24
        }
      },
      "129": {
        start: {
          line: 381,
          column: 28
        },
        end: {
          line: 381,
          column: 90
        }
      },
      "130": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 70
        }
      },
      "131": {
        start: {
          line: 388,
          column: 25
        },
        end: {
          line: 388,
          column: 58
        }
      },
      "132": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "133": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 70
        }
      },
      "134": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 405,
          column: 10
        }
      },
      "135": {
        start: {
          line: 409,
          column: 21
        },
        end: {
          line: 409,
          column: 107
        }
      },
      "136": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 40
        }
      },
      "137": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 414,
          column: 11
        }
      },
      "138": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 46
        }
      },
      "139": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 416,
          column: 63
        }
      },
      "140": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 66
        }
      },
      "141": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 66
        }
      },
      "142": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 58
        }
      },
      "143": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 49
        }
      },
      "144": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 94
        }
      },
      "145": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 72
        }
      },
      "146": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 22
        }
      },
      "147": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "148": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 25
        }
      },
      "149": {
        start: {
          line: 434,
          column: 31
        },
        end: {
          line: 434,
          column: 76
        }
      },
      "150": {
        start: {
          line: 434,
          column: 58
        },
        end: {
          line: 434,
          column: 75
        }
      },
      "151": {
        start: {
          line: 435,
          column: 40
        },
        end: {
          line: 435,
          column: 99
        }
      },
      "152": {
        start: {
          line: 435,
          column: 67
        },
        end: {
          line: 435,
          column: 91
        }
      },
      "153": {
        start: {
          line: 436,
          column: 35
        },
        end: {
          line: 438,
          column: 16
        }
      },
      "154": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 54
        }
      },
      "155": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 40
        }
      },
      "156": {
        start: {
          line: 447,
          column: 33
        },
        end: {
          line: 449,
          column: 16
        }
      },
      "157": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 56
        }
      },
      "158": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 42
        }
      },
      "159": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "160": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 38
        }
      },
      "161": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 469,
          column: 13
        }
      },
      "162": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 463,
          column: 18
        }
      },
      "163": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 468,
          column: 18
        }
      },
      "164": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 474,
          column: 14
        }
      },
      "165": {
        start: {
          line: 479,
          column: 22
        },
        end: {
          line: 479,
          column: 24
        }
      },
      "166": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 496,
          column: 9
        }
      },
      "167": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 495,
          column: 15
        }
      },
      "168": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 494,
          column: 19
        }
      },
      "169": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "170": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 510,
          column: 15
        }
      },
      "171": {
        start: {
          line: 503,
          column: 89
        },
        end: {
          line: 503,
          column: 97
        }
      },
      "172": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 528,
          column: 9
        }
      },
      "173": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 527,
          column: 15
        }
      },
      "174": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 526,
          column: 19
        }
      },
      "175": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "176": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 544,
          column: 15
        }
      },
      "177": {
        start: {
          line: 532,
          column: 16
        },
        end: {
          line: 543,
          column: 19
        }
      },
      "178": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 21
        }
      },
      "179": {
        start: {
          line: 551,
          column: 0
        },
        end: {
          line: 551,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 45
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 79
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 95
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 171,
            column: 77
          },
          end: {
            line: 171,
            column: 78
          }
        },
        loc: {
          start: {
            line: 171,
            column: 85
          },
          end: {
            line: 171,
            column: 96
          }
        },
        line: 171
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 185,
            column: 82
          },
          end: {
            line: 185,
            column: 83
          }
        },
        loc: {
          start: {
            line: 185,
            column: 90
          },
          end: {
            line: 185,
            column: 128
          }
        },
        line: 185
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 200,
            column: 63
          },
          end: {
            line: 200,
            column: 64
          }
        },
        loc: {
          start: {
            line: 201,
            column: 24
          },
          end: {
            line: 201,
            column: 68
          }
        },
        line: 201
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 220,
            column: 75
          },
          end: {
            line: 220,
            column: 76
          }
        },
        loc: {
          start: {
            line: 220,
            column: 90
          },
          end: {
            line: 220,
            column: 111
          }
        },
        line: 220
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 221,
            column: 77
          },
          end: {
            line: 221,
            column: 78
          }
        },
        loc: {
          start: {
            line: 221,
            column: 92
          },
          end: {
            line: 221,
            column: 115
          }
        },
        line: 221
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 63
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 313
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 316,
            column: 46
          },
          end: {
            line: 316,
            column: 47
          }
        },
        loc: {
          start: {
            line: 316,
            column: 56
          },
          end: {
            line: 320,
            column: 9
          }
        },
        line: 316
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 318,
            column: 49
          },
          end: {
            line: 318,
            column: 50
          }
        },
        loc: {
          start: {
            line: 318,
            column: 58
          },
          end: {
            line: 318,
            column: 84
          }
        },
        line: 318
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 337,
            column: 13
          },
          end: {
            line: 337,
            column: 14
          }
        },
        loc: {
          start: {
            line: 337,
            column: 22
          },
          end: {
            line: 337,
            column: 34
          }
        },
        line: 337
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 49
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 362
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 364,
            column: 50
          },
          end: {
            line: 364,
            column: 51
          }
        },
        loc: {
          start: {
            line: 364,
            column: 58
          },
          end: {
            line: 364,
            column: 77
          }
        },
        line: 364
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 365,
            column: 53
          },
          end: {
            line: 365,
            column: 54
          }
        },
        loc: {
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 365,
            column: 81
          }
        },
        line: 365
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 72
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 380
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        loc: {
          start: {
            line: 387,
            column: 49
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 387
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        loc: {
          start: {
            line: 408,
            column: 46
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 408
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 412,
            column: 31
          },
          end: {
            line: 412,
            column: 32
          }
        },
        loc: {
          start: {
            line: 412,
            column: 46
          },
          end: {
            line: 414,
            column: 9
          }
        },
        line: 412
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 37
          },
          end: {
            line: 444,
            column: 5
          }
        },
        line: 428
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 434,
            column: 53
          },
          end: {
            line: 434,
            column: 54
          }
        },
        loc: {
          start: {
            line: 434,
            column: 58
          },
          end: {
            line: 434,
            column: 75
          }
        },
        line: 434
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 435,
            column: 62
          },
          end: {
            line: 435,
            column: 63
          }
        },
        loc: {
          start: {
            line: 435,
            column: 67
          },
          end: {
            line: 435,
            column: 91
          }
        },
        line: 435
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 436,
            column: 57
          },
          end: {
            line: 436,
            column: 58
          }
        },
        loc: {
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 437,
            column: 54
          }
        },
        line: 437
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 446,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        loc: {
          start: {
            line: 446,
            column: 34
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 446
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 447,
            column: 56
          }
        },
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 448,
            column: 56
          }
        },
        line: 448
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        },
        loc: {
          start: {
            line: 454,
            column: 47
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 454
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 37
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 478
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 482,
            column: 42
          },
          end: {
            line: 482,
            column: 43
          }
        },
        loc: {
          start: {
            line: 482,
            column: 51
          },
          end: {
            line: 495,
            column: 13
          }
        },
        line: 482
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 503,
            column: 84
          },
          end: {
            line: 503,
            column: 85
          }
        },
        loc: {
          start: {
            line: 503,
            column: 89
          },
          end: {
            line: 503,
            column: 97
          }
        },
        line: 503
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 514,
            column: 43
          },
          end: {
            line: 514,
            column: 44
          }
        },
        loc: {
          start: {
            line: 514,
            column: 51
          },
          end: {
            line: 527,
            column: 13
          }
        },
        line: 514
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 531,
            column: 43
          },
          end: {
            line: 531,
            column: 44
          }
        },
        loc: {
          start: {
            line: 531,
            column: 50
          },
          end: {
            line: 544,
            column: 13
          }
        },
        line: 531
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        }],
        line: 82
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 88,
            column: 9
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "5": {
        loc: {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "6": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 44
          }
        }, {
          start: {
            line: 113,
            column: 48
          },
          end: {
            line: 113,
            column: 74
          }
        }],
        line: 113
      },
      "7": {
        loc: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 20
          },
          end: {
            line: 136,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 20
          },
          end: {
            line: 136,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 43
          }
        }, {
          start: {
            line: 125,
            column: 47
          },
          end: {
            line: 125,
            column: 72
          }
        }],
        line: 125
      },
      "10": {
        loc: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 245,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 245,
            column: 17
          }
        }, {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 245,
            column: 17
          }
        }],
        line: 147
      },
      "11": {
        loc: {
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 174,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 174,
            column: 25
          }
        }, {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 174,
            column: 25
          }
        }],
        line: 166
      },
      "12": {
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 69
          }
        }, {
          start: {
            line: 166,
            column: 73
          },
          end: {
            line: 166,
            column: 97
          }
        }],
        line: 166
      },
      "13": {
        loc: {
          start: {
            line: 176,
            column: 24
          },
          end: {
            line: 193,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 24
          },
          end: {
            line: 193,
            column: 25
          }
        }, {
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 193,
            column: 25
          }
        }],
        line: 176
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 28
          },
          end: {
            line: 176,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 28
          },
          end: {
            line: 176,
            column: 75
          }
        }, {
          start: {
            line: 176,
            column: 79
          },
          end: {
            line: 176,
            column: 118
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 181,
            column: 48
          },
          end: {
            line: 181,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 48
          },
          end: {
            line: 181,
            column: 64
          }
        }, {
          start: {
            line: 181,
            column: 68
          },
          end: {
            line: 181,
            column: 84
          }
        }, {
          start: {
            line: 181,
            column: 88
          },
          end: {
            line: 181,
            column: 90
          }
        }],
        line: 181
      },
      "16": {
        loc: {
          start: {
            line: 182,
            column: 28
          },
          end: {
            line: 192,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 28
          },
          end: {
            line: 192,
            column: 29
          }
        }, {
          start: {
            line: 184,
            column: 35
          },
          end: {
            line: 192,
            column: 29
          }
        }],
        line: 182
      },
      "17": {
        loc: {
          start: {
            line: 185,
            column: 90
          },
          end: {
            line: 185,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 90
          },
          end: {
            line: 185,
            column: 101
          }
        }, {
          start: {
            line: 185,
            column: 105
          },
          end: {
            line: 185,
            column: 128
          }
        }],
        line: 185
      },
      "18": {
        loc: {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 191,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 191,
            column: 33
          }
        }, {
          start: {
            line: 189,
            column: 39
          },
          end: {
            line: 191,
            column: 33
          }
        }],
        line: 186
      },
      "19": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 245,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 245,
            column: 17
          }
        }, {
          start: {
            line: 241,
            column: 23
          },
          end: {
            line: 245,
            column: 17
          }
        }],
        line: 195
      },
      "20": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        }, {
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 240,
            column: 21
          }
        }],
        line: 204
      },
      "21": {
        loc: {
          start: {
            line: 217,
            column: 28
          },
          end: {
            line: 238,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 28
          },
          end: {
            line: 238,
            column: 29
          }
        }, {
          start: {
            line: 235,
            column: 35
          },
          end: {
            line: 238,
            column: 29
          }
        }],
        line: 217
      },
      "22": {
        loc: {
          start: {
            line: 223,
            column: 36
          },
          end: {
            line: 226,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 36
          },
          end: {
            line: 226,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 36
          },
          end: {
            line: 230,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 36
          },
          end: {
            line: 230,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 254,
            column: 16
          },
          end: {
            line: 291,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 16
          },
          end: {
            line: 291,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "25": {
        loc: {
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        }, {
          start: {
            line: 261,
            column: 27
          },
          end: {
            line: 290,
            column: 21
          }
        }],
        line: 258
      },
      "26": {
        loc: {
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 44
          }
        }, {
          start: {
            line: 258,
            column: 48
          },
          end: {
            line: 258,
            column: 73
          }
        }],
        line: 258
      },
      "27": {
        loc: {
          start: {
            line: 275,
            column: 24
          },
          end: {
            line: 289,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 24
          },
          end: {
            line: 289,
            column: 25
          }
        }, {
          start: {
            line: 286,
            column: 31
          },
          end: {
            line: 289,
            column: 25
          }
        }],
        line: 275
      },
      "28": {
        loc: {
          start: {
            line: 298,
            column: 35
          },
          end: {
            line: 300,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 35
          },
          end: {
            line: 298,
            column: 65
          }
        }, {
          start: {
            line: 299,
            column: 33
          },
          end: {
            line: 299,
            column: 63
          }
        }, {
          start: {
            line: 300,
            column: 33
          },
          end: {
            line: 300,
            column: 63
          }
        }],
        line: 298
      },
      "29": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "30": {
        loc: {
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 317,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 317,
            column: 36
          }
        }, {
          start: {
            line: 317,
            column: 40
          },
          end: {
            line: 317,
            column: 53
          }
        }],
        line: 317
      },
      "31": {
        loc: {
          start: {
            line: 332,
            column: 22
          },
          end: {
            line: 332,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 22
          },
          end: {
            line: 332,
            column: 53
          }
        }, {
          start: {
            line: 332,
            column: 57
          },
          end: {
            line: 332,
            column: 58
          }
        }],
        line: 332
      },
      "32": {
        loc: {
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 333,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 333,
            column: 52
          }
        }, {
          start: {
            line: 333,
            column: 56
          },
          end: {
            line: 333,
            column: 57
          }
        }],
        line: 333
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 22
          },
          end: {
            line: 334,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 22
          },
          end: {
            line: 334,
            column: 53
          }
        }, {
          start: {
            line: 334,
            column: 57
          },
          end: {
            line: 334,
            column: 58
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "35": {
        loc: {
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "36": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 430,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 430,
            column: 21
          }
        }, {
          start: {
            line: 430,
            column: 25
          },
          end: {
            line: 430,
            column: 40
          }
        }],
        line: 430
      },
      "37": {
        loc: {
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 437,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 437,
            column: 28
          }
        }, {
          start: {
            line: 437,
            column: 32
          },
          end: {
            line: 437,
            column: 54
          }
        }],
        line: 437
      },
      "38": {
        loc: {
          start: {
            line: 441,
            column: 15
          },
          end: {
            line: 443,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 15
          },
          end: {
            line: 441,
            column: 42
          }
        }, {
          start: {
            line: 442,
            column: 15
          },
          end: {
            line: 442,
            column: 48
          }
        }, {
          start: {
            line: 443,
            column: 15
          },
          end: {
            line: 443,
            column: 39
          }
        }],
        line: 441
      },
      "39": {
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 448,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 448,
            column: 28
          }
        }, {
          start: {
            line: 448,
            column: 32
          },
          end: {
            line: 448,
            column: 56
          }
        }],
        line: 448
      },
      "40": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        }, {
          start: {
            line: 470,
            column: 15
          },
          end: {
            line: 475,
            column: 9
          }
        }],
        line: 455
      },
      "41": {
        loc: {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        }, {
          start: {
            line: 464,
            column: 19
          },
          end: {
            line: 469,
            column: 13
          }
        }],
        line: 459
      },
      "42": {
        loc: {
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      },
      "43": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 511,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 511,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "44": {
        loc: {
          start: {
            line: 504,
            column: 30
          },
          end: {
            line: 504,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 504,
            column: 30
          },
          end: {
            line: 504,
            column: 49
          }
        }, {
          start: {
            line: 504,
            column: 53
          },
          end: {
            line: 504,
            column: 55
          }
        }],
        line: 504
      },
      "45": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 528,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 528,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "46": {
        loc: {
          start: {
            line: 521,
            column: 37
          },
          end: {
            line: 521,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 37
          },
          end: {
            line: 521,
            column: 55
          }
        }, {
          start: {
            line: 521,
            column: 59
          },
          end: {
            line: 521,
            column: 61
          }
        }],
        line: 521
      },
      "47": {
        loc: {
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 545,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 545,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 530
      },
      "48": {
        loc: {
          start: {
            line: 538,
            column: 37
          },
          end: {
            line: 538,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 538,
            column: 37
          },
          end: {
            line: 538,
            column: 51
          }
        }, {
          start: {
            line: 538,
            column: 55
          },
          end: {
            line: 538,
            column: 57
          }
        }],
        line: 538
      },
      "49": {
        loc: {
          start: {
            line: 540,
            column: 30
          },
          end: {
            line: 540,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 540,
            column: 48
          },
          end: {
            line: 540,
            column: 54
          }
        }, {
          start: {
            line: 540,
            column: 57
          },
          end: {
            line: 540,
            column: 65
          }
        }],
        line: 540
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e67308fea4cd79cd69f5e660103ab207e1e2d3a7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25gbrynu21 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25gbrynu21();
const fs =
/* istanbul ignore next */
(cov_25gbrynu21().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_25gbrynu21().s[1]++, require('path'));
const {
  execSync
} =
/* istanbul ignore next */
(cov_25gbrynu21().s[2]++, require('child_process'));
class ReviewSystem {
  constructor() {
    /* istanbul ignore next */
    cov_25gbrynu21().f[0]++;
    cov_25gbrynu21().s[3]++;
    this.reviewCriteria = {
      1: {
        name: 'Build Verification',
        tasks: ['Run clean build from scratch', 'Verify zero build errors', 'Check all dependencies installed', 'Ensure build artifacts generated']
      },
      2: {
        name: 'Lint and Code Quality',
        tasks: ['Run all linters', 'Ensure zero lint errors', 'Check for console.log statements', 'Verify code style consistency']
      },
      3: {
        name: 'Test Coverage and Success',
        tasks: ['Run all tests', 'Verify 100% coverage on critical modules', 'Check 90%+ coverage on other modules', 'Ensure no skipped or failing tests']
      }
    };
  }

  /**
   * Detects the project type based on configuration files
   * Returns 'python', 'javascript', or 'unknown'
   */
  detectProjectType(workingDir) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[1]++;
    // Check for Python project indicators
    const pythonIndicators =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[4]++, ['pyproject.toml', 'setup.py', 'requirements.txt', 'Pipfile', 'poetry.lock']);
    const jsIndicators =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[5]++, ['package.json', 'package-lock.json', 'yarn.lock', 'npm-shrinkwrap.json']);

    // Check for Python indicators first (pyproject.toml takes precedence)
    /* istanbul ignore next */
    cov_25gbrynu21().s[6]++;
    for (const indicator of pythonIndicators) {
      /* istanbul ignore next */
      cov_25gbrynu21().s[7]++;
      if (fs.existsSync(path.join(workingDir, indicator))) {
        /* istanbul ignore next */
        cov_25gbrynu21().b[0][0]++;
        cov_25gbrynu21().s[8]++;
        return 'python';
      } else
      /* istanbul ignore next */
      {
        cov_25gbrynu21().b[0][1]++;
      }
    }

    // Then check for JavaScript indicators
    /* istanbul ignore next */
    cov_25gbrynu21().s[9]++;
    for (const indicator of jsIndicators) {
      /* istanbul ignore next */
      cov_25gbrynu21().s[10]++;
      if (fs.existsSync(path.join(workingDir, indicator))) {
        /* istanbul ignore next */
        cov_25gbrynu21().b[1][0]++;
        cov_25gbrynu21().s[11]++;
        return 'javascript';
      } else
      /* istanbul ignore next */
      {
        cov_25gbrynu21().b[1][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25gbrynu21().s[12]++;
    return 'unknown';
  }

  /**
   * Gets language-appropriate important files for tasks
   */
  _getImportantFilesForProject(workingDir) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[2]++;
    const projectType =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[13]++, this.detectProjectType(workingDir));
    /* istanbul ignore next */
    cov_25gbrynu21().s[14]++;
    if (projectType === 'python') {
      /* istanbul ignore next */
      cov_25gbrynu21().b[2][0]++;
      cov_25gbrynu21().s[15]++;
      return ['pyproject.toml', 'setup.py', 'requirements.txt', '**/*.py', 'tests/**/*.py'];
    } else {
      /* istanbul ignore next */
      cov_25gbrynu21().b[2][1]++;
      cov_25gbrynu21().s[16]++;
      if (projectType === 'javascript') {
        /* istanbul ignore next */
        cov_25gbrynu21().b[3][0]++;
        cov_25gbrynu21().s[17]++;
        return ['package.json', 'eslint.config.js', '**/*.test.js', '**/*.ts'];
      } else {
        /* istanbul ignore next */
        cov_25gbrynu21().b[3][1]++;
        cov_25gbrynu21().s[18]++;
        return ['**/*'];
      }
    }
  }

  /**
   * Checks if all strikes would pass at 100% quality
   * Returns quality assessment for each strike
   */
  async checkStrikeQuality(workingDir) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[3]++;
    const results =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[19]++, {
      strike1: {
        name: 'Build Verification',
        quality: 100,
        issues: []
      },
      strike2: {
        name: 'Lint and Code Quality',
        quality: 100,
        issues: []
      },
      strike3: {
        name: 'Test Coverage and Success',
        quality: 100,
        issues: []
      },
      overallReady: true
    });
    /* istanbul ignore next */
    cov_25gbrynu21().s[20]++;
    try {
      /* istanbul ignore next */
      cov_25gbrynu21().s[21]++;
      // Strike 1: Build Quality Check
      try {
        // Check for package.json and basic build capability
        const packagePath =
        /* istanbul ignore next */
        (cov_25gbrynu21().s[22]++, path.join(workingDir, 'package.json'));
        /* istanbul ignore next */
        cov_25gbrynu21().s[23]++;
        if (fs.existsSync(packagePath)) {
          /* istanbul ignore next */
          cov_25gbrynu21().b[4][0]++;
          const packageJson =
          /* istanbul ignore next */
          (cov_25gbrynu21().s[24]++, JSON.parse(fs.readFileSync(packagePath, 'utf8')));

          // Check if build script exists
          /* istanbul ignore next */
          cov_25gbrynu21().s[25]++;
          if (
          /* istanbul ignore next */
          (cov_25gbrynu21().b[6][0]++, !packageJson.scripts) ||
          /* istanbul ignore next */
          (cov_25gbrynu21().b[6][1]++, !packageJson.scripts.build)) {
            /* istanbul ignore next */
            cov_25gbrynu21().b[5][0]++;
            cov_25gbrynu21().s[26]++;
            results.strike1.issues.push('No build script defined in package.json');
            /* istanbul ignore next */
            cov_25gbrynu21().s[27]++;
            results.strike1.quality = 80;
          } else
          /* istanbul ignore next */
          {
            cov_25gbrynu21().b[5][1]++;
          }

          // Check node_modules exists
          cov_25gbrynu21().s[28]++;
          if (!fs.existsSync(path.join(workingDir, 'node_modules'))) {
            /* istanbul ignore next */
            cov_25gbrynu21().b[7][0]++;
            cov_25gbrynu21().s[29]++;
            results.strike1.issues.push('node_modules not found - dependencies not installed');
            /* istanbul ignore next */
            cov_25gbrynu21().s[30]++;
            results.strike1.quality = Math.min(results.strike1.quality, 60);
          } else
          /* istanbul ignore next */
          {
            cov_25gbrynu21().b[7][1]++;
          }

          // Try a quick build check if build script exists
          cov_25gbrynu21().s[31]++;
          if (
          /* istanbul ignore next */
          (cov_25gbrynu21().b[9][0]++, packageJson.scripts) &&
          /* istanbul ignore next */
          (cov_25gbrynu21().b[9][1]++, packageJson.scripts.build)) {
            /* istanbul ignore next */
            cov_25gbrynu21().b[8][0]++;
            cov_25gbrynu21().s[32]++;
            try {
              /* istanbul ignore next */
              cov_25gbrynu21().s[33]++;
              execSync('npm run build', {
                cwd: workingDir,
                stdio: 'pipe',
                timeout: 30000
              });
            } catch {
              /* istanbul ignore next */
              cov_25gbrynu21().s[34]++;
              results.strike1.issues.push('Build command fails');
              /* istanbul ignore next */
              cov_25gbrynu21().s[35]++;
              results.strike1.quality = 50;
            }
          } else
          /* istanbul ignore next */
          {
            cov_25gbrynu21().b[8][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_25gbrynu21().b[4][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_25gbrynu21().s[36]++;
        results.strike1.issues.push(`Build check error: ${error.message}`);
        /* istanbul ignore next */
        cov_25gbrynu21().s[37]++;
        results.strike1.quality = 50;
      }

      // Strike 2: Lint Quality Check - Language-aware
      /* istanbul ignore next */
      cov_25gbrynu21().s[38]++;
      try {
        const projectType =
        /* istanbul ignore next */
        (cov_25gbrynu21().s[39]++, this.detectProjectType(workingDir));
        /* istanbul ignore next */
        cov_25gbrynu21().s[40]++;
        if (projectType === 'python') {
          /* istanbul ignore next */
          cov_25gbrynu21().b[10][0]++;
          cov_25gbrynu21().s[41]++;
          // Python project - use Ruff
          try {
            /* istanbul ignore next */
            cov_25gbrynu21().s[42]++;
            // Check if ruff is available
            execSync('ruff --version', {
              cwd: workingDir,
              stdio: 'pipe',
              timeout: 5000
            });

            // Run ruff check
            const ruffOutput =
            /* istanbul ignore next */
            (cov_25gbrynu21().s[43]++, execSync('ruff check .', {
              cwd: workingDir,
              stdio: 'pipe',
              timeout: 15000,
              encoding: 'utf8'
            }));

            // Check if output indicates success
            /* istanbul ignore next */
            cov_25gbrynu21().s[44]++;
            if (
            /* istanbul ignore next */
            (cov_25gbrynu21().b[12][0]++, ruffOutput.includes('All checks passed!')) ||
            /* istanbul ignore next */
            (cov_25gbrynu21().b[12][1]++, ruffOutput.trim() === '')) {
              /* istanbul ignore next */
              cov_25gbrynu21().b[11][0]++;
              cov_25gbrynu21().s[45]++;
              // Perfect - no issues found
              results.strike2.quality = 100;
            } else {
              /* istanbul ignore next */
              cov_25gbrynu21().b[11][1]++;
              // Parse output for violations
              const violations =
              /* istanbul ignore next */
              (cov_25gbrynu21().s[46]++, ruffOutput.split('\n').filter(line => {
                /* istanbul ignore next */
                cov_25gbrynu21().f[4]++;
                cov_25gbrynu21().s[47]++;
                return line.trim();
              }).length);
              /* istanbul ignore next */
              cov_25gbrynu21().s[48]++;
              results.strike2.issues.push(`${violations} ruff violations found`);
              /* istanbul ignore next */
              cov_25gbrynu21().s[49]++;
              results.strike2.quality = Math.max(20, 100 - violations * 5);
            }
          } catch (ruffError) {
            /* istanbul ignore next */
            cov_25gbrynu21().s[50]++;
            if (
            /* istanbul ignore next */
            (cov_25gbrynu21().b[14][0]++, ruffError.message.includes('command not found')) ||
            /* istanbul ignore next */
            (cov_25gbrynu21().b[14][1]++, ruffError.message.includes('not found'))) {
              /* istanbul ignore next */
              cov_25gbrynu21().b[13][0]++;
              cov_25gbrynu21().s[51]++;
              results.strike2.issues.push('Ruff linter not installed or not available');
              /* istanbul ignore next */
              cov_25gbrynu21().s[52]++;
              results.strike2.quality = 70;
            } else {
              /* istanbul ignore next */
              cov_25gbrynu21().b[13][1]++;
              // Ruff found violations (exit code != 0)
              const errorOutput =
              /* istanbul ignore next */
              (cov_25gbrynu21().s[53]++,
              /* istanbul ignore next */
              (cov_25gbrynu21().b[15][0]++, ruffError.stdout) ||
              /* istanbul ignore next */
              (cov_25gbrynu21().b[15][1]++, ruffError.stderr) ||
              /* istanbul ignore next */
              (cov_25gbrynu21().b[15][2]++, ''));
              /* istanbul ignore next */
              cov_25gbrynu21().s[54]++;
              if (errorOutput.includes('All checks passed!')) {
                /* istanbul ignore next */
                cov_25gbrynu21().b[16][0]++;
                cov_25gbrynu21().s[55]++;
                results.strike2.quality = 100;
              } else {
                /* istanbul ignore next */
                cov_25gbrynu21().b[16][1]++;
                const violations =
                /* istanbul ignore next */
                (cov_25gbrynu21().s[56]++, errorOutput.split('\n').filter(line => {
                  /* istanbul ignore next */
                  cov_25gbrynu21().f[5]++;
                  cov_25gbrynu21().s[57]++;
                  return /* istanbul ignore next */(cov_25gbrynu21().b[17][0]++, line.trim()) &&
                  /* istanbul ignore next */
                  (cov_25gbrynu21().b[17][1]++, !line.includes('Found'));
                }).length);
                /* istanbul ignore next */
                cov_25gbrynu21().s[58]++;
                if (violations > 0) {
                  /* istanbul ignore next */
                  cov_25gbrynu21().b[18][0]++;
                  cov_25gbrynu21().s[59]++;
                  results.strike2.issues.push(`${violations} ruff violations found`);
                  /* istanbul ignore next */
                  cov_25gbrynu21().s[60]++;
                  results.strike2.quality = Math.max(20, 100 - violations * 5);
                } else {
                  /* istanbul ignore next */
                  cov_25gbrynu21().b[18][1]++;
                  cov_25gbrynu21().s[61]++;
                  results.strike2.quality = 100;
                }
              }
            }
          }
        } else {
          /* istanbul ignore next */
          cov_25gbrynu21().b[10][1]++;
          cov_25gbrynu21().s[62]++;
          if (projectType === 'javascript') {
            /* istanbul ignore next */
            cov_25gbrynu21().b[19][0]++;
            // JavaScript project - use ESLint
            const eslintConfigs =
            /* istanbul ignore next */
            (cov_25gbrynu21().s[63]++, ['eslint.config.js', '.eslintrc.js', '.eslintrc.json', '.eslintrc']);
            const hasEslintConfig =
            /* istanbul ignore next */
            (cov_25gbrynu21().s[64]++, eslintConfigs.some(config => {
              /* istanbul ignore next */
              cov_25gbrynu21().f[6]++;
              cov_25gbrynu21().s[65]++;
              return fs.existsSync(path.join(workingDir, config));
            }));
            /* istanbul ignore next */
            cov_25gbrynu21().s[66]++;
            if (!hasEslintConfig) {
              /* istanbul ignore next */
              cov_25gbrynu21().b[20][0]++;
              cov_25gbrynu21().s[67]++;
              results.strike2.issues.push('No ESLint configuration found');
              /* istanbul ignore next */
              cov_25gbrynu21().s[68]++;
              results.strike2.quality = 70;
            } else {
              /* istanbul ignore next */
              cov_25gbrynu21().b[20][1]++;
              cov_25gbrynu21().s[69]++;
              // Try running eslint
              try {
                /* istanbul ignore next */
                cov_25gbrynu21().s[70]++;
                execSync('npx eslint . --format json --no-warn-ignored', {
                  cwd: workingDir,
                  stdio: 'pipe',
                  timeout: 15000
                });
              } catch (lintError) {
                /* istanbul ignore next */
                cov_25gbrynu21().s[71]++;
                // Parse ESLint output to count errors
                if (lintError.stdout) {
                  /* istanbul ignore next */
                  cov_25gbrynu21().b[21][0]++;
                  cov_25gbrynu21().s[72]++;
                  try {
                    const lintResults =
                    /* istanbul ignore next */
                    (cov_25gbrynu21().s[73]++, JSON.parse(lintError.stdout));
                    const totalErrors =
                    /* istanbul ignore next */
                    (cov_25gbrynu21().s[74]++, lintResults.reduce((sum, file) => {
                      /* istanbul ignore next */
                      cov_25gbrynu21().f[7]++;
                      cov_25gbrynu21().s[75]++;
                      return sum + file.errorCount;
                    }, 0));
                    const totalWarnings =
                    /* istanbul ignore next */
                    (cov_25gbrynu21().s[76]++, lintResults.reduce((sum, file) => {
                      /* istanbul ignore next */
                      cov_25gbrynu21().f[8]++;
                      cov_25gbrynu21().s[77]++;
                      return sum + file.warningCount;
                    }, 0));
                    /* istanbul ignore next */
                    cov_25gbrynu21().s[78]++;
                    if (totalErrors > 0) {
                      /* istanbul ignore next */
                      cov_25gbrynu21().b[22][0]++;
                      cov_25gbrynu21().s[79]++;
                      results.strike2.issues.push(`${totalErrors} ESLint errors found`);
                      /* istanbul ignore next */
                      cov_25gbrynu21().s[80]++;
                      results.strike2.quality = Math.max(20, 100 - totalErrors * 5);
                    } else
                    /* istanbul ignore next */
                    {
                      cov_25gbrynu21().b[22][1]++;
                    }
                    cov_25gbrynu21().s[81]++;
                    if (totalWarnings > 0) {
                      /* istanbul ignore next */
                      cov_25gbrynu21().b[23][0]++;
                      cov_25gbrynu21().s[82]++;
                      results.strike2.issues.push(`${totalWarnings} ESLint warnings found`);
                      /* istanbul ignore next */
                      cov_25gbrynu21().s[83]++;
                      results.strike2.quality = Math.min(results.strike2.quality, 100 - totalWarnings * 2);
                    } else
                    /* istanbul ignore next */
                    {
                      cov_25gbrynu21().b[23][1]++;
                    }
                  } catch {
                    /* istanbul ignore next */
                    cov_25gbrynu21().s[84]++;
                    results.strike2.issues.push('ESLint check failed');
                    /* istanbul ignore next */
                    cov_25gbrynu21().s[85]++;
                    results.strike2.quality = 60;
                  }
                } else {
                  /* istanbul ignore next */
                  cov_25gbrynu21().b[21][1]++;
                  cov_25gbrynu21().s[86]++;
                  results.strike2.issues.push('ESLint command failed');
                  /* istanbul ignore next */
                  cov_25gbrynu21().s[87]++;
                  results.strike2.quality = 60;
                }
              }
            }
          } else {
            /* istanbul ignore next */
            cov_25gbrynu21().b[19][1]++;
            cov_25gbrynu21().s[88]++;
            // Unknown project type
            results.strike2.issues.push('Unknown project type - cannot determine appropriate linter');
            /* istanbul ignore next */
            cov_25gbrynu21().s[89]++;
            results.strike2.quality = 50;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_25gbrynu21().s[90]++;
        results.strike2.issues.push(`Lint check error: ${error.message}`);
        /* istanbul ignore next */
        cov_25gbrynu21().s[91]++;
        results.strike2.quality = 60;
      }

      // Strike 3: Test Quality Check
      /* istanbul ignore next */
      cov_25gbrynu21().s[92]++;
      try {
        const packagePath =
        /* istanbul ignore next */
        (cov_25gbrynu21().s[93]++, path.join(workingDir, 'package.json'));
        /* istanbul ignore next */
        cov_25gbrynu21().s[94]++;
        if (fs.existsSync(packagePath)) {
          /* istanbul ignore next */
          cov_25gbrynu21().b[24][0]++;
          const packageJson =
          /* istanbul ignore next */
          (cov_25gbrynu21().s[95]++, JSON.parse(fs.readFileSync(packagePath, 'utf8')));

          // Check if test script exists
          /* istanbul ignore next */
          cov_25gbrynu21().s[96]++;
          if (
          /* istanbul ignore next */
          (cov_25gbrynu21().b[26][0]++, !packageJson.scripts) ||
          /* istanbul ignore next */
          (cov_25gbrynu21().b[26][1]++, !packageJson.scripts.test)) {
            /* istanbul ignore next */
            cov_25gbrynu21().b[25][0]++;
            cov_25gbrynu21().s[97]++;
            results.strike3.issues.push('No test script defined');
            /* istanbul ignore next */
            cov_25gbrynu21().s[98]++;
            results.strike3.quality = 40;
          } else {
            /* istanbul ignore next */
            cov_25gbrynu21().b[25][1]++;
            cov_25gbrynu21().s[99]++;
            // Try running tests
            try {
              /* istanbul ignore next */
              cov_25gbrynu21().s[100]++;
              execSync('npm test', {
                cwd: workingDir,
                stdio: 'pipe',
                timeout: 30000
              });
            } catch {
              /* istanbul ignore next */
              cov_25gbrynu21().s[101]++;
              results.strike3.issues.push('Tests are failing');
              /* istanbul ignore next */
              cov_25gbrynu21().s[102]++;
              results.strike3.quality = 30;
            }

            // Check for coverage script
            /* istanbul ignore next */
            cov_25gbrynu21().s[103]++;
            if (packageJson.scripts['test:coverage']) {
              /* istanbul ignore next */
              cov_25gbrynu21().b[27][0]++;
              cov_25gbrynu21().s[104]++;
              try {
                /* istanbul ignore next */
                cov_25gbrynu21().s[105]++;
                execSync('npm run test:coverage', {
                  cwd: workingDir,
                  stdio: 'pipe',
                  timeout: 45000
                });
              } catch {
                /* istanbul ignore next */
                cov_25gbrynu21().s[106]++;
                results.strike3.issues.push('Coverage check failed');
                /* istanbul ignore next */
                cov_25gbrynu21().s[107]++;
                results.strike3.quality = Math.min(results.strike3.quality, 70);
              }
            } else {
              /* istanbul ignore next */
              cov_25gbrynu21().b[27][1]++;
              cov_25gbrynu21().s[108]++;
              results.strike3.issues.push('No coverage script defined');
              /* istanbul ignore next */
              cov_25gbrynu21().s[109]++;
              results.strike3.quality = Math.min(results.strike3.quality, 80);
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_25gbrynu21().b[24][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_25gbrynu21().s[110]++;
        results.strike3.issues.push(`Test check error: ${error.message}`);
        /* istanbul ignore next */
        cov_25gbrynu21().s[111]++;
        results.strike3.quality = 40;
      }

      // Determine overall readiness
      /* istanbul ignore next */
      cov_25gbrynu21().s[112]++;
      results.overallReady =
      /* istanbul ignore next */
      (cov_25gbrynu21().b[28][0]++, results.strike1.quality >= 100) &&
      /* istanbul ignore next */
      (cov_25gbrynu21().b[28][1]++, results.strike2.quality >= 100) &&
      /* istanbul ignore next */
      (cov_25gbrynu21().b[28][2]++, results.strike3.quality >= 100);
    } catch (error) {
      /* istanbul ignore next */
      cov_25gbrynu21().s[113]++;
      console.error('Error in strike quality check:', error);
      /* istanbul ignore next */
      cov_25gbrynu21().s[114]++;
      results.overallReady = false;
    }
    /* istanbul ignore next */
    cov_25gbrynu21().s[115]++;
    return results;
  }

  /**
   * Creates a task creation task to improve quality before strikes
   */
  createQualityImprovementTask(qualityResults, _projectName) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[9]++;
    const issues =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[116]++, []);
    /* istanbul ignore next */
    cov_25gbrynu21().s[117]++;
    Object.values(qualityResults).forEach(strike => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[10]++;
      cov_25gbrynu21().s[118]++;
      if (
      /* istanbul ignore next */
      (cov_25gbrynu21().b[30][0]++, strike.quality < 100) &&
      /* istanbul ignore next */
      (cov_25gbrynu21().b[30][1]++, strike.issues)) {
        /* istanbul ignore next */
        cov_25gbrynu21().b[29][0]++;
        cov_25gbrynu21().s[119]++;
        issues.push(...strike.issues.map(issue => {
          /* istanbul ignore next */
          cov_25gbrynu21().f[11]++;
          cov_25gbrynu21().s[120]++;
          return `${strike.name}: ${issue}`;
        }));
      } else
      /* istanbul ignore next */
      {
        cov_25gbrynu21().b[29][1]++;
      }
    });
    /* istanbul ignore next */
    cov_25gbrynu21().s[121]++;
    return {
      id: `quality-improvement-${Date.now()}`,
      title: 'Create Quality Improvement Tasks',
      description: 'Analyze project quality issues and create specific tasks to reach 100% quality for all strikes',
      mode: 'TASK-CREATION',
      priority: 'high',
      status: 'pending',
      prompt: `Project quality assessment shows issues preventing 100% strike success:

Quality Status:
- Strike 1 (Build): ${
      /* istanbul ignore next */
      (cov_25gbrynu21().b[31][0]++, qualityResults.strike1?.quality) ||
      /* istanbul ignore next */
      (cov_25gbrynu21().b[31][1]++, 0)}%
- Strike 2 (Lint): ${
      /* istanbul ignore next */
      (cov_25gbrynu21().b[32][0]++, qualityResults.strike2?.quality) ||
      /* istanbul ignore next */
      (cov_25gbrynu21().b[32][1]++, 0)}%  
- Strike 3 (Tests): ${
      /* istanbul ignore next */
      (cov_25gbrynu21().b[33][0]++, qualityResults.strike3?.quality) ||
      /* istanbul ignore next */
      (cov_25gbrynu21().b[33][1]++, 0)}%

Issues Found:
${issues.map(issue => {
        /* istanbul ignore next */
        cov_25gbrynu21().f[12]++;
        cov_25gbrynu21().s[122]++;
        return `- ${issue}`;
      }).join('\n')}

TASK: Analyze these quality gaps and create specific improvement tasks to bring ALL strikes to 100% quality. Create tasks for:
1. Build issues (missing dependencies, build failures, configuration)
2. Code quality issues (lint errors, style violations, code standards)
3. Testing issues (failing tests, missing coverage, test setup)

Insert all improvement tasks BEFORE the strike review tasks. Strikes should always remain last in the task list.`,
      success_criteria: ['All quality issues identified and analyzed', 'Specific improvement tasks created for each quality gap', 'Tasks properly prioritized and ordered before strikes', 'Clear path to 100% quality established'],
      important_files: ['package.json', 'eslint.config.js', '**/*.test.js'],
      requires_research: true,
      is_quality_improvement_task: true,
      quality_analysis: qualityResults
    };
  }

  /**
   * Ensures strike review tasks are always at the end of the task list
   * Inserts improvement tasks before strikes
   */
  insertTasksBeforeStrikes(todoData, newTasks) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[13]++;
    // Separate strike tasks from other tasks
    const strikeTasks =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[123]++, todoData.tasks.filter(task => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[14]++;
      cov_25gbrynu21().s[124]++;
      return task.is_review_task;
    }));
    const nonStrikeTasks =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[125]++, todoData.tasks.filter(task => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[15]++;
      cov_25gbrynu21().s[126]++;
      return !task.is_review_task;
    }));

    // Combine non-strike tasks with new tasks, then add strikes at the end
    /* istanbul ignore next */
    cov_25gbrynu21().s[127]++;
    todoData.tasks = [...nonStrikeTasks, ...newTasks, ...strikeTasks];
    /* istanbul ignore next */
    cov_25gbrynu21().s[128]++;
    return todoData;
  }

  /**
   * Inserts a quality improvement task before strikes and returns updated todo data
   */
  injectQualityImprovementTask(todoData, qualityResults, projectName) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[16]++;
    const qualityTask =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[129]++, this.createQualityImprovementTask(qualityResults, projectName));

    // Insert the quality improvement task before strikes
    /* istanbul ignore next */
    cov_25gbrynu21().s[130]++;
    return this.insertTasksBeforeStrikes(todoData, [qualityTask]);
  }
  createReviewTask(strikeNumber, _projectName) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[17]++;
    const criteria =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[131]++, this.reviewCriteria[strikeNumber]);
    /* istanbul ignore next */
    cov_25gbrynu21().s[132]++;
    if (!criteria) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[34][0]++;
      cov_25gbrynu21().s[133]++;
      throw new Error(`Invalid strike number: ${strikeNumber}`);
    } else
    /* istanbul ignore next */
    {
      cov_25gbrynu21().b[34][1]++;
    }
    cov_25gbrynu21().s[134]++;
    return {
      id: `review-strike-${strikeNumber}`,
      mode: 'REVIEWER',
      description: `Review Strike ${strikeNumber}: ${criteria.name}`,
      prompt: this.buildReviewPrompt(strikeNumber, criteria),
      dependencies: ['**/*.js', '**/*.ts', 'package.json', 'tsconfig.json'],
      important_files: ['package.json', '.eslintrc', 'jest.config.js'],
      status: 'pending',
      requires_research: false,
      subtasks: [],
      is_review_task: true,
      strike_number: strikeNumber
    };
  }
  buildReviewPrompt(strikeNumber, criteria) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[18]++;
    let prompt =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[135]++, `Perform a comprehensive code review for Strike ${strikeNumber}: ${criteria.name}\n\n`);
    /* istanbul ignore next */
    cov_25gbrynu21().s[136]++;
    prompt += `Review Checklist:\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[137]++;
    criteria.tasks.forEach((task, idx) => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[19]++;
      cov_25gbrynu21().s[138]++;
      prompt += `${idx + 1}. ${task}\n`;
    });
    /* istanbul ignore next */
    cov_25gbrynu21().s[139]++;
    prompt += `\nProvide a detailed review report with:\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[140]++;
    prompt += `- Clear PASS/FAIL status for each criterion\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[141]++;
    prompt += `- Specific issues found with file locations\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[142]++;
    prompt += `- Remediation steps if review fails\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[143]++;
    prompt += `- Overall recommendation\n\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[144]++;
    prompt += `If the review fails, create specific tasks to address each issue found.\n`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[145]++;
    prompt += `Be thorough but fair - focus on objective criteria.`;
    /* istanbul ignore next */
    cov_25gbrynu21().s[146]++;
    return prompt;
  }
  shouldInjectReviewTask(todoData) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[20]++;
    cov_25gbrynu21().s[147]++;
    // Check if we should inject a review task
    if (
    /* istanbul ignore next */
    (cov_25gbrynu21().b[36][0]++, !todoData) ||
    /* istanbul ignore next */
    (cov_25gbrynu21().b[36][1]++, !todoData.tasks)) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[35][0]++;
      cov_25gbrynu21().s[148]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_25gbrynu21().b[35][1]++;
    }
    const nonReviewTasks =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[149]++, todoData.tasks.filter(t => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[21]++;
      cov_25gbrynu21().s[150]++;
      return !t.is_review_task;
    }));
    const completedNonReviewTasks =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[151]++, nonReviewTasks.filter(t => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[22]++;
      cov_25gbrynu21().s[152]++;
      return t.status === 'completed';
    }).length);
    const pendingReviewTasks =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[153]++, todoData.tasks.filter(t => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[23]++;
      cov_25gbrynu21().s[154]++;
      return /* istanbul ignore next */(cov_25gbrynu21().b[37][0]++, t.is_review_task) &&
      /* istanbul ignore next */
      (cov_25gbrynu21().b[37][1]++, t.status === 'pending');
    }).length);

    // Inject review task every 5 completed tasks, if no review pending
    /* istanbul ignore next */
    cov_25gbrynu21().s[155]++;
    return /* istanbul ignore next */(cov_25gbrynu21().b[38][0]++, completedNonReviewTasks > 0) &&
    /* istanbul ignore next */
    (cov_25gbrynu21().b[38][1]++, completedNonReviewTasks % 5 === 0) &&
    /* istanbul ignore next */
    (cov_25gbrynu21().b[38][2]++, pendingReviewTasks === 0);
  }
  getNextStrikeNumber(todoData) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[24]++;
    const completedStrikes =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[156]++, todoData.tasks.filter(t => {
      /* istanbul ignore next */
      cov_25gbrynu21().f[25]++;
      cov_25gbrynu21().s[157]++;
      return /* istanbul ignore next */(cov_25gbrynu21().b[39][0]++, t.is_review_task) &&
      /* istanbul ignore next */
      (cov_25gbrynu21().b[39][1]++, t.status === 'completed');
    }).length);
    /* istanbul ignore next */
    cov_25gbrynu21().s[158]++;
    return completedStrikes % 3 + 1;
  }
  handleReviewResult(todoData, reviewPassed) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[26]++;
    cov_25gbrynu21().s[159]++;
    if (reviewPassed) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[40][0]++;
      cov_25gbrynu21().s[160]++;
      todoData.review_strikes++;

      // Check if this was the third strike
      /* istanbul ignore next */
      cov_25gbrynu21().s[161]++;
      if (todoData.review_strikes === 3) {
        /* istanbul ignore next */
        cov_25gbrynu21().b[41][0]++;
        cov_25gbrynu21().s[162]++;
        return {
          action: 'strikes_complete',
          message: 'All three review strikes passed! Project meets quality standards.'
        };
      } else {
        /* istanbul ignore next */
        cov_25gbrynu21().b[41][1]++;
        cov_25gbrynu21().s[163]++;
        return {
          action: 'continue',
          message: `Strike ${todoData.review_strikes} passed. ${3 - todoData.review_strikes} strikes remaining.`
        };
      }
    } else {
      /* istanbul ignore next */
      cov_25gbrynu21().b[40][1]++;
      cov_25gbrynu21().s[164]++;
      return {
        action: 'remediation_needed',
        message: 'Review failed. Remediation tasks have been created.'
      };
    }
  }
  createRemediationTasks(failures) {
    /* istanbul ignore next */
    cov_25gbrynu21().f[27]++;
    const tasks =
    /* istanbul ignore next */
    (cov_25gbrynu21().s[165]++, []);
    /* istanbul ignore next */
    cov_25gbrynu21().s[166]++;
    if (failures.build_errors) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[42][0]++;
      cov_25gbrynu21().s[167]++;
      failures.build_errors.forEach(error => {
        /* istanbul ignore next */
        cov_25gbrynu21().f[28]++;
        cov_25gbrynu21().s[168]++;
        tasks.push({
          id: `fix-build-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
          mode: 'DEBUGGING',
          description: `Fix build error: ${error.error}`,
          prompt: `Fix the build error in ${error.file}: ${error.error}\n\nSuggested fix: ${error.fix}`,
          dependencies: [error.file],
          important_files: ['package.json', 'tsconfig.json'],
          status: 'pending',
          priority: 'high',
          requires_research: false,
          subtasks: []
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_25gbrynu21().b[42][1]++;
    }
    cov_25gbrynu21().s[169]++;
    if (failures.lint_errors) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[43][0]++;
      cov_25gbrynu21().s[170]++;
      tasks.push({
        id: `fix-lint-${Date.now()}`,
        mode: 'REFACTORING',
        description: 'Fix all lint errors',
        prompt: `Fix the following lint errors:\n${failures.lint_errors.map(e => {
          /* istanbul ignore next */
          cov_25gbrynu21().f[29]++;
          cov_25gbrynu21().s[171]++;
          return `- ${e}`;
        }).join('\n')}`,
        dependencies:
        /* istanbul ignore next */
        (cov_25gbrynu21().b[44][0]++, failures.lint_files) ||
        /* istanbul ignore next */
        (cov_25gbrynu21().b[44][1]++, []),
        important_files: ['.eslintrc', 'tslint.json'],
        status: 'pending',
        priority: 'high',
        requires_research: false,
        subtasks: []
      });
    } else
    /* istanbul ignore next */
    {
      cov_25gbrynu21().b[43][1]++;
    }
    cov_25gbrynu21().s[172]++;
    if (failures.test_failures) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[45][0]++;
      cov_25gbrynu21().s[173]++;
      failures.test_failures.forEach(test => {
        /* istanbul ignore next */
        cov_25gbrynu21().f[30]++;
        cov_25gbrynu21().s[174]++;
        tasks.push({
          id: `fix-test-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
          mode: 'DEBUGGING',
          description: `Fix failing test: ${test.name}`,
          prompt: `Fix the failing test: ${test.name}\n\nError: ${test.error}`,
          dependencies: [test.file],
          important_files:
          /* istanbul ignore next */
          (cov_25gbrynu21().b[46][0]++, test.related_files) ||
          /* istanbul ignore next */
          (cov_25gbrynu21().b[46][1]++, []),
          status: 'pending',
          priority: 'high',
          requires_research: false,
          subtasks: []
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_25gbrynu21().b[45][1]++;
    }
    cov_25gbrynu21().s[175]++;
    if (failures.coverage_gaps) {
      /* istanbul ignore next */
      cov_25gbrynu21().b[47][0]++;
      cov_25gbrynu21().s[176]++;
      failures.coverage_gaps.forEach(gap => {
        /* istanbul ignore next */
        cov_25gbrynu21().f[31]++;
        cov_25gbrynu21().s[177]++;
        tasks.push({
          id: `improve-coverage-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
          mode: 'TESTING',
          description: `Improve test coverage for ${gap.file}`,
          prompt: `Improve test coverage for ${gap.file} from ${gap.current}% to ${gap.required}%.\n\nFocus on: ${gap.uncovered_lines}`,
          dependencies: [gap.file],
          important_files:
          /* istanbul ignore next */
          (cov_25gbrynu21().b[48][0]++, gap.test_files) ||
          /* istanbul ignore next */
          (cov_25gbrynu21().b[48][1]++, []),
          status: 'pending',
          priority: gap.is_critical ?
          /* istanbul ignore next */
          (cov_25gbrynu21().b[49][0]++, 'high') :
          /* istanbul ignore next */
          (cov_25gbrynu21().b[49][1]++, 'medium'),
          requires_research: false,
          subtasks: []
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_25gbrynu21().b[47][1]++;
    }
    cov_25gbrynu21().s[178]++;
    return tasks;
  }
}
/* istanbul ignore next */
cov_25gbrynu21().s[179]++;
module.exports = ReviewSystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,