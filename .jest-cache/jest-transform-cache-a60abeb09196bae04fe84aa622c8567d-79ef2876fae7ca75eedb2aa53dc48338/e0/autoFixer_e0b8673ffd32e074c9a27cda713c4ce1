f981e79f365e64f2aa30070c2303b9e7
/* istanbul ignore next */
function cov_ovjrxkkf9() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/autoFixer.js";
  var hash = "1c9c7b12f85e3ed323183255c29a65b4e2343b2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/autoFixer.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 11
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "1": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "2": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "3": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 26,
          column: 10
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "10": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 37
        }
      },
      "11": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "12": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "13": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 70
        }
      },
      "14": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "15": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 86
        }
      },
      "16": {
        start: {
          line: 57,
          column: 31
        },
        end: {
          line: 57,
          column: 35
        }
      },
      "17": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "18": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 74
        }
      },
      "19": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 68
        }
      },
      "20": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 72
        }
      },
      "21": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "22": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 83
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "24": {
        start: {
          line: 71,
          column: 36
        },
        end: {
          line: 71,
          column: 70
        }
      },
      "25": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "26": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 88
        }
      },
      "27": {
        start: {
          line: 77,
          column: 34
        },
        end: {
          line: 77,
          column: 89
        }
      },
      "28": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "29": {
        start: {
          line: 81,
          column: 40
        },
        end: {
          line: 85,
          column: 21
        }
      },
      "30": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "31": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 88,
          column: 92
        }
      },
      "32": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 66
        }
      },
      "33": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 98,
          column: 17
        }
      },
      "34": {
        start: {
          line: 96,
          column: 43
        },
        end: {
          line: 96,
          column: 89
        }
      },
      "35": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 74
        }
      },
      "36": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 76
        }
      },
      "37": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 77
        }
      },
      "38": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 54
        }
      },
      "39": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 93
        }
      },
      "40": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "41": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "42": {
        start: {
          line: 122,
          column: 32
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "43": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "44": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "45": {
        start: {
          line: 131,
          column: 37
        },
        end: {
          line: 131,
          column: 99
        }
      },
      "46": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 140,
          column: 14
        }
      },
      "47": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "48": {
        start: {
          line: 158,
          column: 37
        },
        end: {
          line: 158,
          column: 62
        }
      },
      "49": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 48
        }
      },
      "50": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 46
        }
      },
      "51": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "52": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 48
        }
      },
      "53": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 61
        }
      },
      "54": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 44
        }
      },
      "55": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 37
        }
      },
      "56": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "57": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 86
        }
      },
      "58": {
        start: {
          line: 181,
          column: 35
        },
        end: {
          line: 181,
          column: 85
        }
      },
      "59": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 70
        }
      },
      "60": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "61": {
        start: {
          line: 186,
          column: 41
        },
        end: {
          line: 186,
          column: 115
        }
      },
      "62": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 194,
          column: 17
        }
      },
      "63": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "64": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 202,
          column: 18
        }
      },
      "65": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 209,
          column: 14
        }
      },
      "66": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 63
        }
      },
      "67": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 14
        }
      },
      "68": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 39
        }
      },
      "69": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "70": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "71": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 235,
          column: 18
        }
      },
      "72": {
        start: {
          line: 238,
          column: 32
        },
        end: {
          line: 238,
          column: 66
        }
      },
      "73": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "74": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 246,
          column: 18
        }
      },
      "75": {
        start: {
          line: 249,
          column: 37
        },
        end: {
          line: 249,
          column: 99
        }
      },
      "76": {
        start: {
          line: 250,
          column: 28
        },
        end: {
          line: 250,
          column: 72
        }
      },
      "77": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 264,
          column: 14
        }
      },
      "78": {
        start: {
          line: 257,
          column: 71
        },
        end: {
          line: 257,
          column: 84
        }
      },
      "79": {
        start: {
          line: 258,
          column: 71
        },
        end: {
          line: 258,
          column: 85
        }
      },
      "80": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "81": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "82": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 82
        }
      },
      "83": {
        start: {
          line: 296,
          column: 25
        },
        end: {
          line: 296,
          column: 63
        }
      },
      "84": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 70
        }
      },
      "85": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 121
        }
      },
      "86": {
        start: {
          line: 305,
          column: 23
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "87": {
        start: {
          line: 312,
          column: 23
        },
        end: {
          line: 312,
          column: 81
        }
      },
      "88": {
        start: {
          line: 312,
          column: 73
        },
        end: {
          line: 312,
          column: 80
        }
      },
      "89": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "90": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 319,
          column: 14
        }
      },
      "91": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 44
        }
      },
      "92": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "93": {
        start: {
          line: 330,
          column: 28
        },
        end: {
          line: 330,
          column: 61
        }
      },
      "94": {
        start: {
          line: 331,
          column: 32
        },
        end: {
          line: 331,
          column: 74
        }
      },
      "95": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 339,
          column: 13
        }
      },
      "96": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 338,
          column: 18
        }
      },
      "97": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 345,
          column: 14
        }
      },
      "98": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 352,
          column: 14
        }
      },
      "99": {
        start: {
          line: 360,
          column: 26
        },
        end: {
          line: 360,
          column: 30
        }
      },
      "100": {
        start: {
          line: 361,
          column: 25
        },
        end: {
          line: 361,
          column: 27
        }
      },
      "101": {
        start: {
          line: 362,
          column: 23
        },
        end: {
          line: 362,
          column: 24
        }
      },
      "102": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "103": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 23
        }
      },
      "104": {
        start: {
          line: 367,
          column: 37
        },
        end: {
          line: 367,
          column: 94
        }
      },
      "105": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 74
        }
      },
      "106": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 372,
          column: 13
        }
      },
      "107": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 371,
          column: 22
        }
      },
      "108": {
        start: {
          line: 375,
          column: 36
        },
        end: {
          line: 375,
          column: 84
        }
      },
      "109": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 48
        }
      },
      "110": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 66
        }
      },
      "111": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 48
        }
      },
      "112": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "113": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 394,
          column: 10
        }
      },
      "114": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 61
        }
      },
      "115": {
        start: {
          line: 403,
          column: 31
        },
        end: {
          line: 403,
          column: 72
        }
      },
      "116": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "117": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 411,
          column: 15
        }
      },
      "118": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 78
        }
      },
      "119": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "120": {
        start: {
          line: 422,
          column: 28
        },
        end: {
          line: 422,
          column: 61
        }
      },
      "121": {
        start: {
          line: 423,
          column: 25
        },
        end: {
          line: 423,
          column: 44
        }
      },
      "122": {
        start: {
          line: 424,
          column: 37
        },
        end: {
          line: 424,
          column: 87
        }
      },
      "123": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 430,
          column: 14
        }
      },
      "124": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 436,
          column: 14
        }
      },
      "125": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "126": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 84
        }
      },
      "127": {
        start: {
          line: 445,
          column: 39
        },
        end: {
          line: 445,
          column: 82
        }
      },
      "128": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "129": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 96
        }
      },
      "130": {
        start: {
          line: 450,
          column: 43
        },
        end: {
          line: 450,
          column: 94
        }
      },
      "131": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 453,
          column: 58
        }
      },
      "132": {
        start: {
          line: 453,
          column: 43
        },
        end: {
          line: 453,
          column: 56
        }
      },
      "133": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 29
        }
      },
      "134": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 58
        }
      },
      "135": {
        start: {
          line: 459,
          column: 43
        },
        end: {
          line: 459,
          column: 56
        }
      },
      "136": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 472,
          column: 11
        }
      },
      "137": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 101
        }
      },
      "138": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 492,
          column: 10
        }
      },
      "139": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 506,
          column: 10
        }
      },
      "140": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "141": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 53
        }
      },
      "142": {
        start: {
          line: 517,
          column: 31
        },
        end: {
          line: 517,
          column: 100
        }
      },
      "143": {
        start: {
          line: 517,
          column: 67
        },
        end: {
          line: 517,
          column: 92
        }
      },
      "144": {
        start: {
          line: 518,
          column: 34
        },
        end: {
          line: 518,
          column: 91
        }
      },
      "145": {
        start: {
          line: 518,
          column: 70
        },
        end: {
          line: 518,
          column: 83
        }
      },
      "146": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "147": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 70
        }
      },
      "148": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "149": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 66
        }
      },
      "150": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 67
        }
      },
      "151": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 542,
          column: 9
        }
      },
      "152": {
        start: {
          line: 536,
          column: 29
        },
        end: {
          line: 536,
          column: 62
        }
      },
      "153": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 47
        }
      },
      "154": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 538,
          column: 36
        }
      },
      "155": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 24
        }
      },
      "156": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 25
        }
      },
      "157": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "158": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 55
        }
      },
      "159": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 24
        }
      },
      "160": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 550,
          column: 25
        }
      },
      "161": {
        start: {
          line: 556,
          column: 8
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "162": {
        start: {
          line: 557,
          column: 26
        },
        end: {
          line: 557,
          column: 47
        }
      },
      "163": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 558,
          column: 50
        }
      },
      "164": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 560,
          column: 24
        }
      },
      "165": {
        start: {
          line: 565,
          column: 0
        },
        end: {
          line: 565,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 46
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 120
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 50
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 157
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 41
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 175
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 34
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 227
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 257,
            column: 66
          },
          end: {
            line: 257,
            column: 67
          }
        },
        loc: {
          start: {
            line: 257,
            column: 71
          },
          end: {
            line: 257,
            column: 84
          }
        },
        line: 257
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 258,
            column: 66
          },
          end: {
            line: 258,
            column: 67
          }
        },
        loc: {
          start: {
            line: 258,
            column: 71
          },
          end: {
            line: 258,
            column: 85
          }
        },
        line: 258
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 28
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 279
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 26
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 295
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 41
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 304
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 312,
            column: 51
          },
          end: {
            line: 312,
            column: 52
          }
        },
        loc: {
          start: {
            line: 312,
            column: 73
          },
          end: {
            line: 312,
            column: 80
          }
        },
        line: 312
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 34
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 328
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 43
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 359
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 48
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 400
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        loc: {
          start: {
            line: 420,
            column: 46
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 420
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 31
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 443
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 445,
            column: 32
          },
          end: {
            line: 445,
            column: 33
          }
        },
        loc: {
          start: {
            line: 445,
            column: 39
          },
          end: {
            line: 445,
            column: 82
          }
        },
        line: 445
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 450,
            column: 36
          },
          end: {
            line: 450,
            column: 37
          }
        },
        loc: {
          start: {
            line: 450,
            column: 43
          },
          end: {
            line: 450,
            column: 94
          }
        },
        line: 450
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 453,
            column: 36
          },
          end: {
            line: 453,
            column: 37
          }
        },
        loc: {
          start: {
            line: 453,
            column: 43
          },
          end: {
            line: 453,
            column: 56
          }
        },
        line: 453
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 459,
            column: 36
          },
          end: {
            line: 459,
            column: 37
          }
        },
        loc: {
          start: {
            line: 459,
            column: 43
          },
          end: {
            line: 459,
            column: 56
          }
        },
        line: 459
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 466,
            column: 5
          }
        },
        loc: {
          start: {
            line: 466,
            column: 32
          },
          end: {
            line: 475,
            column: 5
          }
        },
        line: 466
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 59
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 480
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        loc: {
          start: {
            line: 498,
            column: 44
          },
          end: {
            line: 507,
            column: 5
          }
        },
        line: 498
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 42
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 512
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 517,
            column: 62
          },
          end: {
            line: 517,
            column: 63
          }
        },
        loc: {
          start: {
            line: 517,
            column: 67
          },
          end: {
            line: 517,
            column: 92
          }
        },
        line: 517
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 518,
            column: 65
          },
          end: {
            line: 518,
            column: 66
          }
        },
        loc: {
          start: {
            line: 518,
            column: 70
          },
          end: {
            line: 518,
            column: 83
          }
        },
        line: 518
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 43
          },
          end: {
            line: 543,
            column: 5
          }
        },
        line: 534
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        },
        loc: {
          start: {
            line: 545,
            column: 39
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 545
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 554,
            column: 4
          },
          end: {
            line: 554,
            column: 5
          }
        },
        loc: {
          start: {
            line: 554,
            column: 36
          },
          end: {
            line: 562,
            column: 5
          }
        },
        line: 554
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 28
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 17,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 17,
            column: 58
          }
        }, {
          start: {
            line: 17,
            column: 62
          },
          end: {
            line: 17,
            column: 64
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 36
          }
        }, {
          start: {
            line: 18,
            column: 40
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 46
          }
        }, {
          start: {
            line: 21,
            column: 50
          },
          end: {
            line: 21,
            column: 60
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 50
          }
        }, {
          start: {
            line: 24,
            column: 54
          },
          end: {
            line: 24,
            column: 55
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 38
          }
        }, {
          start: {
            line: 25,
            column: 42
          },
          end: {
            line: 25,
            column: 48
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 42
          },
          end: {
            line: 44,
            column: 44
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "11": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 92,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 92,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "12": {
        loc: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "13": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 98,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 98,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "16": {
        loc: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "17": {
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "18": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "19": {
        loc: {
          start: {
            line: 261,
            column: 34
          },
          end: {
            line: 261,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 34
          },
          end: {
            line: 261,
            column: 44
          }
        }, {
          start: {
            line: 261,
            column: 48
          },
          end: {
            line: 261,
            column: 52
          }
        }],
        line: 261
      },
      "20": {
        loc: {
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 52
          },
          end: {
            line: 308,
            column: 91
          }
        }, {
          start: {
            line: 308,
            column: 94
          },
          end: {
            line: 308,
            column: 98
          }
        }],
        line: 308
      },
      "21": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "22": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 339,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 339,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "23": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "24": {
        loc: {
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 370,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 370,
            column: 40
          }
        }, {
          start: {
            line: 370,
            column: 44
          },
          end: {
            line: 370,
            column: 79
          }
        }],
        line: 370
      },
      "25": {
        loc: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "26": {
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "27": {
        loc: {
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 444,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 444,
            column: 53
          }
        }, {
          start: {
            line: 444,
            column: 57
          },
          end: {
            line: 444,
            column: 81
          }
        }],
        line: 444
      },
      "28": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 450,
            column: 96
          }
        }, {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 453,
            column: 58
          }
        }, {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 456,
            column: 29
          }
        }, {
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 459,
            column: 58
          }
        }],
        line: 448
      },
      "29": {
        loc: {
          start: {
            line: 450,
            column: 43
          },
          end: {
            line: 450,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 43
          },
          end: {
            line: 450,
            column: 56
          }
        }, {
          start: {
            line: 450,
            column: 60
          },
          end: {
            line: 450,
            column: 94
          }
        }],
        line: 450
      },
      "30": {
        loc: {
          start: {
            line: 474,
            column: 50
          },
          end: {
            line: 474,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 474,
            column: 77
          },
          end: {
            line: 474,
            column: 86
          }
        }, {
          start: {
            line: 474,
            column: 89
          },
          end: {
            line: 474,
            column: 97
          }
        }],
        line: 474
      },
      "31": {
        loc: {
          start: {
            line: 480,
            column: 38
          },
          end: {
            line: 480,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 480,
            column: 53
          },
          end: {
            line: 480,
            column: 57
          }
        }],
        line: 480
      },
      "32": {
        loc: {
          start: {
            line: 485,
            column: 26
          },
          end: {
            line: 485,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 485,
            column: 26
          },
          end: {
            line: 485,
            column: 41
          }
        }, {
          start: {
            line: 485,
            column: 45
          },
          end: {
            line: 485,
            column: 47
          }
        }],
        line: 485
      },
      "33": {
        loc: {
          start: {
            line: 488,
            column: 27
          },
          end: {
            line: 488,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 488,
            column: 42
          },
          end: {
            line: 488,
            column: 62
          }
        }, {
          start: {
            line: 488,
            column: 65
          },
          end: {
            line: 488,
            column: 70
          }
        }],
        line: 488
      },
      "34": {
        loc: {
          start: {
            line: 489,
            column: 24
          },
          end: {
            line: 489,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 489,
            column: 39
          },
          end: {
            line: 489,
            column: 62
          }
        }, {
          start: {
            line: 489,
            column: 65
          },
          end: {
            line: 489,
            column: 69
          }
        }],
        line: 489
      },
      "35": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "36": {
        loc: {
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "37": {
        loc: {
          start: {
            line: 524,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1c9c7b12f85e3ed323183255c29a65b4e2343b2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ovjrxkkf9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ovjrxkkf9();
/**
 * Auto-Fix Engine
 * 
 * Orchestrates comprehensive TODO.json error detection and automatic repair
 * using the TodoValidator and ErrorRecovery components.
 */

const fs =
/* istanbul ignore next */
(cov_ovjrxkkf9().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_ovjrxkkf9().s[1]++, require('path'));
const TodoValidator =
/* istanbul ignore next */
(cov_ovjrxkkf9().s[2]++, require('./todoValidator'));
const ErrorRecovery =
/* istanbul ignore next */
(cov_ovjrxkkf9().s[3]++, require('./errorRecovery'));
const Logger =
/* istanbul ignore next */
(cov_ovjrxkkf9().s[4]++, require('./logger'));
class AutoFixer {
  constructor(options =
  /* istanbul ignore next */
  (cov_ovjrxkkf9().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[0]++;
    cov_ovjrxkkf9().s[5]++;
    this.validator = new TodoValidator();
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[6]++;
    this.recovery = new ErrorRecovery(
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[1][0]++, options.recovery) ||
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[1][1]++, {}));
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[7]++;
    this.logger =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[2][0]++, options.logger) ||
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[2][1]++, new Logger(process.cwd()));
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[8]++;
    this.options = {
      autoFixLevel:
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[3][0]++, options.autoFixLevel) ||
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[3][1]++, 'moderate'),
      // 'conservative', 'moderate', 'aggressive'
      createBackups: options.createBackups !== false,
      validateAfterFix: options.validateAfterFix !== false,
      maxFixAttempts:
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[4][0]++, options.maxFixAttempts) ||
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[4][1]++, 3),
      logLevel:
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[5][0]++, options.logLevel) ||
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[5][1]++, 'info')
    };
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[9]++;
    this.fixSession = {
      sessionId: null,
      startTime: null,
      totalErrors: 0,
      fixedErrors: 0,
      failedFixes: 0,
      operations: []
    };
  }

  /**
   * Performs comprehensive auto-fix on a TODO.json file
   * @param {string} filePath - Path to the TODO.json file
   * @param {Object} fixOptions - Options for this specific fix operation
   * @returns {Object} Comprehensive fix result
   */
  async autoFix(filePath, _fixOptions =
  /* istanbul ignore next */
  (cov_ovjrxkkf9().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[1]++;
    cov_ovjrxkkf9().s[10]++;
    this._initializeFixSession();
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[11]++;
    try {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[12]++;
      this.logger.addFlow(`Starting auto-fix for ${filePath}`);

      // Step 1: Pre-fix validation and safety checks
      const preCheck =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[13]++, await this._performPreFixChecks(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[14]++;
      if (!preCheck.canProceed) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[7][0]++;
        cov_ovjrxkkf9().s[15]++;
        return this._generateFailureResult(preCheck.reason, preCheck.details);
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[7][1]++;
      }

      // Step 2: Create backup if enabled
      let backupResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[16]++, null);
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[17]++;
      if (this.options.createBackups) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[8][0]++;
        cov_ovjrxkkf9().s[18]++;
        backupResult = await this.recovery.createBackup(filePath);
        /* istanbul ignore next */
        cov_ovjrxkkf9().s[19]++;
        this._logOperation('backup_creation', backupResult);
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[8][1]++;
      }

      // Step 3: Acquire file lock
      const lockResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[20]++, await this.recovery.acquireLock(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[21]++;
      if (!lockResult.success) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[9][0]++;
        cov_ovjrxkkf9().s[22]++;
        return this._generateFailureResult('file_lock_failed', lockResult);
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[9][1]++;
      }
      cov_ovjrxkkf9().s[23]++;
      try {
        // Step 4: Read and parse file with error handling
        const fileContent =
        /* istanbul ignore next */
        (cov_ovjrxkkf9().s[24]++, await this._safeReadFile(filePath));
        /* istanbul ignore next */
        cov_ovjrxkkf9().s[25]++;
        if (!fileContent.success) {
          /* istanbul ignore next */
          cov_ovjrxkkf9().b[10][0]++;
          cov_ovjrxkkf9().s[26]++;
          return await this._handleCorruptedFile(filePath, fileContent.error);
        } else
        /* istanbul ignore next */
        {
          cov_ovjrxkkf9().b[10][1]++;
        }

        // Step 5: Validate and fix content
        const fixResult =
        /* istanbul ignore next */
        (cov_ovjrxkkf9().s[27]++, await this._performFixCycle(fileContent.data, filePath));

        // Step 6: Write fixed content back to file
        /* istanbul ignore next */
        cov_ovjrxkkf9().s[28]++;
        if (fixResult.hasChanges) {
          /* istanbul ignore next */
          cov_ovjrxkkf9().b[11][0]++;
          const writeResult =
          /* istanbul ignore next */
          (cov_ovjrxkkf9().s[29]++, await this.recovery.atomicWrite(filePath, JSON.stringify(fixResult.data, null, 2), false // Don't create backup again
          ));
          /* istanbul ignore next */
          cov_ovjrxkkf9().s[30]++;
          if (!writeResult.success) {
            /* istanbul ignore next */
            cov_ovjrxkkf9().b[12][0]++;
            cov_ovjrxkkf9().s[31]++;
            throw new Error(`Failed to write fixed file: ${writeResult.error}`);
          } else
          /* istanbul ignore next */
          {
            cov_ovjrxkkf9().b[12][1]++;
          }
          cov_ovjrxkkf9().s[32]++;
          this._logOperation('file_write', writeResult);
        } else
        /* istanbul ignore next */
        {
          cov_ovjrxkkf9().b[11][1]++;
        }

        // Step 7: Post-fix validation
        cov_ovjrxkkf9().s[33]++;
        if (this.options.validateAfterFix) {
          /* istanbul ignore next */
          cov_ovjrxkkf9().b[13][0]++;
          const postValidation =
          /* istanbul ignore next */
          (cov_ovjrxkkf9().s[34]++, await this._performPostFixValidation(filePath));
          /* istanbul ignore next */
          cov_ovjrxkkf9().s[35]++;
          this._logOperation('post_validation', postValidation);
        } else
        /* istanbul ignore next */
        {
          cov_ovjrxkkf9().b[13][1]++;
        }
        cov_ovjrxkkf9().s[36]++;
        return this._generateSuccessResult(fixResult, backupResult);
      } finally {
        /* istanbul ignore next */
        cov_ovjrxkkf9().s[37]++;
        // Always release the lock
        await this.recovery.releaseLock(filePath, lockResult.lockId);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[38]++;
      this.logger.logError(error, 'auto-fixer');
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[39]++;
      return this._generateFailureResult('unexpected_error', {
        error: error.message
      });
    } finally {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[40]++;
      this._finalizeFixSession();
    }
  }

  /**
   * Performs a dry run to show what would be fixed without making changes
   * @param {string} filePath - Path to the TODO.json file
   * @returns {Object} Dry run result showing proposed fixes
   */
  async dryRun(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[2]++;
    cov_ovjrxkkf9().s[41]++;
    try {
      const fileContent =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[42]++, await this._safeReadFile(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[43]++;
      if (!fileContent.success) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[14][0]++;
        cov_ovjrxkkf9().s[44]++;
        return {
          success: false,
          error: fileContent.error,
          fixes: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[14][1]++;
      }
      const validationResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[45]++, this.validator.validateAndSanitize(fileContent.data, filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[46]++;
      return {
        success: true,
        wouldFix: validationResult.fixes.length > 0,
        proposedFixes: validationResult.fixes,
        errors: validationResult.errors,
        summary: validationResult.summary,
        originalValid: validationResult.isValid
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[47]++;
      return {
        success: false,
        error: error.message,
        fixes: []
      };
    }
  }

  /**
   * Fixes specific types of errors only
   * @param {string} filePath - Path to the TODO.json file
   * @param {Array} errorTypes - Array of error types to fix
   * @returns {Object} Selective fix result
   */
  async fixSpecificErrors(filePath, errorTypes) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[3]++;
    const originalAutoFixLevel =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[48]++, this.options.autoFixLevel);
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[49]++;
    this.options.autoFixLevel = 'selective';
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[50]++;
    this.selectiveErrorTypes = errorTypes;
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[51]++;
    try {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[52]++;
      return await this.autoFix(filePath);
    } finally {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[53]++;
      this.options.autoFixLevel = originalAutoFixLevel;
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[54]++;
      delete this.selectiveErrorTypes;
    }
  }

  /**
   * Recovers a completely corrupted TODO.json file
   * @param {string} filePath - Path to the corrupted file
   * @returns {Object} Recovery result
   */
  async recoverCorruptedFile(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[4]++;
    cov_ovjrxkkf9().s[55]++;
    this._initializeFixSession();
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[56]++;
    try {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[57]++;
      this.logger.addFlow(`Attempting recovery of corrupted file: ${filePath}`);
      const recoveryResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[58]++, await this.recovery.recoverCorruptedFile(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[59]++;
      this._logOperation('corruption_recovery', recoveryResult);
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[60]++;
      if (recoveryResult.success) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[15][0]++;
        // Validate the recovered file
        const validationResult =
        /* istanbul ignore next */
        (cov_ovjrxkkf9().s[61]++, this.validator.validateAndSanitize(recoveryResult.recoveredData, filePath));
        /* istanbul ignore next */
        cov_ovjrxkkf9().s[62]++;
        if (!validationResult.isValid) {
          /* istanbul ignore next */
          cov_ovjrxkkf9().b[16][0]++;
          cov_ovjrxkkf9().s[63]++;
          // Apply fixes to the recovered data
          await this.recovery.atomicWrite(filePath, JSON.stringify(validationResult.data, null, 2));
        } else
        /* istanbul ignore next */
        {
          cov_ovjrxkkf9().b[16][1]++;
        }
        cov_ovjrxkkf9().s[64]++;
        return {
          success: true,
          strategy: recoveryResult.strategy,
          message: recoveryResult.message,
          additionalFixes: validationResult.fixes.length,
          finalData: validationResult.data
        };
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[15][1]++;
      }
      cov_ovjrxkkf9().s[65]++;
      return {
        success: false,
        error: recoveryResult.error,
        strategies: recoveryResult.strategies
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[66]++;
      this.logger.logError(error, 'corruption-recovery');
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[67]++;
      return {
        success: false,
        error: error.message
      };
    } finally {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[68]++;
      this._finalizeFixSession();
    }
  }

  /**
   * Gets detailed status of a TODO.json file
   * @param {string} filePath - Path to the TODO.json file
   * @returns {Object} Detailed file status
   */
  async getFileStatus(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[5]++;
    cov_ovjrxkkf9().s[69]++;
    try {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[70]++;
      if (!fs.existsSync(filePath)) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[17][0]++;
        cov_ovjrxkkf9().s[71]++;
        return {
          exists: false,
          error: 'File does not exist',
          canAutoFix: false,
          suggestedAction: 'Create new TODO.json file'
        };
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[17][1]++;
      }
      const fileContent =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[72]++, await this._safeReadFile(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[73]++;
      if (!fileContent.success) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[18][0]++;
        cov_ovjrxkkf9().s[74]++;
        return {
          exists: true,
          readable: false,
          error: fileContent.error,
          canAutoFix: true,
          suggestedAction: 'Attempt file recovery'
        };
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[18][1]++;
      }
      const validationResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[75]++, this.validator.validateAndSanitize(fileContent.data, filePath));
      const backups =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[76]++, this.recovery.listAvailableBackups(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[77]++;
      return {
        exists: true,
        readable: true,
        valid: validationResult.isValid,
        errors: validationResult.errors,
        autoFixableErrors: validationResult.errors.filter(e => {
          /* istanbul ignore next */
          cov_ovjrxkkf9().f[6]++;
          cov_ovjrxkkf9().s[78]++;
          return e.autoFixable;
        }),
        manualFixRequired: validationResult.errors.filter(e => {
          /* istanbul ignore next */
          cov_ovjrxkkf9().f[7]++;
          cov_ovjrxkkf9().s[79]++;
          return !e.autoFixable;
        }),
        summary: validationResult.summary,
        backups: backups.length,
        mostRecentBackup:
        /* istanbul ignore next */
        (cov_ovjrxkkf9().b[19][0]++, backups[0]) ||
        /* istanbul ignore next */
        (cov_ovjrxkkf9().b[19][1]++, null),
        canAutoFix: validationResult.fixes.length > 0,
        suggestedAction: this._getSuggestedAction(validationResult)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[80]++;
      return {
        exists: fs.existsSync(filePath),
        error: error.message,
        canAutoFix: false,
        suggestedAction: 'Manual intervention required'
      };
    }
  }

  /**
   * Initializes a new fix session
   */
  _initializeFixSession() {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[8]++;
    cov_ovjrxkkf9().s[81]++;
    this.fixSession = {
      sessionId: `fix-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
      startTime: Date.now(),
      totalErrors: 0,
      fixedErrors: 0,
      failedFixes: 0,
      operations: []
    };
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[82]++;
    this.logger.addFlow(`Starting fix session: ${this.fixSession.sessionId}`);
  }

  /**
   * Finalizes the current fix session
   */
  _finalizeFixSession() {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[9]++;
    const duration =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[83]++, Date.now() - this.fixSession.startTime);
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[84]++;
    this.logger.addFlow(`Fix session completed in ${duration}ms`);
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[85]++;
    this.logger.addFlow(`Session stats: ${this.fixSession.fixedErrors}/${this.fixSession.totalErrors} errors fixed`);
  }

  /**
   * Performs pre-fix safety checks
   */
  async _performPreFixChecks(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[10]++;
    const checks =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[86]++, {
      fileExists: fs.existsSync(filePath),
      directoryWritable: await this._checkDirectoryWritable(path.dirname(filePath)),
      fileWritable: fs.existsSync(filePath) ?
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[20][0]++, await this._checkFileWritable(filePath)) :
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[20][1]++, true),
      sufficientSpace: await this._checkDiskSpace(filePath)
    });
    const failed =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[87]++, Object.entries(checks).find(([_check, passed]) => {
      /* istanbul ignore next */
      cov_ovjrxkkf9().f[11]++;
      cov_ovjrxkkf9().s[88]++;
      return !passed;
    }));
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[89]++;
    if (failed) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().b[21][0]++;
      cov_ovjrxkkf9().s[90]++;
      return {
        canProceed: false,
        reason: `Pre-fix check failed: ${failed[0]}`,
        details: checks
      };
    } else
    /* istanbul ignore next */
    {
      cov_ovjrxkkf9().b[21][1]++;
    }
    cov_ovjrxkkf9().s[91]++;
    return {
      canProceed: true,
      checks
    };
  }

  /**
   * Safely reads and parses a TODO.json file
   */
  async _safeReadFile(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[12]++;
    cov_ovjrxkkf9().s[92]++;
    try {
      const content =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[93]++, fs.readFileSync(filePath, 'utf8'));
      const parseResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[94]++, this.validator.validateJsonSyntax(content));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[95]++;
      if (!parseResult.isValid) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[22][0]++;
        cov_ovjrxkkf9().s[96]++;
        return {
          success: false,
          error: 'JSON syntax error',
          details: parseResult
        };
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[22][1]++;
      }
      cov_ovjrxkkf9().s[97]++;
      return {
        success: true,
        data: parseResult.data,
        repaired: parseResult.repaired
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[98]++;
      return {
        success: false,
        error: error.message,
        code: error.code
      };
    }
  }

  /**
   * Performs the main fix cycle with multiple attempts
   */
  async _performFixCycle(data, filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[13]++;
    let currentData =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[99]++, data);
    let totalFixes =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[100]++, []);
    let attempts =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[101]++, 0);
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[102]++;
    while (attempts < this.options.maxFixAttempts) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[103]++;
      attempts++;
      const validationResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[104]++, this.validator.validateAndSanitize(currentData, filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[105]++;
      this.fixSession.totalErrors += validationResult.errors.length;
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[106]++;
      if (
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[24][0]++, validationResult.isValid) ||
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[24][1]++, validationResult.fixes.length === 0)) {
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[23][0]++;
        cov_ovjrxkkf9().s[107]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_ovjrxkkf9().b[23][1]++;
      }

      // Apply fixes based on auto-fix level
      const applicableFixes =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[108]++, this._filterFixesByLevel(validationResult.fixes));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[109]++;
      totalFixes.push(...applicableFixes);
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[110]++;
      this.fixSession.fixedErrors += applicableFixes.length;
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[111]++;
      currentData = validationResult.data;
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[112]++;
      this._logOperation('validation_cycle', {
        attempt: attempts,
        errorsFound: validationResult.errors.length,
        fixesApplied: applicableFixes.length
      });
    }
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[113]++;
    return {
      data: currentData,
      hasChanges: totalFixes.length > 0,
      fixes: totalFixes,
      attempts,
      finalValidation: this.validator.validateAndSanitize(currentData, filePath)
    };
  }

  /**
   * Handles corrupted file recovery
   */
  async _handleCorruptedFile(filePath, error) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[14]++;
    cov_ovjrxkkf9().s[114]++;
    this._logOperation('corruption_detected', {
      error
    });
    const recoveryResult =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[115]++, await this.recoverCorruptedFile(filePath));
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[116]++;
    if (recoveryResult.success) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().b[25][0]++;
      cov_ovjrxkkf9().s[117]++;
      return this._generateSuccessResult({
        data: recoveryResult.finalData,
        hasChanges: true,
        fixes: [`File recovered using strategy: ${recoveryResult.strategy}`],
        recovery: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_ovjrxkkf9().b[25][1]++;
    }
    cov_ovjrxkkf9().s[118]++;
    return this._generateFailureResult('recovery_failed', recoveryResult);
  }

  /**
   * Performs post-fix validation
   */
  async _performPostFixValidation(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[15]++;
    cov_ovjrxkkf9().s[119]++;
    try {
      const content =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[120]++, fs.readFileSync(filePath, 'utf8'));
      const data =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[121]++, JSON.parse(content));
      const validationResult =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[122]++, this.validator.validateAndSanitize(data, filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[123]++;
      return {
        success: true,
        valid: validationResult.isValid,
        remainingErrors: validationResult.errors.length
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[124]++;
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * Filters fixes based on auto-fix level
   */
  _filterFixesByLevel(fixes) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[16]++;
    cov_ovjrxkkf9().s[125]++;
    if (
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[27][0]++, this.options.autoFixLevel === 'selective') &&
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[27][1]++, this.selectiveErrorTypes)) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().b[26][0]++;
      cov_ovjrxkkf9().s[126]++;
      return fixes.filter(fix => {
        /* istanbul ignore next */
        cov_ovjrxkkf9().f[17]++;
        cov_ovjrxkkf9().s[127]++;
        return this.selectiveErrorTypes.includes(fix.type);
      });
    } else
    /* istanbul ignore next */
    {
      cov_ovjrxkkf9().b[26][1]++;
    }
    cov_ovjrxkkf9().s[128]++;
    switch (this.options.autoFixLevel) {
      case 'conservative':
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[28][0]++;
        cov_ovjrxkkf9().s[129]++;
        return fixes.filter(fix => {
          /* istanbul ignore next */
          cov_ovjrxkkf9().f[18]++;
          cov_ovjrxkkf9().s[130]++;
          return /* istanbul ignore next */(cov_ovjrxkkf9().b[29][0]++, fix.automated) &&
          /* istanbul ignore next */
          (cov_ovjrxkkf9().b[29][1]++, fix.type.includes('MISSING_FIELD'));
        });
      case 'moderate':
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[28][1]++;
        cov_ovjrxkkf9().s[131]++;
        return fixes.filter(fix => {
          /* istanbul ignore next */
          cov_ovjrxkkf9().f[19]++;
          cov_ovjrxkkf9().s[132]++;
          return fix.automated;
        });
      case 'aggressive':
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[28][2]++;
        cov_ovjrxkkf9().s[133]++;
        return fixes;
      // Apply all fixes

      default:
        /* istanbul ignore next */
        cov_ovjrxkkf9().b[28][3]++;
        cov_ovjrxkkf9().s[134]++;
        return fixes.filter(fix => {
          /* istanbul ignore next */
          cov_ovjrxkkf9().f[20]++;
          cov_ovjrxkkf9().s[135]++;
          return fix.automated;
        });
    }
  }

  /**
   * Logs an operation in the fix session
   */
  _logOperation(type, result) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[21]++;
    cov_ovjrxkkf9().s[136]++;
    this.fixSession.operations.push({
      type,
      timestamp: Date.now(),
      result,
      success: result.success !== false
    });
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[137]++;
    this.logger.addFlow(`Operation ${type}: ${result.success !== false ?
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[30][0]++, 'SUCCESS') :
    /* istanbul ignore next */
    (cov_ovjrxkkf9().b[30][1]++, 'FAILED')}`);
  }

  /**
   * Generates a success result object
   */
  _generateSuccessResult(fixResult, backupResult =
  /* istanbul ignore next */
  (cov_ovjrxkkf9().b[31][0]++, null)) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[22]++;
    cov_ovjrxkkf9().s[138]++;
    return {
      success: true,
      sessionId: this.fixSession.sessionId,
      hasChanges: fixResult.hasChanges,
      fixesApplied:
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[32][0]++, fixResult.fixes) ||
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[32][1]++, []),
      errorsFixed: this.fixSession.fixedErrors,
      totalErrors: this.fixSession.totalErrors,
      backupCreated: backupResult ?
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[33][0]++, backupResult.success) :
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[33][1]++, false),
      backupPath: backupResult ?
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[34][0]++, backupResult.backupPath) :
      /* istanbul ignore next */
      (cov_ovjrxkkf9().b[34][1]++, null),
      operations: this.fixSession.operations,
      duration: Date.now() - this.fixSession.startTime
    };
  }

  /**
   * Generates a failure result object
   */
  _generateFailureResult(reason, details) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[23]++;
    cov_ovjrxkkf9().s[139]++;
    return {
      success: false,
      sessionId: this.fixSession.sessionId,
      reason,
      details,
      operations: this.fixSession.operations,
      duration: Date.now() - this.fixSession.startTime
    };
  }

  /**
   * Gets suggested action based on validation result
   */
  _getSuggestedAction(validationResult) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[24]++;
    cov_ovjrxkkf9().s[140]++;
    if (validationResult.isValid) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().b[35][0]++;
      cov_ovjrxkkf9().s[141]++;
      return 'File is valid, no action needed';
    } else
    /* istanbul ignore next */
    {
      cov_ovjrxkkf9().b[35][1]++;
    }
    const criticalErrors =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[142]++, validationResult.errors.filter(e => {
      /* istanbul ignore next */
      cov_ovjrxkkf9().f[25]++;
      cov_ovjrxkkf9().s[143]++;
      return e.severity === 'critical';
    }).length);
    const autoFixableErrors =
    /* istanbul ignore next */
    (cov_ovjrxkkf9().s[144]++, validationResult.errors.filter(e => {
      /* istanbul ignore next */
      cov_ovjrxkkf9().f[26]++;
      cov_ovjrxkkf9().s[145]++;
      return e.autoFixable;
    }).length);
    /* istanbul ignore next */
    cov_ovjrxkkf9().s[146]++;
    if (criticalErrors > 0) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().b[36][0]++;
      cov_ovjrxkkf9().s[147]++;
      return 'Critical errors detected, consider file recovery';
    } else
    /* istanbul ignore next */
    {
      cov_ovjrxkkf9().b[36][1]++;
    }
    cov_ovjrxkkf9().s[148]++;
    if (autoFixableErrors > 0) {
      /* istanbul ignore next */
      cov_ovjrxkkf9().b[37][0]++;
      cov_ovjrxkkf9().s[149]++;
      return 'Run auto-fix to resolve issues automatically';
    } else
    /* istanbul ignore next */
    {
      cov_ovjrxkkf9().b[37][1]++;
    }
    cov_ovjrxkkf9().s[150]++;
    return 'Manual intervention required for remaining errors';
  }

  /**
   * Utility methods for pre-fix checks
   */
  async _checkDirectoryWritable(dirPath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[27]++;
    cov_ovjrxkkf9().s[151]++;
    try {
      const testFile =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[152]++, path.join(dirPath, '.write-test'));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[153]++;
      fs.writeFileSync(testFile, 'test');
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[154]++;
      fs.unlinkSync(testFile);
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[155]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[156]++;
      return false;
    }
  }
  async _checkFileWritable(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[28]++;
    cov_ovjrxkkf9().s[157]++;
    try {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[158]++;
      fs.accessSync(filePath, fs.constants.W_OK);
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[159]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[160]++;
      return false;
    }
  }
  async _checkDiskSpace(filePath) {
    /* istanbul ignore next */
    cov_ovjrxkkf9().f[29]++;
    cov_ovjrxkkf9().s[161]++;
    // Basic implementation - in production, you might want to check actual disk space
    try {
      const stats =
      /* istanbul ignore next */
      (cov_ovjrxkkf9().s[162]++, fs.statSync(filePath));
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[163]++;
      return stats.size < 100 * 1024 * 1024; // Assume we need 100MB for operations
    } catch {
      /* istanbul ignore next */
      cov_ovjrxkkf9().s[164]++;
      return true; // If we can't check, assume it's fine
    }
  }
}
/* istanbul ignore next */
cov_ovjrxkkf9().s[165]++;
module.exports = AutoFixer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,