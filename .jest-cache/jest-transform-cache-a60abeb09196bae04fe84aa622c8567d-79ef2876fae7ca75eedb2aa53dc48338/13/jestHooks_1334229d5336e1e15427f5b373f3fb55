29cefbf9e15864b9d87f5560dbf760ab
/* istanbul ignore next */
function cov_2hzrr0cssi() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/jestHooks.js";
  var hash = "957a86062c94ff3273531d4207c32db68dd761d0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/jestHooks.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 58
        }
      },
      "1": {
        start: {
          line: 17,
          column: 11
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "2": {
        start: {
          line: 18,
          column: 13
        },
        end: {
          line: 18,
          column: 28
        }
      },
      "3": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "4": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "5": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "6": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "7": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "8": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 72
        }
      },
      "9": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "10": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 63
        }
      },
      "11": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 38
        }
      },
      "12": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "13": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 65,
          column: 82
        }
      },
      "14": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 16
        }
      },
      "15": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 26
        }
      },
      "16": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 99
        }
      },
      "17": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "18": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "19": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "20": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 82
        }
      },
      "21": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "22": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 62
        }
      },
      "23": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 64
        }
      },
      "24": {
        start: {
          line: 95,
          column: 36
        },
        end: {
          line: 95,
          column: 71
        }
      },
      "25": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 69
        }
      },
      "26": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "27": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 102,
          column: 28
        }
      },
      "28": {
        start: {
          line: 101,
          column: 75
        },
        end: {
          line: 101,
          column: 81
        }
      },
      "29": {
        start: {
          line: 105,
          column: 38
        },
        end: {
          line: 105,
          column: 80
        }
      },
      "30": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 70
        }
      },
      "31": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 113,
          column: 17
        }
      },
      "32": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 112,
          column: 23
        }
      },
      "33": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 83
        }
      },
      "34": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "35": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 137
        }
      },
      "36": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 89
        }
      },
      "37": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 48
        }
      },
      "38": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 130,
          column: 82
        }
      },
      "39": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "40": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 52
        }
      },
      "41": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "42": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 74
        }
      },
      "43": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 26
        }
      },
      "44": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 82
        }
      },
      "45": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 24
        }
      },
      "46": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "47": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 75
        }
      },
      "48": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 79
        }
      },
      "49": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "50": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 76
        }
      },
      "51": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 79
        }
      },
      "52": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 57
        }
      },
      "53": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "54": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "55": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 89
        }
      },
      "56": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 62
        }
      },
      "57": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "58": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 199,
          column: 28
        }
      },
      "59": {
        start: {
          line: 198,
          column: 66
        },
        end: {
          line: 198,
          column: 72
        }
      },
      "60": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 59
        }
      },
      "61": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 26
        }
      },
      "62": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 92
        }
      },
      "63": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 24
        }
      },
      "64": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "65": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "66": {
        start: {
          line: 234,
          column: 27
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "67": {
        start: {
          line: 248,
          column: 31
        },
        end: {
          line: 248,
          column: 79
        }
      },
      "68": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 83
        }
      },
      "69": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 85
        }
      },
      "70": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 67
        }
      },
      "71": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 26
        }
      },
      "72": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 95
        }
      },
      "73": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 24
        }
      },
      "74": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "75": {
        start: {
          line: 267,
          column: 27
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "76": {
        start: {
          line: 274,
          column: 31
        },
        end: {
          line: 274,
          column: 102
        }
      },
      "77": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 83
        }
      },
      "78": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 85
        }
      },
      "79": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 67
        }
      },
      "80": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 94
        }
      },
      "81": {
        start: {
          line: 289,
          column: 32
        },
        end: {
          line: 289,
          column: 34
        }
      },
      "82": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "83": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 296,
          column: 15
        }
      },
      "84": {
        start: {
          line: 299,
          column: 35
        },
        end: {
          line: 299,
          column: 105
        }
      },
      "85": {
        start: {
          line: 299,
          column: 74
        },
        end: {
          line: 299,
          column: 104
        }
      },
      "86": {
        start: {
          line: 300,
          column: 36
        },
        end: {
          line: 300,
          column: 104
        }
      },
      "87": {
        start: {
          line: 300,
          column: 75
        },
        end: {
          line: 300,
          column: 103
        }
      },
      "88": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "89": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 308,
          column: 19
        }
      },
      "90": {
        start: {
          line: 307,
          column: 51
        },
        end: {
          line: 307,
          column: 57
        }
      },
      "91": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "92": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 317,
          column: 19
        }
      },
      "93": {
        start: {
          line: 316,
          column: 52
        },
        end: {
          line: 316,
          column: 58
        }
      },
      "94": {
        start: {
          line: 321,
          column: 39
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "95": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 74
        }
      },
      "96": {
        start: {
          line: 322,
          column: 54
        },
        end: {
          line: 322,
          column: 73
        }
      },
      "97": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 332,
          column: 13
        }
      },
      "98": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 331,
          column: 19
        }
      },
      "99": {
        start: {
          line: 330,
          column: 55
        },
        end: {
          line: 330,
          column: 61
        }
      },
      "100": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 31
        }
      },
      "101": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "102": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 24
        }
      },
      "103": {
        start: {
          line: 346,
          column: 22
        },
        end: {
          line: 346,
          column: 58
        }
      },
      "104": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 54
        }
      },
      "105": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 48
        }
      },
      "106": {
        start: {
          line: 355,
          column: 27
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "107": {
        start: {
          line: 361,
          column: 23
        },
        end: {
          line: 361,
          column: 76
        }
      },
      "108": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "109": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 54
        }
      },
      "110": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 48
        }
      },
      "111": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 383,
          column: 6
        }
      },
      "112": {
        start: {
          line: 380,
          column: 22
        },
        end: {
          line: 380,
          column: 55
        }
      },
      "113": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 42
        }
      },
      "114": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 41
        }
      },
      "115": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 397,
          column: 6
        }
      },
      "116": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "117": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 68
        }
      },
      "118": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 106
        }
      },
      "119": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 64
        }
      },
      "120": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 29
        }
      },
      "121": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 31
        }
      },
      "122": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 98
        }
      },
      "123": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "124": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 62
        }
      },
      "125": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "126": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 65
        }
      },
      "127": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 20
        }
      },
      "128": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "129": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 22
        }
      },
      "130": {
        start: {
          line: 436,
          column: 16
        },
        end: {
          line: 436,
          column: 22
        }
      },
      "131": {
        start: {
          line: 441,
          column: 0
        },
        end: {
          line: 446,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 84
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 101,
            column: 70
          },
          end: {
            line: 101,
            column: 71
          }
        },
        loc: {
          start: {
            line: 101,
            column: 75
          },
          end: {
            line: 101,
            column: 81
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 34
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 159
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 37
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 172
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 185
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 198,
            column: 61
          },
          end: {
            line: 198,
            column: 62
          }
        },
        loc: {
          start: {
            line: 198,
            column: 66
          },
          end: {
            line: 198,
            column: 72
          }
        },
        line: 198
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 26
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 216
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 66
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 232
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 51
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 265
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 288
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 299,
            column: 69
          },
          end: {
            line: 299,
            column: 70
          }
        },
        loc: {
          start: {
            line: 299,
            column: 74
          },
          end: {
            line: 299,
            column: 104
          }
        },
        line: 299
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 300,
            column: 70
          },
          end: {
            line: 300,
            column: 71
          }
        },
        loc: {
          start: {
            line: 300,
            column: 75
          },
          end: {
            line: 300,
            column: 103
          }
        },
        line: 300
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 307,
            column: 46
          },
          end: {
            line: 307,
            column: 47
          }
        },
        loc: {
          start: {
            line: 307,
            column: 51
          },
          end: {
            line: 307,
            column: 57
          }
        },
        line: 307
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 316,
            column: 47
          },
          end: {
            line: 316,
            column: 48
          }
        },
        loc: {
          start: {
            line: 316,
            column: 52
          },
          end: {
            line: 316,
            column: 58
          }
        },
        line: 316
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 321,
            column: 73
          },
          end: {
            line: 321,
            column: 74
          }
        },
        loc: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 322,
            column: 74
          }
        },
        line: 322
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 322,
            column: 48
          },
          end: {
            line: 322,
            column: 49
          }
        },
        loc: {
          start: {
            line: 322,
            column: 54
          },
          end: {
            line: 322,
            column: 73
          }
        },
        line: 322
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 330,
            column: 50
          },
          end: {
            line: 330,
            column: 51
          }
        },
        loc: {
          start: {
            line: 330,
            column: 55
          },
          end: {
            line: 330,
            column: 61
          }
        },
        line: 330
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 341
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 44
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 354
      },
      "21": {
        name: "createGlobalSetup",
        decl: {
          start: {
            line: 378,
            column: 9
          },
          end: {
            line: 378,
            column: 26
          }
        },
        loc: {
          start: {
            line: 378,
            column: 41
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 378
      },
      "22": {
        name: "jestGlobalSetup",
        decl: {
          start: {
            line: 379,
            column: 26
          },
          end: {
            line: 379,
            column: 41
          }
        },
        loc: {
          start: {
            line: 379,
            column: 44
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 379
      },
      "23": {
        name: "createGlobalTeardown",
        decl: {
          start: {
            line: 389,
            column: 9
          },
          end: {
            line: 389,
            column: 29
          }
        },
        loc: {
          start: {
            line: 389,
            column: 45
          },
          end: {
            line: 398,
            column: 1
          }
        },
        line: 389
      },
      "24": {
        name: "jestGlobalTeardown",
        decl: {
          start: {
            line: 390,
            column: 26
          },
          end: {
            line: 390,
            column: 44
          }
        },
        loc: {
          start: {
            line: 390,
            column: 47
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 390
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 404,
            column: 4
          },
          end: {
            line: 404,
            column: 5
          }
        },
        loc: {
          start: {
            line: 404,
            column: 33
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 404
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        },
        loc: {
          start: {
            line: 410,
            column: 18
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 410
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 21
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 417
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 19
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 424
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 41
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 428
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 28
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 44
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 61
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 50
          }
        }, {
          start: {
            line: 26,
            column: 54
          },
          end: {
            line: 26,
            column: 59
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 42
          }
        }, {
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 86
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 50
          }
        }, {
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 33,
            column: 59
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 124,
            column: 13
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 44
          },
          end: {
            line: 106,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 44
          },
          end: {
            line: 106,
            column: 63
          }
        }, {
          start: {
            line: 106,
            column: 67
          },
          end: {
            line: 106,
            column: 69
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 119,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 119,
            column: 48
          }
        }, {
          start: {
            line: 119,
            column: 52
          },
          end: {
            line: 119,
            column: 89
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "13": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "14": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "15": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        }, {
          start: {
            line: 297,
            column: 15
          },
          end: {
            line: 333,
            column: 9
          }
        }],
        line: 291
      },
      "16": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "17": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "18": {
        loc: {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 332,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 332,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "19": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "20": {
        loc: {
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 342,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 342,
            column: 39
          }
        }, {
          start: {
            line: 342,
            column: 43
          },
          end: {
            line: 342,
            column: 68
          }
        }],
        line: 342
      },
      "21": {
        loc: {
          start: {
            line: 354,
            column: 17
          },
          end: {
            line: 354,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 26
          }
        }],
        line: 354
      },
      "22": {
        loc: {
          start: {
            line: 354,
            column: 28
          },
          end: {
            line: 354,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 354,
            column: 36
          },
          end: {
            line: 354,
            column: 42
          }
        }],
        line: 354
      },
      "23": {
        loc: {
          start: {
            line: 361,
            column: 26
          },
          end: {
            line: 361,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 26
          },
          end: {
            line: 361,
            column: 43
          }
        }, {
          start: {
            line: 361,
            column: 47
          },
          end: {
            line: 361,
            column: 51
          }
        }],
        line: 361
      },
      "24": {
        loc: {
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: 365,
            column: 15
          },
          end: {
            line: 367,
            column: 9
          }
        }],
        line: 363
      },
      "25": {
        loc: {
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 378,
            column: 37
          },
          end: {
            line: 378,
            column: 39
          }
        }],
        line: 378
      },
      "26": {
        loc: {
          start: {
            line: 389,
            column: 30
          },
          end: {
            line: 389,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 389,
            column: 41
          },
          end: {
            line: 389,
            column: 43
          }
        }],
        line: 389
      },
      "27": {
        loc: {
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        }, {
          start: {
            line: 393,
            column: 15
          },
          end: {
            line: 396,
            column: 9
          }
        }],
        line: 391
      },
      "28": {
        loc: {
          start: {
            line: 407,
            column: 46
          },
          end: {
            line: 407,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 46
          },
          end: {
            line: 407,
            column: 90
          }
        }, {
          start: {
            line: 407,
            column: 94
          },
          end: {
            line: 407,
            column: 96
          }
        }],
        line: 407
      },
      "29": {
        loc: {
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 414,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 414,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "30": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "31": {
        loc: {
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 431,
            column: 12
          },
          end: {
            line: 433,
            column: 22
          }
        }, {
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 436,
            column: 22
          }
        }],
        line: 430
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "957a86062c94ff3273531d4207c32db68dd761d0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hzrr0cssi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hzrr0cssi();
/**
 * Jest Test Hooks for Node Modules Monitoring
 * 
 * This module provides Jest lifecycle hooks that automatically monitor
 * node_modules file integrity during test execution. It integrates with
 * the NodeModulesMonitor to provide seamless corruption detection.
 * 
 * Features:
 * - Automatic monitoring setup before test runs
 * - Integrity checking after test completion
 * - Automatic restoration of corrupted files
 * - Detailed reporting of violations
 * - Integration with Jest's global setup/teardown
 */

const NodeModulesMonitor =
/* istanbul ignore next */
(cov_2hzrr0cssi().s[0]++, require('./nodeModulesMonitor'));
const fs =
/* istanbul ignore next */
(cov_2hzrr0cssi().s[1]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_2hzrr0cssi().s[2]++, require('path'));
class JestNodeModulesHooks {
  constructor(options =
  /* istanbul ignore next */
  (cov_2hzrr0cssi().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[0]++;
    cov_2hzrr0cssi().s[3]++;
    this.monitor = new NodeModulesMonitor({
      projectRoot:
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[1][0]++, options.projectRoot) ||
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[1][1]++, process.cwd()),
      enableBackup: options.enableBackup !== false,
      enableRestore: options.enableRestore !== false,
      enableDetailed:
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[2][0]++, options.enableDetailed) ||
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[2][1]++, false),
      ...options
    });
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[4]++;
    this.config = {
      reportFile:
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[3][0]++, options.reportFile) ||
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[3][1]++, 'development/test-integrity-report.json'),
      failOnViolations: options.failOnViolations !== false,
      verboseLogging:
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[4][0]++, options.verboseLogging) ||
      /* istanbul ignore next */
      (cov_2hzrr0cssi().b[4][1]++, false),
      ...options.config
    };
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[5]++;
    this.testRunData = {
      startTime: null,
      endTime: null,
      violations: [],
      restored: []
    };
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[6]++;
    this.setupComplete = false;
  }

  /**
   * Global setup hook - called before all tests
   * Start monitoring and create initial checksums/backups
   */
  async globalSetup() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[1]++;
    cov_2hzrr0cssi().s[7]++;
    try {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[8]++;
      this.log('Starting Jest node_modules integrity monitoring');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[9]++;
      this.testRunData.startTime = new Date().toISOString();
      const result =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[10]++, await this.monitor.startMonitoring());
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[11]++;
      this.setupComplete = true;
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[12]++;
      this.log('Node_modules monitoring setup complete', {
        filesMonitored: result.filesMonitored,
        timestamp: result.timestamp
      });

      // Store monitoring state for teardown
      const stateFile =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[13]++, path.join(process.cwd(), '.jest-monitor-state.json'));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[14]++;
      await fs.promises.writeFile(stateFile, JSON.stringify({
        monitoringActive: true,
        startTime: this.testRunData.startTime,
        filesMonitored: result.filesMonitored
      }));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[15]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[16]++;
      this.log('Failed to setup node_modules monitoring', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[17]++;
      throw error;
    }
  }

  /**
   * Global teardown hook - called after all tests
   * Check integrity and restore any corrupted files
   */
  async globalTeardown() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[2]++;
    cov_2hzrr0cssi().s[18]++;
    try {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[19]++;
      if (!this.setupComplete) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[5][0]++;
        cov_2hzrr0cssi().s[20]++;
        this.log('Monitoring was not properly setup - skipping teardown');
        /* istanbul ignore next */
        cov_2hzrr0cssi().s[21]++;
        return {
          skipped: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_2hzrr0cssi().b[5][1]++;
      }
      cov_2hzrr0cssi().s[22]++;
      this.log('Starting node_modules integrity check');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[23]++;
      this.testRunData.endTime = new Date().toISOString();

      // Check integrity
      const integrityResult =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[24]++, await this.monitor.checkIntegrity());
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[25]++;
      this.testRunData.violations = integrityResult.violations;
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[26]++;
      if (integrityResult.violations.length > 0) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[6][0]++;
        cov_2hzrr0cssi().s[27]++;
        this.log('Node_modules integrity violations detected', {
          violationCount: integrityResult.violations.length,
          types: [...new Set(integrityResult.violations.map(v => {
            /* istanbul ignore next */
            cov_2hzrr0cssi().f[3]++;
            cov_2hzrr0cssi().s[28]++;
            return v.type;
          }))]
        }, 'error');

        // Attempt to restore corrupted files
        const restoreResult =
        /* istanbul ignore next */
        (cov_2hzrr0cssi().s[29]++, await this.monitor.restoreCorruptedFiles());
        /* istanbul ignore next */
        cov_2hzrr0cssi().s[30]++;
        this.testRunData.restored =
        /* istanbul ignore next */
        (cov_2hzrr0cssi().b[7][0]++, restoreResult.files) ||
        /* istanbul ignore next */
        (cov_2hzrr0cssi().b[7][1]++, []);
        /* istanbul ignore next */
        cov_2hzrr0cssi().s[31]++;
        if (restoreResult.restored > 0) {
          /* istanbul ignore next */
          cov_2hzrr0cssi().b[8][0]++;
          cov_2hzrr0cssi().s[32]++;
          this.log('Corrupted files restored', {
            restoredCount: restoreResult.restored,
            files: restoreResult.files
          });
        } else
        /* istanbul ignore next */
        {
          cov_2hzrr0cssi().b[8][1]++;
        }

        // Generate detailed report
        cov_2hzrr0cssi().s[33]++;
        await this.generateIntegrityReport(integrityResult, restoreResult);

        // Optionally fail the test run
        /* istanbul ignore next */
        cov_2hzrr0cssi().s[34]++;
        if (
        /* istanbul ignore next */
        (cov_2hzrr0cssi().b[10][0]++, this.config.failOnViolations) &&
        /* istanbul ignore next */
        (cov_2hzrr0cssi().b[10][1]++, integrityResult.violations.length > 0)) {
          /* istanbul ignore next */
          cov_2hzrr0cssi().b[9][0]++;
          cov_2hzrr0cssi().s[35]++;
          throw new Error(`Node_modules integrity violations detected: ${integrityResult.violations.length} violations found`);
        } else
        /* istanbul ignore next */
        {
          cov_2hzrr0cssi().b[9][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[6][1]++;
        cov_2hzrr0cssi().s[36]++;
        this.log('Node_modules integrity check passed - no violations detected');
      }

      // Stop monitoring
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[37]++;
      await this.monitor.stopMonitoring();

      // Cleanup state file
      const stateFile =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[38]++, path.join(process.cwd(), '.jest-monitor-state.json'));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[39]++;
      try {
        /* istanbul ignore next */
        cov_2hzrr0cssi().s[40]++;
        await fs.promises.unlink(stateFile);
      } catch {
        // Ignore cleanup errors
      }
      const result =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[41]++, {
        success: integrityResult.violations.length === 0,
        violations: integrityResult.violations,
        restored: this.testRunData.restored,
        filesChecked: integrityResult.filesChecked,
        duration: this.calculateDuration()
      });
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[42]++;
      this.log('Node_modules monitoring teardown complete', result);
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[43]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[44]++;
      this.log('Failed during teardown', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[45]++;
      throw error;
    }
  }

  /**
   * Setup hook for individual test files (optional)
   * Can be used for fine-grained monitoring
   */
  async setupTest(testFilePath) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[4]++;
    cov_2hzrr0cssi().s[46]++;
    if (this.config.verboseLogging) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[11][0]++;
      cov_2hzrr0cssi().s[47]++;
      this.log(`Starting test file: ${path.basename(testFilePath)}`);
    } else
    /* istanbul ignore next */
    {
      cov_2hzrr0cssi().b[11][1]++;
    }

    // Could add per-test monitoring if needed
    cov_2hzrr0cssi().s[48]++;
    return {
      testFile: testFilePath,
      timestamp: new Date().toISOString()
    };
  }

  /**
   * Teardown hook for individual test files (optional)
   * Can be used for per-test integrity checks
   */
  async teardownTest(testFilePath) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[5]++;
    cov_2hzrr0cssi().s[49]++;
    if (this.config.verboseLogging) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[12][0]++;
      cov_2hzrr0cssi().s[50]++;
      this.log(`Completed test file: ${path.basename(testFilePath)}`);
    } else
    /* istanbul ignore next */
    {
      cov_2hzrr0cssi().b[12][1]++;
    }

    // Could add per-test integrity checks if needed
    cov_2hzrr0cssi().s[51]++;
    return {
      testFile: testFilePath,
      timestamp: new Date().toISOString()
    };
  }

  /**
   * Emergency integrity check - can be called manually
   * Useful for debugging or manual verification
   */
  async emergencyIntegrityCheck() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[6]++;
    cov_2hzrr0cssi().s[52]++;
    this.log('Performing emergency integrity check');
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[53]++;
    try {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[54]++;
      if (!this.setupComplete) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[13][0]++;
        cov_2hzrr0cssi().s[55]++;
        throw new Error('Monitoring not initialized - call globalSetup() first');
      } else
      /* istanbul ignore next */
      {
        cov_2hzrr0cssi().b[13][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[56]++, await this.monitor.checkIntegrity());
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[57]++;
      if (result.violations.length > 0) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[14][0]++;
        cov_2hzrr0cssi().s[58]++;
        this.log('Emergency check found violations', {
          violations: result.violations.length,
          types: [...new Set(result.violations.map(v => {
            /* istanbul ignore next */
            cov_2hzrr0cssi().f[7]++;
            cov_2hzrr0cssi().s[59]++;
            return v.type;
          }))]
        }, 'error');

        // Generate emergency report
        /* istanbul ignore next */
        cov_2hzrr0cssi().s[60]++;
        await this.generateEmergencyReport(result);
      } else
      /* istanbul ignore next */
      {
        cov_2hzrr0cssi().b[14][1]++;
      }
      cov_2hzrr0cssi().s[61]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[62]++;
      this.log('Emergency integrity check failed', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[63]++;
      throw error;
    }
  }

  /**
   * Get monitoring status and statistics
   */
  getMonitoringStatus() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[8]++;
    cov_2hzrr0cssi().s[64]++;
    return {
      setupComplete: this.setupComplete,
      monitoringActive: this.monitor.monitoringActive,
      testRunData: this.testRunData,
      config: this.config
    };
  }

  // ========================================================================
  // PRIVATE METHODS
  // ========================================================================

  /**
   * Generate comprehensive integrity report
   */
  async generateIntegrityReport(integrityResult, restoreResult) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[9]++;
    cov_2hzrr0cssi().s[65]++;
    try {
      const report =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[66]++, {
        testRun: {
          startTime: this.testRunData.startTime,
          endTime: this.testRunData.endTime,
          duration: this.calculateDuration()
        },
        integrity: integrityResult,
        restoration: restoreResult,
        monitor: this.monitor.generateReport(),
        recommendations: this.generateRecommendations(integrityResult),
        timestamp: new Date().toISOString()
      });

      // Write report to file
      const reportPath =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[67]++, path.join(process.cwd(), this.config.reportFile));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[68]++;
      await fs.promises.mkdir(path.dirname(reportPath), {
        recursive: true
      });
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[69]++;
      await fs.promises.writeFile(reportPath, JSON.stringify(report, null, 2));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[70]++;
      this.log('Integrity report generated', {
        reportPath
      });
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[71]++;
      return report;
    } catch (error) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[72]++;
      this.log('Failed to generate integrity report', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[73]++;
      throw error;
    }
  }

  /**
   * Generate emergency report for manual checks
   */
  async generateEmergencyReport(integrityResult) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[10]++;
    cov_2hzrr0cssi().s[74]++;
    try {
      const report =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[75]++, {
        type: 'EMERGENCY_CHECK',
        timestamp: new Date().toISOString(),
        integrity: integrityResult,
        monitor: this.monitor.generateReport()
      });
      const reportPath =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[76]++, path.join(process.cwd(), 'development/emergency-integrity-report.json'));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[77]++;
      await fs.promises.mkdir(path.dirname(reportPath), {
        recursive: true
      });
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[78]++;
      await fs.promises.writeFile(reportPath, JSON.stringify(report, null, 2));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[79]++;
      this.log('Emergency report generated', {
        reportPath
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[80]++;
      this.log('Failed to generate emergency report', {
        error: error.message
      }, 'warn');
    }
  }

  /**
   * Generate recommendations based on violations
   */
  generateRecommendations(integrityResult) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[11]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2hzrr0cssi().s[81]++, []);
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[82]++;
    if (integrityResult.violations.length === 0) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[15][0]++;
      cov_2hzrr0cssi().s[83]++;
      recommendations.push({
        type: 'SUCCESS',
        message: 'No integrity violations detected. Node_modules is clean.',
        priority: 'info'
      });
    } else {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[15][1]++;
      // Analyze violation patterns
      const corruptedFiles =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[84]++, integrityResult.violations.filter(v => {
        /* istanbul ignore next */
        cov_2hzrr0cssi().f[12]++;
        cov_2hzrr0cssi().s[85]++;
        return v.type === 'CHECKSUM_MISMATCH';
      }));
      const unexpectedFiles =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[86]++, integrityResult.violations.filter(v => {
        /* istanbul ignore next */
        cov_2hzrr0cssi().f[13]++;
        cov_2hzrr0cssi().s[87]++;
        return v.type === 'UNEXPECTED_FILE';
      }));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[88]++;
      if (corruptedFiles.length > 0) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[16][0]++;
        cov_2hzrr0cssi().s[89]++;
        recommendations.push({
          type: 'CORRUPTED_FILES',
          message: `${corruptedFiles.length} files were corrupted during tests. Consider investigating test isolation.`,
          priority: 'high',
          files: corruptedFiles.map(v => {
            /* istanbul ignore next */
            cov_2hzrr0cssi().f[14]++;
            cov_2hzrr0cssi().s[90]++;
            return v.file;
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_2hzrr0cssi().b[16][1]++;
      }
      cov_2hzrr0cssi().s[91]++;
      if (unexpectedFiles.length > 0) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[17][0]++;
        cov_2hzrr0cssi().s[92]++;
        recommendations.push({
          type: 'UNEXPECTED_FILES',
          message: `${unexpectedFiles.length} unexpected files found. Check for test data leakage.`,
          priority: 'medium',
          files: unexpectedFiles.map(v => {
            /* istanbul ignore next */
            cov_2hzrr0cssi().f[15]++;
            cov_2hzrr0cssi().s[93]++;
            return v.file;
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_2hzrr0cssi().b[17][1]++;
      }

      // Critical file specific recommendations
      const criticalViolations =
      /* istanbul ignore next */
      (cov_2hzrr0cssi().s[94]++, integrityResult.violations.filter(v => {
        /* istanbul ignore next */
        cov_2hzrr0cssi().f[16]++;
        cov_2hzrr0cssi().s[95]++;
        return this.monitor.criticalFiles.some(cf => {
          /* istanbul ignore next */
          cov_2hzrr0cssi().f[17]++;
          cov_2hzrr0cssi().s[96]++;
          return v.file.includes(cf);
        });
      }));
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[97]++;
      if (criticalViolations.length > 0) {
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[18][0]++;
        cov_2hzrr0cssi().s[98]++;
        recommendations.push({
          type: 'CRITICAL_FILES',
          message: 'Critical Node.js files were corrupted. This may cause test failures or system instability.',
          priority: 'critical',
          files: criticalViolations.map(v => {
            /* istanbul ignore next */
            cov_2hzrr0cssi().f[18]++;
            cov_2hzrr0cssi().s[99]++;
            return v.file;
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_2hzrr0cssi().b[18][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[100]++;
    return recommendations;
  }

  /**
   * Calculate test run duration
   */
  calculateDuration() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[19]++;
    cov_2hzrr0cssi().s[101]++;
    if (
    /* istanbul ignore next */
    (cov_2hzrr0cssi().b[20][0]++, !this.testRunData.startTime) ||
    /* istanbul ignore next */
    (cov_2hzrr0cssi().b[20][1]++, !this.testRunData.endTime)) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[19][0]++;
      cov_2hzrr0cssi().s[102]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2hzrr0cssi().b[19][1]++;
    }
    const start =
    /* istanbul ignore next */
    (cov_2hzrr0cssi().s[103]++, new Date(this.testRunData.startTime));
    const end =
    /* istanbul ignore next */
    (cov_2hzrr0cssi().s[104]++, new Date(this.testRunData.endTime));
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[105]++;
    return Math.round((end - start) / 1000); // seconds
  }

  /**
   * Log messages with consistent formatting
   */
  log(message, data =
  /* istanbul ignore next */
  (cov_2hzrr0cssi().b[21][0]++, {}), level =
  /* istanbul ignore next */
  (cov_2hzrr0cssi().b[22][0]++, 'info')) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[20]++;
    const levelEmoji =
    /* istanbul ignore next */
    (cov_2hzrr0cssi().s[106]++, {
      info: 'ℹ️',
      warn: '⚠️',
      error: '❌'
    });
    const prefix =
    /* istanbul ignore next */
    (cov_2hzrr0cssi().s[107]++, `${
    /* istanbul ignore next */
    (cov_2hzrr0cssi().b[23][0]++, levelEmoji[level]) ||
    /* istanbul ignore next */
    (cov_2hzrr0cssi().b[23][1]++, 'ℹ️')} [JestNodeModulesHooks]`);
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[108]++;
    if (Object.keys(data).length > 0) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[24][0]++;
      cov_2hzrr0cssi().s[109]++;
      console.log(`${prefix} ${message}`, data);
    } else {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[24][1]++;
      cov_2hzrr0cssi().s[110]++;
      console.log(`${prefix} ${message}`);
    }
  }
}

// ============================================================================
// JEST INTEGRATION HELPERS
// ============================================================================

/**
 * Create Jest global setup function
 */
function createGlobalSetup(options =
/* istanbul ignore next */
(cov_2hzrr0cssi().b[25][0]++, {})) {
  /* istanbul ignore next */
  cov_2hzrr0cssi().f[21]++;
  cov_2hzrr0cssi().s[111]++;
  return async function jestGlobalSetup() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[22]++;
    const hooks =
    /* istanbul ignore next */
    (cov_2hzrr0cssi().s[112]++, new JestNodeModulesHooks(options));
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[113]++;
    global.__nodeModulesHooks = hooks;
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[114]++;
    return await hooks.globalSetup();
  };
}

/**
 * Create Jest global teardown function
 */
function createGlobalTeardown(_options =
/* istanbul ignore next */
(cov_2hzrr0cssi().b[26][0]++, {})) {
  /* istanbul ignore next */
  cov_2hzrr0cssi().f[23]++;
  cov_2hzrr0cssi().s[115]++;
  return async function jestGlobalTeardown() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[24]++;
    cov_2hzrr0cssi().s[116]++;
    if (global.__nodeModulesHooks) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[27][0]++;
      cov_2hzrr0cssi().s[117]++;
      return await global.__nodeModulesHooks.globalTeardown();
    } else {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[27][1]++;
      cov_2hzrr0cssi().s[118]++;
      console.warn('⚠️ Node modules hooks not found - monitoring may not have been setup properly');
      /* istanbul ignore next */
      cov_2hzrr0cssi().s[119]++;
      return {
        skipped: true,
        reason: 'hooks_not_found'
      };
    }
  };
}

/**
 * Create test environment with node modules monitoring
 */
class NodeModulesTestEnvironment {
  constructor(config, context) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[25]++;
    cov_2hzrr0cssi().s[120]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[121]++;
    this.context = context;
    /* istanbul ignore next */
    cov_2hzrr0cssi().s[122]++;
    this.hooks = new JestNodeModulesHooks(
    /* istanbul ignore next */
    (cov_2hzrr0cssi().b[28][0]++, config.projectConfig?.testEnvironmentOptions) ||
    /* istanbul ignore next */
    (cov_2hzrr0cssi().b[28][1]++, {}));
  }
  async setup() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[26]++;
    cov_2hzrr0cssi().s[123]++;
    // Individual test setup if needed
    if (this.context.testPath) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[29][0]++;
      cov_2hzrr0cssi().s[124]++;
      await this.hooks.setupTest(this.context.testPath);
    } else
    /* istanbul ignore next */
    {
      cov_2hzrr0cssi().b[29][1]++;
    }
  }
  async teardown() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[27]++;
    cov_2hzrr0cssi().s[125]++;
    // Individual test teardown if needed
    if (this.context.testPath) {
      /* istanbul ignore next */
      cov_2hzrr0cssi().b[30][0]++;
      cov_2hzrr0cssi().s[126]++;
      await this.hooks.teardownTest(this.context.testPath);
    } else
    /* istanbul ignore next */
    {
      cov_2hzrr0cssi().b[30][1]++;
    }
  }
  getVmContext() {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[28]++;
    cov_2hzrr0cssi().s[127]++;
    return null; // Use default VM context
  }
  async handleTestEvent(event, _state) {
    /* istanbul ignore next */
    cov_2hzrr0cssi().f[29]++;
    cov_2hzrr0cssi().s[128]++;
    // Handle Jest test events if needed
    switch (event.name) {
      case 'test_start':
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[31][0]++;
        cov_2hzrr0cssi().s[129]++;
        // Test started
        break;
      case 'test_done':
        /* istanbul ignore next */
        cov_2hzrr0cssi().b[31][1]++;
        cov_2hzrr0cssi().s[130]++;
        // Test completed
        break;
    }
  }
}
/* istanbul ignore next */
cov_2hzrr0cssi().s[131]++;
module.exports = {
  JestNodeModulesHooks,
  createGlobalSetup,
  createGlobalTeardown,
  NodeModulesTestEnvironment
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,