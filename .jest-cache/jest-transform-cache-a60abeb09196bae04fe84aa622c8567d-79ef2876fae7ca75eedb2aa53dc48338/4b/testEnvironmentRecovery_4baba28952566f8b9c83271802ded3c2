5c83cae03aa5134eee0295c5e7100fe2
/* istanbul ignore next */
function cov_ve6xjpezz() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/testEnvironmentRecovery.js";
  var hash = "200ce36f4061db389dcc63221956e88014d7fc2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/testEnvironmentRecovery.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 11
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "1": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "2": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 58
        }
      },
      "4": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 78
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "7": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "8": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "9": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "10": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 36
        }
      },
      "11": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "12": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 40
        }
      },
      "13": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "14": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "15": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "16": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "17": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 66
        }
      },
      "18": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "19": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 120,
          column: 14
        }
      },
      "20": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "21": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 64
        }
      },
      "22": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 64
        }
      },
      "23": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 66
        }
      },
      "24": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 74
        }
      },
      "25": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "26": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 53
        }
      },
      "27": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "28": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 51
        }
      },
      "29": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 41
        }
      },
      "30": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 61
        }
      },
      "31": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "32": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 157,
          column: 14
        }
      },
      "33": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 97
        }
      },
      "34": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 87
        }
      },
      "35": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "36": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 63
        }
      },
      "37": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 19
        }
      },
      "38": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "39": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 52
        }
      },
      "40": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 49
        }
      },
      "41": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "42": {
        start: {
          line: 193,
          column: 39
        },
        end: {
          line: 193,
          column: 90
        }
      },
      "43": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 63
        }
      },
      "44": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 65
        }
      },
      "45": {
        start: {
          line: 198,
          column: 35
        },
        end: {
          line: 198,
          column: 82
        }
      },
      "46": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "47": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 52
        }
      },
      "48": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "49": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 54
        }
      },
      "50": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 212,
          column: 28
        }
      },
      "51": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 44
        }
      },
      "52": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 224,
          column: 14
        }
      },
      "53": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 50
        }
      },
      "54": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 231,
          column: 24
        }
      },
      "55": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "56": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 66
        }
      },
      "57": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 24
        }
      },
      "58": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 58
        }
      },
      "59": {
        start: {
          line: 248,
          column: 29
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "60": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "61": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 80
        }
      },
      "62": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 268,
          column: 13
        }
      },
      "63": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 79
        }
      },
      "64": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 49
        }
      },
      "65": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "66": {
        start: {
          line: 272,
          column: 40
        },
        end: {
          line: 272,
          column: 86
        }
      },
      "67": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 277,
          column: 18
        }
      },
      "68": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 282,
          column: 17
        }
      },
      "69": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 127
        }
      },
      "70": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 56
        }
      },
      "71": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 96
        }
      },
      "72": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "73": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 76
        }
      },
      "74": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 291,
          column: 17
        }
      },
      "75": {
        start: {
          line: 290,
          column: 20
        },
        end: {
          line: 290,
          column: 53
        }
      },
      "76": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 90
        }
      },
      "77": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "78": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 75
        }
      },
      "79": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 84
        }
      },
      "80": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "81": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 83
        }
      },
      "82": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 310,
          column: 15
        }
      },
      "83": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 32
        }
      },
      "84": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 42
        }
      },
      "85": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 78
        }
      },
      "86": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 79
        }
      },
      "87": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 32
        }
      },
      "88": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 48
        }
      },
      "89": {
        start: {
          line: 329,
          column: 30
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "90": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "91": {
        start: {
          line: 337,
          column: 29
        },
        end: {
          line: 337,
          column: 73
        }
      },
      "92": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "93": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 365,
          column: 17
        }
      },
      "94": {
        start: {
          line: 341,
          column: 41
        },
        end: {
          line: 341,
          column: 78
        }
      },
      "95": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 364,
          column: 21
        }
      },
      "96": {
        start: {
          line: 344,
          column: 24
        },
        end: {
          line: 349,
          column: 27
        }
      },
      "97": {
        start: {
          line: 350,
          column: 24
        },
        end: {
          line: 350,
          column: 74
        }
      },
      "98": {
        start: {
          line: 353,
          column: 24
        },
        end: {
          line: 358,
          column: 27
        }
      },
      "99": {
        start: {
          line: 360,
          column: 24
        },
        end: {
          line: 363,
          column: 27
        }
      },
      "100": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 370,
          column: 19
        }
      },
      "101": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 378,
          column: 11
        }
      },
      "102": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 29
        }
      },
      "103": {
        start: {
          line: 387,
          column: 26
        },
        end: {
          line: 387,
          column: 36
        }
      },
      "104": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 393,
          column: 11
        }
      },
      "105": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "106": {
        start: {
          line: 396,
          column: 35
        },
        end: {
          line: 396,
          column: 95
        }
      },
      "107": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 404,
          column: 15
        }
      },
      "108": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "109": {
        start: {
          line: 407,
          column: 38
        },
        end: {
          line: 407,
          column: 60
        }
      },
      "110": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 415,
          column: 18
        }
      },
      "111": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 421,
          column: 13
        }
      },
      "112": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 90
        }
      },
      "113": {
        start: {
          line: 420,
          column: 45
        },
        end: {
          line: 420,
          column: 88
        }
      },
      "114": {
        start: {
          line: 425,
          column: 30
        },
        end: {
          line: 425,
          column: 52
        }
      },
      "115": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 432,
          column: 10
        }
      },
      "116": {
        start: {
          line: 439,
          column: 26
        },
        end: {
          line: 439,
          column: 36
        }
      },
      "117": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "118": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 462,
          column: 13
        }
      },
      "119": {
        start: {
          line: 446,
          column: 20
        },
        end: {
          line: 446,
          column: 81
        }
      },
      "120": {
        start: {
          line: 447,
          column: 20
        },
        end: {
          line: 447,
          column: 26
        }
      },
      "121": {
        start: {
          line: 449,
          column: 20
        },
        end: {
          line: 449,
          column: 83
        }
      },
      "122": {
        start: {
          line: 450,
          column: 20
        },
        end: {
          line: 450,
          column: 26
        }
      },
      "123": {
        start: {
          line: 452,
          column: 20
        },
        end: {
          line: 452,
          column: 87
        }
      },
      "124": {
        start: {
          line: 453,
          column: 20
        },
        end: {
          line: 453,
          column: 26
        }
      },
      "125": {
        start: {
          line: 455,
          column: 20
        },
        end: {
          line: 455,
          column: 84
        }
      },
      "126": {
        start: {
          line: 456,
          column: 20
        },
        end: {
          line: 456,
          column: 26
        }
      },
      "127": {
        start: {
          line: 458,
          column: 20
        },
        end: {
          line: 458,
          column: 81
        }
      },
      "128": {
        start: {
          line: 459,
          column: 20
        },
        end: {
          line: 459,
          column: 26
        }
      },
      "129": {
        start: {
          line: 461,
          column: 20
        },
        end: {
          line: 461,
          column: 78
        }
      },
      "130": {
        start: {
          line: 464,
          column: 29
        },
        end: {
          line: 464,
          column: 51
        }
      },
      "131": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 470,
          column: 14
        }
      },
      "132": {
        start: {
          line: 473,
          column: 29
        },
        end: {
          line: 473,
          column: 51
        }
      },
      "133": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 478,
          column: 24
        }
      },
      "134": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 485,
          column: 14
        }
      },
      "135": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 493,
          column: 88
        }
      },
      "136": {
        start: {
          line: 495,
          column: 24
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "137": {
        start: {
          line: 501,
          column: 30
        },
        end: {
          line: 501,
          column: 76
        }
      },
      "138": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "139": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 521,
          column: 13
        }
      },
      "140": {
        start: {
          line: 506,
          column: 16
        },
        end: {
          line: 518,
          column: 17
        }
      },
      "141": {
        start: {
          line: 507,
          column: 20
        },
        end: {
          line: 507,
          column: 74
        }
      },
      "142": {
        start: {
          line: 508,
          column: 20
        },
        end: {
          line: 508,
          column: 57
        }
      },
      "143": {
        start: {
          line: 511,
          column: 39
        },
        end: {
          line: 511,
          column: 72
        }
      },
      "144": {
        start: {
          line: 512,
          column: 20
        },
        end: {
          line: 517,
          column: 21
        }
      },
      "145": {
        start: {
          line: 513,
          column: 24
        },
        end: {
          line: 513,
          column: 83
        }
      },
      "146": {
        start: {
          line: 514,
          column: 24
        },
        end: {
          line: 514,
          column: 61
        }
      },
      "147": {
        start: {
          line: 516,
          column: 24
        },
        end: {
          line: 516,
          column: 95
        }
      },
      "148": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 520,
          column: 79
        }
      },
      "149": {
        start: {
          line: 525,
          column: 35
        },
        end: {
          line: 525,
          column: 86
        }
      },
      "150": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 533,
          column: 10
        }
      },
      "151": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 91
        }
      },
      "152": {
        start: {
          line: 542,
          column: 24
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "153": {
        start: {
          line: 548,
          column: 31
        },
        end: {
          line: 548,
          column: 88
        }
      },
      "154": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 575,
          column: 9
        }
      },
      "155": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 574,
          column: 13
        }
      },
      "156": {
        start: {
          line: 552,
          column: 33
        },
        end: {
          line: 552,
          column: 77
        }
      },
      "157": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 571,
          column: 17
        }
      },
      "158": {
        start: {
          line: 556,
          column: 42
        },
        end: {
          line: 556,
          column: 94
        }
      },
      "159": {
        start: {
          line: 557,
          column: 20
        },
        end: {
          line: 561,
          column: 21
        }
      },
      "160": {
        start: {
          line: 558,
          column: 24
        },
        end: {
          line: 558,
          column: 65
        }
      },
      "161": {
        start: {
          line: 560,
          column: 24
        },
        end: {
          line: 560,
          column: 97
        }
      },
      "162": {
        start: {
          line: 564,
          column: 39
        },
        end: {
          line: 564,
          column: 76
        }
      },
      "163": {
        start: {
          line: 565,
          column: 20
        },
        end: {
          line: 570,
          column: 21
        }
      },
      "164": {
        start: {
          line: 566,
          column: 24
        },
        end: {
          line: 566,
          column: 87
        }
      },
      "165": {
        start: {
          line: 567,
          column: 24
        },
        end: {
          line: 567,
          column: 65
        }
      },
      "166": {
        start: {
          line: 569,
          column: 24
        },
        end: {
          line: 569,
          column: 101
        }
      },
      "167": {
        start: {
          line: 573,
          column: 16
        },
        end: {
          line: 573,
          column: 83
        }
      },
      "168": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 582,
          column: 10
        }
      },
      "169": {
        start: {
          line: 589,
          column: 8
        },
        end: {
          line: 589,
          column: 59
        }
      },
      "170": {
        start: {
          line: 591,
          column: 24
        },
        end: {
          line: 595,
          column: 9
        }
      },
      "171": {
        start: {
          line: 598,
          column: 33
        },
        end: {
          line: 598,
          column: 83
        }
      },
      "172": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "173": {
        start: {
          line: 600,
          column: 29
        },
        end: {
          line: 600,
          column: 64
        }
      },
      "174": {
        start: {
          line: 601,
          column: 12
        },
        end: {
          line: 608,
          column: 13
        }
      },
      "175": {
        start: {
          line: 602,
          column: 16
        },
        end: {
          line: 607,
          column: 17
        }
      },
      "176": {
        start: {
          line: 603,
          column: 20
        },
        end: {
          line: 603,
          column: 56
        }
      },
      "177": {
        start: {
          line: 604,
          column: 20
        },
        end: {
          line: 604,
          column: 57
        }
      },
      "178": {
        start: {
          line: 606,
          column: 20
        },
        end: {
          line: 606,
          column: 99
        }
      },
      "179": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 622,
          column: 9
        }
      },
      "180": {
        start: {
          line: 613,
          column: 31
        },
        end: {
          line: 613,
          column: 68
        }
      },
      "181": {
        start: {
          line: 614,
          column: 12
        },
        end: {
          line: 621,
          column: 13
        }
      },
      "182": {
        start: {
          line: 615,
          column: 16
        },
        end: {
          line: 620,
          column: 17
        }
      },
      "183": {
        start: {
          line: 616,
          column: 20
        },
        end: {
          line: 616,
          column: 83
        }
      },
      "184": {
        start: {
          line: 617,
          column: 20
        },
        end: {
          line: 617,
          column: 61
        }
      },
      "185": {
        start: {
          line: 619,
          column: 20
        },
        end: {
          line: 619,
          column: 100
        }
      },
      "186": {
        start: {
          line: 625,
          column: 30
        },
        end: {
          line: 625,
          column: 57
        }
      },
      "187": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 636,
          column: 9
        }
      },
      "188": {
        start: {
          line: 627,
          column: 29
        },
        end: {
          line: 627,
          column: 64
        }
      },
      "189": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 635,
          column: 13
        }
      },
      "190": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 634,
          column: 17
        }
      },
      "191": {
        start: {
          line: 630,
          column: 20
        },
        end: {
          line: 630,
          column: 64
        }
      },
      "192": {
        start: {
          line: 631,
          column: 20
        },
        end: {
          line: 631,
          column: 58
        }
      },
      "193": {
        start: {
          line: 633,
          column: 20
        },
        end: {
          line: 633,
          column: 102
        }
      },
      "194": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 644,
          column: 10
        }
      },
      "195": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 55
        }
      },
      "196": {
        start: {
          line: 653,
          column: 24
        },
        end: {
          line: 656,
          column: 9
        }
      },
      "197": {
        start: {
          line: 659,
          column: 32
        },
        end: {
          line: 663,
          column: 9
        }
      },
      "198": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 678,
          column: 9
        }
      },
      "199": {
        start: {
          line: 666,
          column: 12
        },
        end: {
          line: 677,
          column: 13
        }
      },
      "200": {
        start: {
          line: 667,
          column: 33
        },
        end: {
          line: 667,
          column: 76
        }
      },
      "201": {
        start: {
          line: 668,
          column: 38
        },
        end: {
          line: 668,
          column: 87
        }
      },
      "202": {
        start: {
          line: 670,
          column: 16
        },
        end: {
          line: 674,
          column: 17
        }
      },
      "203": {
        start: {
          line: 671,
          column: 20
        },
        end: {
          line: 671,
          column: 65
        }
      },
      "204": {
        start: {
          line: 673,
          column: 20
        },
        end: {
          line: 673,
          column: 92
        }
      },
      "205": {
        start: {
          line: 676,
          column: 16
        },
        end: {
          line: 676,
          column: 82
        }
      },
      "206": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 685,
          column: 10
        }
      },
      "207": {
        start: {
          line: 692,
          column: 8
        },
        end: {
          line: 692,
          column: 67
        }
      },
      "208": {
        start: {
          line: 694,
          column: 24
        },
        end: {
          line: 697,
          column: 9
        }
      },
      "209": {
        start: {
          line: 700,
          column: 25
        },
        end: {
          line: 700,
          column: 68
        }
      },
      "210": {
        start: {
          line: 701,
          column: 8
        },
        end: {
          line: 725,
          column: 9
        }
      },
      "211": {
        start: {
          line: 702,
          column: 32
        },
        end: {
          line: 714,
          column: 13
        }
      },
      "212": {
        start: {
          line: 716,
          column: 32
        },
        end: {
          line: 720,
          column: 13
        }
      },
      "213": {
        start: {
          line: 722,
          column: 12
        },
        end: {
          line: 724,
          column: 13
        }
      },
      "214": {
        start: {
          line: 723,
          column: 16
        },
        end: {
          line: 723,
          column: 55
        }
      },
      "215": {
        start: {
          line: 728,
          column: 30
        },
        end: {
          line: 728,
          column: 71
        }
      },
      "216": {
        start: {
          line: 729,
          column: 8
        },
        end: {
          line: 739,
          column: 9
        }
      },
      "217": {
        start: {
          line: 730,
          column: 28
        },
        end: {
          line: 730,
          column: 63
        }
      },
      "218": {
        start: {
          line: 731,
          column: 12
        },
        end: {
          line: 738,
          column: 13
        }
      },
      "219": {
        start: {
          line: 732,
          column: 16
        },
        end: {
          line: 737,
          column: 17
        }
      },
      "220": {
        start: {
          line: 733,
          column: 20
        },
        end: {
          line: 733,
          column: 63
        }
      },
      "221": {
        start: {
          line: 734,
          column: 20
        },
        end: {
          line: 734,
          column: 57
        }
      },
      "222": {
        start: {
          line: 736,
          column: 20
        },
        end: {
          line: 736,
          column: 100
        }
      },
      "223": {
        start: {
          line: 741,
          column: 8
        },
        end: {
          line: 746,
          column: 10
        }
      },
      "224": {
        start: {
          line: 753,
          column: 8
        },
        end: {
          line: 753,
          column: 59
        }
      },
      "225": {
        start: {
          line: 756,
          column: 8
        },
        end: {
          line: 761,
          column: 9
        }
      },
      "226": {
        start: {
          line: 757,
          column: 12
        },
        end: {
          line: 759,
          column: 15
        }
      },
      "227": {
        start: {
          line: 760,
          column: 12
        },
        end: {
          line: 760,
          column: 19
        }
      },
      "228": {
        start: {
          line: 764,
          column: 8
        },
        end: {
          line: 764,
          column: 42
        }
      },
      "229": {
        start: {
          line: 766,
          column: 8
        },
        end: {
          line: 799,
          column: 9
        }
      },
      "230": {
        start: {
          line: 767,
          column: 29
        },
        end: {
          line: 767,
          column: 73
        }
      },
      "231": {
        start: {
          line: 769,
          column: 12
        },
        end: {
          line: 798,
          column: 13
        }
      },
      "232": {
        start: {
          line: 770,
          column: 16
        },
        end: {
          line: 797,
          column: 17
        }
      },
      "233": {
        start: {
          line: 771,
          column: 36
        },
        end: {
          line: 781,
          column: 22
        }
      },
      "234": {
        start: {
          line: 772,
          column: 24
        },
        end: {
          line: 780,
          column: 25
        }
      },
      "235": {
        start: {
          line: 773,
          column: 28
        },
        end: {
          line: 773,
          column: 94
        }
      },
      "236": {
        start: {
          line: 775,
          column: 28
        },
        end: {
          line: 779,
          column: 40
        }
      },
      "237": {
        start: {
          line: 784,
          column: 20
        },
        end: {
          line: 792,
          column: 23
        }
      },
      "238": {
        start: {
          line: 785,
          column: 24
        },
        end: {
          line: 788,
          column: 36
        }
      },
      "239": {
        start: {
          line: 791,
          column: 24
        },
        end: {
          line: 791,
          column: 67
        }
      },
      "240": {
        start: {
          line: 794,
          column: 20
        },
        end: {
          line: 794,
          column: 69
        }
      },
      "241": {
        start: {
          line: 796,
          column: 20
        },
        end: {
          line: 796,
          column: 98
        }
      },
      "242": {
        start: {
          line: 801,
          column: 8
        },
        end: {
          line: 803,
          column: 11
        }
      },
      "243": {
        start: {
          line: 810,
          column: 8
        },
        end: {
          line: 836,
          column: 9
        }
      },
      "244": {
        start: {
          line: 811,
          column: 12
        },
        end: {
          line: 829,
          column: 13
        }
      },
      "245": {
        start: {
          line: 812,
          column: 33
        },
        end: {
          line: 812,
          column: 93
        }
      },
      "246": {
        start: {
          line: 815,
          column: 16
        },
        end: {
          line: 828,
          column: 17
        }
      },
      "247": {
        start: {
          line: 816,
          column: 47
        },
        end: {
          line: 824,
          column: 21
        }
      },
      "248": {
        start: {
          line: 827,
          column: 20
        },
        end: {
          line: 827,
          column: 68
        }
      },
      "249": {
        start: {
          line: 831,
          column: 12
        },
        end: {
          line: 835,
          column: 24
        }
      },
      "250": {
        start: {
          line: 843,
          column: 8
        },
        end: {
          line: 843,
          column: 50
        }
      },
      "251": {
        start: {
          line: 845,
          column: 8
        },
        end: {
          line: 882,
          column: 9
        }
      },
      "252": {
        start: {
          line: 847,
          column: 12
        },
        end: {
          line: 856,
          column: 13
        }
      },
      "253": {
        start: {
          line: 848,
          column: 16
        },
        end: {
          line: 854,
          column: 17
        }
      },
      "254": {
        start: {
          line: 849,
          column: 20
        },
        end: {
          line: 853,
          column: 21
        }
      },
      "255": {
        start: {
          line: 850,
          column: 24
        },
        end: {
          line: 850,
          column: 40
        }
      },
      "256": {
        start: {
          line: 852,
          column: 24
        },
        end: {
          line: 852,
          column: 106
        }
      },
      "257": {
        start: {
          line: 855,
          column: 16
        },
        end: {
          line: 855,
          column: 46
        }
      },
      "258": {
        start: {
          line: 859,
          column: 12
        },
        end: {
          line: 861,
          column: 13
        }
      },
      "259": {
        start: {
          line: 860,
          column: 16
        },
        end: {
          line: 860,
          column: 63
        }
      },
      "260": {
        start: {
          line: 864,
          column: 32
        },
        end: {
          line: 864,
          column: 61
        }
      },
      "261": {
        start: {
          line: 866,
          column: 12
        },
        end: {
          line: 866,
          column: 42
        }
      },
      "262": {
        start: {
          line: 867,
          column: 12
        },
        end: {
          line: 867,
          column: 52
        }
      },
      "263": {
        start: {
          line: 868,
          column: 12
        },
        end: {
          line: 868,
          column: 68
        }
      },
      "264": {
        start: {
          line: 870,
          column: 12
        },
        end: {
          line: 875,
          column: 15
        }
      },
      "265": {
        start: {
          line: 877,
          column: 12
        },
        end: {
          line: 877,
          column: 31
        }
      },
      "266": {
        start: {
          line: 880,
          column: 12
        },
        end: {
          line: 880,
          column: 91
        }
      },
      "267": {
        start: {
          line: 881,
          column: 12
        },
        end: {
          line: 881,
          column: 24
        }
      },
      "268": {
        start: {
          line: 889,
          column: 8
        },
        end: {
          line: 902,
          column: 10
        }
      },
      "269": {
        start: {
          line: 911,
          column: 23
        },
        end: {
          line: 911,
          column: 62
        }
      },
      "270": {
        start: {
          line: 912,
          column: 24
        },
        end: {
          line: 912,
          column: 34
        }
      },
      "271": {
        start: {
          line: 915,
          column: 8
        },
        end: {
          line: 921,
          column: 9
        }
      },
      "272": {
        start: {
          line: 916,
          column: 12
        },
        end: {
          line: 916,
          column: 30
        }
      },
      "273": {
        start: {
          line: 917,
          column: 12
        },
        end: {
          line: 917,
          column: 31
        }
      },
      "274": {
        start: {
          line: 918,
          column: 15
        },
        end: {
          line: 921,
          column: 9
        }
      },
      "275": {
        start: {
          line: 919,
          column: 12
        },
        end: {
          line: 919,
          column: 34
        }
      },
      "276": {
        start: {
          line: 920,
          column: 12
        },
        end: {
          line: 920,
          column: 35
        }
      },
      "277": {
        start: {
          line: 923,
          column: 8
        },
        end: {
          line: 923,
          column: 39
        }
      },
      "278": {
        start: {
          line: 927,
          column: 23
        },
        end: {
          line: 927,
          column: 55
        }
      },
      "279": {
        start: {
          line: 929,
          column: 8
        },
        end: {
          line: 935,
          column: 9
        }
      },
      "280": {
        start: {
          line: 930,
          column: 29
        },
        end: {
          line: 930,
          column: 73
        }
      },
      "281": {
        start: {
          line: 931,
          column: 12
        },
        end: {
          line: 934,
          column: 13
        }
      },
      "282": {
        start: {
          line: 932,
          column: 16
        },
        end: {
          line: 932,
          column: 38
        }
      },
      "283": {
        start: {
          line: 933,
          column: 16
        },
        end: {
          line: 933,
          column: 53
        }
      },
      "284": {
        start: {
          line: 937,
          column: 8
        },
        end: {
          line: 937,
          column: 22
        }
      },
      "285": {
        start: {
          line: 942,
          column: 8
        },
        end: {
          line: 942,
          column: 44
        }
      },
      "286": {
        start: {
          line: 946,
          column: 32
        },
        end: {
          line: 948,
          column: 9
        }
      },
      "287": {
        start: {
          line: 947,
          column: 12
        },
        end: {
          line: 947,
          column: 63
        }
      },
      "288": {
        start: {
          line: 950,
          column: 33
        },
        end: {
          line: 950,
          column: 71
        }
      },
      "289": {
        start: {
          line: 951,
          column: 25
        },
        end: {
          line: 951,
          column: 81
        }
      },
      "290": {
        start: {
          line: 953,
          column: 8
        },
        end: {
          line: 958,
          column: 10
        }
      },
      "291": {
        start: {
          line: 963,
          column: 8
        },
        end: {
          line: 963,
          column: 55
        }
      },
      "292": {
        start: {
          line: 967,
          column: 29
        },
        end: {
          line: 967,
          column: 60
        }
      },
      "293": {
        start: {
          line: 968,
          column: 8
        },
        end: {
          line: 968,
          column: 62
        }
      },
      "294": {
        start: {
          line: 969,
          column: 8
        },
        end: {
          line: 969,
          column: 70
        }
      },
      "295": {
        start: {
          line: 973,
          column: 30
        },
        end: {
          line: 976,
          column: 45
        }
      },
      "296": {
        start: {
          line: 974,
          column: 30
        },
        end: {
          line: 974,
          column: 52
        }
      },
      "297": {
        start: {
          line: 975,
          column: 31
        },
        end: {
          line: 975,
          column: 46
        }
      },
      "298": {
        start: {
          line: 976,
          column: 28
        },
        end: {
          line: 976,
          column: 44
        }
      },
      "299": {
        start: {
          line: 978,
          column: 8
        },
        end: {
          line: 980,
          column: 16
        }
      },
      "300": {
        start: {
          line: 979,
          column: 50
        },
        end: {
          line: 979,
          column: 60
        }
      },
      "301": {
        start: {
          line: 984,
          column: 30
        },
        end: {
          line: 984,
          column: 62
        }
      },
      "302": {
        start: {
          line: 985,
          column: 37
        },
        end: {
          line: 985,
          column: 70
        }
      },
      "303": {
        start: {
          line: 987,
          column: 8
        },
        end: {
          line: 987,
          column: 84
        }
      },
      "304": {
        start: {
          line: 991,
          column: 27
        },
        end: {
          line: 991,
          column: 29
        }
      },
      "305": {
        start: {
          line: 992,
          column: 8
        },
        end: {
          line: 994,
          column: 11
        }
      },
      "306": {
        start: {
          line: 993,
          column: 12
        },
        end: {
          line: 993,
          column: 71
        }
      },
      "307": {
        start: {
          line: 996,
          column: 8
        },
        end: {
          line: 998,
          column: 10
        }
      },
      "308": {
        start: {
          line: 997,
          column: 12
        },
        end: {
          line: 997,
          column: 66
        }
      },
      "309": {
        start: {
          line: 1004,
          column: 8
        },
        end: {
          line: 1004,
          column: 63
        }
      },
      "310": {
        start: {
          line: 1009,
          column: 8
        },
        end: {
          line: 1012,
          column: 10
        }
      },
      "311": {
        start: {
          line: 1010,
          column: 12
        },
        end: {
          line: 1011,
          column: 69
        }
      },
      "312": {
        start: {
          line: 1017,
          column: 8
        },
        end: {
          line: 1017,
          column: 127
        }
      },
      "313": {
        start: {
          line: 1022,
          column: 25
        },
        end: {
          line: 1022,
          column: 69
        }
      },
      "314": {
        start: {
          line: 1023,
          column: 8
        },
        end: {
          line: 1025,
          column: 9
        }
      },
      "315": {
        start: {
          line: 1024,
          column: 12
        },
        end: {
          line: 1024,
          column: 61
        }
      },
      "316": {
        start: {
          line: 1030,
          column: 8
        },
        end: {
          line: 1030,
          column: 64
        }
      },
      "317": {
        start: {
          line: 1035,
          column: 8
        },
        end: {
          line: 1037,
          column: 9
        }
      },
      "318": {
        start: {
          line: 1036,
          column: 12
        },
        end: {
          line: 1036,
          column: 66
        }
      },
      "319": {
        start: {
          line: 1042,
          column: 8
        },
        end: {
          line: 1042,
          column: 60
        }
      },
      "320": {
        start: {
          line: 1047,
          column: 8
        },
        end: {
          line: 1055,
          column: 9
        }
      },
      "321": {
        start: {
          line: 1048,
          column: 28
        },
        end: {
          line: 1048,
          column: 61
        }
      },
      "322": {
        start: {
          line: 1049,
          column: 12
        },
        end: {
          line: 1051,
          column: 13
        }
      },
      "323": {
        start: {
          line: 1050,
          column: 16
        },
        end: {
          line: 1050,
          column: 36
        }
      },
      "324": {
        start: {
          line: 1052,
          column: 12
        },
        end: {
          line: 1052,
          column: 25
        }
      },
      "325": {
        start: {
          line: 1054,
          column: 12
        },
        end: {
          line: 1054,
          column: 24
        }
      },
      "326": {
        start: {
          line: 1060,
          column: 8
        },
        end: {
          line: 1071,
          column: 9
        }
      },
      "327": {
        start: {
          line: 1061,
          column: 12
        },
        end: {
          line: 1061,
          column: 55
        }
      },
      "328": {
        start: {
          line: 1061,
          column: 42
        },
        end: {
          line: 1061,
          column: 55
        }
      },
      "329": {
        start: {
          line: 1063,
          column: 25
        },
        end: {
          line: 1063,
          column: 46
        }
      },
      "330": {
        start: {
          line: 1064,
          column: 12
        },
        end: {
          line: 1067,
          column: 13
        }
      },
      "331": {
        start: {
          line: 1065,
          column: 32
        },
        end: {
          line: 1065,
          column: 65
        }
      },
      "332": {
        start: {
          line: 1066,
          column: 16
        },
        end: {
          line: 1066,
          column: 90
        }
      },
      "333": {
        start: {
          line: 1068,
          column: 12
        },
        end: {
          line: 1068,
          column: 25
        }
      },
      "334": {
        start: {
          line: 1070,
          column: 12
        },
        end: {
          line: 1070,
          column: 25
        }
      },
      "335": {
        start: {
          line: 1076,
          column: 8
        },
        end: {
          line: 1079,
          column: 20
        }
      },
      "336": {
        start: {
          line: 1081,
          column: 8
        },
        end: {
          line: 1081,
          column: 60
        }
      },
      "337": {
        start: {
          line: 1088,
          column: 26
        },
        end: {
          line: 1095,
          column: 9
        }
      },
      "338": {
        start: {
          line: 1098,
          column: 27
        },
        end: {
          line: 1102,
          column: 9
        }
      },
      "339": {
        start: {
          line: 1104,
          column: 8
        },
        end: {
          line: 1107,
          column: 9
        }
      },
      "340": {
        start: {
          line: 1105,
          column: 12
        },
        end: {
          line: 1106,
          column: 65
        }
      },
      "341": {
        start: {
          line: 1111,
          column: 0
        },
        end: {
          line: 1111,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 111
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 168
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 31
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 245
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 36
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 326
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 54
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 386
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 420,
            column: 34
          },
          end: {
            line: 420,
            column: 35
          }
        },
        loc: {
          start: {
            line: 420,
            column: 45
          },
          end: {
            line: 420,
            column: 88
          }
        },
        line: 420
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        },
        loc: {
          start: {
            line: 438,
            column: 60
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 438
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        loc: {
          start: {
            line: 492,
            column: 51
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 492
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 5
          }
        },
        loc: {
          start: {
            line: 539,
            column: 53
          },
          end: {
            line: 583,
            column: 5
          }
        },
        line: 539
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 588,
            column: 4
          },
          end: {
            line: 588,
            column: 5
          }
        },
        loc: {
          start: {
            line: 588,
            column: 58
          },
          end: {
            line: 645,
            column: 5
          }
        },
        line: 588
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        loc: {
          start: {
            line: 650,
            column: 55
          },
          end: {
            line: 686,
            column: 5
          }
        },
        line: 650
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 691,
            column: 4
          },
          end: {
            line: 691,
            column: 5
          }
        },
        loc: {
          start: {
            line: 691,
            column: 52
          },
          end: {
            line: 747,
            column: 5
          }
        },
        line: 691
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 752,
            column: 4
          },
          end: {
            line: 752,
            column: 5
          }
        },
        loc: {
          start: {
            line: 752,
            column: 34
          },
          end: {
            line: 804,
            column: 5
          }
        },
        line: 752
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 771,
            column: 76
          },
          end: {
            line: 771,
            column: 77
          }
        },
        loc: {
          start: {
            line: 771,
            column: 107
          },
          end: {
            line: 781,
            column: 21
          }
        },
        line: 771
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 784,
            column: 40
          },
          end: {
            line: 784,
            column: 41
          }
        },
        loc: {
          start: {
            line: 784,
            column: 51
          },
          end: {
            line: 792,
            column: 21
          }
        },
        line: 784
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 809,
            column: 4
          },
          end: {
            line: 809,
            column: 5
          }
        },
        loc: {
          start: {
            line: 809,
            column: 65
          },
          end: {
            line: 837,
            column: 5
          }
        },
        line: 809
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 842,
            column: 4
          },
          end: {
            line: 842,
            column: 5
          }
        },
        loc: {
          start: {
            line: 842,
            column: 21
          },
          end: {
            line: 883,
            column: 5
          }
        },
        line: 842
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 888,
            column: 4
          },
          end: {
            line: 888,
            column: 5
          }
        },
        loc: {
          start: {
            line: 888,
            column: 29
          },
          end: {
            line: 903,
            column: 5
          }
        },
        line: 888
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 909,
            column: 4
          },
          end: {
            line: 909,
            column: 5
          }
        },
        loc: {
          start: {
            line: 909,
            column: 58
          },
          end: {
            line: 924,
            column: 5
          }
        },
        line: 909
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 926,
            column: 4
          },
          end: {
            line: 926,
            column: 5
          }
        },
        loc: {
          start: {
            line: 926,
            column: 31
          },
          end: {
            line: 938,
            column: 5
          }
        },
        line: 926
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 940,
            column: 4
          },
          end: {
            line: 940,
            column: 5
          }
        },
        loc: {
          start: {
            line: 940,
            column: 39
          },
          end: {
            line: 943,
            column: 5
          }
        },
        line: 940
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 945,
            column: 4
          },
          end: {
            line: 945,
            column: 5
          }
        },
        loc: {
          start: {
            line: 945,
            column: 36
          },
          end: {
            line: 959,
            column: 5
          }
        },
        line: 945
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 946,
            column: 58
          },
          end: {
            line: 946,
            column: 59
          }
        },
        loc: {
          start: {
            line: 947,
            column: 12
          },
          end: {
            line: 947,
            column: 63
          }
        },
        line: 947
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 961,
            column: 4
          },
          end: {
            line: 961,
            column: 5
          }
        },
        loc: {
          start: {
            line: 961,
            column: 33
          },
          end: {
            line: 964,
            column: 5
          }
        },
        line: 961
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 966,
            column: 4
          },
          end: {
            line: 966,
            column: 5
          }
        },
        loc: {
          start: {
            line: 966,
            column: 31
          },
          end: {
            line: 970,
            column: 5
          }
        },
        line: 966
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 972,
            column: 4
          },
          end: {
            line: 972,
            column: 5
          }
        },
        loc: {
          start: {
            line: 972,
            column: 35
          },
          end: {
            line: 981,
            column: 5
          }
        },
        line: 972
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 974,
            column: 21
          },
          end: {
            line: 974,
            column: 22
          }
        },
        loc: {
          start: {
            line: 974,
            column: 30
          },
          end: {
            line: 974,
            column: 52
          }
        },
        line: 974
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 975,
            column: 20
          },
          end: {
            line: 975,
            column: 21
          }
        },
        loc: {
          start: {
            line: 975,
            column: 31
          },
          end: {
            line: 975,
            column: 46
          }
        },
        line: 975
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 976,
            column: 17
          },
          end: {
            line: 976,
            column: 18
          }
        },
        loc: {
          start: {
            line: 976,
            column: 28
          },
          end: {
            line: 976,
            column: 44
          }
        },
        line: 976
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 979,
            column: 35
          },
          end: {
            line: 979,
            column: 36
          }
        },
        loc: {
          start: {
            line: 979,
            column: 50
          },
          end: {
            line: 979,
            column: 60
          }
        },
        line: 979
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 983,
            column: 4
          },
          end: {
            line: 983,
            column: 5
          }
        },
        loc: {
          start: {
            line: 983,
            column: 27
          },
          end: {
            line: 988,
            column: 5
          }
        },
        line: 983
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 990,
            column: 4
          },
          end: {
            line: 990,
            column: 5
          }
        },
        loc: {
          start: {
            line: 990,
            column: 37
          },
          end: {
            line: 999,
            column: 5
          }
        },
        line: 990
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 992,
            column: 42
          },
          end: {
            line: 992,
            column: 43
          }
        },
        loc: {
          start: {
            line: 992,
            column: 51
          },
          end: {
            line: 994,
            column: 9
          }
        },
        line: 992
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 996,
            column: 46
          },
          end: {
            line: 996,
            column: 47
          }
        },
        loc: {
          start: {
            line: 997,
            column: 12
          },
          end: {
            line: 997,
            column: 66
          }
        },
        line: 997
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 1002,
            column: 4
          },
          end: {
            line: 1002,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1002,
            column: 46
          },
          end: {
            line: 1005,
            column: 5
          }
        },
        line: 1002
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 1007,
            column: 4
          },
          end: {
            line: 1007,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1007,
            column: 57
          },
          end: {
            line: 1013,
            column: 5
          }
        },
        line: 1007
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 1009,
            column: 41
          },
          end: {
            line: 1009,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1010,
            column: 12
          },
          end: {
            line: 1011,
            column: 69
          }
        },
        line: 1010
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 1015,
            column: 4
          },
          end: {
            line: 1015,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1015,
            column: 37
          },
          end: {
            line: 1018,
            column: 5
          }
        },
        line: 1015
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 1020,
            column: 4
          },
          end: {
            line: 1020,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1020,
            column: 62
          },
          end: {
            line: 1026,
            column: 5
          }
        },
        line: 1020
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 1028,
            column: 4
          },
          end: {
            line: 1028,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1028,
            column: 43
          },
          end: {
            line: 1031,
            column: 5
          }
        },
        line: 1028
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 1033,
            column: 4
          },
          end: {
            line: 1033,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1033,
            column: 35
          },
          end: {
            line: 1038,
            column: 5
          }
        },
        line: 1033
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 1040,
            column: 4
          },
          end: {
            line: 1040,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1040,
            column: 42
          },
          end: {
            line: 1043,
            column: 5
          }
        },
        line: 1040
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 1045,
            column: 4
          },
          end: {
            line: 1045,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1045,
            column: 36
          },
          end: {
            line: 1056,
            column: 5
          }
        },
        line: 1045
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 1058,
            column: 4
          },
          end: {
            line: 1058,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1058,
            column: 39
          },
          end: {
            line: 1072,
            column: 5
          }
        },
        line: 1058
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 1074,
            column: 4
          },
          end: {
            line: 1074,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1074,
            column: 56
          },
          end: {
            line: 1082,
            column: 5
          }
        },
        line: 1074
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1087,
            column: 4
          },
          end: {
            line: 1087,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1087,
            column: 44
          },
          end: {
            line: 1108,
            column: 5
          }
        },
        line: 1087
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 28
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 16,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 16,
            column: 59
          }
        }, {
          start: {
            line: 16,
            column: 63
          },
          end: {
            line: 16,
            column: 76
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 19,
            column: 47
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 20,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 20,
            column: 42
          }
        }, {
          start: {
            line: 20,
            column: 46
          },
          end: {
            line: 20,
            column: 50
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 42
          }
        }, {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 47
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 56
          }
        }, {
          start: {
            line: 27,
            column: 60
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 31,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 31,
            column: 66
          }
        }, {
          start: {
            line: 31,
            column: 70
          },
          end: {
            line: 31,
            column: 71
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 32
          },
          end: {
            line: 32,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 32
          },
          end: {
            line: 32,
            column: 58
          }
        }, {
          start: {
            line: 32,
            column: 62
          },
          end: {
            line: 32,
            column: 63
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "10": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "11": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "12": {
        loc: {
          start: {
            line: 182,
            column: 18
          },
          end: {
            line: 182,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 18
          },
          end: {
            line: 182,
            column: 41
          }
        }, {
          start: {
            line: 182,
            column: 45
          },
          end: {
            line: 182,
            column: 54
          }
        }],
        line: 182
      },
      "13": {
        loc: {
          start: {
            line: 183,
            column: 22
          },
          end: {
            line: 183,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 22
          },
          end: {
            line: 183,
            column: 49
          }
        }, {
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 183,
            column: 61
          }
        }],
        line: 183
      },
      "14": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: 207,
            column: 19
          },
          end: {
            line: 213,
            column: 13
          }
        }],
        line: 200
      },
      "15": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "16": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "17": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "18": {
        loc: {
          start: {
            line: 275,
            column: 32
          },
          end: {
            line: 275,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 32
          },
          end: {
            line: 275,
            column: 58
          }
        }, {
          start: {
            line: 275,
            column: 62
          },
          end: {
            line: 275,
            column: 64
          }
        }],
        line: 275
      },
      "19": {
        loc: {
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 62
          }
        }, {
          start: {
            line: 276,
            column: 66
          },
          end: {
            line: 276,
            column: 67
          }
        }],
        line: 276
      },
      "20": {
        loc: {
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 282,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 282,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "21": {
        loc: {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 292,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 292,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "22": {
        loc: {
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 291,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 291,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "23": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "24": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "25": {
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 365,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 365,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "26": {
        loc: {
          start: {
            line: 343,
            column: 20
          },
          end: {
            line: 364,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 20
          },
          end: {
            line: 364,
            column: 21
          }
        }, {
          start: {
            line: 359,
            column: 27
          },
          end: {
            line: 364,
            column: 21
          }
        }],
        line: 343
      },
      "27": {
        loc: {
          start: {
            line: 347,
            column: 34
          },
          end: {
            line: 347,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 34
          },
          end: {
            line: 347,
            column: 51
          }
        }, {
          start: {
            line: 347,
            column: 55
          },
          end: {
            line: 347,
            column: 56
          }
        }],
        line: 347
      },
      "28": {
        loc: {
          start: {
            line: 350,
            column: 51
          },
          end: {
            line: 350,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 51
          },
          end: {
            line: 350,
            column: 68
          }
        }, {
          start: {
            line: 350,
            column: 72
          },
          end: {
            line: 350,
            column: 73
          }
        }],
        line: 350
      },
      "29": {
        loc: {
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "30": {
        loc: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 421,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 421,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "31": {
        loc: {
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 462,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 447,
            column: 26
          }
        }, {
          start: {
            line: 448,
            column: 16
          },
          end: {
            line: 450,
            column: 26
          }
        }, {
          start: {
            line: 451,
            column: 16
          },
          end: {
            line: 453,
            column: 26
          }
        }, {
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 456,
            column: 26
          }
        }, {
          start: {
            line: 457,
            column: 16
          },
          end: {
            line: 459,
            column: 26
          }
        }, {
          start: {
            line: 460,
            column: 16
          },
          end: {
            line: 461,
            column: 78
          }
        }],
        line: 444
      },
      "32": {
        loc: {
          start: {
            line: 506,
            column: 16
          },
          end: {
            line: 518,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 16
          },
          end: {
            line: 518,
            column: 17
          }
        }, {
          start: {
            line: 509,
            column: 23
          },
          end: {
            line: 518,
            column: 17
          }
        }],
        line: 506
      },
      "33": {
        loc: {
          start: {
            line: 506,
            column: 20
          },
          end: {
            line: 506,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 506,
            column: 20
          },
          end: {
            line: 506,
            column: 50
          }
        }, {
          start: {
            line: 506,
            column: 54
          },
          end: {
            line: 506,
            column: 110
          }
        }],
        line: 506
      },
      "34": {
        loc: {
          start: {
            line: 512,
            column: 20
          },
          end: {
            line: 517,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 20
          },
          end: {
            line: 517,
            column: 21
          }
        }, {
          start: {
            line: 515,
            column: 27
          },
          end: {
            line: 517,
            column: 21
          }
        }],
        line: 512
      },
      "35": {
        loc: {
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 571,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 571,
            column: 17
          }
        }, {
          start: {
            line: 562,
            column: 23
          },
          end: {
            line: 571,
            column: 17
          }
        }],
        line: 554
      },
      "36": {
        loc: {
          start: {
            line: 557,
            column: 20
          },
          end: {
            line: 561,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 20
          },
          end: {
            line: 561,
            column: 21
          }
        }, {
          start: {
            line: 559,
            column: 27
          },
          end: {
            line: 561,
            column: 21
          }
        }],
        line: 557
      },
      "37": {
        loc: {
          start: {
            line: 565,
            column: 20
          },
          end: {
            line: 570,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 20
          },
          end: {
            line: 570,
            column: 21
          }
        }, {
          start: {
            line: 568,
            column: 27
          },
          end: {
            line: 570,
            column: 21
          }
        }],
        line: 565
      },
      "38": {
        loc: {
          start: {
            line: 601,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "39": {
        loc: {
          start: {
            line: 614,
            column: 12
          },
          end: {
            line: 621,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 614,
            column: 12
          },
          end: {
            line: 621,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 614
      },
      "40": {
        loc: {
          start: {
            line: 628,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 628,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 628
      },
      "41": {
        loc: {
          start: {
            line: 670,
            column: 16
          },
          end: {
            line: 674,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 670,
            column: 16
          },
          end: {
            line: 674,
            column: 17
          }
        }, {
          start: {
            line: 672,
            column: 23
          },
          end: {
            line: 674,
            column: 17
          }
        }],
        line: 670
      },
      "42": {
        loc: {
          start: {
            line: 701,
            column: 8
          },
          end: {
            line: 725,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 701,
            column: 8
          },
          end: {
            line: 725,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 701
      },
      "43": {
        loc: {
          start: {
            line: 701,
            column: 12
          },
          end: {
            line: 701,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 701,
            column: 12
          },
          end: {
            line: 701,
            column: 36
          }
        }, {
          start: {
            line: 701,
            column: 40
          },
          end: {
            line: 701,
            column: 76
          }
        }],
        line: 701
      },
      "44": {
        loc: {
          start: {
            line: 722,
            column: 12
          },
          end: {
            line: 724,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 722,
            column: 12
          },
          end: {
            line: 724,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 722
      },
      "45": {
        loc: {
          start: {
            line: 731,
            column: 12
          },
          end: {
            line: 738,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 731,
            column: 12
          },
          end: {
            line: 738,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 731
      },
      "46": {
        loc: {
          start: {
            line: 756,
            column: 8
          },
          end: {
            line: 761,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 756,
            column: 8
          },
          end: {
            line: 761,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 756
      },
      "47": {
        loc: {
          start: {
            line: 769,
            column: 12
          },
          end: {
            line: 798,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 769,
            column: 12
          },
          end: {
            line: 798,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 769
      },
      "48": {
        loc: {
          start: {
            line: 811,
            column: 12
          },
          end: {
            line: 829,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 811,
            column: 12
          },
          end: {
            line: 829,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 811
      },
      "49": {
        loc: {
          start: {
            line: 811,
            column: 16
          },
          end: {
            line: 811,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 811,
            column: 16
          },
          end: {
            line: 811,
            column: 38
          }
        }, {
          start: {
            line: 811,
            column: 42
          },
          end: {
            line: 811,
            column: 64
          }
        }],
        line: 811
      },
      "50": {
        loc: {
          start: {
            line: 812,
            column: 78
          },
          end: {
            line: 812,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 812,
            column: 78
          },
          end: {
            line: 812,
            column: 86
          }
        }, {
          start: {
            line: 812,
            column: 90
          },
          end: {
            line: 812,
            column: 92
          }
        }],
        line: 812
      },
      "51": {
        loc: {
          start: {
            line: 815,
            column: 16
          },
          end: {
            line: 828,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 815,
            column: 16
          },
          end: {
            line: 828,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 815
      },
      "52": {
        loc: {
          start: {
            line: 847,
            column: 12
          },
          end: {
            line: 856,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 847,
            column: 12
          },
          end: {
            line: 856,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 847
      },
      "53": {
        loc: {
          start: {
            line: 859,
            column: 12
          },
          end: {
            line: 861,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 859,
            column: 12
          },
          end: {
            line: 861,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 859
      },
      "54": {
        loc: {
          start: {
            line: 911,
            column: 23
          },
          end: {
            line: 911,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 911,
            column: 23
          },
          end: {
            line: 911,
            column: 50
          }
        }, {
          start: {
            line: 911,
            column: 54
          },
          end: {
            line: 911,
            column: 62
          }
        }],
        line: 911
      },
      "55": {
        loc: {
          start: {
            line: 915,
            column: 8
          },
          end: {
            line: 921,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 915,
            column: 8
          },
          end: {
            line: 921,
            column: 9
          }
        }, {
          start: {
            line: 918,
            column: 15
          },
          end: {
            line: 921,
            column: 9
          }
        }],
        line: 915
      },
      "56": {
        loc: {
          start: {
            line: 918,
            column: 15
          },
          end: {
            line: 921,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 918,
            column: 15
          },
          end: {
            line: 921,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 918
      },
      "57": {
        loc: {
          start: {
            line: 931,
            column: 12
          },
          end: {
            line: 934,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 931,
            column: 12
          },
          end: {
            line: 934,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 931
      },
      "58": {
        loc: {
          start: {
            line: 931,
            column: 16
          },
          end: {
            line: 931,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 931,
            column: 16
          },
          end: {
            line: 931,
            column: 39
          }
        }, {
          start: {
            line: 931,
            column: 43
          },
          end: {
            line: 931,
            column: 82
          }
        }],
        line: 931
      },
      "59": {
        loc: {
          start: {
            line: 978,
            column: 15
          },
          end: {
            line: 980,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 979,
            column: 14
          },
          end: {
            line: 979,
            column: 87
          }
        }, {
          start: {
            line: 980,
            column: 14
          },
          end: {
            line: 980,
            column: 15
          }
        }],
        line: 978
      },
      "60": {
        loc: {
          start: {
            line: 987,
            column: 15
          },
          end: {
            line: 987,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 987,
            column: 35
          },
          end: {
            line: 987,
            column: 79
          }
        }, {
          start: {
            line: 987,
            column: 82
          },
          end: {
            line: 987,
            column: 83
          }
        }],
        line: 987
      },
      "61": {
        loc: {
          start: {
            line: 993,
            column: 38
          },
          end: {
            line: 993,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 993,
            column: 38
          },
          end: {
            line: 993,
            column: 60
          }
        }, {
          start: {
            line: 993,
            column: 64
          },
          end: {
            line: 993,
            column: 65
          }
        }],
        line: 993
      },
      "62": {
        loc: {
          start: {
            line: 997,
            column: 12
          },
          end: {
            line: 997,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 997,
            column: 56
          },
          end: {
            line: 997,
            column: 60
          }
        }, {
          start: {
            line: 997,
            column: 63
          },
          end: {
            line: 997,
            column: 66
          }
        }],
        line: 997
      },
      "63": {
        loc: {
          start: {
            line: 997,
            column: 32
          },
          end: {
            line: 997,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 997,
            column: 32
          },
          end: {
            line: 997,
            column: 47
          }
        }, {
          start: {
            line: 997,
            column: 51
          },
          end: {
            line: 997,
            column: 52
          }
        }],
        line: 997
      },
      "64": {
        loc: {
          start: {
            line: 1004,
            column: 15
          },
          end: {
            line: 1004,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1004,
            column: 15
          },
          end: {
            line: 1004,
            column: 56
          }
        }, {
          start: {
            line: 1004,
            column: 60
          },
          end: {
            line: 1004,
            column: 62
          }
        }],
        line: 1004
      },
      "65": {
        loc: {
          start: {
            line: 1010,
            column: 12
          },
          end: {
            line: 1011,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1010,
            column: 12
          },
          end: {
            line: 1010,
            column: 55
          }
        }, {
          start: {
            line: 1011,
            column: 12
          },
          end: {
            line: 1011,
            column: 69
          }
        }],
        line: 1010
      },
      "66": {
        loc: {
          start: {
            line: 1023,
            column: 8
          },
          end: {
            line: 1025,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1023,
            column: 8
          },
          end: {
            line: 1025,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1023
      },
      "67": {
        loc: {
          start: {
            line: 1035,
            column: 8
          },
          end: {
            line: 1037,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1035,
            column: 8
          },
          end: {
            line: 1037,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1035
      },
      "68": {
        loc: {
          start: {
            line: 1049,
            column: 12
          },
          end: {
            line: 1051,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1049,
            column: 12
          },
          end: {
            line: 1051,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1049
      },
      "69": {
        loc: {
          start: {
            line: 1061,
            column: 12
          },
          end: {
            line: 1061,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1061,
            column: 12
          },
          end: {
            line: 1061,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1061
      },
      "70": {
        loc: {
          start: {
            line: 1064,
            column: 12
          },
          end: {
            line: 1067,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1064,
            column: 12
          },
          end: {
            line: 1067,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1064
      },
      "71": {
        loc: {
          start: {
            line: 1087,
            column: 17
          },
          end: {
            line: 1087,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1087,
            column: 24
          },
          end: {
            line: 1087,
            column: 26
          }
        }],
        line: 1087
      },
      "72": {
        loc: {
          start: {
            line: 1087,
            column: 28
          },
          end: {
            line: 1087,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1087,
            column: 36
          },
          end: {
            line: 1087,
            column: 42
          }
        }],
        line: 1087
      },
      "73": {
        loc: {
          start: {
            line: 1104,
            column: 8
          },
          end: {
            line: 1107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1104,
            column: 8
          },
          end: {
            line: 1107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1104
      },
      "74": {
        loc: {
          start: {
            line: 1105,
            column: 27
          },
          end: {
            line: 1105,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1105,
            column: 27
          },
          end: {
            line: 1105,
            column: 44
          }
        }, {
          start: {
            line: 1105,
            column: 48
          },
          end: {
            line: 1105,
            column: 52
          }
        }],
        line: 1105
      },
      "75": {
        loc: {
          start: {
            line: 1106,
            column: 23
          },
          end: {
            line: 1106,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1106,
            column: 54
          },
          end: {
            line: 1106,
            column: 58
          }
        }, {
          start: {
            line: 1106,
            column: 61
          },
          end: {
            line: 1106,
            column: 63
          }
        }],
        line: 1106
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0],
      "72": [0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "200ce36f4061db389dcc63221956e88014d7fc2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ve6xjpezz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ve6xjpezz();
/**
 * Test Environment Recovery System
 * 
 * Provides automated recovery and restoration capabilities for test environment contamination
 * with comprehensive backup, validation, and emergency response mechanisms.
 */

const fs =
/* istanbul ignore next */
(cov_ve6xjpezz().s[0]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_ve6xjpezz().s[1]++, require('path'));
const _crypto =
/* istanbul ignore next */
(cov_ve6xjpezz().s[2]++, require('crypto'));
const NodeModulesMonitor =
/* istanbul ignore next */
(cov_ve6xjpezz().s[3]++, require('./nodeModulesMonitor'));
const ErrorRecovery =
/* istanbul ignore next */
(cov_ve6xjpezz().s[4]++, require('./errorRecovery'));
class TestEnvironmentRecovery {
  constructor(options =
  /* istanbul ignore next */
  (cov_ve6xjpezz().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[0]++;
    cov_ve6xjpezz().s[5]++;
    this.projectRoot = path.resolve(
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[1][0]++, options.projectRoot) ||
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[1][1]++, process.cwd()));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[6]++;
    this.config = {
      // Recovery settings
      maxRetries:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[2][0]++, options.maxRetries) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[2][1]++, 3),
      retryDelay:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[3][0]++, options.retryDelay) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[3][1]++, 1000),
      enableRealTimeRecovery: options.enableRealTimeRecovery !== false,
      enablePreemptiveBackup: options.enablePreemptiveBackup !== false,
      enableHealthMonitoring: options.enableHealthMonitoring !== false,
      // Backup settings
      maxBackups:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[4][0]++, options.maxBackups) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[4][1]++, 5),
      backupCompression:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[5][0]++, options.backupCompression) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[5][1]++, false),
      backupVerification: options.backupVerification !== false,
      // Recovery thresholds
      contaminationThreshold:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[6][0]++, options.contaminationThreshold) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[6][1]++, 3),
      emergencyThreshold:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[7][0]++, options.emergencyThreshold) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[7][1]++, 5),
      // Integration settings
      monitorIntegration: options.monitorIntegration !== false,
      errorRecoveryIntegration: options.errorRecoveryIntegration !== false,
      ...options.config
    };

    // Initialize integrated components with enhanced test environment integration
    /* istanbul ignore next */
    cov_ve6xjpezz().s[7]++;
    this.nodeModulesMonitor = new NodeModulesMonitor({
      enableBackup: true,
      enableRestore: true,
      enableDetailed: true,
      realTimeWatch: this.config.enableRealTimeRecovery,
      autoRestore: true,
      threatEscalation: true,
      emergencyLockdown: true,
      deepContentAnalysis: true,
      proactiveScanning: true,
      // Enhanced test environment protection
      testEnvironmentMode: process.env.NODE_ENV === 'test',
      testWorkerProtection: true,
      maximumIsolation: true,
      preventWorkerCrash: true,
      enhancedThreatDetection: true
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[8]++;
    this.errorRecovery = new ErrorRecovery({
      maxBackups: this.config.maxBackups,
      backupDir: '.test-environment-backups'
    });

    // Recovery state
    /* istanbul ignore next */
    cov_ve6xjpezz().s[9]++;
    this.isRecoveryActive = false;
    /* istanbul ignore next */
    cov_ve6xjpezz().s[10]++;
    this.recoverySession = null;
    /* istanbul ignore next */
    cov_ve6xjpezz().s[11]++;
    this.contaminationHistory = [];
    /* istanbul ignore next */
    cov_ve6xjpezz().s[12]++;
    this.backupRegistry = new Map();
    /* istanbul ignore next */
    cov_ve6xjpezz().s[13]++;
    this.healthMetrics = {
      lastHealthCheck: null,
      contaminationEvents: 0,
      recoveryEvents: 0,
      failedRecoveries: 0,
      systemHealth: 'UNKNOWN'
    };

    // Critical paths to monitor and protect
    /* istanbul ignore next */
    cov_ve6xjpezz().s[14]++;
    this.criticalPaths = ['node_modules/exit/lib/exit.js', 'package.json', 'package-lock.json', 'TODO.json', 'jest.config.js', 'jest.coverage.config.js', '.jest-cache', 'coverage', 'lib', 'test'];

    // Recovery strategies in order of preference
    /* istanbul ignore next */
    cov_ve6xjpezz().s[15]++;
    this.recoveryStrategies = ['immediate_restoration', 'selective_backup_restore', 'comprehensive_system_restore', 'emergency_reconstruction', 'minimal_system_rebuild'];
    /* istanbul ignore next */
    cov_ve6xjpezz().s[16]++;
    this.log('TestEnvironmentRecovery initialized', {
      projectRoot: this.projectRoot,
      config: this.config,
      criticalPaths: this.criticalPaths.length
    });
  }

  /**
   * Initialize the recovery system and start monitoring
   */
  async initialize() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[1]++;
    cov_ve6xjpezz().s[17]++;
    this.log('Initializing test environment recovery system');
    /* istanbul ignore next */
    cov_ve6xjpezz().s[18]++;
    try {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[19]++;
      // Create recovery session
      this.recoverySession = {
        id: `recovery_${Date.now()}`,
        startTime: new Date().toISOString(),
        phase: 'initialization'
      };

      // Initialize monitoring systems
      /* istanbul ignore next */
      cov_ve6xjpezz().s[20]++;
      if (this.config.monitorIntegration) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[8][0]++;
        cov_ve6xjpezz().s[21]++;
        await this.nodeModulesMonitor.startMonitoring();
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[8][1]++;
      }

      // Perform initial health check
      const healthResult =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[22]++, await this.performHealthCheck());
      /* istanbul ignore next */
      cov_ve6xjpezz().s[23]++;
      this.healthMetrics.systemHealth = healthResult.status;
      /* istanbul ignore next */
      cov_ve6xjpezz().s[24]++;
      this.healthMetrics.lastHealthCheck = new Date().toISOString();

      // Create preemptive backups
      /* istanbul ignore next */
      cov_ve6xjpezz().s[25]++;
      if (this.config.enablePreemptiveBackup) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[9][0]++;
        cov_ve6xjpezz().s[26]++;
        await this.createPreemptiveBackups();
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[9][1]++;
      }

      // Start real-time monitoring if enabled
      cov_ve6xjpezz().s[27]++;
      if (this.config.enableRealTimeRecovery) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[10][0]++;
        cov_ve6xjpezz().s[28]++;
        await this.startRealTimeRecovery();
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[10][1]++;
      }
      cov_ve6xjpezz().s[29]++;
      this.isRecoveryActive = true;
      /* istanbul ignore next */
      cov_ve6xjpezz().s[30]++;
      this.recoverySession.phase = 'active_monitoring';
      /* istanbul ignore next */
      cov_ve6xjpezz().s[31]++;
      this.log('Recovery system initialization completed', {
        sessionId: this.recoverySession.id,
        systemHealth: this.healthMetrics.systemHealth,
        realTimeRecovery: this.config.enableRealTimeRecovery
      });
      /* istanbul ignore next */
      cov_ve6xjpezz().s[32]++;
      return {
        success: true,
        sessionId: this.recoverySession.id,
        systemHealth: this.healthMetrics.systemHealth,
        monitoring: this.config.monitorIntegration,
        realTimeRecovery: this.config.enableRealTimeRecovery
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[33]++;
      this.log('Recovery system initialization failed', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_ve6xjpezz().s[34]++;
      throw new Error(`Recovery system initialization failed: ${error.message}`);
    }
  }

  /**
   * Detect and respond to contamination events
   */
  async detectAndRecover(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[2]++;
    cov_ve6xjpezz().s[35]++;
    if (!this.isRecoveryActive) {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[11][0]++;
      cov_ve6xjpezz().s[36]++;
      throw new Error('Recovery system not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_ve6xjpezz().b[11][1]++;
    }
    cov_ve6xjpezz().s[37]++;
    this.log('Contamination event detected', {
      event: contaminationEvent,
      sessionId: this.recoverySession.id
    }, 'warn');

    // Record contamination event
    const eventRecord =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[38]++, {
      id: `contamination_${Date.now()}`,
      timestamp: new Date().toISOString(),
      type:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[12][0]++, contaminationEvent.type) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[12][1]++, 'UNKNOWN'),
      severity:
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[13][0]++, contaminationEvent.severity) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[13][1]++, 'MEDIUM'),
      details: contaminationEvent,
      recoveryAttempts: []
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[39]++;
    this.contaminationHistory.push(eventRecord);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[40]++;
    this.healthMetrics.contaminationEvents++;
    /* istanbul ignore next */
    cov_ve6xjpezz().s[41]++;
    try {
      // Assess contamination severity
      const severityAssessment =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[42]++, await this.assessContaminationSeverity(eventRecord));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[43]++;
      eventRecord.severity = severityAssessment.severity;
      /* istanbul ignore next */
      cov_ve6xjpezz().s[44]++;
      eventRecord.riskLevel = severityAssessment.riskLevel;

      // Execute recovery strategy based on severity
      const recoveryResult =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[45]++, await this.executeRecoveryStrategy(eventRecord));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[46]++;
      if (recoveryResult.success) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[14][0]++;
        cov_ve6xjpezz().s[47]++;
        this.healthMetrics.recoveryEvents++;
        /* istanbul ignore next */
        cov_ve6xjpezz().s[48]++;
        this.log('Contamination recovery successful', {
          eventId: eventRecord.id,
          strategy: recoveryResult.strategy,
          duration: recoveryResult.duration
        });
      } else {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[14][1]++;
        cov_ve6xjpezz().s[49]++;
        this.healthMetrics.failedRecoveries++;
        /* istanbul ignore next */
        cov_ve6xjpezz().s[50]++;
        this.log('Contamination recovery failed', {
          eventId: eventRecord.id,
          error: recoveryResult.error
        }, 'error');
      }

      // Update system health
      /* istanbul ignore next */
      cov_ve6xjpezz().s[51]++;
      await this.updateSystemHealth();
      /* istanbul ignore next */
      cov_ve6xjpezz().s[52]++;
      return {
        success: recoveryResult.success,
        eventId: eventRecord.id,
        strategy: recoveryResult.strategy,
        systemHealth: this.healthMetrics.systemHealth,
        details: recoveryResult
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[53]++;
      this.healthMetrics.failedRecoveries++;
      /* istanbul ignore next */
      cov_ve6xjpezz().s[54]++;
      this.log('Recovery process failed', {
        eventId: eventRecord.id,
        error: error.message
      }, 'error');

      // Emergency fallback
      /* istanbul ignore next */
      cov_ve6xjpezz().s[55]++;
      if (eventRecord.severity === 'CRITICAL') {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[15][0]++;
        cov_ve6xjpezz().s[56]++;
        await this.activateEmergencyRecovery(eventRecord);
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[15][1]++;
      }
      cov_ve6xjpezz().s[57]++;
      throw error;
    }
  }

  /**
   * Perform comprehensive health check of test environment
   */
  async performHealthCheck() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[3]++;
    cov_ve6xjpezz().s[58]++;
    this.log('Performing comprehensive health check');
    const healthReport =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[59]++, {
      timestamp: new Date().toISOString(),
      status: 'HEALTHY',
      issues: [],
      warnings: [],
      checks: {
        fileIntegrity: null,
        nodeModulesIntegrity: null,
        configurationValidity: null,
        backupAvailability: null,
        systemResources: null
      }
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[60]++;
    try {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[61]++;
      // Check file integrity
      healthReport.checks.fileIntegrity = await this.checkFileIntegrity();
      /* istanbul ignore next */
      cov_ve6xjpezz().s[62]++;
      if (!healthReport.checks.fileIntegrity.passed) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[16][0]++;
        cov_ve6xjpezz().s[63]++;
        healthReport.issues.push('File integrity violations detected');
        /* istanbul ignore next */
        cov_ve6xjpezz().s[64]++;
        healthReport.status = 'DEGRADED';
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[16][1]++;
      }

      // Check node_modules integrity
      cov_ve6xjpezz().s[65]++;
      if (this.config.monitorIntegration) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[17][0]++;
        const integrityResult =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[66]++, await this.nodeModulesMonitor.checkIntegrity());
        /* istanbul ignore next */
        cov_ve6xjpezz().s[67]++;
        healthReport.checks.nodeModulesIntegrity = {
          passed: integrityResult.success,
          violations:
          /* istanbul ignore next */
          (cov_ve6xjpezz().b[18][0]++, integrityResult.violations) ||
          /* istanbul ignore next */
          (cov_ve6xjpezz().b[18][1]++, []),
          filesChecked:
          /* istanbul ignore next */
          (cov_ve6xjpezz().b[19][0]++, integrityResult.filesChecked) ||
          /* istanbul ignore next */
          (cov_ve6xjpezz().b[19][1]++, 0)
        };
        /* istanbul ignore next */
        cov_ve6xjpezz().s[68]++;
        if (!integrityResult.success) {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[20][0]++;
          cov_ve6xjpezz().s[69]++;
          healthReport.issues.push(`Node modules integrity failed: ${integrityResult.violations.length} violations`);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[70]++;
          healthReport.status = 'COMPROMISED';
        } else
        /* istanbul ignore next */
        {
          cov_ve6xjpezz().b[20][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[17][1]++;
      }

      // Check configuration validity
      cov_ve6xjpezz().s[71]++;
      healthReport.checks.configurationValidity = await this.checkConfigurationValidity();
      /* istanbul ignore next */
      cov_ve6xjpezz().s[72]++;
      if (!healthReport.checks.configurationValidity.passed) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[21][0]++;
        cov_ve6xjpezz().s[73]++;
        healthReport.warnings.push('Configuration issues detected');
        /* istanbul ignore next */
        cov_ve6xjpezz().s[74]++;
        if (healthReport.status === 'HEALTHY') {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[22][0]++;
          cov_ve6xjpezz().s[75]++;
          healthReport.status = 'DEGRADED';
        } else
        /* istanbul ignore next */
        {
          cov_ve6xjpezz().b[22][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[21][1]++;
      }

      // Check backup availability
      cov_ve6xjpezz().s[76]++;
      healthReport.checks.backupAvailability = await this.checkBackupAvailability();
      /* istanbul ignore next */
      cov_ve6xjpezz().s[77]++;
      if (!healthReport.checks.backupAvailability.passed) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[23][0]++;
        cov_ve6xjpezz().s[78]++;
        healthReport.warnings.push('Insufficient backup coverage');
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[23][1]++;
      }

      // Check system resources
      cov_ve6xjpezz().s[79]++;
      healthReport.checks.systemResources = await this.checkSystemResources();
      /* istanbul ignore next */
      cov_ve6xjpezz().s[80]++;
      if (!healthReport.checks.systemResources.passed) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[24][0]++;
        cov_ve6xjpezz().s[81]++;
        healthReport.warnings.push('System resource constraints detected');
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[24][1]++;
      }
      cov_ve6xjpezz().s[82]++;
      this.log('Health check completed', {
        status: healthReport.status,
        issues: healthReport.issues.length,
        warnings: healthReport.warnings.length
      });
      /* istanbul ignore next */
      cov_ve6xjpezz().s[83]++;
      return healthReport;
    } catch (error) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[84]++;
      healthReport.status = 'ERROR';
      /* istanbul ignore next */
      cov_ve6xjpezz().s[85]++;
      healthReport.issues.push(`Health check failed: ${error.message}`);
      /* istanbul ignore next */
      cov_ve6xjpezz().s[86]++;
      this.log('Health check failed', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_ve6xjpezz().s[87]++;
      return healthReport;
    }
  }

  /**
   * Create comprehensive preemptive backups
   */
  async createPreemptiveBackups() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[4]++;
    cov_ve6xjpezz().s[88]++;
    this.log('Creating preemptive backups');
    const backupResults =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[89]++, {
      timestamp: new Date().toISOString(),
      successful: [],
      failed: [],
      totalSize: 0
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[90]++;
    for (const criticalPath of this.criticalPaths) {
      const fullPath =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[91]++, path.resolve(this.projectRoot, criticalPath));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[92]++;
      try {
        /* istanbul ignore next */
        cov_ve6xjpezz().s[93]++;
        if (fs.existsSync(fullPath)) {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[25][0]++;
          const backupResult =
          /* istanbul ignore next */
          (cov_ve6xjpezz().s[94]++, await this.createPathBackup(fullPath));
          /* istanbul ignore next */
          cov_ve6xjpezz().s[95]++;
          if (backupResult.success) {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[26][0]++;
            cov_ve6xjpezz().s[96]++;
            backupResults.successful.push({
              path: criticalPath,
              backupPath: backupResult.backupPath,
              size:
              /* istanbul ignore next */
              (cov_ve6xjpezz().b[27][0]++, backupResult.size) ||
              /* istanbul ignore next */
              (cov_ve6xjpezz().b[27][1]++, 0),
              checksum: backupResult.checksum
            });
            /* istanbul ignore next */
            cov_ve6xjpezz().s[97]++;
            backupResults.totalSize +=
            /* istanbul ignore next */
            (cov_ve6xjpezz().b[28][0]++, backupResult.size) ||
            /* istanbul ignore next */
            (cov_ve6xjpezz().b[28][1]++, 0);

            // Register backup in registry
            /* istanbul ignore next */
            cov_ve6xjpezz().s[98]++;
            this.backupRegistry.set(criticalPath, {
              backupPath: backupResult.backupPath,
              timestamp: backupResult.timestamp,
              checksum: backupResult.checksum,
              size: backupResult.size
            });
          } else {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[26][1]++;
            cov_ve6xjpezz().s[99]++;
            backupResults.failed.push({
              path: criticalPath,
              error: backupResult.error
            });
          }
        } else
        /* istanbul ignore next */
        {
          cov_ve6xjpezz().b[25][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ve6xjpezz().s[100]++;
        backupResults.failed.push({
          path: criticalPath,
          error: error.message
        });
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[101]++;
    this.log('Preemptive backups completed', {
      successful: backupResults.successful.length,
      failed: backupResults.failed.length,
      totalSize: backupResults.totalSize
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[102]++;
    return backupResults;
  }

  /**
   * Execute recovery strategy based on contamination severity
   */
  async executeRecoveryStrategy(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[5]++;
    const startTime =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[103]++, Date.now());
    /* istanbul ignore next */
    cov_ve6xjpezz().s[104]++;
    this.log('Executing recovery strategy', {
      eventId: contaminationEvent.id,
      severity: contaminationEvent.severity,
      riskLevel: contaminationEvent.riskLevel
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[105]++;
    for (const strategy of this.recoveryStrategies) {
      const strategyResult =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[106]++, await this.tryRecoveryStrategy(strategy, contaminationEvent));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[107]++;
      contaminationEvent.recoveryAttempts.push({
        strategy,
        timestamp: new Date().toISOString(),
        success: strategyResult.success,
        error: strategyResult.error,
        duration: strategyResult.duration
      });
      /* istanbul ignore next */
      cov_ve6xjpezz().s[108]++;
      if (strategyResult.success) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[29][0]++;
        const totalDuration =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[109]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_ve6xjpezz().s[110]++;
        return {
          success: true,
          strategy,
          duration: totalDuration,
          details: strategyResult,
          attempts: contaminationEvent.recoveryAttempts.length
        };
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[29][1]++;
      }

      // Wait before trying next strategy
      cov_ve6xjpezz().s[111]++;
      if (this.config.retryDelay > 0) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[30][0]++;
        cov_ve6xjpezz().s[112]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_ve6xjpezz().f[6]++;
          cov_ve6xjpezz().s[113]++;
          return setTimeout(resolve, this.config.retryDelay);
        });
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[30][1]++;
      }
    }

    // All strategies failed
    const totalDuration =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[114]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[115]++;
    return {
      success: false,
      error: 'All recovery strategies failed',
      duration: totalDuration,
      attempts: contaminationEvent.recoveryAttempts.length,
      strategies: this.recoveryStrategies
    };
  }

  /**
   * Try a specific recovery strategy
   */
  async tryRecoveryStrategy(strategy, contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[7]++;
    const startTime =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[116]++, Date.now());
    /* istanbul ignore next */
    cov_ve6xjpezz().s[117]++;
    try {
      let result;
      /* istanbul ignore next */
      cov_ve6xjpezz().s[118]++;
      switch (strategy) {
        case 'immediate_restoration':
          /* istanbul ignore next */
          cov_ve6xjpezz().b[31][0]++;
          cov_ve6xjpezz().s[119]++;
          result = await this.immediateRestoration(contaminationEvent);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[120]++;
          break;
        case 'selective_backup_restore':
          /* istanbul ignore next */
          cov_ve6xjpezz().b[31][1]++;
          cov_ve6xjpezz().s[121]++;
          result = await this.selectiveBackupRestore(contaminationEvent);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[122]++;
          break;
        case 'comprehensive_system_restore':
          /* istanbul ignore next */
          cov_ve6xjpezz().b[31][2]++;
          cov_ve6xjpezz().s[123]++;
          result = await this.comprehensiveSystemRestore(contaminationEvent);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[124]++;
          break;
        case 'emergency_reconstruction':
          /* istanbul ignore next */
          cov_ve6xjpezz().b[31][3]++;
          cov_ve6xjpezz().s[125]++;
          result = await this.emergencyReconstruction(contaminationEvent);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[126]++;
          break;
        case 'minimal_system_rebuild':
          /* istanbul ignore next */
          cov_ve6xjpezz().b[31][4]++;
          cov_ve6xjpezz().s[127]++;
          result = await this.minimalSystemRebuild(contaminationEvent);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[128]++;
          break;
        default:
          /* istanbul ignore next */
          cov_ve6xjpezz().b[31][5]++;
          cov_ve6xjpezz().s[129]++;
          throw new Error(`Unknown recovery strategy: ${strategy}`);
      }
      const duration =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[130]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_ve6xjpezz().s[131]++;
      return {
        success: true,
        strategy,
        duration,
        details: result
      };
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[132]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_ve6xjpezz().s[133]++;
      this.log(`Recovery strategy ${strategy} failed`, {
        error: error.message,
        duration,
        eventId: contaminationEvent.id
      }, 'error');
      /* istanbul ignore next */
      cov_ve6xjpezz().s[134]++;
      return {
        success: false,
        strategy,
        duration,
        error: error.message
      };
    }
  }

  /**
   * Immediate restoration strategy - fastest response
   */
  async immediateRestoration(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[8]++;
    cov_ve6xjpezz().s[135]++;
    this.log('Executing immediate restoration', {
      eventId: contaminationEvent.id
    });
    const results =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[136]++, {
      restoredFiles: [],
      failed: []
    });

    // Identify affected files from contamination event
    const affectedFiles =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[137]++, this.identifyAffectedFiles(contaminationEvent));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[138]++;
    for (const filePath of affectedFiles) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[139]++;
      try {
        /* istanbul ignore next */
        cov_ve6xjpezz().s[140]++;
        // Try to restore from node modules monitor if available
        if (
        /* istanbul ignore next */
        (cov_ve6xjpezz().b[33][0]++, this.config.monitorIntegration) &&
        /* istanbul ignore next */
        (cov_ve6xjpezz().b[33][1]++, contaminationEvent.type === 'NODE_MODULES_CONTAMINATION')) {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[32][0]++;
          cov_ve6xjpezz().s[141]++;
          await this.nodeModulesMonitor.restoreCorruptedFiles();
          /* istanbul ignore next */
          cov_ve6xjpezz().s[142]++;
          results.restoredFiles.push(filePath);
        } else {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[32][1]++;
          // Use backup registry for direct restoration
          const backupInfo =
          /* istanbul ignore next */
          (cov_ve6xjpezz().s[143]++, this.backupRegistry.get(filePath));
          /* istanbul ignore next */
          cov_ve6xjpezz().s[144]++;
          if (backupInfo) {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[34][0]++;
            cov_ve6xjpezz().s[145]++;
            await this.restoreFromBackupRegistry(filePath, backupInfo);
            /* istanbul ignore next */
            cov_ve6xjpezz().s[146]++;
            results.restoredFiles.push(filePath);
          } else {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[34][1]++;
            cov_ve6xjpezz().s[147]++;
            results.failed.push({
              file: filePath,
              reason: 'No backup available'
            });
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ve6xjpezz().s[148]++;
        results.failed.push({
          file: filePath,
          reason: error.message
        });
      }
    }

    // Verify restoration
    const verificationResult =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[149]++, await this.verifyRestoration(results.restoredFiles));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[150]++;
    return {
      strategy: 'immediate_restoration',
      restoredFiles: results.restoredFiles.length,
      failedFiles: results.failed.length,
      verificationPassed: verificationResult.passed,
      details: results
    };
  }

  /**
   * Selective backup restore strategy
   */
  async selectiveBackupRestore(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[9]++;
    cov_ve6xjpezz().s[151]++;
    this.log('Executing selective backup restore', {
      eventId: contaminationEvent.id
    });
    const results =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[152]++, {
      restoredPaths: [],
      failed: []
    });

    // Determine which paths need restoration based on contamination type
    const pathsToRestore =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[153]++, this.determineCriticalPathsForRestore(contaminationEvent));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[154]++;
    for (const criticalPath of pathsToRestore) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[155]++;
      try {
        const fullPath =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[156]++, path.resolve(this.projectRoot, criticalPath));
        /* istanbul ignore next */
        cov_ve6xjpezz().s[157]++;
        if (criticalPath.includes('TODO.json')) {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[35][0]++;
          // Use ErrorRecovery for TODO.json files
          const restoreResult =
          /* istanbul ignore next */
          (cov_ve6xjpezz().s[158]++, await this.errorRecovery.restoreFromBackup(fullPath));
          /* istanbul ignore next */
          cov_ve6xjpezz().s[159]++;
          if (restoreResult.success) {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[36][0]++;
            cov_ve6xjpezz().s[160]++;
            results.restoredPaths.push(criticalPath);
          } else {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[36][1]++;
            cov_ve6xjpezz().s[161]++;
            results.failed.push({
              path: criticalPath,
              reason: restoreResult.error
            });
          }
        } else {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[35][1]++;
          // Use backup registry for other files
          const backupInfo =
          /* istanbul ignore next */
          (cov_ve6xjpezz().s[162]++, this.backupRegistry.get(criticalPath));
          /* istanbul ignore next */
          cov_ve6xjpezz().s[163]++;
          if (backupInfo) {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[37][0]++;
            cov_ve6xjpezz().s[164]++;
            await this.restoreFromBackupRegistry(criticalPath, backupInfo);
            /* istanbul ignore next */
            cov_ve6xjpezz().s[165]++;
            results.restoredPaths.push(criticalPath);
          } else {
            /* istanbul ignore next */
            cov_ve6xjpezz().b[37][1]++;
            cov_ve6xjpezz().s[166]++;
            results.failed.push({
              path: criticalPath,
              reason: 'No backup in registry'
            });
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ve6xjpezz().s[167]++;
        results.failed.push({
          path: criticalPath,
          reason: error.message
        });
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[168]++;
    return {
      strategy: 'selective_backup_restore',
      restoredPaths: results.restoredPaths.length,
      failedPaths: results.failed.length,
      details: results
    };
  }

  /**
   * Comprehensive system restore strategy
   */
  async comprehensiveSystemRestore(_contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[10]++;
    cov_ve6xjpezz().s[169]++;
    this.log('Executing comprehensive system restore');
    const results =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[170]++, {
      cleanedDirectories: [],
      restoredPaths: [],
      recreatedStructures: []
    });

    // Clean contaminated directories
    const contaminatedDirs =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[171]++, ['.jest-cache', 'coverage', 'node_modules/.cache']);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[172]++;
    for (const dir of contaminatedDirs) {
      const fullPath =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[173]++, path.resolve(this.projectRoot, dir));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[174]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[38][0]++;
        cov_ve6xjpezz().s[175]++;
        try {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[176]++;
          await this.cleanDirectory(fullPath);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[177]++;
          results.cleanedDirectories.push(dir);
        } catch (error) {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[178]++;
          this.log(`Failed to clean directory ${dir}`, {
            error: error.message
          }, 'warn');
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[38][1]++;
      }
    }

    // Restore all critical paths
    /* istanbul ignore next */
    cov_ve6xjpezz().s[179]++;
    for (const criticalPath of this.criticalPaths) {
      const backupInfo =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[180]++, this.backupRegistry.get(criticalPath));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[181]++;
      if (backupInfo) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[39][0]++;
        cov_ve6xjpezz().s[182]++;
        try {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[183]++;
          await this.restoreFromBackupRegistry(criticalPath, backupInfo);
          /* istanbul ignore next */
          cov_ve6xjpezz().s[184]++;
          results.restoredPaths.push(criticalPath);
        } catch (error) {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[185]++;
          this.log(`Failed to restore ${criticalPath}`, {
            error: error.message
          }, 'warn');
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[39][1]++;
      }
    }

    // Recreate essential directory structures
    const essentialDirs =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[186]++, ['coverage', 'test', 'lib']);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[187]++;
    for (const dir of essentialDirs) {
      const fullPath =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[188]++, path.resolve(this.projectRoot, dir));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[189]++;
      if (!fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[40][0]++;
        cov_ve6xjpezz().s[190]++;
        try {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[191]++;
          fs.mkdirSync(fullPath, {
            recursive: true
          });
          /* istanbul ignore next */
          cov_ve6xjpezz().s[192]++;
          results.recreatedStructures.push(dir);
        } catch (error) {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[193]++;
          this.log(`Failed to recreate directory ${dir}`, {
            error: error.message
          }, 'warn');
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[40][1]++;
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[194]++;
    return {
      strategy: 'comprehensive_system_restore',
      cleanedDirectories: results.cleanedDirectories.length,
      restoredPaths: results.restoredPaths.length,
      recreatedStructures: results.recreatedStructures.length,
      details: results
    };
  }

  /**
   * Emergency reconstruction strategy
   */
  async emergencyReconstruction(_contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[11]++;
    cov_ve6xjpezz().s[195]++;
    this.log('Executing emergency reconstruction');
    const results =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[196]++, {
      reconstructedFiles: [],
      failed: []
    });

    // Reconstruct critical configuration files
    const criticalConfigs =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[197]++, [{
      file: 'package.json',
      type: 'package_config'
    }, {
      file: 'TODO.json',
      type: 'todo_structure'
    }, {
      file: 'jest.config.js',
      type: 'jest_config'
    }]);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[198]++;
    for (const config of criticalConfigs) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[199]++;
      try {
        const filePath =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[200]++, path.resolve(this.projectRoot, config.file));
        const reconstructed =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[201]++, await this.reconstructFile(filePath, config.type));
        /* istanbul ignore next */
        cov_ve6xjpezz().s[202]++;
        if (reconstructed.success) {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[41][0]++;
          cov_ve6xjpezz().s[203]++;
          results.reconstructedFiles.push(config.file);
        } else {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[41][1]++;
          cov_ve6xjpezz().s[204]++;
          results.failed.push({
            file: config.file,
            reason: reconstructed.error
          });
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ve6xjpezz().s[205]++;
        results.failed.push({
          file: config.file,
          reason: error.message
        });
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[206]++;
    return {
      strategy: 'emergency_reconstruction',
      reconstructedFiles: results.reconstructedFiles.length,
      failedFiles: results.failed.length,
      details: results
    };
  }

  /**
   * Minimal system rebuild strategy - last resort
   */
  async minimalSystemRebuild(_contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[12]++;
    cov_ve6xjpezz().s[207]++;
    this.log('Executing minimal system rebuild - last resort');
    const results =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[208]++, {
      createdFiles: [],
      createdDirectories: []
    });

    // Create minimal TODO.json structure
    const todoPath =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[209]++, path.resolve(this.projectRoot, 'TODO.json'));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[43][0]++, !fs.existsSync(todoPath)) ||
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[43][1]++, await this.isFileCorrupted(todoPath))) {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[42][0]++;
      const minimalTodo =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[211]++, {
        project: path.basename(this.projectRoot),
        tasks: [],
        review_strikes: 0,
        strikes_completed_last_run: false,
        current_task_index: 0,
        last_mode: null,
        recovery_info: {
          recovered: true,
          timestamp: new Date().toISOString(),
          strategy: 'minimal_system_rebuild'
        }
      });
      const writeResult =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[212]++, await this.errorRecovery.atomicWrite(todoPath, JSON.stringify(minimalTodo, null, 2), false));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[213]++;
      if (writeResult.success) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[44][0]++;
        cov_ve6xjpezz().s[214]++;
        results.createdFiles.push('TODO.json');
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[44][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ve6xjpezz().b[42][1]++;
    }

    // Ensure essential directories exist
    const essentialDirs =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[215]++, ['lib', 'test', 'scripts', 'development']);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[216]++;
    for (const dir of essentialDirs) {
      const dirPath =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[217]++, path.resolve(this.projectRoot, dir));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[218]++;
      if (!fs.existsSync(dirPath)) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[45][0]++;
        cov_ve6xjpezz().s[219]++;
        try {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[220]++;
          fs.mkdirSync(dirPath, {
            recursive: true
          });
          /* istanbul ignore next */
          cov_ve6xjpezz().s[221]++;
          results.createdDirectories.push(dir);
        } catch (error) {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[222]++;
          this.log(`Failed to create directory ${dir}`, {
            error: error.message
          }, 'warn');
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[45][1]++;
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[223]++;
    return {
      strategy: 'minimal_system_rebuild',
      createdFiles: results.createdFiles.length,
      createdDirectories: results.createdDirectories.length,
      details: results
    };
  }

  /**
   * Start real-time recovery monitoring
   */
  async startRealTimeRecovery() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[13]++;
    cov_ve6xjpezz().s[224]++;
    this.log('Starting real-time recovery monitoring');

    // Skip real-time watching in test environment to prevent Jest worker issues
    /* istanbul ignore next */
    cov_ve6xjpezz().s[225]++;
    if (process.env.NODE_ENV === 'test') {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[46][0]++;
      cov_ve6xjpezz().s[226]++;
      this.log('Real-time recovery monitoring skipped in test environment', {
        reason: 'prevent_jest_async_handles'
      });
      /* istanbul ignore next */
      cov_ve6xjpezz().s[227]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ve6xjpezz().b[46][1]++;
    }

    // Set up file system watchers for critical paths
    cov_ve6xjpezz().s[228]++;
    this.realTimeWatchers = new Map();
    /* istanbul ignore next */
    cov_ve6xjpezz().s[229]++;
    for (const criticalPath of this.criticalPaths) {
      const fullPath =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[230]++, path.resolve(this.projectRoot, criticalPath));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[231]++;
      if (fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[47][0]++;
        cov_ve6xjpezz().s[232]++;
        try {
          const watcher =
          /* istanbul ignore next */
          (cov_ve6xjpezz().s[233]++, fs.watch(fullPath, {
            recursive: true
          }, async (eventType, filename) => {
            /* istanbul ignore next */
            cov_ve6xjpezz().f[14]++;
            cov_ve6xjpezz().s[234]++;
            try {
              /* istanbul ignore next */
              cov_ve6xjpezz().s[235]++;
              await this.handleRealTimeEvent(criticalPath, eventType, filename);
            } catch (error) {
              /* istanbul ignore next */
              cov_ve6xjpezz().s[236]++;
              this.log('Real-time event handler error', {
                path: criticalPath,
                filename,
                error: error.message
              }, 'error');
            }
          }));

          // Add error handler to prevent crashes
          /* istanbul ignore next */
          cov_ve6xjpezz().s[237]++;
          watcher.on('error', error => {
            /* istanbul ignore next */
            cov_ve6xjpezz().f[15]++;
            cov_ve6xjpezz().s[238]++;
            this.log('File watcher error', {
              path: criticalPath,
              error: error.message
            }, 'error');

            // Remove failed watcher from tracking
            /* istanbul ignore next */
            cov_ve6xjpezz().s[239]++;
            this.realTimeWatchers.delete(criticalPath);
          });
          /* istanbul ignore next */
          cov_ve6xjpezz().s[240]++;
          this.realTimeWatchers.set(criticalPath, watcher);
        } catch (error) {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[241]++;
          this.log(`Failed to watch ${criticalPath}`, {
            error: error.message
          }, 'warn');
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[47][1]++;
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[242]++;
    this.log('Real-time recovery monitoring started', {
      watchedPaths: this.realTimeWatchers.size
    });
  }

  /**
   * Handle real-time file system events
   */
  async handleRealTimeEvent(criticalPath, eventType, filename) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[16]++;
    cov_ve6xjpezz().s[243]++;
    try {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[244]++;
      if (
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[49][0]++, eventType === 'change') ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[49][1]++, eventType === 'rename')) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[48][0]++;
        const fullPath =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[245]++, path.resolve(this.projectRoot, criticalPath,
        /* istanbul ignore next */
        (cov_ve6xjpezz().b[50][0]++, filename) ||
        /* istanbul ignore next */
        (cov_ve6xjpezz().b[50][1]++, '')));

        // Quick contamination check
        /* istanbul ignore next */
        cov_ve6xjpezz().s[246]++;
        if (await this.isPathContaminated(fullPath)) {
          /* istanbul ignore next */
          cov_ve6xjpezz().b[51][0]++;
          const contaminationEvent =
          /* istanbul ignore next */
          (cov_ve6xjpezz().s[247]++, {
            type: 'REALTIME_CONTAMINATION',
            severity: 'HIGH',
            source: 'realtime_monitor',
            path: criticalPath,
            filename,
            eventType,
            timestamp: new Date().toISOString()
          });

          // Trigger immediate recovery
          /* istanbul ignore next */
          cov_ve6xjpezz().s[248]++;
          await this.detectAndRecover(contaminationEvent);
        } else
        /* istanbul ignore next */
        {
          cov_ve6xjpezz().b[51][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[48][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[249]++;
      this.log('Real-time event handling failed', {
        path: criticalPath,
        filename,
        error: error.message
      }, 'error');
    }
  }

  /**
   * Stop recovery system and cleanup
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[17]++;
    cov_ve6xjpezz().s[250]++;
    this.log('Shutting down recovery system');
    /* istanbul ignore next */
    cov_ve6xjpezz().s[251]++;
    try {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[252]++;
      // Stop real-time watchers
      if (this.realTimeWatchers) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[52][0]++;
        cov_ve6xjpezz().s[253]++;
        for (const [path, watcher] of this.realTimeWatchers) {
          /* istanbul ignore next */
          cov_ve6xjpezz().s[254]++;
          try {
            /* istanbul ignore next */
            cov_ve6xjpezz().s[255]++;
            watcher.close();
          } catch (error) {
            /* istanbul ignore next */
            cov_ve6xjpezz().s[256]++;
            this.log(`Failed to close watcher for ${path}`, {
              error: error.message
            }, 'warn');
          }
        }
        /* istanbul ignore next */
        cov_ve6xjpezz().s[257]++;
        this.realTimeWatchers.clear();
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[52][1]++;
      }

      // Stop node modules monitoring
      cov_ve6xjpezz().s[258]++;
      if (this.config.monitorIntegration) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[53][0]++;
        cov_ve6xjpezz().s[259]++;
        await this.nodeModulesMonitor.stopMonitoring();
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[53][1]++;
      }

      // Generate final report
      const finalReport =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[260]++, this.generateRecoveryReport());
      /* istanbul ignore next */
      cov_ve6xjpezz().s[261]++;
      this.isRecoveryActive = false;
      /* istanbul ignore next */
      cov_ve6xjpezz().s[262]++;
      this.recoverySession.phase = 'shutdown';
      /* istanbul ignore next */
      cov_ve6xjpezz().s[263]++;
      this.recoverySession.endTime = new Date().toISOString();
      /* istanbul ignore next */
      cov_ve6xjpezz().s[264]++;
      this.log('Recovery system shutdown completed', {
        sessionId: this.recoverySession.id,
        totalContaminationEvents: this.healthMetrics.contaminationEvents,
        totalRecoveryEvents: this.healthMetrics.recoveryEvents,
        failedRecoveries: this.healthMetrics.failedRecoveries
      });
      /* istanbul ignore next */
      cov_ve6xjpezz().s[265]++;
      return finalReport;
    } catch (error) {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[266]++;
      this.log('Recovery system shutdown failed', {
        error: error.message
      }, 'error');
      /* istanbul ignore next */
      cov_ve6xjpezz().s[267]++;
      throw error;
    }
  }

  /**
   * Generate comprehensive recovery report
   */
  generateRecoveryReport() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[18]++;
    cov_ve6xjpezz().s[268]++;
    return {
      sessionInfo: this.recoverySession,
      healthMetrics: this.healthMetrics,
      contaminationHistory: this.contaminationHistory,
      backupRegistry: Object.fromEntries(this.backupRegistry),
      config: this.config,
      statistics: {
        averageRecoveryTime: this.calculateAverageRecoveryTime(),
        successRate: this.calculateSuccessRate(),
        mostCommonContamination: this.getMostCommonContaminationType(),
        criticalPathsCovered: this.criticalPaths.length,
        backupsCreated: this.backupRegistry.size
      }
    };
  }

  // ========================================================================
  // UTILITY METHODS
  // ========================================================================

  async assessContaminationSeverity(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[19]++;
    // Implement severity assessment logic
    let severity =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[269]++,
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[54][0]++, contaminationEvent.severity) ||
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[54][1]++, 'MEDIUM'));
    let riskLevel =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[270]++, 'MODERATE');

    // Escalate based on contamination type
    /* istanbul ignore next */
    cov_ve6xjpezz().s[271]++;
    if (contaminationEvent.type === 'NODE_MODULES_CONTAMINATION') {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[55][0]++;
      cov_ve6xjpezz().s[272]++;
      severity = 'HIGH';
      /* istanbul ignore next */
      cov_ve6xjpezz().s[273]++;
      riskLevel = 'HIGH';
    } else {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[55][1]++;
      cov_ve6xjpezz().s[274]++;
      if (contaminationEvent.type === 'REALTIME_CONTAMINATION') {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[56][0]++;
        cov_ve6xjpezz().s[275]++;
        severity = 'CRITICAL';
        /* istanbul ignore next */
        cov_ve6xjpezz().s[276]++;
        riskLevel = 'CRITICAL';
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[56][1]++;
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[277]++;
    return {
      severity,
      riskLevel
    };
  }
  async checkFileIntegrity() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[20]++;
    const result =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[278]++, {
      passed: true,
      violations: []
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[279]++;
    for (const criticalPath of this.criticalPaths) {
      const fullPath =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[280]++, path.resolve(this.projectRoot, criticalPath));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[281]++;
      if (
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[58][0]++, fs.existsSync(fullPath)) &&
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[58][1]++, await this.isPathContaminated(fullPath))) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[57][0]++;
        cov_ve6xjpezz().s[282]++;
        result.passed = false;
        /* istanbul ignore next */
        cov_ve6xjpezz().s[283]++;
        result.violations.push(criticalPath);
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[57][1]++;
      }
    }
    /* istanbul ignore next */
    cov_ve6xjpezz().s[284]++;
    return result;
  }
  async checkConfigurationValidity() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[21]++;
    cov_ve6xjpezz().s[285]++;
    // Implement configuration validation
    return {
      passed: true,
      issues: []
    };
  }
  async checkBackupAvailability() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[22]++;
    const requiredBackups =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[286]++, this.criticalPaths.filter(path => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[23]++;
      cov_ve6xjpezz().s[287]++;
      return fs.existsSync(path.resolve(this.projectRoot, path));
    }));
    const availableBackups =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[288]++, Array.from(this.backupRegistry.keys()));
    const coverage =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[289]++, availableBackups.length / requiredBackups.length * 100);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[290]++;
    return {
      passed: coverage >= 80,
      // 80% coverage required
      coverage,
      availableBackups: availableBackups.length,
      requiredBackups: requiredBackups.length
    };
  }
  async checkSystemResources() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[24]++;
    cov_ve6xjpezz().s[291]++;
    // Basic system resource check
    return {
      passed: true,
      resources: 'adequate'
    };
  }
  async updateSystemHealth() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[25]++;
    const healthResult =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[292]++, await this.performHealthCheck());
    /* istanbul ignore next */
    cov_ve6xjpezz().s[293]++;
    this.healthMetrics.systemHealth = healthResult.status;
    /* istanbul ignore next */
    cov_ve6xjpezz().s[294]++;
    this.healthMetrics.lastHealthCheck = new Date().toISOString();
  }
  calculateAverageRecoveryTime() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[26]++;
    const recoveryTimes =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[295]++, this.contaminationHistory.flatMap(event => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[27]++;
      cov_ve6xjpezz().s[296]++;
      return event.recoveryAttempts;
    }).filter(attempt => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[28]++;
      cov_ve6xjpezz().s[297]++;
      return attempt.success;
    }).map(attempt => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[29]++;
      cov_ve6xjpezz().s[298]++;
      return attempt.duration;
    }));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[299]++;
    return recoveryTimes.length > 0 ?
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[59][0]++, recoveryTimes.reduce((sum, time) => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[30]++;
      cov_ve6xjpezz().s[300]++;
      return sum + time;
    }, 0) / recoveryTimes.length) :
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[59][1]++, 0);
  }
  calculateSuccessRate() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[31]++;
    const totalAttempts =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[301]++, this.contaminationHistory.length);
    const successfulRecoveries =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[302]++, this.healthMetrics.recoveryEvents);
    /* istanbul ignore next */
    cov_ve6xjpezz().s[303]++;
    return totalAttempts > 0 ?
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[60][0]++, successfulRecoveries / totalAttempts * 100) :
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[60][1]++, 0);
  }
  getMostCommonContaminationType() {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[32]++;
    const typeCounts =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[304]++, {});
    /* istanbul ignore next */
    cov_ve6xjpezz().s[305]++;
    this.contaminationHistory.forEach(event => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[33]++;
      cov_ve6xjpezz().s[306]++;
      typeCounts[event.type] = (
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[61][0]++, typeCounts[event.type]) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[61][1]++, 0)) + 1;
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[307]++;
    return Object.keys(typeCounts).reduce((max, type) => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[34]++;
      cov_ve6xjpezz().s[308]++;
      return typeCounts[type] > (
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[63][0]++, typeCounts[max]) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[63][1]++, 0)) ?
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[62][0]++, type) :
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[62][1]++, max);
    }, 'UNKNOWN');
  }

  // Additional utility methods would be implemented here...
  identifyAffectedFiles(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[35]++;
    cov_ve6xjpezz().s[309]++;
    // Implementation for identifying affected files
    return /* istanbul ignore next */(cov_ve6xjpezz().b[64][0]++, contaminationEvent.details?.affectedFiles) ||
    /* istanbul ignore next */
    (cov_ve6xjpezz().b[64][1]++, []);
  }
  determineCriticalPathsForRestore(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[36]++;
    cov_ve6xjpezz().s[310]++;
    // Implementation for determining which paths to restore
    return this.criticalPaths.filter(path => {
      /* istanbul ignore next */
      cov_ve6xjpezz().f[37]++;
      cov_ve6xjpezz().s[311]++;
      return /* istanbul ignore next */(cov_ve6xjpezz().b[65][0]++, contaminationEvent.type === 'COMPREHENSIVE') ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[65][1]++, contaminationEvent.details?.affectedPaths?.includes(path));
    });
  }
  async createPathBackup(fullPath) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[38]++;
    cov_ve6xjpezz().s[312]++;
    // Implementation for creating path backups
    return {
      success: true,
      backupPath: `${fullPath}.backup`,
      size: 0,
      checksum: '',
      timestamp: new Date().toISOString()
    };
  }
  async restoreFromBackupRegistry(criticalPath, backupInfo) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[39]++;
    // Implementation for restoring from backup registry
    const fullPath =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[313]++, path.resolve(this.projectRoot, criticalPath));
    /* istanbul ignore next */
    cov_ve6xjpezz().s[314]++;
    if (fs.existsSync(backupInfo.backupPath)) {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[66][0]++;
      cov_ve6xjpezz().s[315]++;
      fs.copyFileSync(backupInfo.backupPath, fullPath);
    } else
    /* istanbul ignore next */
    {
      cov_ve6xjpezz().b[66][1]++;
    }
  }
  async verifyRestoration(restoredFiles) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[40]++;
    cov_ve6xjpezz().s[316]++;
    // Implementation for verifying restoration
    return {
      passed: true,
      verified: restoredFiles.length
    };
  }
  async cleanDirectory(fullPath) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[41]++;
    cov_ve6xjpezz().s[317]++;
    // Implementation for cleaning directories
    if (fs.existsSync(fullPath)) {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[67][0]++;
      cov_ve6xjpezz().s[318]++;
      fs.rmSync(fullPath, {
        recursive: true,
        force: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_ve6xjpezz().b[67][1]++;
    }
  }
  async reconstructFile(filePath, type) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[42]++;
    cov_ve6xjpezz().s[319]++;
    // Implementation for reconstructing files
    return {
      success: true,
      type,
      reconstructed: true
    };
  }
  async isFileCorrupted(filePath) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[43]++;
    cov_ve6xjpezz().s[320]++;
    // Implementation for checking file corruption
    try {
      const content =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[321]++, fs.readFileSync(filePath, 'utf8'));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[322]++;
      if (filePath.endsWith('.json')) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[68][0]++;
        cov_ve6xjpezz().s[323]++;
        JSON.parse(content);
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[68][1]++;
      }
      cov_ve6xjpezz().s[324]++;
      return false;
    } catch {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[325]++;
      return true;
    }
  }
  async isPathContaminated(fullPath) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[44]++;
    cov_ve6xjpezz().s[326]++;
    // Implementation for checking path contamination
    try {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[327]++;
      if (!fs.existsSync(fullPath)) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[69][0]++;
        cov_ve6xjpezz().s[328]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[69][1]++;
      }
      const stat =
      /* istanbul ignore next */
      (cov_ve6xjpezz().s[329]++, fs.statSync(fullPath));
      /* istanbul ignore next */
      cov_ve6xjpezz().s[330]++;
      if (stat.isFile()) {
        /* istanbul ignore next */
        cov_ve6xjpezz().b[70][0]++;
        const content =
        /* istanbul ignore next */
        (cov_ve6xjpezz().s[331]++, fs.readFileSync(fullPath, 'utf8'));
        /* istanbul ignore next */
        cov_ve6xjpezz().s[332]++;
        return /infinite-continue-stop-hook|TODO\.json|"tasks"\s*:/.test(content);
      } else
      /* istanbul ignore next */
      {
        cov_ve6xjpezz().b[70][1]++;
      }
      cov_ve6xjpezz().s[333]++;
      return false;
    } catch {
      /* istanbul ignore next */
      cov_ve6xjpezz().s[334]++;
      return false;
    }
  }
  async activateEmergencyRecovery(contaminationEvent) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[45]++;
    cov_ve6xjpezz().s[335]++;
    // Implementation for emergency recovery activation
    this.log('EMERGENCY RECOVERY ACTIVATED', {
      eventId: contaminationEvent.id,
      severity: contaminationEvent.severity
    }, 'error');
    /* istanbul ignore next */
    cov_ve6xjpezz().s[336]++;
    await this.minimalSystemRebuild(contaminationEvent);
  }

  /**
   * Log messages with timestamp and level
   */
  log(message, data =
  /* istanbul ignore next */
  (cov_ve6xjpezz().b[71][0]++, {}), level =
  /* istanbul ignore next */
  (cov_ve6xjpezz().b[72][0]++, 'info')) {
    /* istanbul ignore next */
    cov_ve6xjpezz().f[46]++;
    const _logEntry =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[337]++, {
      timestamp: new Date().toISOString(),
      level: level.toUpperCase(),
      component: 'TestEnvironmentRecovery',
      message,
      sessionId: this.recoverySession?.id,
      ...data
    });

    // Console output
    const levelEmoji =
    /* istanbul ignore next */
    (cov_ve6xjpezz().s[338]++, {
      info: 'ℹ️',
      warn: '⚠️',
      error: '❌'
    });
    /* istanbul ignore next */
    cov_ve6xjpezz().s[339]++;
    if (process.env.NODE_ENV !== 'test') {
      /* istanbul ignore next */
      cov_ve6xjpezz().b[73][0]++;
      cov_ve6xjpezz().s[340]++;
      console.log(`${
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[74][0]++, levelEmoji[level]) ||
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[74][1]++, 'ℹ️')} [Recovery] ${message}`, Object.keys(data).length > 0 ?
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[75][0]++, data) :
      /* istanbul ignore next */
      (cov_ve6xjpezz().b[75][1]++, ''));
    } else
    /* istanbul ignore next */
    {
      cov_ve6xjpezz().b[73][1]++;
    }
  }
}
/* istanbul ignore next */
cov_ve6xjpezz().s[341]++;
module.exports = TestEnvironmentRecovery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,