1e04acf0356970458b8a05be2eea760d
/* istanbul ignore next */
function cov_2o1lkw551y() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/testErrorHandler.js";
  var hash = "2d362dd407d7145376f603486dd76f0fab0f6e08";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/testErrorHandler.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 18,
          column: 10
        }
      },
      "1": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "2": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "3": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "4": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 87
        }
      },
      "5": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 91
        }
      },
      "6": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 87
        }
      },
      "7": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 85
        }
      },
      "8": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 94
        }
      },
      "9": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 98
        }
      },
      "10": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 91
        }
      },
      "11": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 97
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 87
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 97
        }
      },
      "14": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 92
        }
      },
      "15": {
        start: {
          line: 62,
          column: 30
        },
        end: {
          line: 62,
          column: 69
        }
      },
      "16": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 72
        }
      },
      "17": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "18": {
        start: {
          line: 66,
          column: 22
        },
        end: {
          line: 66,
          column: 23
        }
      },
      "19": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "20": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "21": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "22": {
        start: {
          line: 72,
          column: 38
        },
        end: {
          line: 72,
          column: 77
        }
      },
      "23": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 81
        }
      },
      "24": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "25": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 34
        }
      },
      "26": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 26
        }
      },
      "27": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 64
        }
      },
      "28": {
        start: {
          line: 85,
          column: 39
        },
        end: {
          line: 85,
          column: 90
        }
      },
      "29": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "30": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 54
        }
      },
      "31": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "32": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 91,
          column: 76
        }
      },
      "33": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 33
        }
      },
      "34": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "35": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "36": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 101,
          column: 17
        }
      },
      "37": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 26
        }
      },
      "38": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 68
        }
      },
      "39": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "40": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 83
        }
      },
      "41": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "42": {
        start: {
          line: 121,
          column: 30
        },
        end: {
          line: 126,
          column: 25
        }
      },
      "43": {
        start: {
          line: 122,
          column: 37
        },
        end: {
          line: 122,
          column: 90
        }
      },
      "44": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 48
        }
      },
      "45": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 47
        }
      },
      "46": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 37
        }
      },
      "47": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "48": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 47
        }
      },
      "49": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 32
        }
      },
      "50": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 47
        }
      },
      "51": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "52": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "53": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 60
        }
      },
      "54": {
        start: {
          line: 150,
          column: 26
        },
        end: {
          line: 150,
          column: 68
        }
      },
      "55": {
        start: {
          line: 151,
          column: 33
        },
        end: {
          line: 151,
          column: 76
        }
      },
      "56": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "57": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "58": {
        start: {
          line: 155,
          column: 31
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "59": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 160,
          column: 18
        }
      },
      "60": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 86
        }
      },
      "61": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 64
        }
      },
      "62": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "63": {
        start: {
          line: 180,
          column: 34
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "64": {
        start: {
          line: 184,
          column: 28
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "65": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 73
        }
      },
      "66": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "67": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 58
        }
      },
      "68": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 56
        }
      },
      "69": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 61
        }
      },
      "70": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "71": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 220,
          column: 13
        }
      },
      "72": {
        start: {
          line: 203,
          column: 27
        },
        end: {
          line: 203,
          column: 40
        }
      },
      "73": {
        start: {
          line: 204,
          column: 29
        },
        end: {
          line: 204,
          column: 44
        }
      },
      "74": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 207,
          column: 50
        }
      },
      "75": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "76": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 59
        }
      },
      "77": {
        start: {
          line: 213,
          column: 32
        },
        end: {
          line: 213,
          column: 66
        }
      },
      "78": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 60
        }
      },
      "79": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 62
        }
      },
      "80": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 45
        }
      },
      "81": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 84
        }
      },
      "82": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 38
        }
      },
      "83": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "84": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "85": {
        start: {
          line: 233,
          column: 34
        },
        end: {
          line: 233,
          column: 68
        }
      },
      "86": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 65
        }
      },
      "87": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 63
        }
      },
      "88": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 38
        }
      },
      "89": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "90": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 24
        }
      },
      "91": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 41
        }
      },
      "92": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 37
        }
      },
      "93": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 260,
          column: 96
        }
      },
      "94": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 39
        }
      },
      "95": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 67
        }
      },
      "96": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 60
        }
      },
      "97": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 67
        }
      },
      "98": {
        start: {
          line: 278,
          column: 25
        },
        end: {
          line: 278,
          column: 39
        }
      },
      "99": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 35
        }
      },
      "100": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 45
        }
      },
      "101": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "102": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 72
        }
      },
      "103": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 38
        }
      },
      "104": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "105": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "106": {
        start: {
          line: 302,
          column: 28
        },
        end: {
          line: 305,
          column: 39
        }
      },
      "107": {
        start: {
          line: 307,
          column: 31
        },
        end: {
          line: 307,
          column: 48
        }
      },
      "108": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 62
        }
      },
      "109": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 63
        }
      },
      "110": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "111": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 72
        }
      },
      "112": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 38
        }
      },
      "113": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "114": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "115": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 43
        }
      },
      "116": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 45
        }
      },
      "117": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 59
        }
      },
      "118": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 38
        }
      },
      "119": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 349,
          column: 11
        }
      },
      "120": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 38
        }
      },
      "121": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "122": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 76
        }
      },
      "123": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 41
        }
      },
      "124": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 38
        }
      },
      "125": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 38
        }
      },
      "126": {
        start: {
          line: 376,
          column: 26
        },
        end: {
          line: 376,
          column: 68
        }
      },
      "127": {
        start: {
          line: 377,
          column: 22
        },
        end: {
          line: 377,
          column: 70
        }
      },
      "128": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 63
        }
      },
      "129": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "130": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "131": {
        start: {
          line: 398,
          column: 30
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "132": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 50
        }
      },
      "133": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 52
        }
      },
      "134": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 44
        }
      },
      "135": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 42
        }
      },
      "136": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 40
        }
      },
      "137": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 50
        }
      },
      "138": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 56
        }
      },
      "139": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 29
        }
      },
      "140": {
        start: {
          line: 420,
          column: 29
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "141": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "142": {
        start: {
          line: 427,
          column: 26
        },
        end: {
          line: 427,
          column: 54
        }
      },
      "143": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 430,
          column: 13
        }
      },
      "144": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 429,
          column: 32
        }
      },
      "145": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "146": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 30
        }
      },
      "147": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 20
        }
      },
      "148": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 70
        }
      },
      "149": {
        start: {
          line: 447,
          column: 38
        },
        end: {
          line: 447,
          column: 68
        }
      },
      "150": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 48
        }
      },
      "151": {
        start: {
          line: 456,
          column: 41
        },
        end: {
          line: 456,
          column: 48
        }
      },
      "152": {
        start: {
          line: 458,
          column: 26
        },
        end: {
          line: 458,
          column: 50
        }
      },
      "153": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 463,
          column: 9
        }
      },
      "154": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 77
        }
      },
      "155": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 71
        }
      },
      "156": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 477,
          column: 10
        }
      },
      "157": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 489,
          column: 10
        }
      },
      "158": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 62
        }
      },
      "159": {
        start: {
          line: 507,
          column: 21
        },
        end: {
          line: 507,
          column: 25
        }
      },
      "160": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 567,
          column: 10
        }
      },
      "161": {
        start: {
          line: 513,
          column: 20
        },
        end: {
          line: 520,
          column: 21
        }
      },
      "162": {
        start: {
          line: 514,
          column: 30
        },
        end: {
          line: 514,
          column: 72
        }
      },
      "163": {
        start: {
          line: 523,
          column: 20
        },
        end: {
          line: 526,
          column: 21
        }
      },
      "164": {
        start: {
          line: 524,
          column: 30
        },
        end: {
          line: 524,
          column: 80
        }
      },
      "165": {
        start: {
          line: 529,
          column: 20
        },
        end: {
          line: 532,
          column: 21
        }
      },
      "166": {
        start: {
          line: 530,
          column: 30
        },
        end: {
          line: 530,
          column: 60
        }
      },
      "167": {
        start: {
          line: 538,
          column: 20
        },
        end: {
          line: 545,
          column: 21
        }
      },
      "168": {
        start: {
          line: 539,
          column: 30
        },
        end: {
          line: 539,
          column: 49
        }
      },
      "169": {
        start: {
          line: 548,
          column: 20
        },
        end: {
          line: 551,
          column: 21
        }
      },
      "170": {
        start: {
          line: 549,
          column: 30
        },
        end: {
          line: 549,
          column: 59
        }
      },
      "171": {
        start: {
          line: 557,
          column: 20
        },
        end: {
          line: 557,
          column: 91
        }
      },
      "172": {
        start: {
          line: 560,
          column: 20
        },
        end: {
          line: 560,
          column: 96
        }
      },
      "173": {
        start: {
          line: 565,
          column: 25
        },
        end: {
          line: 565,
          column: 45
        }
      },
      "174": {
        start: {
          line: 566,
          column: 25
        },
        end: {
          line: 566,
          column: 42
        }
      },
      "175": {
        start: {
          line: 571,
          column: 0
        },
        end: {
          line: 571,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 53
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 61
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 58
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 119
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 120,
            column: 28
          }
        },
        loc: {
          start: {
            line: 120,
            column: 48
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 120
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 121,
            column: 48
          },
          end: {
            line: 121,
            column: 49
          }
        },
        loc: {
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 121
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 30
          }
        },
        loc: {
          start: {
            line: 128,
            column: 39
          },
          end: {
            line: 131,
            column: 13
          }
        },
        line: 128
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 22
          }
        },
        loc: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 134,
            column: 13
          }
        },
        line: 131
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 51
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 145
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 45
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 178
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 184,
            column: 51
          },
          end: {
            line: 184,
            column: 52
          }
        },
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 73
          }
        },
        line: 185
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 55
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 198
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 59
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 229
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 54
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 246
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 49
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 259
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        loc: {
          start: {
            line: 268,
            column: 57
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 268
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 276
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 54
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 286
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 56
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 297
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 52
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 324
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 57
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 340
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 53
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 357
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 43
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 373
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 69
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 397
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 418,
            column: 5
          }
        },
        loc: {
          start: {
            line: 418,
            column: 36
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 418
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 446,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        loc: {
          start: {
            line: 446,
            column: 14
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 446
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 447,
            column: 27
          },
          end: {
            line: 447,
            column: 28
          }
        },
        loc: {
          start: {
            line: 447,
            column: 38
          },
          end: {
            line: 447,
            column: 68
          }
        },
        line: 447
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 455,
            column: 5
          }
        },
        loc: {
          start: {
            line: 455,
            column: 30
          },
          end: {
            line: 464,
            column: 5
          }
        },
        line: 455
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        loc: {
          start: {
            line: 470,
            column: 20
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 470
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 483,
            column: 4
          },
          end: {
            line: 483,
            column: 5
          }
        },
        loc: {
          start: {
            line: 483,
            column: 17
          },
          end: {
            line: 490,
            column: 5
          }
        },
        line: 483
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 50
          },
          end: {
            line: 499,
            column: 5
          }
        },
        line: 497
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 506,
            column: 5
          }
        },
        loc: {
          start: {
            line: 506,
            column: 41
          },
          end: {
            line: 568,
            column: 5
          }
        },
        line: 506
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 512,
            column: 26
          },
          end: {
            line: 512,
            column: 27
          }
        },
        loc: {
          start: {
            line: 513,
            column: 20
          },
          end: {
            line: 520,
            column: 21
          }
        },
        line: 513
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 514,
            column: 24
          },
          end: {
            line: 514,
            column: 25
          }
        },
        loc: {
          start: {
            line: 514,
            column: 30
          },
          end: {
            line: 514,
            column: 72
          }
        },
        line: 514
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 522,
            column: 27
          },
          end: {
            line: 522,
            column: 28
          }
        },
        loc: {
          start: {
            line: 523,
            column: 20
          },
          end: {
            line: 526,
            column: 21
          }
        },
        line: 523
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 524,
            column: 24
          },
          end: {
            line: 524,
            column: 25
          }
        },
        loc: {
          start: {
            line: 524,
            column: 30
          },
          end: {
            line: 524,
            column: 80
          }
        },
        line: 524
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 528,
            column: 24
          },
          end: {
            line: 528,
            column: 25
          }
        },
        loc: {
          start: {
            line: 529,
            column: 20
          },
          end: {
            line: 532,
            column: 21
          }
        },
        line: 529
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 530,
            column: 24
          },
          end: {
            line: 530,
            column: 25
          }
        },
        loc: {
          start: {
            line: 530,
            column: 30
          },
          end: {
            line: 530,
            column: 60
          }
        },
        line: 530
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 537,
            column: 23
          },
          end: {
            line: 537,
            column: 24
          }
        },
        loc: {
          start: {
            line: 538,
            column: 20
          },
          end: {
            line: 545,
            column: 21
          }
        },
        line: 538
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 539,
            column: 24
          },
          end: {
            line: 539,
            column: 25
          }
        },
        loc: {
          start: {
            line: 539,
            column: 30
          },
          end: {
            line: 539,
            column: 49
          }
        },
        line: 539
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 547,
            column: 27
          },
          end: {
            line: 547,
            column: 28
          }
        },
        loc: {
          start: {
            line: 548,
            column: 20
          },
          end: {
            line: 551,
            column: 21
          }
        },
        line: 548
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 549,
            column: 24
          },
          end: {
            line: 549,
            column: 25
          }
        },
        loc: {
          start: {
            line: 549,
            column: 30
          },
          end: {
            line: 549,
            column: 59
          }
        },
        line: 549
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 556,
            column: 27
          },
          end: {
            line: 556,
            column: 28
          }
        },
        loc: {
          start: {
            line: 557,
            column: 20
          },
          end: {
            line: 557,
            column: 91
          }
        },
        line: 557
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 559,
            column: 25
          },
          end: {
            line: 559,
            column: 26
          }
        },
        loc: {
          start: {
            line: 560,
            column: 20
          },
          end: {
            line: 560,
            column: 96
          }
        },
        line: 560
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 565,
            column: 19
          },
          end: {
            line: 565,
            column: 20
          }
        },
        loc: {
          start: {
            line: 565,
            column: 25
          },
          end: {
            line: 565,
            column: 45
          }
        },
        line: 565
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 566,
            column: 19
          },
          end: {
            line: 566,
            column: 20
          }
        },
        loc: {
          start: {
            line: 566,
            column: 25
          },
          end: {
            line: 566,
            column: 42
          }
        },
        line: 566
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 26
          },
          end: {
            line: 10,
            column: 28
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 42
          }
        }, {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 12,
            column: 47
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 42
          }
        }, {
          start: {
            line: 13,
            column: 46
          },
          end: {
            line: 13,
            column: 50
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 36
          }
        }, {
          start: {
            line: 14,
            column: 40
          },
          end: {
            line: 14,
            column: 45
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 61,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 61,
            column: 51
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 47
          }
        }, {
          start: {
            line: 62,
            column: 51
          },
          end: {
            line: 62,
            column: 69
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 45
          }
        }, {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 72
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 71,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 71,
            column: 35
          }
        }, {
          start: {
            line: 71,
            column: 39
          },
          end: {
            line: 71,
            column: 59
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 72,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 72,
            column: 53
          }
        }, {
          start: {
            line: 72,
            column: 57
          },
          end: {
            line: 72,
            column: 77
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 95,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 95,
            column: 21
          }
        }, {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 95,
            column: 21
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 50
          }
        }, {
          start: {
            line: 90,
            column: 54
          },
          end: {
            line: 90,
            column: 75
          }
        }],
        line: 90
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 95,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 95,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 101,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 101,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 40
          }
        }, {
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 71
          }
        }],
        line: 99
      },
      "16": {
        loc: {
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 119,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 119,
            column: 56
          }
        }],
        line: 119
      },
      "17": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 26
          },
          end: {
            line: 150,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 26
          },
          end: {
            line: 150,
            column: 36
          }
        }, {
          start: {
            line: 150,
            column: 40
          },
          end: {
            line: 150,
            column: 50
          }
        }, {
          start: {
            line: 150,
            column: 54
          },
          end: {
            line: 150,
            column: 68
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "20": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 39
          }
        }, {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 73
          }
        }],
        line: 185
      },
      "21": {
        loc: {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 185,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 185,
            column: 66
          }
        }, {
          start: {
            line: 185,
            column: 70
          },
          end: {
            line: 185,
            column: 72
          }
        }],
        line: 185
      },
      "22": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "23": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 23
          }
        }, {
          start: {
            line: 188,
            column: 27
          },
          end: {
            line: 188,
            column: 61
          }
        }],
        line: 188
      },
      "24": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "25": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 201,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 201,
            column: 38
          }
        }, {
          start: {
            line: 201,
            column: 42
          },
          end: {
            line: 201,
            column: 50
          }
        }],
        line: 201
      },
      "26": {
        loc: {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "27": {
        loc: {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 58
          }
        }, {
          start: {
            line: 213,
            column: 62
          },
          end: {
            line: 213,
            column: 66
          }
        }],
        line: 213
      },
      "28": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "29": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 38
          }
        }, {
          start: {
            line: 231,
            column: 42
          },
          end: {
            line: 231,
            column: 90
          }
        }],
        line: 231
      },
      "30": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "31": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "32": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "33": {
        loc: {
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 299,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 299,
            column: 30
          }
        }, {
          start: {
            line: 299,
            column: 34
          },
          end: {
            line: 299,
            column: 47
          }
        }],
        line: 299
      },
      "34": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 316,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 316,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "35": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "36": {
        loc: {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 30
          }
        }, {
          start: {
            line: 325,
            column: 34
          },
          end: {
            line: 325,
            column: 74
          }
        }],
        line: 325
      },
      "37": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "38": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 359,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 359,
            column: 25
          }
        }, {
          start: {
            line: 359,
            column: 29
          },
          end: {
            line: 359,
            column: 50
          }
        }],
        line: 359
      },
      "39": {
        loc: {
          start: {
            line: 360,
            column: 31
          },
          end: {
            line: 360,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 31
          },
          end: {
            line: 360,
            column: 46
          }
        }, {
          start: {
            line: 360,
            column: 50
          },
          end: {
            line: 360,
            column: 70
          }
        }],
        line: 360
      },
      "40": {
        loc: {
          start: {
            line: 376,
            column: 26
          },
          end: {
            line: 376,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 26
          },
          end: {
            line: 376,
            column: 36
          }
        }, {
          start: {
            line: 376,
            column: 40
          },
          end: {
            line: 376,
            column: 50
          }
        }, {
          start: {
            line: 376,
            column: 54
          },
          end: {
            line: 376,
            column: 68
          }
        }],
        line: 376
      },
      "41": {
        loc: {
          start: {
            line: 377,
            column: 22
          },
          end: {
            line: 377,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 22
          },
          end: {
            line: 377,
            column: 65
          }
        }, {
          start: {
            line: 377,
            column: 69
          },
          end: {
            line: 377,
            column: 70
          }
        }],
        line: 377
      },
      "42": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "43": {
        loc: {
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 430,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 430,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "44": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "45": {
        loc: {
          start: {
            line: 455,
            column: 17
          },
          end: {
            line: 455,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 455,
            column: 24
          },
          end: {
            line: 455,
            column: 28
          }
        }],
        line: 455
      },
      "46": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 456,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 456,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "47": {
        loc: {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 463,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 463,
            column: 9
          }
        }, {
          start: {
            line: 461,
            column: 15
          },
          end: {
            line: 463,
            column: 9
          }
        }],
        line: 459
      },
      "48": {
        loc: {
          start: {
            line: 474,
            column: 26
          },
          end: {
            line: 476,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 475,
            column: 18
          },
          end: {
            line: 475,
            column: 87
          }
        }, {
          start: {
            line: 476,
            column: 18
          },
          end: {
            line: 476,
            column: 19
          }
        }],
        line: 474
      },
      "49": {
        loc: {
          start: {
            line: 506,
            column: 27
          },
          end: {
            line: 506,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 506,
            column: 37
          },
          end: {
            line: 506,
            column: 39
          }
        }],
        line: 506
      },
      "50": {
        loc: {
          start: {
            line: 512,
            column: 33
          },
          end: {
            line: 512,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 512,
            column: 44
          },
          end: {
            line: 512,
            column: 50
          }
        }],
        line: 512
      },
      "51": {
        loc: {
          start: {
            line: 518,
            column: 48
          },
          end: {
            line: 518,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 48
          },
          end: {
            line: 518,
            column: 74
          }
        }, {
          start: {
            line: 518,
            column: 78
          },
          end: {
            line: 518,
            column: 82
          }
        }],
        line: 518
      },
      "52": {
        loc: {
          start: {
            line: 537,
            column: 33
          },
          end: {
            line: 537,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 537,
            column: 44
          },
          end: {
            line: 537,
            column: 48
          }
        }],
        line: 537
      },
      "53": {
        loc: {
          start: {
            line: 556,
            column: 32
          },
          end: {
            line: 556,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 556,
            column: 42
          },
          end: {
            line: 556,
            column: 44
          }
        }],
        line: 556
      },
      "54": {
        loc: {
          start: {
            line: 559,
            column: 41
          },
          end: {
            line: 559,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 559,
            column: 51
          },
          end: {
            line: 559,
            column: 53
          }
        }],
        line: 559
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0],
      "51": [0, 0],
      "52": [0],
      "53": [0],
      "54": [0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d362dd407d7145376f603486dd76f0fab0f6e08"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2o1lkw551y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2o1lkw551y();
// =============================================================================
// testErrorHandler.js - Comprehensive Error Handling Patterns for Test Suites
// 
// This module provides standardized error handling patterns, recovery strategies,
// and resilience mechanisms for all test suites to ensure consistent behavior
// across different failure scenarios.
// =============================================================================

class TestErrorHandler {
  constructor(options =
  /* istanbul ignore next */
  (cov_2o1lkw551y().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[0]++;
    cov_2o1lkw551y().s[0]++;
    this.options = {
      maxRetries:
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[1][0]++, options.maxRetries) ||
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[1][1]++, 3),
      retryDelay:
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[2][0]++, options.retryDelay) ||
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[2][1]++, 1000),
      timeout:
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[3][0]++, options.timeout) ||
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[3][1]++, 30000),
      enableLogging: options.enableLogging !== false,
      enableRecovery: options.enableRecovery !== false,
      ...options
    };
    /* istanbul ignore next */
    cov_2o1lkw551y().s[1]++;
    this.errorStats = {
      totalErrors: 0,
      recoveredErrors: 0,
      fatalErrors: 0,
      errorsByType: new Map()
    };
    /* istanbul ignore next */
    cov_2o1lkw551y().s[2]++;
    this.errorRecoveryStrategies = new Map();
    /* istanbul ignore next */
    cov_2o1lkw551y().s[3]++;
    this.setupDefaultRecoveryStrategies();
  }

  /**
   * Sets up default error recovery strategies for common error types
   */
  setupDefaultRecoveryStrategies() {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[1]++;
    cov_2o1lkw551y().s[4]++;
    // File system errors
    this.errorRecoveryStrategies.set('ENOENT', this.handleFileNotFound.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[5]++;
    this.errorRecoveryStrategies.set('EACCES', this.handlePermissionDenied.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[6]++;
    this.errorRecoveryStrategies.set('EMFILE', this.handleTooManyFiles.bind(this));

    // Network/timeout errors
    /* istanbul ignore next */
    cov_2o1lkw551y().s[7]++;
    this.errorRecoveryStrategies.set('ETIMEDOUT', this.handleTimeout.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[8]++;
    this.errorRecoveryStrategies.set('ECONNRESET', this.handleConnectionReset.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[9]++;
    this.errorRecoveryStrategies.set('ECONNREFUSED', this.handleConnectionRefused.bind(this));

    // JSON/parsing errors
    /* istanbul ignore next */
    cov_2o1lkw551y().s[10]++;
    this.errorRecoveryStrategies.set('SyntaxError', this.handleSyntaxError.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[11]++;
    this.errorRecoveryStrategies.set('JSONParseError', this.handleJSONParseError.bind(this));

    // Test-specific errors
    /* istanbul ignore next */
    cov_2o1lkw551y().s[12]++;
    this.errorRecoveryStrategies.set('MockError', this.handleMockError.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[13]++;
    this.errorRecoveryStrategies.set('AssertionError', this.handleAssertionError.bind(this));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[14]++;
    this.errorRecoveryStrategies.set('TimeoutError', this.handleTestTimeout.bind(this));
  }

  /**
   * Wraps an async operation with comprehensive error handling and recovery
   * @param {Function} operation - The async operation to wrap
   * @param {Object} context - Context information for error handling
   * @returns {Promise} Promise that resolves with result or handled error
   */
  async withErrorHandling(operation, context =
  /* istanbul ignore next */
  (cov_2o1lkw551y().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[2]++;
    const operationName =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[15]++,
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[5][0]++, context.operation) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[5][1]++, 'UnknownOperation'));
    const maxRetries =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[16]++,
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[6][0]++, context.maxRetries) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[6][1]++, this.options.maxRetries));
    let lastError =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[17]++, null);
    let attempt =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[18]++, 0);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[19]++;
    while (attempt <= maxRetries) {
      /* istanbul ignore next */
      cov_2o1lkw551y().s[20]++;
      try {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[21]++;
        // Add timeout wrapper if specified
        if (
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[8][0]++, context.timeout) ||
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[8][1]++, this.options.timeout)) {
          /* istanbul ignore next */
          cov_2o1lkw551y().b[7][0]++;
          const timeoutMs =
          /* istanbul ignore next */
          (cov_2o1lkw551y().s[22]++,
          /* istanbul ignore next */
          (cov_2o1lkw551y().b[9][0]++, context.timeout) ||
          /* istanbul ignore next */
          (cov_2o1lkw551y().b[9][1]++, this.options.timeout));
          /* istanbul ignore next */
          cov_2o1lkw551y().s[23]++;
          return await this.withTimeout(operation, timeoutMs, context);
        } else
        /* istanbul ignore next */
        {
          cov_2o1lkw551y().b[7][1]++;
        }
        cov_2o1lkw551y().s[24]++;
        return await operation();
      } catch (error) {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[25]++;
        lastError = error;
        /* istanbul ignore next */
        cov_2o1lkw551y().s[26]++;
        attempt++;
        /* istanbul ignore next */
        cov_2o1lkw551y().s[27]++;
        this.recordError(error, operationName, attempt);

        // Try to recover from the error
        const recoveryResult =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[28]++, await this.attemptRecovery(error, context, attempt));
        /* istanbul ignore next */
        cov_2o1lkw551y().s[29]++;
        if (recoveryResult.recovered) {
          /* istanbul ignore next */
          cov_2o1lkw551y().b[10][0]++;
          cov_2o1lkw551y().s[30]++;
          this.errorStats.recoveredErrors++;
          /* istanbul ignore next */
          cov_2o1lkw551y().s[31]++;
          if (
          /* istanbul ignore next */
          (cov_2o1lkw551y().b[12][0]++, recoveryResult.shouldRetry) &&
          /* istanbul ignore next */
          (cov_2o1lkw551y().b[12][1]++, attempt <= maxRetries)) {
            /* istanbul ignore next */
            cov_2o1lkw551y().b[11][0]++;
            cov_2o1lkw551y().s[32]++;
            await this.delay(this.options.retryDelay * attempt);
            /* istanbul ignore next */
            cov_2o1lkw551y().s[33]++;
            continue;
          } else {
            /* istanbul ignore next */
            cov_2o1lkw551y().b[11][1]++;
            cov_2o1lkw551y().s[34]++;
            if (recoveryResult.result) {
              /* istanbul ignore next */
              cov_2o1lkw551y().b[13][0]++;
              cov_2o1lkw551y().s[35]++;
              return recoveryResult.result;
            } else
            /* istanbul ignore next */
            {
              cov_2o1lkw551y().b[13][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_2o1lkw551y().b[10][1]++;
        }

        // If this was the last attempt or recovery failed, break
        cov_2o1lkw551y().s[36]++;
        if (
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[15][0]++, attempt > maxRetries) ||
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[15][1]++, !recoveryResult.shouldRetry)) {
          /* istanbul ignore next */
          cov_2o1lkw551y().b[14][0]++;
          cov_2o1lkw551y().s[37]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_2o1lkw551y().b[14][1]++;
        }
        cov_2o1lkw551y().s[38]++;
        await this.delay(this.options.retryDelay * attempt);
      }
    }

    // If we get here, all attempts failed
    /* istanbul ignore next */
    cov_2o1lkw551y().s[39]++;
    this.errorStats.fatalErrors++;
    /* istanbul ignore next */
    cov_2o1lkw551y().s[40]++;
    throw this.createEnhancedError(lastError, operationName, attempt, context);
  }

  /**
   * Wraps operation with timeout handling
   * @param {Function} operation - The operation to wrap
   * @param {number} timeoutMs - Timeout in milliseconds
   * @param {Object} context - Context for error handling
   * @returns {Promise} Promise that resolves or times out
   */
  async withTimeout(operation, timeoutMs, context =
  /* istanbul ignore next */
  (cov_2o1lkw551y().b[16][0]++, {})) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[3]++;
    cov_2o1lkw551y().s[41]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2o1lkw551y().f[4]++;
      const timeoutId =
      /* istanbul ignore next */
      (cov_2o1lkw551y().s[42]++, global.setTimeout(() => {
        /* istanbul ignore next */
        cov_2o1lkw551y().f[5]++;
        const timeoutError =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[43]++, new Error(`Operation timed out after ${timeoutMs}ms`));
        /* istanbul ignore next */
        cov_2o1lkw551y().s[44]++;
        timeoutError.code = 'ETIMEDOUT';
        /* istanbul ignore next */
        cov_2o1lkw551y().s[45]++;
        timeoutError.context = context;
        /* istanbul ignore next */
        cov_2o1lkw551y().s[46]++;
        reject(timeoutError);
      }, timeoutMs));
      /* istanbul ignore next */
      cov_2o1lkw551y().s[47]++;
      operation().then(result => {
        /* istanbul ignore next */
        cov_2o1lkw551y().f[6]++;
        cov_2o1lkw551y().s[48]++;
        global.clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_2o1lkw551y().s[49]++;
        resolve(result);
      }).catch(error => {
        /* istanbul ignore next */
        cov_2o1lkw551y().f[7]++;
        cov_2o1lkw551y().s[50]++;
        global.clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_2o1lkw551y().s[51]++;
        reject(error);
      });
    });
  }

  /**
   * Attempts to recover from an error using registered strategies
   * @param {Error} error - The error to recover from
   * @param {Object} context - Context information
   * @param {number} attempt - Current attempt number
   * @returns {Object} Recovery result
   */
  async attemptRecovery(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[8]++;
    cov_2o1lkw551y().s[52]++;
    if (!this.options.enableRecovery) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[17][0]++;
      cov_2o1lkw551y().s[53]++;
      return {
        recovered: false,
        shouldRetry: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[17][1]++;
    }
    const errorType =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[54]++,
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[18][0]++, error.code) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[18][1]++, error.name) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[18][2]++, 'UnknownError'));
    const recoveryStrategy =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[55]++, this.errorRecoveryStrategies.get(errorType));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[56]++;
    if (recoveryStrategy) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[19][0]++;
      cov_2o1lkw551y().s[57]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[58]++, await recoveryStrategy(error, context, attempt));
        /* istanbul ignore next */
        cov_2o1lkw551y().s[59]++;
        return {
          recovered: true,
          shouldRetry: result.shouldRetry !== false,
          result: result.result
        };
      } catch (recoveryError) {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[60]++;
        this.log(`Recovery strategy failed for ${errorType}:`, recoveryError);
        /* istanbul ignore next */
        cov_2o1lkw551y().s[61]++;
        return {
          recovered: false,
          shouldRetry: false
        };
      }
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[19][1]++;
    }

    // Generic recovery based on error characteristics
    cov_2o1lkw551y().s[62]++;
    return this.genericRecovery(error, context, attempt);
  }

  /**
   * Generic recovery strategies for unknown error types
   * @param {Error} error - The error to recover from
   * @param {Object} context - Context information
   * @param {number} attempt - Current attempt number
   * @returns {Object} Recovery result
   */
  genericRecovery(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[9]++;
    // Transient errors should be retried
    const transientPatterns =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[63]++, [/network/i, /connection/i, /timeout/i, /temporary/i, /busy/i]);
    const isTransient =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[64]++, transientPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2o1lkw551y().f[10]++;
      cov_2o1lkw551y().s[65]++;
      return /* istanbul ignore next */(cov_2o1lkw551y().b[20][0]++, pattern.test(error.message)) ||
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[20][1]++, pattern.test(
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[21][0]++, error.code) ||
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[21][1]++, '')));
    }));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[23][0]++, isTransient) &&
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[23][1]++, attempt <= this.options.maxRetries)) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[22][0]++;
      cov_2o1lkw551y().s[67]++;
      return {
        recovered: true,
        shouldRetry: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[22][1]++;
    }
    cov_2o1lkw551y().s[68]++;
    return {
      recovered: false,
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for file not found errors
   */
  async handleFileNotFound(error, context, _attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[11]++;
    const filePath =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[69]++, this.extractFilePathFromError(error));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[70]++;
    if (
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[25][0]++, context.createMissingFiles) &&
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[25][1]++, filePath)) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[24][0]++;
      cov_2o1lkw551y().s[71]++;
      try {
        const fs =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[72]++, require('fs'));
        const path =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[73]++, require('path'));

        // Create directory if it doesn't exist
        const dir =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[74]++, path.dirname(filePath));
        /* istanbul ignore next */
        cov_2o1lkw551y().s[75]++;
        if (!fs.existsSync(dir)) {
          /* istanbul ignore next */
          cov_2o1lkw551y().b[26][0]++;
          cov_2o1lkw551y().s[76]++;
          fs.mkdirSync(dir, {
            recursive: true
          });
        } else
        /* istanbul ignore next */
        {
          cov_2o1lkw551y().b[26][1]++;
        }

        // Create empty file or use provided content
        const content =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[77]++,
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[27][0]++, context.defaultFileContent) ||
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[27][1]++, '{}'));
        /* istanbul ignore next */
        cov_2o1lkw551y().s[78]++;
        fs.writeFileSync(filePath, content, 'utf8');
        /* istanbul ignore next */
        cov_2o1lkw551y().s[79]++;
        this.log(`Created missing file: ${filePath}`);
        /* istanbul ignore next */
        cov_2o1lkw551y().s[80]++;
        return {
          shouldRetry: true
        };
      } catch (createError) {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[81]++;
        this.log(`Failed to create missing file ${filePath}:`, createError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[24][1]++;
    }
    cov_2o1lkw551y().s[82]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for permission denied errors
   */
  async handlePermissionDenied(error, context, _attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[12]++;
    cov_2o1lkw551y().s[83]++;
    // In test environment, try to use alternative paths or mock operations
    if (
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[29][0]++, context.useAlternativePath) &&
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[29][1]++, typeof context.useAlternativePath === 'function')) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[28][0]++;
      cov_2o1lkw551y().s[84]++;
      try {
        const altResult =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[85]++, await context.useAlternativePath());
        /* istanbul ignore next */
        cov_2o1lkw551y().s[86]++;
        return {
          shouldRetry: false,
          result: altResult
        };
      } catch (altError) {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[87]++;
        this.log('Alternative path failed:', altError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[28][1]++;
    }
    cov_2o1lkw551y().s[88]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for too many open files
   */
  async handleTooManyFiles(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[13]++;
    cov_2o1lkw551y().s[89]++;
    // Force garbage collection and wait
    if (global.gc) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[30][0]++;
      cov_2o1lkw551y().s[90]++;
      global.gc();
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[30][1]++;
    }
    cov_2o1lkw551y().s[91]++;
    await this.delay(1000 * attempt);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[92]++;
    return {
      shouldRetry: true
    };
  }

  /**
   * Recovery strategy for timeout errors
   */
  async handleTimeout(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[14]++;
    const backoffDelay =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[93]++, Math.min(this.options.retryDelay * Math.pow(2, attempt - 1), 10000));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[94]++;
    await this.delay(backoffDelay);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[95]++;
    return {
      shouldRetry: attempt <= this.options.maxRetries
    };
  }

  /**
   * Recovery strategy for connection reset errors
   */
  async handleConnectionReset(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[15]++;
    cov_2o1lkw551y().s[96]++;
    await this.delay(this.options.retryDelay * attempt);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[97]++;
    return {
      shouldRetry: attempt <= this.options.maxRetries
    };
  }

  /**
   * Recovery strategy for connection refused errors
   */
  async handleConnectionRefused(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[16]++;
    // For tests, might indicate service not ready
    const waitTime =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[98]++, 2000 * attempt);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[99]++;
    await this.delay(waitTime);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[100]++;
    return {
      shouldRetry: attempt <= 2
    }; // Limit retries for connection refused
  }

  /**
   * Recovery strategy for syntax errors
   */
  async handleSyntaxError(error, context, _attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[17]++;
    cov_2o1lkw551y().s[101]++;
    // Syntax errors are usually not recoverable
    if (context.fallbackData) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[31][0]++;
      cov_2o1lkw551y().s[102]++;
      return {
        shouldRetry: false,
        result: context.fallbackData
      };
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[31][1]++;
    }
    cov_2o1lkw551y().s[103]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for JSON parse errors
   */
  async handleJSONParseError(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[18]++;
    cov_2o1lkw551y().s[104]++;
    // Try to fix common JSON issues or use fallback
    if (
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[33][0]++, context.rawContent) &&
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[33][1]++, attempt === 1)) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[32][0]++;
      cov_2o1lkw551y().s[105]++;
      try {
        // Try to fix common JSON issues
        let fixed =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[106]++, context.rawContent.replace(/,\s*}/g, '}') // Remove trailing commas
        .replace(/,\s*]/g, ']') // Remove trailing commas in arrays
        .replace(/'/g, '"')); // Replace single quotes with double quotes

        const parsed =
        /* istanbul ignore next */
        (cov_2o1lkw551y().s[107]++, JSON.parse(fixed));
        /* istanbul ignore next */
        cov_2o1lkw551y().s[108]++;
        return {
          shouldRetry: false,
          result: parsed
        };
      } catch (fixError) {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[109]++;
        this.log('JSON fix attempt failed:', fixError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[32][1]++;
    }
    cov_2o1lkw551y().s[110]++;
    if (context.fallbackData) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[34][0]++;
      cov_2o1lkw551y().s[111]++;
      return {
        shouldRetry: false,
        result: context.fallbackData
      };
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[34][1]++;
    }
    cov_2o1lkw551y().s[112]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for mock errors
   */
  async handleMockError(error, context, _attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[19]++;
    cov_2o1lkw551y().s[113]++;
    if (
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[36][0]++, context.resetMocks) &&
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[36][1]++, typeof context.resetMocks === 'function')) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[35][0]++;
      cov_2o1lkw551y().s[114]++;
      try {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[115]++;
        await context.resetMocks();
        /* istanbul ignore next */
        cov_2o1lkw551y().s[116]++;
        return {
          shouldRetry: true
        };
      } catch (resetError) {
        /* istanbul ignore next */
        cov_2o1lkw551y().s[117]++;
        this.log('Mock reset failed:', resetError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[35][1]++;
    }
    cov_2o1lkw551y().s[118]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for assertion errors
   */
  async handleAssertionError(error, context, _attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[20]++;
    cov_2o1lkw551y().s[119]++;
    // Assertion errors usually indicate test logic issues
    // Log detailed information for debugging
    this.log('Assertion Error Details:', {
      message: error.message,
      actual: error.actual,
      expected: error.expected,
      operator: error.operator,
      context: context
    });
    /* istanbul ignore next */
    cov_2o1lkw551y().s[120]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Recovery strategy for test timeout errors
   */
  async handleTestTimeout(error, context, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[21]++;
    cov_2o1lkw551y().s[121]++;
    // For test timeouts, we might want to extend the timeout and retry once
    if (
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[38][0]++, attempt === 1) &&
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[38][1]++, context.extendTimeout)) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[37][0]++;
      cov_2o1lkw551y().s[122]++;
      context.timeout = (
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[39][0]++, context.timeout) ||
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[39][1]++, this.options.timeout)) * 2;
      /* istanbul ignore next */
      cov_2o1lkw551y().s[123]++;
      return {
        shouldRetry: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[37][1]++;
    }
    cov_2o1lkw551y().s[124]++;
    return {
      shouldRetry: false
    };
  }

  /**
   * Records error statistics for monitoring and analysis
   * @param {Error} error - The error to record
   * @param {string} operation - The operation that failed
   * @param {number} attempt - The attempt number
   */
  recordError(error, operation, attempt) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[22]++;
    cov_2o1lkw551y().s[125]++;
    this.errorStats.totalErrors++;
    const errorType =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[126]++,
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[40][0]++, error.code) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[40][1]++, error.name) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[40][2]++, 'UnknownError'));
    const count =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[127]++,
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[41][0]++, this.errorStats.errorsByType.get(errorType)) ||
    /* istanbul ignore next */
    (cov_2o1lkw551y().b[41][1]++, 0));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[128]++;
    this.errorStats.errorsByType.set(errorType, count + 1);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[129]++;
    if (this.options.enableLogging) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[42][0]++;
      cov_2o1lkw551y().s[130]++;
      this.log(`Error in ${operation} (attempt ${attempt}):`, {
        type: errorType,
        message: error.message,
        stack: error.stack?.split('\n').slice(0, 3).join('\n')
      });
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[42][1]++;
    }
  }

  /**
   * Creates an enhanced error with additional context and recovery information
   * @param {Error} originalError - The original error
   * @param {string} operation - The operation that failed
   * @param {number} attempts - Number of attempts made
   * @param {Object} context - Additional context
   * @returns {Error} Enhanced error
   */
  createEnhancedError(originalError, operation, attempts, context) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[23]++;
    const enhancedError =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[131]++, new Error(`Operation '${operation}' failed after ${attempts} attempts: ${originalError.message}`));
    /* istanbul ignore next */
    cov_2o1lkw551y().s[132]++;
    enhancedError.name = 'TestOperationError';
    /* istanbul ignore next */
    cov_2o1lkw551y().s[133]++;
    enhancedError.originalError = originalError;
    /* istanbul ignore next */
    cov_2o1lkw551y().s[134]++;
    enhancedError.operation = operation;
    /* istanbul ignore next */
    cov_2o1lkw551y().s[135]++;
    enhancedError.attempts = attempts;
    /* istanbul ignore next */
    cov_2o1lkw551y().s[136]++;
    enhancedError.context = context;
    /* istanbul ignore next */
    cov_2o1lkw551y().s[137]++;
    enhancedError.stack = originalError.stack;
    /* istanbul ignore next */
    cov_2o1lkw551y().s[138]++;
    enhancedError.errorStats = this.getErrorStats();
    /* istanbul ignore next */
    cov_2o1lkw551y().s[139]++;
    return enhancedError;
  }

  /**
   * Extracts file path from error message or context
   * @param {Error} error - The error to extract path from
   * @returns {string|null} File path if found
   */
  extractFilePathFromError(error) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[24]++;
    // Try to extract file path from error message
    const pathPatterns =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[140]++, [/ENOENT: no such file or directory, open '([^']+)'/, /Cannot find module '([^']+)'/, /Error: ENOENT: .* '([^']+)'/]);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[141]++;
    for (const pattern of pathPatterns) {
      const match =
      /* istanbul ignore next */
      (cov_2o1lkw551y().s[142]++, error.message.match(pattern));
      /* istanbul ignore next */
      cov_2o1lkw551y().s[143]++;
      if (match) {
        /* istanbul ignore next */
        cov_2o1lkw551y().b[43][0]++;
        cov_2o1lkw551y().s[144]++;
        return match[1];
      } else
      /* istanbul ignore next */
      {
        cov_2o1lkw551y().b[43][1]++;
      }
    }

    // Check if path is in error object
    /* istanbul ignore next */
    cov_2o1lkw551y().s[145]++;
    if (error.path) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[44][0]++;
      cov_2o1lkw551y().s[146]++;
      return error.path;
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[44][1]++;
    }
    cov_2o1lkw551y().s[147]++;
    return null;
  }

  /**
   * Utility method for delays
   * @param {number} ms - Milliseconds to delay
   * @returns {Promise} Promise that resolves after delay
   */
  delay(ms) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[25]++;
    cov_2o1lkw551y().s[148]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2o1lkw551y().f[26]++;
      cov_2o1lkw551y().s[149]++;
      return global.setTimeout(resolve, ms);
    });
  }

  /**
   * Logging method with optional formatting
   * @param {string} message - Log message
   * @param {*} data - Additional data to log
   */
  log(message, data =
  /* istanbul ignore next */
  (cov_2o1lkw551y().b[45][0]++, null)) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[27]++;
    cov_2o1lkw551y().s[150]++;
    if (!this.options.enableLogging) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[46][0]++;
      cov_2o1lkw551y().s[151]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2o1lkw551y().b[46][1]++;
    }
    const timestamp =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[152]++, new Date().toISOString());
    /* istanbul ignore next */
    cov_2o1lkw551y().s[153]++;
    if (data) {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[47][0]++;
      cov_2o1lkw551y().s[154]++;
      console.log(`[${timestamp}] TestErrorHandler: ${message}`, data);
    } else {
      /* istanbul ignore next */
      cov_2o1lkw551y().b[47][1]++;
      cov_2o1lkw551y().s[155]++;
      console.log(`[${timestamp}] TestErrorHandler: ${message}`);
    }
  }

  /**
   * Gets current error statistics
   * @returns {Object} Error statistics
   */
  getErrorStats() {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[28]++;
    cov_2o1lkw551y().s[156]++;
    return {
      ...this.errorStats,
      errorsByType: Object.fromEntries(this.errorStats.errorsByType),
      recoveryRate: this.errorStats.totalErrors > 0 ?
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[48][0]++, this.errorStats.recoveredErrors / this.errorStats.totalErrors * 100) :
      /* istanbul ignore next */
      (cov_2o1lkw551y().b[48][1]++, 0)
    };
  }

  /**
   * Resets error statistics
   */
  resetStats() {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[29]++;
    cov_2o1lkw551y().s[157]++;
    this.errorStats = {
      totalErrors: 0,
      recoveredErrors: 0,
      fatalErrors: 0,
      errorsByType: new Map()
    };
  }

  /**
   * Registers a custom error recovery strategy
   * @param {string} errorType - Error type or code
   * @param {Function} strategy - Recovery strategy function
   */
  registerRecoveryStrategy(errorType, strategy) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[30]++;
    cov_2o1lkw551y().s[158]++;
    this.errorRecoveryStrategies.set(errorType, strategy);
  }

  /**
   * Creates a resilient test environment with automatic error handling
   * @param {Object} options - Environment options
   * @returns {Object} Test environment with error handling
   */
  createResilientTestEnv(options =
  /* istanbul ignore next */
  (cov_2o1lkw551y().b[49][0]++, {})) {
    /* istanbul ignore next */
    cov_2o1lkw551y().f[31]++;
    const self =
    /* istanbul ignore next */
    (cov_2o1lkw551y().s[159]++, this);
    /* istanbul ignore next */
    cov_2o1lkw551y().s[160]++;
    return {
      // Wrapped fs operations
      fs: {
        readFile: (path, encoding =
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[50][0]++, 'utf8')) => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[32]++;
          cov_2o1lkw551y().s[161]++;
          return self.withErrorHandling(() => {
            /* istanbul ignore next */
            cov_2o1lkw551y().f[33]++;
            cov_2o1lkw551y().s[162]++;
            return require('fs').readFileSync(path, encoding);
          }, {
            operation: 'readFile',
            createMissingFiles: options.createMissingFiles,
            defaultFileContent:
            /* istanbul ignore next */
            (cov_2o1lkw551y().b[51][0]++, options.defaultFileContent) ||
            /* istanbul ignore next */
            (cov_2o1lkw551y().b[51][1]++, '{}')
          });
        },
        writeFile: (path, content) => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[34]++;
          cov_2o1lkw551y().s[163]++;
          return self.withErrorHandling(() => {
            /* istanbul ignore next */
            cov_2o1lkw551y().f[35]++;
            cov_2o1lkw551y().s[164]++;
            return require('fs').writeFileSync(path, content, 'utf8');
          }, {
            operation: 'writeFile'
          });
        },
        exists: path => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[36]++;
          cov_2o1lkw551y().s[165]++;
          return self.withErrorHandling(() => {
            /* istanbul ignore next */
            cov_2o1lkw551y().f[37]++;
            cov_2o1lkw551y().s[166]++;
            return require('fs').existsSync(path);
          }, {
            operation: 'exists'
          });
        }
      },
      // Wrapped JSON operations
      json: {
        parse: (content, fallback =
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[52][0]++, null)) => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[38]++;
          cov_2o1lkw551y().s[167]++;
          return self.withErrorHandling(() => {
            /* istanbul ignore next */
            cov_2o1lkw551y().f[39]++;
            cov_2o1lkw551y().s[168]++;
            return JSON.parse(content);
          }, {
            operation: 'jsonParse',
            rawContent: content,
            fallbackData: fallback
          });
        },
        stringify: data => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[40]++;
          cov_2o1lkw551y().s[169]++;
          return self.withErrorHandling(() => {
            /* istanbul ignore next */
            cov_2o1lkw551y().f[41]++;
            cov_2o1lkw551y().s[170]++;
            return JSON.stringify(data, null, 2);
          }, {
            operation: 'jsonStringify'
          });
        }
      },
      // Wrapped async operations
      async: {
        operation: (fn, context =
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[53][0]++, {})) => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[42]++;
          cov_2o1lkw551y().s[171]++;
          return self.withErrorHandling(fn, {
            operation: 'asyncOperation',
            ...context
          });
        },
        timeout: (fn, timeoutMs, context =
        /* istanbul ignore next */
        (cov_2o1lkw551y().b[54][0]++, {})) => {
          /* istanbul ignore next */
          cov_2o1lkw551y().f[43]++;
          cov_2o1lkw551y().s[172]++;
          return self.withTimeout(fn, timeoutMs, {
            operation: 'timedOperation',
            ...context
          });
        }
      },
      // Error handling utilities
      errorHandler: self,
      stats: () => {
        /* istanbul ignore next */
        cov_2o1lkw551y().f[44]++;
        cov_2o1lkw551y().s[173]++;
        return self.getErrorStats();
      },
      reset: () => {
        /* istanbul ignore next */
        cov_2o1lkw551y().f[45]++;
        cov_2o1lkw551y().s[174]++;
        return self.resetStats();
      }
    };
  }
}
/* istanbul ignore next */
cov_2o1lkw551y().s[175]++;
module.exports = TestErrorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,