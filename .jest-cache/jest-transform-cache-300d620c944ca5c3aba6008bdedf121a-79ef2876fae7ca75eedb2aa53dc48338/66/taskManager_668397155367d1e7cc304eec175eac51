73a9bf15e4718830c18b95296e5c88c7
/* istanbul ignore next */
function cov_142b089npg() {
  var path = "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/taskManager.js";
  var hash = "0e0c15dc12da684afe66569b9b6b35b87ae7c921";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jeremyparker/Desktop/Claude Coding Projects/infinite-continue-stop-hook/lib/taskManager.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 11
        },
        end: {
          line: 1,
          column: 24
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 40
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 64
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 13,
          column: 10
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "6": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 71
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "8": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "9": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "10": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "11": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 80
        }
      },
      "12": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 38,
          column: 17
        }
      },
      "13": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "14": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 37,
          column: 21
        }
      },
      "15": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 82
        }
      },
      "16": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "18": {
        start: {
          line: 46,
          column: 39
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "19": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "20": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "21": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 74
        }
      },
      "22": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "23": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "24": {
        start: {
          line: 61,
          column: 41
        },
        end: {
          line: 61,
          column: 106
        }
      },
      "25": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 65,
          column: 17
        }
      },
      "26": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 49
        }
      },
      "27": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "28": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "29": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 83
        }
      },
      "30": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 31
        }
      },
      "31": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 75
        }
      },
      "32": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "34": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 101
        }
      },
      "36": {
        start: {
          line: 91,
          column: 40
        },
        end: {
          line: 91,
          column: 99
        }
      },
      "37": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 46
        }
      },
      "38": {
        start: {
          line: 96,
          column: 21
        },
        end: {
          line: 96,
          column: 62
        }
      },
      "39": {
        start: {
          line: 96,
          column: 46
        },
        end: {
          line: 96,
          column: 61
        }
      },
      "40": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "41": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 33
        }
      },
      "42": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 43
        }
      },
      "43": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 104,
          column: 46
        }
      },
      "44": {
        start: {
          line: 105,
          column: 27
        },
        end: {
          line: 105,
          column: 74
        }
      },
      "45": {
        start: {
          line: 105,
          column: 52
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "46": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "47": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "48": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 41
        }
      },
      "49": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "50": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 43
        }
      },
      "51": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 77
        }
      },
      "52": {
        start: {
          line: 130,
          column: 27
        },
        end: {
          line: 130,
          column: 61
        }
      },
      "53": {
        start: {
          line: 131,
          column: 21
        },
        end: {
          line: 131,
          column: 36
        }
      },
      "54": {
        start: {
          line: 134,
          column: 27
        },
        end: {
          line: 134,
          column: 40
        }
      },
      "55": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 65
        }
      },
      "56": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 43
        }
      },
      "57": {
        start: {
          line: 141,
          column: 25
        },
        end: {
          line: 141,
          column: 46
        }
      },
      "58": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "59": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 66
        }
      },
      "60": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 68
        }
      },
      "61": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "62": {
        start: {
          line: 152,
          column: 39
        },
        end: {
          line: 152,
          column: 73
        }
      },
      "63": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "64": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "65": {
        start: {
          line: 160,
          column: 36
        },
        end: {
          line: 160,
          column: 84
        }
      },
      "66": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "67": {
        start: {
          line: 161,
          column: 51
        },
        end: {
          line: 161,
          column: 80
        }
      },
      "68": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 54
        }
      },
      "69": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "70": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 37
        }
      },
      "71": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 39
        }
      },
      "72": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "73": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "74": {
        start: {
          line: 195,
          column: 32
        },
        end: {
          line: 195,
          column: 59
        }
      },
      "75": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 66
        }
      },
      "76": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "77": {
        start: {
          line: 203,
          column: 31
        },
        end: {
          line: 206,
          column: 16
        }
      },
      "78": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 205,
          column: 33
        }
      },
      "79": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 62
        }
      },
      "80": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "81": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 40
        }
      },
      "82": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 56
        }
      },
      "83": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 95
        }
      },
      "84": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "85": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 55
        }
      },
      "86": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 96
        }
      },
      "87": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 53
        }
      },
      "88": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 65
        }
      },
      "89": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 68
        }
      },
      "90": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 58
        }
      },
      "91": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 81
        }
      },
      "92": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 90
        }
      },
      "93": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 73
        }
      },
      "94": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "95": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 66
        }
      },
      "96": {
        start: {
          line: 286,
          column: 25
        },
        end: {
          line: 286,
          column: 44
        }
      },
      "97": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 85
        }
      },
      "98": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 298,
          column: 14
        }
      },
      "99": {
        start: {
          line: 303,
          column: 0
        },
        end: {
          line: 303,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 40
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 57
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 86
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 91,
            column: 36
          }
        },
        loc: {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 91,
            column: 99
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 43
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 42
          }
        },
        loc: {
          start: {
            line: 96,
            column: 46
          },
          end: {
            line: 96,
            column: 61
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 44
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 103
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 105,
            column: 47
          },
          end: {
            line: 105,
            column: 48
          }
        },
        loc: {
          start: {
            line: 105,
            column: 52
          },
          end: {
            line: 105,
            column: 73
          }
        },
        line: 105
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 140
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 161,
            column: 39
          }
        },
        loc: {
          start: {
            line: 161,
            column: 51
          },
          end: {
            line: 161,
            column: 80
          }
        },
        line: 161
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 32
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 192
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 32
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 201
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 203,
            column: 53
          },
          end: {
            line: 203,
            column: 54
          }
        },
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 205,
            column: 33
          }
        },
        line: 204
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 32
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 212
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 26
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 233
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 39
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 242
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 26
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 250
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 258
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 47
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 267
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 25
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 275
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 29
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 283
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 26
          },
          end: {
            line: 5,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 36
          },
          end: {
            line: 5,
            column: 38
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 39
          },
          end: {
            line: 7,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 39
          },
          end: {
            line: 7,
            column: 56
          }
        }, {
          start: {
            line: 7,
            column: 60
          },
          end: {
            line: 7,
            column: 62
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 26
          },
          end: {
            line: 10,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 26
          },
          end: {
            line: 10,
            column: 46
          }
        }, {
          start: {
            line: 10,
            column: 50
          },
          end: {
            line: 10,
            column: 60
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 43
          }
        }, {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 26,
            column: 73
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "7": {
        loc: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 33
          }
        }, {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 63
          }
        }, {
          start: {
            line: 29,
            column: 67
          },
          end: {
            line: 29,
            column: 84
          }
        }],
        line: 29
      },
      "8": {
        loc: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 37,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 37,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "9": {
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 41
          }
        }, {
          start: {
            line: 34,
            column: 45
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "12": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 63,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 63,
            column: 45
          }
        }, {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 75
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "16": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "17": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 27
          }
        }, {
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 88,
            column: 61
          }
        }],
        line: 88
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 91,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 91,
            column: 41
          }
        }, {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 68
          }
        }, {
          start: {
            line: 91,
            column: 72
          },
          end: {
            line: 91,
            column: 98
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "20": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "21": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "22": {
        loc: {
          start: {
            line: 147,
            column: 34
          },
          end: {
            line: 147,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 34
          },
          end: {
            line: 147,
            column: 58
          }
        }, {
          start: {
            line: 147,
            column: 62
          },
          end: {
            line: 147,
            column: 64
          }
        }],
        line: 147
      },
      "23": {
        loc: {
          start: {
            line: 148,
            column: 35
          },
          end: {
            line: 148,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 35
          },
          end: {
            line: 148,
            column: 60
          }
        }, {
          start: {
            line: 148,
            column: 64
          },
          end: {
            line: 148,
            column: 66
          }
        }],
        line: 148
      },
      "24": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "25": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 151,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 151,
            column: 40
          }
        }, {
          start: {
            line: 151,
            column: 44
          },
          end: {
            line: 151,
            column: 72
          }
        }],
        line: 151
      },
      "26": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "27": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "28": {
        loc: {
          start: {
            line: 172,
            column: 22
          },
          end: {
            line: 172,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 22
          },
          end: {
            line: 172,
            column: 39
          }
        }, {
          start: {
            line: 172,
            column: 43
          },
          end: {
            line: 172,
            column: 51
          }
        }],
        line: 172
      },
      "29": {
        loc: {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 35
          }
        }, {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 173,
            column: 48
          }
        }],
        line: 173
      },
      "30": {
        loc: {
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 47
          }
        }, {
          start: {
            line: 174,
            column: 51
          },
          end: {
            line: 174,
            column: 53
          }
        }],
        line: 174
      },
      "31": {
        loc: {
          start: {
            line: 177,
            column: 22
          },
          end: {
            line: 177,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 22
          },
          end: {
            line: 177,
            column: 39
          }
        }, {
          start: {
            line: 177,
            column: 43
          },
          end: {
            line: 177,
            column: 45
          }
        }],
        line: 177
      },
      "32": {
        loc: {
          start: {
            line: 178,
            column: 31
          },
          end: {
            line: 178,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 31
          },
          end: {
            line: 178,
            column: 57
          }
        }, {
          start: {
            line: 178,
            column: 61
          },
          end: {
            line: 178,
            column: 66
          }
        }],
        line: 178
      },
      "33": {
        loc: {
          start: {
            line: 179,
            column: 22
          },
          end: {
            line: 179,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 22
          },
          end: {
            line: 179,
            column: 39
          }
        }, {
          start: {
            line: 179,
            column: 43
          },
          end: {
            line: 179,
            column: 45
          }
        }],
        line: 179
      },
      "34": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "35": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 50
          }
        }, {
          start: {
            line: 194,
            column: 54
          },
          end: {
            line: 194,
            column: 73
          }
        }],
        line: 194
      },
      "36": {
        loc: {
          start: {
            line: 196,
            column: 19
          },
          end: {
            line: 196,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 33
          },
          end: {
            line: 196,
            column: 49
          }
        }, {
          start: {
            line: 196,
            column: 52
          },
          end: {
            line: 196,
            column: 65
          }
        }],
        line: 196
      },
      "37": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 205,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 36
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 33
          }
        }],
        line: 204
      },
      "38": {
        loc: {
          start: {
            line: 209,
            column: 15
          },
          end: {
            line: 209,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 15
          },
          end: {
            line: 209,
            column: 33
          }
        }, {
          start: {
            line: 209,
            column: 37
          },
          end: {
            line: 209,
            column: 61
          }
        }],
        line: 209
      },
      "39": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "40": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 41
          }
        }, {
          start: {
            line: 214,
            column: 45
          },
          end: {
            line: 214,
            column: 80
          }
        }],
        line: 214
      },
      "41": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "42": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 41
          }
        }, {
          start: {
            line: 221,
            column: 45
          },
          end: {
            line: 221,
            column: 81
          }
        }],
        line: 221
      },
      "43": {
        loc: {
          start: {
            line: 242,
            column: 25
          },
          end: {
            line: 242,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 242,
            column: 35
          },
          end: {
            line: 242,
            column: 37
          }
        }],
        line: 242
      },
      "44": {
        loc: {
          start: {
            line: 267,
            column: 28
          },
          end: {
            line: 267,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 267,
            column: 41
          },
          end: {
            line: 267,
            column: 45
          }
        }],
        line: 267
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0],
      "44": [0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e0c15dc12da684afe66569b9b6b35b87ae7c921"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_142b089npg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_142b089npg();
const fs =
/* istanbul ignore next */
(cov_142b089npg().s[0]++, require('fs'));
const AutoFixer =
/* istanbul ignore next */
(cov_142b089npg().s[1]++, require('./autoFixer'));
class TaskManager {
  constructor(todoPath, options =
  /* istanbul ignore next */
  (cov_142b089npg().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_142b089npg().f[0]++;
    cov_142b089npg().s[2]++;
    this.todoPath = todoPath;
    /* istanbul ignore next */
    cov_142b089npg().s[3]++;
    this.autoFixer = new AutoFixer(
    /* istanbul ignore next */
    (cov_142b089npg().b[1][0]++, options.autoFixer) ||
    /* istanbul ignore next */
    (cov_142b089npg().b[1][1]++, {}));
    /* istanbul ignore next */
    cov_142b089npg().s[4]++;
    this.options = {
      enableAutoFix: options.enableAutoFix !== false,
      autoFixLevel:
      /* istanbul ignore next */
      (cov_142b089npg().b[2][0]++, options.autoFixLevel) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[2][1]++, 'moderate'),
      validateOnRead: options.validateOnRead !== false,
      ...options
    };
  }
  async readTodo() {
    /* istanbul ignore next */
    cov_142b089npg().f[1]++;
    cov_142b089npg().s[5]++;
    if (!fs.existsSync(this.todoPath)) {
      /* istanbul ignore next */
      cov_142b089npg().b[3][0]++;
      cov_142b089npg().s[6]++;
      throw new Error(`TODO.json not found at ${this.todoPath}`);
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[3][1]++;
    }
    cov_142b089npg().s[7]++;
    try {
      const content =
      /* istanbul ignore next */
      (cov_142b089npg().s[8]++, fs.readFileSync(this.todoPath, 'utf8'));
      const data =
      /* istanbul ignore next */
      (cov_142b089npg().s[9]++, JSON.parse(content));

      // Validate and auto-fix if enabled
      /* istanbul ignore next */
      cov_142b089npg().s[10]++;
      if (
      /* istanbul ignore next */
      (cov_142b089npg().b[5][0]++, this.options.validateOnRead) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[5][1]++, this.options.enableAutoFix)) {
        /* istanbul ignore next */
        cov_142b089npg().b[4][0]++;
        const status =
        /* istanbul ignore next */
        (cov_142b089npg().s[11]++, await this.autoFixer.getFileStatus(this.todoPath));
        /* istanbul ignore next */
        cov_142b089npg().s[12]++;
        if (
        /* istanbul ignore next */
        (cov_142b089npg().b[7][0]++, !status.valid) &&
        /* istanbul ignore next */
        (cov_142b089npg().b[7][1]++, this.options.enableAutoFix) &&
        /* istanbul ignore next */
        (cov_142b089npg().b[7][2]++, status.canAutoFix)) {
          /* istanbul ignore next */
          cov_142b089npg().b[6][0]++;
          const fixResult =
          /* istanbul ignore next */
          (cov_142b089npg().s[13]++, await this.autoFixer.autoFix(this.todoPath, {
            autoFixLevel: this.options.autoFixLevel
          }));
          /* istanbul ignore next */
          cov_142b089npg().s[14]++;
          if (
          /* istanbul ignore next */
          (cov_142b089npg().b[9][0]++, fixResult.success) &&
          /* istanbul ignore next */
          (cov_142b089npg().b[9][1]++, fixResult.hasChanges)) {
            /* istanbul ignore next */
            cov_142b089npg().b[8][0]++;
            cov_142b089npg().s[15]++;
            // Re-read the fixed file
            return JSON.parse(fs.readFileSync(this.todoPath, 'utf8'));
          } else
          /* istanbul ignore next */
          {
            cov_142b089npg().b[8][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_142b089npg().b[6][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[4][1]++;
      }
      cov_142b089npg().s[16]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_142b089npg().s[17]++;
      if (this.options.enableAutoFix) {
        /* istanbul ignore next */
        cov_142b089npg().b[10][0]++;
        // Attempt recovery for corrupted files
        const recoveryResult =
        /* istanbul ignore next */
        (cov_142b089npg().s[18]++, await this.autoFixer.recoverCorruptedFile(this.todoPath));
        /* istanbul ignore next */
        cov_142b089npg().s[19]++;
        if (recoveryResult.success) {
          /* istanbul ignore next */
          cov_142b089npg().b[11][0]++;
          cov_142b089npg().s[20]++;
          return recoveryResult.finalData;
        } else
        /* istanbul ignore next */
        {
          cov_142b089npg().b[11][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[10][1]++;
      }
      cov_142b089npg().s[21]++;
      throw new Error(`Failed to read TODO.json: ${error.message}`);
    }
  }
  async writeTodo(data) {
    /* istanbul ignore next */
    cov_142b089npg().f[2]++;
    cov_142b089npg().s[22]++;
    try {
      /* istanbul ignore next */
      cov_142b089npg().s[23]++;
      // Validate data before writing if enabled
      if (this.options.validateOnRead) {
        /* istanbul ignore next */
        cov_142b089npg().b[12][0]++;
        const validationResult =
        /* istanbul ignore next */
        (cov_142b089npg().s[24]++, this.autoFixer.validator.validateAndSanitize(data, this.todoPath));
        /* istanbul ignore next */
        cov_142b089npg().s[25]++;
        if (
        /* istanbul ignore next */
        (cov_142b089npg().b[14][0]++, !validationResult.isValid) &&
        /* istanbul ignore next */
        (cov_142b089npg().b[14][1]++, this.options.enableAutoFix)) {
          /* istanbul ignore next */
          cov_142b089npg().b[13][0]++;
          cov_142b089npg().s[26]++;
          data = validationResult.data; // Use the sanitized data
        } else
        /* istanbul ignore next */
        {
          cov_142b089npg().b[13][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[12][1]++;
      }

      // Use atomic write operation from ErrorRecovery
      const writeResult =
      /* istanbul ignore next */
      (cov_142b089npg().s[27]++, await this.autoFixer.recovery.atomicWrite(this.todoPath, JSON.stringify(data, null, 2), true // Create backup
      ));
      /* istanbul ignore next */
      cov_142b089npg().s[28]++;
      if (!writeResult.success) {
        /* istanbul ignore next */
        cov_142b089npg().b[15][0]++;
        cov_142b089npg().s[29]++;
        throw new Error(`Failed to write TODO.json: ${writeResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[15][1]++;
      }
      cov_142b089npg().s[30]++;
      return writeResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_142b089npg().s[31]++;
      throw new Error(`Failed to write TODO.json: ${error.message}`);
    }
  }
  async getCurrentTask() {
    /* istanbul ignore next */
    cov_142b089npg().f[3]++;
    const todoData =
    /* istanbul ignore next */
    (cov_142b089npg().s[32]++, await this.readTodo());
    /* istanbul ignore next */
    cov_142b089npg().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_142b089npg().b[17][0]++, !todoData.tasks) ||
    /* istanbul ignore next */
    (cov_142b089npg().b[17][1]++, !Array.isArray(todoData.tasks))) {
      /* istanbul ignore next */
      cov_142b089npg().b[16][0]++;
      cov_142b089npg().s[34]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[16][1]++;
    }
    cov_142b089npg().s[35]++;
    return todoData.tasks.find(t => {
      /* istanbul ignore next */
      cov_142b089npg().f[4]++;
      cov_142b089npg().s[36]++;
      return /* istanbul ignore next */(cov_142b089npg().b[18][0]++, t) && (
      /* istanbul ignore next */
      (cov_142b089npg().b[18][1]++, t.status === 'pending') ||
      /* istanbul ignore next */
      (cov_142b089npg().b[18][2]++, t.status === 'in_progress'));
    });
  }
  async updateTaskStatus(taskId, status) {
    /* istanbul ignore next */
    cov_142b089npg().f[5]++;
    const todoData =
    /* istanbul ignore next */
    (cov_142b089npg().s[37]++, await this.readTodo());
    const task =
    /* istanbul ignore next */
    (cov_142b089npg().s[38]++, todoData.tasks.find(t => {
      /* istanbul ignore next */
      cov_142b089npg().f[6]++;
      cov_142b089npg().s[39]++;
      return t.id === taskId;
    }));
    /* istanbul ignore next */
    cov_142b089npg().s[40]++;
    if (task) {
      /* istanbul ignore next */
      cov_142b089npg().b[19][0]++;
      cov_142b089npg().s[41]++;
      task.status = status;
      /* istanbul ignore next */
      cov_142b089npg().s[42]++;
      await this.writeTodo(todoData);
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[19][1]++;
    }
  }
  async addSubtask(parentTaskId, subtask) {
    /* istanbul ignore next */
    cov_142b089npg().f[7]++;
    const todoData =
    /* istanbul ignore next */
    (cov_142b089npg().s[43]++, await this.readTodo());
    const parentTask =
    /* istanbul ignore next */
    (cov_142b089npg().s[44]++, todoData.tasks.find(t => {
      /* istanbul ignore next */
      cov_142b089npg().f[8]++;
      cov_142b089npg().s[45]++;
      return t.id === parentTaskId;
    }));
    /* istanbul ignore next */
    cov_142b089npg().s[46]++;
    if (parentTask) {
      /* istanbul ignore next */
      cov_142b089npg().b[20][0]++;
      cov_142b089npg().s[47]++;
      if (!parentTask.subtasks) {
        /* istanbul ignore next */
        cov_142b089npg().b[21][0]++;
        cov_142b089npg().s[48]++;
        parentTask.subtasks = [];
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[21][1]++;
      }
      cov_142b089npg().s[49]++;
      parentTask.subtasks.push(subtask);
      /* istanbul ignore next */
      cov_142b089npg().s[50]++;
      await this.writeTodo(todoData);
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[20][1]++;
    }
  }

  /**
   * Generates the standardized research report file path for a task
   * @param {string} taskId - The task ID
   * @returns {string} The research report file path
   */
  getResearchReportPath(taskId) {
    /* istanbul ignore next */
    cov_142b089npg().f[9]++;
    cov_142b089npg().s[51]++;
    return `./development/research-reports/research-report-${taskId}.md`;
  }

  /**
   * Checks if a research report file exists for the given task ID
   * @param {string} taskId - The task ID
   * @returns {boolean} True if the research report file exists
   */
  researchReportExists(taskId) {
    /* istanbul ignore next */
    cov_142b089npg().f[10]++;
    const reportPath =
    /* istanbul ignore next */
    (cov_142b089npg().s[52]++, this.getResearchReportPath(taskId));
    const path =
    /* istanbul ignore next */
    (cov_142b089npg().s[53]++, require('path'));

    // Convert relative path to absolute path
    const workingDir =
    /* istanbul ignore next */
    (cov_142b089npg().s[54]++, process.cwd());
    const absolutePath =
    /* istanbul ignore next */
    (cov_142b089npg().s[55]++, path.resolve(workingDir, reportPath));
    /* istanbul ignore next */
    cov_142b089npg().s[56]++;
    return fs.existsSync(absolutePath);
  }
  async createTask(taskData) {
    /* istanbul ignore next */
    cov_142b089npg().f[11]++;
    const todoData =
    /* istanbul ignore next */
    (cov_142b089npg().s[57]++, await this.readTodo());

    // Generate unique task ID
    const taskId =
    /* istanbul ignore next */
    (cov_142b089npg().s[58]++, `task_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);

    // Start with provided important_files or empty array
    let importantFiles =
    /* istanbul ignore next */
    (cov_142b089npg().s[59]++, [...(
    /* istanbul ignore next */
    (cov_142b089npg().b[22][0]++, taskData.important_files) ||
    /* istanbul ignore next */
    (cov_142b089npg().b[22][1]++, []))]);
    let successCriteria =
    /* istanbul ignore next */
    (cov_142b089npg().s[60]++, [...(
    /* istanbul ignore next */
    (cov_142b089npg().b[23][0]++, taskData.success_criteria) ||
    /* istanbul ignore next */
    (cov_142b089npg().b[23][1]++, []))]);

    // For research tasks, automatically add research report path and success criteria
    /* istanbul ignore next */
    cov_142b089npg().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_142b089npg().b[25][0]++, taskData.mode === 'RESEARCH') ||
    /* istanbul ignore next */
    (cov_142b089npg().b[25][1]++, taskData.mode === 'research')) {
      /* istanbul ignore next */
      cov_142b089npg().b[24][0]++;
      const researchReportPath =
      /* istanbul ignore next */
      (cov_142b089npg().s[62]++, this.getResearchReportPath(taskId));

      // Add research report to important_files if not already present
      /* istanbul ignore next */
      cov_142b089npg().s[63]++;
      if (!importantFiles.includes(researchReportPath)) {
        /* istanbul ignore next */
        cov_142b089npg().b[26][0]++;
        cov_142b089npg().s[64]++;
        importantFiles.push(researchReportPath);
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[26][1]++;
      }

      // Add research report creation to success criteria if not already present
      const reportCriterion =
      /* istanbul ignore next */
      (cov_142b089npg().s[65]++, `Research report created: ${researchReportPath}`);
      /* istanbul ignore next */
      cov_142b089npg().s[66]++;
      if (!successCriteria.some(criterion => {
        /* istanbul ignore next */
        cov_142b089npg().f[12]++;
        cov_142b089npg().s[67]++;
        return criterion === reportCriterion;
      })) {
        /* istanbul ignore next */
        cov_142b089npg().b[27][0]++;
        cov_142b089npg().s[68]++;
        successCriteria.push(reportCriterion);
      } else
      /* istanbul ignore next */
      {
        cov_142b089npg().b[27][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[24][1]++;
    }

    // Create complete task object with required fields
    const newTask =
    /* istanbul ignore next */
    (cov_142b089npg().s[69]++, {
      id: taskId,
      title: taskData.title,
      description: taskData.description,
      mode: taskData.mode,
      priority:
      /* istanbul ignore next */
      (cov_142b089npg().b[28][0]++, taskData.priority) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[28][1]++, 'medium'),
      status:
      /* istanbul ignore next */
      (cov_142b089npg().b[29][0]++, taskData.status) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[29][1]++, 'pending'),
      dependencies:
      /* istanbul ignore next */
      (cov_142b089npg().b[30][0]++, taskData.dependencies) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[30][1]++, []),
      important_files: importantFiles,
      success_criteria: successCriteria,
      estimate:
      /* istanbul ignore next */
      (cov_142b089npg().b[31][0]++, taskData.estimate) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[31][1]++, ''),
      requires_research:
      /* istanbul ignore next */
      (cov_142b089npg().b[32][0]++, taskData.requires_research) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[32][1]++, false),
      subtasks:
      /* istanbul ignore next */
      (cov_142b089npg().b[33][0]++, taskData.subtasks) ||
      /* istanbul ignore next */
      (cov_142b089npg().b[33][1]++, []),
      created_at: new Date().toISOString()
    });

    // Add task to the tasks array
    /* istanbul ignore next */
    cov_142b089npg().s[70]++;
    todoData.tasks.push(newTask);

    // Write updated TODO.json
    /* istanbul ignore next */
    cov_142b089npg().s[71]++;
    await this.writeTodo(todoData);
    /* istanbul ignore next */
    cov_142b089npg().s[72]++;
    return taskId;
  }
  async getNextMode(todoData) {
    /* istanbul ignore next */
    cov_142b089npg().f[13]++;
    cov_142b089npg().s[73]++;
    // Alternate between TASK_CREATION and task execution
    if (
    /* istanbul ignore next */
    (cov_142b089npg().b[35][0]++, todoData.last_mode === 'TASK_CREATION') ||
    /* istanbul ignore next */
    (cov_142b089npg().b[35][1]++, !todoData.last_mode)) {
      /* istanbul ignore next */
      cov_142b089npg().b[34][0]++;
      const currentTask =
      /* istanbul ignore next */
      (cov_142b089npg().s[74]++, await this.getCurrentTask());
      /* istanbul ignore next */
      cov_142b089npg().s[75]++;
      return currentTask ?
      /* istanbul ignore next */
      (cov_142b089npg().b[36][0]++, currentTask.mode) :
      /* istanbul ignore next */
      (cov_142b089npg().b[36][1]++, 'DEVELOPMENT');
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[34][1]++;
    }
    cov_142b089npg().s[76]++;
    return 'TASK_CREATION';
  }
  shouldRunReviewer(todoData) {
    /* istanbul ignore next */
    cov_142b089npg().f[14]++;
    // Check if it's time for a review strike
    const completedTasks =
    /* istanbul ignore next */
    (cov_142b089npg().s[77]++, todoData.tasks.filter(t => {
      /* istanbul ignore next */
      cov_142b089npg().f[15]++;
      cov_142b089npg().s[78]++;
      return /* istanbul ignore next */(cov_142b089npg().b[37][0]++, t.status === 'completed') &&
      /* istanbul ignore next */
      (cov_142b089npg().b[37][1]++, t.mode !== 'REVIEWER');
    }).length);

    // Run reviewer every 5 completed tasks
    /* istanbul ignore next */
    cov_142b089npg().s[79]++;
    return /* istanbul ignore next */(cov_142b089npg().b[38][0]++, completedTasks > 0) &&
    /* istanbul ignore next */
    (cov_142b089npg().b[38][1]++, completedTasks % 5 === 0);
  }
  handleStrikeLogic(todoData) {
    /* istanbul ignore next */
    cov_142b089npg().f[16]++;
    cov_142b089npg().s[80]++;
    // Reset strikes if all 3 were completed in previous run
    if (
    /* istanbul ignore next */
    (cov_142b089npg().b[40][0]++, todoData.review_strikes === 3) &&
    /* istanbul ignore next */
    (cov_142b089npg().b[40][1]++, todoData.strikes_completed_last_run)) {
      /* istanbul ignore next */
      cov_142b089npg().b[39][0]++;
      cov_142b089npg().s[81]++;
      todoData.review_strikes = 0;
      /* istanbul ignore next */
      cov_142b089npg().s[82]++;
      todoData.strikes_completed_last_run = false;
      /* istanbul ignore next */
      cov_142b089npg().s[83]++;
      return {
        action: 'reset',
        message: 'Resetting review strikes to 0 for new cycle'
      };
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[39][1]++;
    }

    // Mark as completed if just finished third strike
    cov_142b089npg().s[84]++;
    if (
    /* istanbul ignore next */
    (cov_142b089npg().b[42][0]++, todoData.review_strikes === 3) &&
    /* istanbul ignore next */
    (cov_142b089npg().b[42][1]++, !todoData.strikes_completed_last_run)) {
      /* istanbul ignore next */
      cov_142b089npg().b[41][0]++;
      cov_142b089npg().s[85]++;
      todoData.strikes_completed_last_run = true;
      /* istanbul ignore next */
      cov_142b089npg().s[86]++;
      return {
        action: 'complete',
        message: 'Third strike completed! Project approved.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_142b089npg().b[41][1]++;
    }
    cov_142b089npg().s[87]++;
    return {
      action: 'continue',
      message: null
    };
  }

  /**
   * Gets detailed status of the TODO.json file
   * @returns {Object} File status including validation results
   */
  async getFileStatus() {
    /* istanbul ignore next */
    cov_142b089npg().f[17]++;
    cov_142b089npg().s[88]++;
    return await this.autoFixer.getFileStatus(this.todoPath);
  }

  /**
   * Manually triggers auto-fix on the TODO.json file
   * @param {Object} options - Fix options
   * @returns {Object} Fix result
   */
  async performAutoFix(options =
  /* istanbul ignore next */
  (cov_142b089npg().b[43][0]++, {})) {
    /* istanbul ignore next */
    cov_142b089npg().f[18]++;
    cov_142b089npg().s[89]++;
    return await this.autoFixer.autoFix(this.todoPath, options);
  }

  /**
   * Performs a dry run to show what would be fixed
   * @returns {Object} Dry run result
   */
  async dryRunAutoFix() {
    /* istanbul ignore next */
    cov_142b089npg().f[19]++;
    cov_142b089npg().s[90]++;
    return await this.autoFixer.dryRun(this.todoPath);
  }

  /**
   * Lists available backups for the TODO.json file
   * @returns {Array} List of backup files
   */
  async listBackups() {
    /* istanbul ignore next */
    cov_142b089npg().f[20]++;
    cov_142b089npg().s[91]++;
    return await this.autoFixer.recovery.listAvailableBackups(this.todoPath);
  }

  /**
   * Restores TODO.json from a backup
   * @param {string} backupFile - Specific backup file to restore (optional)
   * @returns {Object} Restoration result
   */
  async restoreFromBackup(backupFile =
  /* istanbul ignore next */
  (cov_142b089npg().b[44][0]++, null)) {
    /* istanbul ignore next */
    cov_142b089npg().f[21]++;
    cov_142b089npg().s[92]++;
    return await this.autoFixer.recovery.restoreFromBackup(this.todoPath, backupFile);
  }

  /**
   * Creates a manual backup of the current TODO.json file
   * @returns {Object} Backup creation result
   */
  async createBackup() {
    /* istanbul ignore next */
    cov_142b089npg().f[22]++;
    cov_142b089npg().s[93]++;
    return await this.autoFixer.recovery.createBackup(this.todoPath);
  }

  /**
   * Validates the current TODO.json without making changes
   * @returns {Object} Validation result
   */
  async validateTodoFile() {
    /* istanbul ignore next */
    cov_142b089npg().f[23]++;
    cov_142b089npg().s[94]++;
    try {
      const content =
      /* istanbul ignore next */
      (cov_142b089npg().s[95]++, fs.readFileSync(this.todoPath, 'utf8'));
      const data =
      /* istanbul ignore next */
      (cov_142b089npg().s[96]++, JSON.parse(content));
      /* istanbul ignore next */
      cov_142b089npg().s[97]++;
      return this.autoFixer.validator.validateAndSanitize(data, this.todoPath);
    } catch (error) {
      /* istanbul ignore next */
      cov_142b089npg().s[98]++;
      return {
        isValid: false,
        errors: [{
          type: 'FILE_READ_ERROR',
          message: error.message,
          severity: 'critical'
        }],
        fixes: [],
        summary: {
          totalErrors: 1,
          totalFixes: 0,
          criticalErrors: 1
        }
      };
    }
  }
}
/* istanbul ignore next */
cov_142b089npg().s[99]++;
module.exports = TaskManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,